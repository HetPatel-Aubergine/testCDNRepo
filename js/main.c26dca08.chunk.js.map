{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/commons/components/circular-progress/CircularProgress.jsx","api/queries.js","api/config.js","api/axios.js","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/commons/components/button-component/ButtonComponent.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/modal-component/ModalComponent.jsx","utils/constants.js","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","api/mutations.js","utils/commonFunction.js","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/registry-hero/RegistryHero.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","addRecommendedProduct","params","toggleMustHaveProduct","setRegistryProducts","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setFilteredProduct","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","viewRegistryProducts","activeSortFilter","sortId","sortTitle","featuredSortApplied","isGotItApplies","REGISTRY_ACTION_TYPES","updateRegistryInfo","info","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","trackGifts","shower","announcements","more","toDos","es","guestView","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","TRACK_GIFTS","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","MoreOption","props","ref","React","createRef","optionButtonRef","showDropdown","current","classList","toggle","activeOptionClass","className","join","iconClass","buttonClass","onClick","data","map","option","index","key","name","AddedCard","moreOptionsData","alert","removeProductFromCartHandler","DragHandle","sortableHandle","disabledDrag","src","imageUrl","alt","categoryName","draggable","CheckList","this","t","style","width","percentage","Component","withTranslation","CircularProgress","value","text","strokeWidth","styles","buildStyles","textSize","textColor","pathColor","trailColor","gql","GET_CATEGORIES","GET_PRODUCTS","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","graphQL","post","getRecommendation","axiosInstanceMultipart","graphQLMultipart","CheckListItems","changeActiveRecommendation","dispatch","query","variables","productCount","productType","then","res","products","resData","catch","err","console","error","message","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","addedItemsCount","totalItemsCount","handleToggleEvent","checkListIconEl","checkListHeader","firstChild","subListItem","subCategories","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","connect","Counter","decrementHandler","counter","incrementHandler","CardItem","image","originalSrc","href","productLink","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","ViewRecommend","getProducts","registryId","parseInt","stateRegistryInfo","responseData","registryItems","getCategories","finalCategories","categories","parentCategory","subCategory","newSubCategories","cat","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","childCategory","card","existingProduct","stateAddedProducts","sku","storeItemUrl","parseFloat","shopifyItemId","tags","registryItemId","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","class","nextArrow","RadioButton","checked","onChange","changeHandler","textClass","display","count","CheckBox","ButtonComponent","btnVariantClass","variant","children","Filter","useDispatch","filterData","useSelector","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","includes","childId","parentId","childIndex","indexOf","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ModalComponent","Modal","show","size","closeModal","titleContent","footer","Footer","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","BOOKMARKLET_SCRIPT","BookmarkletSection","updateModal","modalTitle","modalBody","modalTitleContent","modalFooterButtons","modalCloseHandler","setState","openAddBookmarkletModal","prevState","addItemToRegistry","ImportGiftCard","TogglePills","activeClass","SelectCategory","useState","setCategories","selectedCategory","setSelectedCategory","newCategories","newParentCategory","displayName","categorySelectBody","saveButton","changeCurrentCategory","showModal","currentCategory","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","productInfo","productImage","productName","howToGift","note","mustHave","groupGift","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","ev","persist","changeProductName","target","noteChangeHandler","changeNote","selectFileHandler","files","file","reader","FileReader","onload","e","changeProductImage","result","fileType","fileName","readAsDataURL","submitStoreUrl","preventDefault","keyCode","url","productUrl","changeProductUrl","reqData","item_url","img","newPrice","char","Number","isInteger","getRefinedPrice","onKeyUp","click","accept","rows","defaultValue","priceChangeHandler","readOnly","openCategorySelect","toggleGroupGift","togglePurchased","changeHowToGift","placeholder","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","newItemObj","registryitemImage","errors","log","updateRegistryDetail","registries","currentRegistryInfo","AddGift","categoryList","clearModalData","dataURItoBlob","dataURI","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","checkDataValidity","storeProduct","URL","stateAnotherStoreProduct","storeUrl","storeName","hostname","formData","FormData","operationName","input","items","append","JSON","stringify","images","status","openAddGiftModal","importGiftAnotherStoreHandler","FilterSection","deleteChipHandler","isParent","stateFilterApplied","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","find","stateFilteredProducts","Everything","getRecommendationProducts","recommededProductType","updateFilterList","newFilterList","isPurchased","isReserved","getFilteredProducts","filteredProductsId","childFilterArray","itemId","productId","mustHaveValue","setAllRecommendation","recommendedCategory","parentCat","recommendedCat","rData","getSortedProducts","filteredProduct","stateCategories","stateRecommendedProducts","allProducts","added","total","addedRecommendations","recommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","sortedProducts","stateProducts","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","useEffect","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","height","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","modalFooter","registryImages","defaultImages","fileChangeHandler","imageId","updateRegistry","closeCoverImagePicker","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","urlSlug","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","registryUrl","setRegistryUrl","registryError","setRegistryError","inputContainerRef","facebookInactive","xmlns","fill","viewBox","cx","cy","r","d","instagramInactive","twitterInactive","facebookActive","instagramActive","twitterActive","changeRegistryVisibility","newRegistry","siteHostName","onFocus","add","onBlur","remove","registryUrlChangeHandler","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","COVER_PIC_OPTIONS","backgroundImage","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","stateViewRegistryProducts","stateActiveSortFilter","stateIsGotIt","ViewRegistryHome","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","sortByMustHave","productList","sort","a","b","sortByFeatured","isFeatured","sortByLowToHigh","sortByHighToLow","productData","filteredSortProducts","sortedData","viewRegistryProductsId","addProduct","getSortedFilteredProducts","onSortEnd","oldIndex","newIndex","arrayMove","position","updateViewRegistryPosition","useDragHandle","disabled","ViewRegistry","RegistryHero","useTranslation","registryData","RegistryHeroData","babyArrival","Navbar","expand","aria-controls","Nav","to","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","token","response","customer","redirectVerifyToken","VerifyToken","verifyToken","match","ViewsContainer","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","from","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","location","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c26dca08.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\"\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_FEATURED_SORT_APPLIED: \"IS_FEATURED_SORT_APPLIED\",\n  IS_GOT_IT: \"IS_GOT_IT\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setFeaturedSortApplied = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_FEATURED_SORT_APPLIED,\n    payload: params\n  }\n}\n\nexport const isGotIt = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GOT_IT,\n    payload: params\n  }\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst featuredSortApplied = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_FEATURED_SORT_APPLIED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst isGotItApplies = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GOT_IT:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    featuredSortApplied,\n    isGotItApplies\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n    LOGIN: {\n        VERIFY_TOKEN: APP_HOME_ROUTE+\"/verify-token/:token\"\n    },\n    REGISTRY: {\n        HOME: APP_HOME_ROUTE\n    },\n    MY_REGISTRY: {\n        HOME: APP_HOME_ROUTE+\"/home\",\n        GIFTS_ADDED: APP_HOME_ROUTE+\"/gifts-added\",\n        GIFT_TO_ADD: APP_HOME_ROUTE+\"/gifts-to-add\",\n        GIFT_VIEW: APP_HOME_ROUTE+\"/guest-view\",\n        TRACK_GIFTS: APP_HOME_ROUTE+\"/track_gifts\",\n        SHOWER: APP_HOME_ROUTE+\"/shower\",\n        ANNOUNCEMENTS: APP_HOME_ROUTE+\"/announcements\",\n        MORE: APP_HOME_ROUTE+\"/more\",\n        TO_DOS: APP_HOME_ROUTE+\"/to_dos\"\n    },\n\n  VIEW_REGISTRY : {\n      HOME: APP_HOME_ROUTE+\"/view-registry\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  const ref = React.createRef();\n  const optionButtonRef = React.createRef();\n\n  const showDropdown = () => {\n    ref.current.classList.toggle(\"show\");\n    optionButtonRef.current.classList.toggle(props.activeOptionClass ? props.activeOptionClass : \"active-option-button\");\n  }\n\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button ref={optionButtonRef} className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")}\n              onClick={showDropdown}/>\n      <div className={[\"more-option-dropdown\"].join(\" \")} ref={ref}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    showDropdown();\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;","import React from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\n\nconst AddedCard = (props) => {\n\n  const moreOptionsData = [\n    {\n      name: \"View Recommendations\",\n      action: () => alert(\"Clicked\")\n    },\n    {\n      name: \"Remove\",\n      action: props.removeProductFromCartHandler\n    }\n  ]\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i className={[\"ml-4 drag-icon\", props.disabledDrag ? \"disabled-drag\" : \"\"].join(\" \")}></i>);\n\n  return (\n    <div className=\"added-card py-5\">\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.item.title} />\n        </div>\n        <div className=\"col\">\n          <div className=\"text-sm category\">{props.data.item.category.categoryName}</div>\n          <h2 className=\"\">{props.data.item.title}</h2>\n          <div className=\"d-flex mt-2\">\n            <div className=\"\">${props.data.item.price}</div>\n            {/* TODO: Add Strikeout price dynamic */}\n            <div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>\n            {props.data.quantity > 1 ?\n              <div className=\"ml-4 text-body d-flex\">\n                Qty:{props.data.quantity}\n                <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n              </div> : <></>}\n          </div>\n        </div>\n        <div className={[\n          props.draggable ? \"col-3\" : \"col-2\",\n        ].join(\" \")}\n        >\n          <div className=\"d-flex align-items-baseline justify-content-end\">\n            <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\" />\n            <button\n              className={[\n                \"icon\",\n                \"ml-4\",\n                props.data.mostWanted ? \"heart-fill\" : \"heart\",\n              ].join(\" \")}\n              onClick={props.toggleMustHave}\n            />\n            {/* TODO: Add icon/rearrange icon */}\n            {props.draggable ?\n              <DragHandle /> : <></>}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddedCard","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\n\nclass CheckList extends React.Component {\n\n    render() {\n        return (\n            <div className=\"mb-6\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <p className=\"ml-2 text-sm checklist-personalize\">{this.props.t(\"checkList.personalize\")}</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\"></div>\n                        <div className=\"check-list-progress\" style={{width: `${this.props.percentage}%`}}/>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nexport default withTranslation()(CheckList);","import React from \"react\";\nimport {buildStyles, CircularProgressbar} from \"react-circular-progressbar\";\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst CircularProgress = (props) => {\n  return (\n    <CircularProgressbar\n      value={props.percentage}\n      text={props.text}\n      strokeWidth={10}\n      className={props.className}\n      styles={buildStyles({\n        textSize: '40px',\n        textColor: '#000',\n        pathColor: '#afe3e4',\n        trailColor: '#ededee'\n      })}/>\n  )\n}\n\nexport default CircularProgress;","import {gql} from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  categories(registryId:$registryId){\n    id,\n    categoryName,\n    isRoot\n    subCategories{\n      id,\n      categoryName,\n      addedItemsCount,\n      totalItemsCount\n    }\n    addedItemsCount,\n    totalItemsCount\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems($registryId:Int!){\n    registryItems(registryId:$registryId){\n      edges{\n        node{\n          id,\n          registryitemImage{\n            image\n          }\n          isGroupGift,\n          isReserved,\n          quantity,\n          mostWanted,\n          featuredOrder,\n          orderNo,\n          giftMessage,\n          isReserved,\n          isAmountReceived,\n          isPurchased,\n          item{\n            id,\n            title,\n            shopifyItemId,\n            note,\n            sku,\n            price,\n            imageUrl,\n            category {\n              id,\n              categoryName,\n              isRoot,\n\n            }\n          }\n        }\n      }\n    }\n  }\n\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:Int!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      category:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES\n};\n\n// Example to use queries added in home.jsx","const backendId = \"http://3.12.191.197:8000\";\n// const backendId = \"http://localhost:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport {Cookies} from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: {\"Authorization\": AuthToken}\n});\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}","import React, {Component} from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport {setActiveRecommandation, addRecommendedProduct} from 'modules/my-registry/MyRegistryActions';\nimport {connect} from 'react-redux';\nimport {GET_RECOMMENDATIONS} from 'api/queries';\nimport {getRecommendation} from 'api/axios';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  changeActiveRecommendation = (category) => {\n    this.props.dispatch(setActiveRecommandation(category))\n    const recommededProductCount = 3\n    let data = {\n      query: GET_RECOMMENDATIONS,\n      variables: {\n        productCount: recommededProductCount,\n        productType: \"product_type:\" + category\n      }\n    }\n    getRecommendation({params: data}).then(res => {\n      data = res.data.data.products.edges.map(item => {\n        let resData = {...item.node}\n        resData['quantity'] = 1\n        return resData\n      })\n      this.props.dispatch(addRecommendedProduct(data))\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({id, categoryName, addedItemsCount, totalItemsCount}) => {\n      return (\n        <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n             onClick={() => this.scrollToCategory(categoryName)}>\n          <p\n            className=\"mb-0 card-body-header text-sm\">{categoryName} {totalItemsCount > 1 ? `(${totalItemsCount})` : null}</p>\n          <div className='ml-auto mb-0 align-self-end card-progress'>\n            {(addedItemsCount >= totalItemsCount) ?\n              <div className=\"icon-done\"/> :\n              (totalItemsCount > 1 && addedItemsCount > 0 ?\n                <CircularProgress\n                  percentage={(addedItemsCount / totalItemsCount) * 100}\n                  text={addedItemsCount}\n                  className=\"checklist-circular-progress\"\n                />\n                : null)}\n          </div>\n        </div>\n      )\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        <Card>\n          <Accordion.Toggle\n            onClick={this.handleToggleEvent}\n            as={Card.Header}\n            id={this.props.item.categoryName}\n            eventKey={this.props.item.categoryName}\n          >\n            <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n              <span className=\"mr-3 checklist-icon-arrow closed\"/>\n              <p className=\"mb-0 body-text\">{this.props.item.categoryName}</p>\n              <div className='ml-auto mb-auto align-self-end card-progress'>\n                {this.props.item.addedItemsCount}/{this.props.item.totalItemsCount}\n              </div>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n            <Card.Body>\n              {subListItem}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink}>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import React, { Component } from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  setRegistryProducts,\n  setCheckListItems,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport { connect } from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport { ADD_REGISTRY_ITEM, GET_PRODUCTS, GET_CATEGORIES, UPDATE_REGISTRY_ITEM } from 'api/queries';\nimport { graphQL } from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nclass ViewRecommend extends Component {\n\n  getProducts = () => {\n    let data = {\n      query: GET_PRODUCTS,\n      variables: {\n        registryId: parseInt(this.props.stateRegistryInfo.id)\n      }\n    }\n    graphQL(data).then(res => {\n      let responseData = res.data.data.registryItems.edges.map(item => {\n        return { ...item.node }\n      })\n      this.props.dispatch(setRegistryProducts(responseData))\n\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(this.props.stateRegistryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      let parentCategories = res.data.data.categories.filter(category => category.totalItemsCount > 0)\n      let finalCategories = []\n      finalCategories = parentCategories.map(parentCategory => {\n        let subCategory = parentCategory.subCategories\n        delete parentCategory.subCategories\n        let newSubCategories = subCategory.filter(cat => cat.totalItemsCount > 0)\n        parentCategory['subCategories'] = newSubCategories\n        return parentCategory\n      })\n      this.props.dispatch(setCheckListItems(finalCategories))\n\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const shopifyItemId = card.id\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          category: category,\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          imageUrl: imageUrl,\n        }\n      }\n      graphQL(data).then(res => {\n        this.getProducts()\n        this.getCategories()\n      }).catch(err => {\n        console.error(err.message)\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        this.getProducts()\n        this.getCategories()\n      }).catch(err => {\n        console.error(err.message)\n      })\n    }\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\" /></button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\" /></button>\n    };\n    return (\n      <div className=\"recommended-cart my-6\">\n        <div className=\"row\">\n          <div className=\"col title\"><h2>{this.props.title}\n            {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n          </h2>\n          </div>\n          <div className=\"col ml-auto\">\n            {/* <MoreOption data={this.moreOptionsData} iconClass=\"icon-more-hori\"/> */}\n            <button className=\"add-button text-body font-weight-bold py-1 px-3 float-right m-a-popover m-a-popover-top-right\">\n              Add on my own\n              <div className=\"m-a-popover-content px-3 py-2\">\n                <span className=\"font-medium text-sm\">What is Add My Own?</span>\n                <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">\n                  You can add links from other online store and save in your registry.\n                </p>\n              </div>\n            </button>\n          </div>\n        </div>\n        <div className=\"pt-6\">\n          <Slider {...settings}>\n            {this.props.products.map((card, index) =>\n              // <div><>{index}</></div>\n              <div className=\"cart-view\">\n                <CardItem\n                  className=\"mr-4\"\n                  data={card}\n                  key={\"CardItem-\" + index}\n                  incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                  decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                  addProductHandler={() => this.addProductHandler(card)}\n                />\n              </div>\n            )}\n          </Slider>\n        </div>\n        <div className=\"mt-6 card-buttom d-flex\">\n          {/* TODO: Change text to dynamic */}\n          <div>\n            <img className=\"blog-img\" src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\" alt={this.props.title}></img>\n          </div>\n          <div className=\"pl-4 my-auto\">\n            <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n            <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n          </div>\n          <div className=\"text-sm my-auto mr-6 ml-auto\">\n            <a href=\"\" className=\"read-more\">Read more</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className=\"checkbox d-flex align-items-center mb-4\">\n      <span className=\"checkbox__input mr-2\">\n        <input \n          type=\"checkbox\" \n          name={props.id} \n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n          />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n        <i className=\"icon-check\"></i>                          \n        </span>\n      </span>\n      <span className=\"radio__label text-sm\">{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = (props) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n  >{props.children}</button>\n}\n\nexport default ButtonComponent;","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {setParentFilter, setChildFilter, clearFilter} from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\"/>\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                  <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                    {parentFilter.child.map(childFilter => (\n                      <CheckBox\n                        {...childFilter}\n                        key={childFilter.id}\n                        checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                        changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                      />\n                    ))}\n                  </div>\n                )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n                  onClick={clearClickHandler}\n                  variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n        <div>\n          <div className=\"d-flex justify-content-between\">\n            <h1>{props.title}</h1>\n            <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n          </div>\n        </div>\n\n        {/* OPTIONAL CONTENT IN TITLE PORTION */}\n        {props.titleContent ? props.titleContent : null}\n\n      </Modal.Header>\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n            {/* MODAL CONTENT GOES HERE */}\n            {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n    VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL+\"/media/\"\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'http%3A%2F%2Flocalhost%3A5500%2Fbaby_registry_bookmarklet%2Fbookmarklet.html%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React, {useState} from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {GET_CATEGORIES} from \"../../../../api/queries\";\nimport {graphQL} from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {useSelector} from \"react-redux\";\n\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState({});\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.categories) {\n        let newCategories = res.data.data.categories.map(parentCategory => {\n          let newParentCategory = {...parentCategory}\n          newParentCategory['displayName'] = parentCategory.categoryName;\n          newParentCategory.subCategories = parentCategory.subCategories.map(childCategory => (\n            {\n              ...childCategory,\n              displayName: parentCategory.categoryName + \" : \"+ childCategory.categoryName\n            }\n          ))\n          return newParentCategory;\n        })\n        setCategories(newCategories);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    if (selectedCategory) {\n      props.changeCurrentCategory(selectedCategory)\n    }\n    props.closeModal(false);\n  }\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      <div className=\"col category-columns\">\n        {categories.map(category => {\n          return (\n            <div className=\"mb-6\" key={\"select-\"+category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              {category.subCategories ?\n                category.subCategories.map(subCategory =>\n                  <p\n                    key={\"select-child-\"+subCategory.categoryName}\n                    className={[\"px-2 py-1 child-category\", selectedCategory.id === subCategory.id ? \"selected-category\" : \"\"].join(\" \")}\n                    onClick={() => setSelectedCategory(subCategory)}\n                  >{subCategory.categoryName}</p>)\n                : null}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n\n  const saveButton = (\n    <Button\n      variant=\"primary\"\n      className=\"font-medium p-1\"\n      onClick={saveSelectedCategory}\n    >Done</Button>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={saveButton}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React, {createRef, useState} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport {setAnotherStoreProductInfo} from \"modules/my-registry/MyRegistryActions\";\nimport {getScrapedProduct} from \"api/axios\";\n\nconst AddGiftAnotherStore = () => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = {...productInfo};\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = {...productInfo};\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = {...productInfo};\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = {...productInfo};\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = {...productInfo};\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = {...productInfo};\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = {...productInfo};\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = {...productInfo};\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = {...productInfo};\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = {...productInfo};\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = {...productInfo};\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          alert(\"File size exceeds the limit\");\n        }\n      } else {\n        alert(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = {...productInfo};\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n        }\n      }).catch(err => {\n        console.error(err)\n      })\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                     onKeyUp={(ev) => submitStoreUrl(ev)}/>\n              <a className=\"text-sm\" href=\"#\">Change</a>\n            </div>\n          </div>\n\n          <div className=\"row mt-4 pt-6\">\n            <div className=\"col-5 add-gift-image-select\">\n              <div className=\"mr-3\">\n                {productImage.value ?\n                  <img\n                    src={productImage.value}\n                    alt=\"Product Image\"\n                  />\n                  : null}\n\n                <i className=\"icon-preview p-1\" onClick={() => {\n                  imageInput.current.click()\n                }}/>\n                {/* TODO: Change above icon to camera icon */}\n\n                <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                       onChange={(ev) => selectFileHandler(ev)}/>\n              </div>\n            </div>\n            <div className=\"col-7\">\n              <div className=\"ml-3\">\n                <div className=\"row\">\n                  <div className=\"col m-a-input-container\">\n                    <p className=\"text-sm add-gift-store-label\">Product Name</p>\n                    <textarea\n                      className=\"w-100 mt-1 h1 p-2\"\n                      rows=\"2\"\n                      defaultValue={productName}\n                      onChange={(ev) => productNameChangeHandler(ev)}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"row mt-4\">\n                  <div className=\"col\">\n                    <div className=\"m-a-input-container mr-2\">\n                      <p className=\"text-sm add-gift-store-label\">Price</p>\n                      <div className=\"price-input mt-1\">\n                        <input\n                          type=\"text\"\n                          className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                          value={price}\n                          onChange={(ev) => priceChangeHandler(ev)}\n                        />\n                      </div>\n                      {/*<span className=\"price-input text-body\">$</span>*/}\n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <div className=\"m-a-input-container\">\n                      <p className=\"text-sm add-gift-store-label\">Quantity</p>\n                      <Counter\n                        className=\"mt-2\"\n                        counter={quantity}\n                        incrementHandler={incrementQuantity}\n                        decrementHandler={decrementQuantity}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col m-a-input-container\">\n                    <p className=\"text-sm add-gift-store-label\">Category: Item</p>\n                    <input type=\"text\" defaultValue={category.displayName} readOnly={true}\n                           className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"/>\n                    <a className=\"text-sm\" href=\"#\" onClick={(ev) => openCategorySelect(ev)}>Change</a>\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col d-flex\">\n                    <TogglePills\n                      iconClass=\"icon-heart\"\n                      activeClass={mustHave ? \"active-must-have\" : null}\n                      onClick={() => toggleMustHave(!mustHave)}\n                      text=\"Must Have\"\n                      className=\"mr-2\"/>\n                    <TogglePills\n                      iconClass=\"icon-guest\"\n                      activeClass={groupGift ? \"active-group-gift\" : null}\n                      onClick={() => toggleGroupGift(!groupGift)}\n                      text=\"Group Gift\"\n                      className=\"mr-2\"/>\n                    {/* TODO: Change above guest icon one added */}\n                    <TogglePills\n                      iconClass=\"icon-shopping-cart\"\n                      activeClass={purchased ? \"active-purchased\" : null}\n                      onClick={() => togglePurchased(!purchased)}\n                      text=\"Purchased\"\n                      className=\"mr-2\"/>\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col m-a-input-container\">\n                    <p className=\"text-sm add-gift-store-label\">How to gift?</p>\n                    {howToGiftOptions.map((option, index) => (\n                      <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                        <RadioButton\n                          name=\"how-to-gift\"\n                          textClass=\"text-sm\"\n                          display={option.text}\n                          checked={option.id === howToGift.id ? true : null}\n                          changeHandler={() => changeHowToGift(option)}/>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col m-a-input-container\">\n                    <p className=\"text-sm add-gift-store-label\">Notes</p>\n                    <textarea className=\"w-100 mt-1 text-body p-1\"\n                              rows=\"2\"\n                              placeholder=\"Write a note for your friends and family\"\n                              defaultValue={note}\n                              onChange={(ev) => noteChangeHandler(ev)}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n      errors{\n        field,\n        messages\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    },\n    errors{\n      field,\n      messages\n    }\n  }\n}\n`\n\nexport {TOGGLE_MUST_HAVE, ADD_REGISTRY_ITEM, UPDATE_REGISTRY, UPDATE_VIEW_REGISTRY_POISTION, UPDATE_REGISTRY_URL};\n","\nimport {GET_PRODUCTS, REMOVE_REGISTRY_ITEM, GET_CATEGORIES, GET_REGISTRIES} from \"../api/queries\";\nimport {graphQL} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX} from \"./constants\";\nimport {setRegistryProducts, setCheckListItems, toggleMustHaveProduct as toggleMustHaveProductAction} from \"../modules/my-registry/MyRegistryActions\";\nimport { TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION } from \"../api/mutations\";\nimport { updateRegistryInfo } from \"../modules/registry/RegistryActions\";\nimport { setViewRegistryProducts } from \"../modules/view-registry/ViewRegistryActions\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    let responseData = res.data.data.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = {...item.node}\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n    dispatch(setRegistryProducts(responseData))\n\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n      let parentCategories = res.data.data.categories.filter(category => category.totalItemsCount > 0)\n      let finalCategories = []\n      finalCategories = parentCategories.map(parentCategory => {\n        let subCategory = parentCategory.subCategories\n        delete parentCategory.subCategories\n        let newSubCategories = subCategory.filter(cat => cat.totalItemsCount > 0)\n        parentCategory['subCategories'] = newSubCategories\n        return parentCategory\n      })\n      dispatch(setCheckListItems(finalCategories))\n    }\n  })\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        let currentRegistryInfo = null;\n        const allUserRegistries = res.data.data.registries.edges;\n\n        currentRegistryInfo = allUserRegistries[0].node;\n        if (currentRegistryInfo.image){\n          currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n        }\n\n        if (currentRegistryInfo) {\n          dispatch(updateRegistryInfo({...currentRegistryInfo}))\n        } else {\n          console.log(\"No registry found!\");\n        }\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    } else {\n      dispatch(setViewRegistryProducts(position))\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n  })\n}","import React from 'react';\nimport \"./AddGift.scss\";\nimport {connect} from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport {clearAnotherStoreProductInfo} from \"modules/my-registry/MyRegistryActions\";\nimport {ADD_REGISTRY_ITEM} from \"../../../../api/mutations\";\nimport {graphQLMultipart as graphQL} from \"../../../../api/axios\";\nimport {getProducts, getCategories} from \"utils/commonFunction\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  dataURItoBlob = (dataURI, fileType, fileName) => {\n    let byteString = atob(dataURI.split(',')[1]);\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    let blob = new Blob([ab], {type: fileType});\n    return new File([blob], fileName, {\n      type: fileType\n    })\n  }\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // Valid Category\n    if (!storeProduct.category.id) {\n      alert(\"Invalid Category\");\n      return false;\n    }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"category\": storeProduct.category.id,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\" : storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Cash Funds</h4></div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name}/>\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection/>\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore/>\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  render() {\n\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n              <span className=\"font-medium text-sm\">What is Add Gift?</span>\n              <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.stateFilteredProducts.length} {this.props.stateFilteredProducts.length === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\"\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilteredProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport {graphQL, getRecommendation} from 'api/axios';\nimport {GET_RECOMMENDATIONS} from 'api/queries';\nimport {TOGGLE_MUST_HAVE} from 'api/mutations';\nimport {getProducts, removeProductFromCartHandler, getCategories} from \"utils/commonFunction\";\n\nclass Everything extends Component {\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n    // this.getRecommendationProducts();\n  }\n\n  getRecommendationProducts = () => {\n    const recommededProductCount = 10\n    const recommededProductType = this.props.activeRecommandation\n    let data = {\n      query: GET_RECOMMENDATIONS,\n      variables: {\n        productCount: recommededProductCount,\n        productType: \"product_type:\" + recommededProductType\n      }\n    }\n    getRecommendation({params: data}).then(res => {\n      // let responseData = res.data.data.registryItems.edges.map(item => {return {...item.node}})\n      // this.props.dispatch(setRegistryProducts(responseData))\n      data = res.data.data.products.edges.map(item => {\n        let resData = {...item.node}\n        resData['quantity'] = 1\n        return resData\n      })\n      this.props.dispatch(addRecommendedProduct(data))\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  getFilteredProducts = (addedProducts, filterApplied) => {\n    let filteredProductsId = []\n    let filteredProducts = []\n\n    if (filterApplied.parentFilter) {\n      if (filterApplied.parentFilter === \"giftsAdded\") {\n        if (filterApplied.childFilter.length > 0) {\n          const childFilterArray = filterApplied.childFilter\n\n          for (let product of addedProducts) {\n            if (\n              (childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n              (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n              (childFilterArray.includes(\"reserved\") && product.isReserved)\n            ) {\n              filteredProductsId.push(product.item.id)\n            }\n          }\n        } else {\n          filteredProductsId = addedProducts.map(product => product.item.id)\n        }\n      }\n    } else {\n      filteredProductsId = addedProducts.map(product => product.item.id)\n    }\n\n    filteredProducts = filteredProductsId.map(itemId => {\n      return addedProducts.find(product => product.item.id === itemId)\n    })\n\n    this.props.dispatch(setFilteredProduct(filteredProductsId))\n\n    return filteredProducts\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  setAllRecommendation = (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          id: category.id,\n          name: category.categoryName\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.name\n        }\n      }\n      getRecommendation({params: data}).then(res => {\n        let rData = res.data.data.products.edges.map(item => {\n          let resData = {...item.node}\n          resData['quantity'] = 1\n          resData['category'] = recommendedCat\n          return resData\n        })\n        this.props.dispatch(addRecommendedProduct(rData))\n      }).catch(err => {\n        console.error(err.message)\n      })\n    }\n  }\n\n  getSortedProducts = (filteredProduct, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    let allProducts = []\n    let categories = []\n    // console.log(filteredProduct)\n    for (let parentCat of stateCategories) {\n      for (let category of parentCat.subCategories) {\n        categories.push({\n          id: category.id,\n          name: category.categoryName,\n          added: category.addedItemsCount,\n          total: category.totalItemsCount\n        })\n      }\n\n    }\n\n\n    for (let category of categories) {\n      let products = filteredProduct.filter(el => el.item.category.id === category.id)\n      let addedRecommendations = []\n      let recommendations = stateRecommendedProducts.filter(el => {\n        if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n          addedRecommendations.push(el.id)\n          return true;\n        }\n        return false;\n      })\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: category.added < category.total ? stateFilterApplied.parentFilter ? [] : recommendations : []\n      })\n    }\n\n    return allProducts;\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for(let category of checklistItems){\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems/totalItems)*100;\n  }\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let filteredProducts = this.getFilteredProducts(this.props.stateAddedProducts, this.props.stateFilterApplied)\n    let sortedProducts = this.getSortedProducts(filteredProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-6\">\n          {/* View CheckList */}\n          <div className=\"col-3\">\n            <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)}/>\n            {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n              dispatch={this.props.dispatch} />)}\n          </div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <FilterSection />\n            <div className=\"mt-5\">\n              {sortedProducts.map((product, i) => (\n                <div id={product.category.name}>\n                  {product.products.map((card, index) => (\n                    <AddedCard\n                      data={card} key={\"addedCard\" + index}\n                      toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                      removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                    />\n                  ))}\n                  {product.recommendations.length > 0 ?\n                    <ViewRecommend title={product.recommendations[0].category.name}\n                      products={product.recommendations} />\n                    : null}\n                </div>\n              ))}\n            </div>\n\n\n            {/*/!* Added Products *!/*/}\n            {/*{filteredProducts.map((card, index) =>*/}\n            {/*  <AddedCard*/}\n            {/*    data={card} key={\"addedCard\" + index}*/}\n            {/*    toggleMustHave={() => this.toggleMustHaveProduct(card)}*/}\n            {/*    removeProductFromCartHandler={() => removeProductFromCartHandler(card, ReducerDefaultData.myRegistry.registryId, this.props.dispatch)}*/}\n            {/*  />*/}\n            {/*)}*/}\n\n            {/*/!* View Recommend if there is *!/*/}\n            {/*/!* TODO: View recommention by Categories *!/*/}\n            {/*{this.props.stateActiveRecommandation ?*/}\n            {/*  <ViewRecommend title={this.props.stateActiveRecommandation}*/}\n            {/*                 products={this.props.stateRecommendedProducts}/>*/}\n            {/*  : null}*/}\n            {/*/!* <ViewRecommend title={this.props.stateActiveRecommandation} products={this.props.stateRecommendedProducts} /> *!/*/}\n\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 7\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          console.log(defaultImages);\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // TODO : Replace this console.log with toast\n          console.log(\"Successfully changed default image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          // TODO : Replace this console.log with toast\n          console.log(\"File size exceeds the limit\");\n        }\n      } else {\n        // TODO : Replace this console.log with toast\n        console.log(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      // TODO : Replace this console.log with toast\n      console.log(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // TODO : Replace this console.log with toast\n          console.log(\"Successfully changed\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n\n  }\n\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={props.closeCoverImagePicker}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"utils/commonFunction\";\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      alert(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          alert(\"Successfully changed\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          alert(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        alert(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\"/>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\"/>\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n              onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst ShareRegistry = (props) => {\n\n  // TODO: Uncomment siteHostName for dynamic hostname\n  // const siteHostName = window.location.host + \"\";\n  const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  // Social media icons\n  const facebookInactive = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"none\" viewBox=\"0 0 36 36\">\n      <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#D2D3D5\"/>\n      <path fill=\"#fff\"\n            d=\"M22.012 18.934l.53-3.488h-3.374v-2.274c0-.986.455-1.896 1.972-1.896h1.554V8.281s-1.403-.265-2.73-.265c-2.767 0-4.587 1.706-4.587 4.739v2.691H12.27v3.488h3.108v8.492h3.791v-8.492h2.844z\"/>\n    </svg>\n  )\n\n  const instagramInactive = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"none\" viewBox=\"0 0 36 36\">\n      <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#D2D3D5\"/>\n      <path fill=\"#fff\"\n            d=\"M17.5 13.361c-2.426 0-4.36 1.972-4.36 4.36 0 2.427 1.934 4.36 4.36 4.36 2.389 0 4.36-1.933 4.36-4.36 0-2.388-1.971-4.36-4.36-4.36zm0 7.203c-1.554 0-2.843-1.25-2.843-2.843 0-1.554 1.251-2.805 2.843-2.805 1.555 0 2.806 1.25 2.806 2.805 0 1.592-1.251 2.843-2.806 2.843zm5.535-7.354c0-.569-.455-1.024-1.023-1.024-.569 0-1.024.455-1.024 1.024 0 .568.455 1.023 1.024 1.023.568 0 1.023-.455 1.023-1.023zm2.881 1.023c-.075-1.365-.379-2.578-1.364-3.563-.986-.986-2.2-1.29-3.564-1.365-1.403-.076-5.61-.076-7.013 0-1.365.076-2.54.379-3.564 1.365-.986.985-1.289 2.198-1.365 3.563-.076 1.403-.076 5.611 0 7.014.076 1.365.38 2.54 1.365 3.564 1.024.985 2.199 1.288 3.564 1.364 1.402.076 5.61.076 7.013 0 1.365-.076 2.578-.379 3.564-1.364.985-1.024 1.289-2.2 1.364-3.564.076-1.403.076-5.611 0-7.014zm-1.82 8.492c-.265.759-.871 1.327-1.591 1.63-1.138.456-3.792.342-5.005.342-1.25 0-3.905.114-5.004-.341-.758-.304-1.327-.872-1.63-1.63-.455-1.1-.341-3.754-.341-5.005 0-1.213-.114-3.867.34-5.004.304-.72.873-1.29 1.631-1.592 1.1-.455 3.753-.342 5.004-.342 1.213 0 3.867-.113 5.005.342.72.265 1.289.872 1.592 1.592.455 1.137.341 3.791.341 5.004 0 1.251.114 3.905-.341 5.004z\"/>\n    </svg>\n  )\n\n  const twitterInactive = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"none\" viewBox=\"0 0 36 36\">\n      <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#D2D3D5\"/>\n      <path fill=\"#fff\"\n            d=\"M26.696 13.778c.758-.569 1.44-1.251 1.971-2.047-.682.303-1.478.53-2.274.606.834-.493 1.44-1.25 1.744-2.199-.759.455-1.63.797-2.502.986-.759-.796-1.782-1.251-2.92-1.251-2.198 0-3.98 1.782-3.98 3.98 0 .304.038.607.114.91-3.299-.189-6.256-1.781-8.227-4.17-.341.569-.53 1.251-.53 2.01 0 1.364.681 2.578 1.78 3.298-.644-.038-1.288-.19-1.819-.493v.038c0 1.933 1.365 3.526 3.185 3.905-.304.076-.683.151-1.024.151-.265 0-.493-.037-.758-.075.493 1.592 1.971 2.73 3.715 2.767-1.365 1.062-3.07 1.706-4.928 1.706-.341 0-.645-.038-.948-.076 1.744 1.138 3.829 1.782 6.104 1.782 7.316 0 11.297-6.028 11.297-11.297v-.531z\"/>\n    </svg>\n  )\n\n  const facebookActive = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"none\" viewBox=\"0 0 36 36\">\n      <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#3B5998\"/>\n      <path fill=\"#fff\"\n            d=\"M22.012 18.934l.53-3.488h-3.374v-2.274c0-.986.455-1.896 1.972-1.896h1.554V8.281s-1.403-.265-2.73-.265c-2.767 0-4.587 1.706-4.587 4.739v2.691H12.27v3.488h3.108v8.492h3.791v-8.492h2.844z\"/>\n    </svg>\n  )\n\n  const instagramActive = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"none\" viewBox=\"0 0 36 36\">\n      <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#E1306C\"/>\n      <path fill=\"#fff\"\n            d=\"M17.5 13.361c-2.426 0-4.36 1.972-4.36 4.36 0 2.427 1.934 4.36 4.36 4.36 2.389 0 4.36-1.933 4.36-4.36 0-2.388-1.971-4.36-4.36-4.36zm0 7.203c-1.554 0-2.843-1.25-2.843-2.843 0-1.554 1.251-2.805 2.843-2.805 1.555 0 2.806 1.25 2.806 2.805 0 1.592-1.251 2.843-2.806 2.843zm5.535-7.354c0-.569-.455-1.024-1.023-1.024-.569 0-1.024.455-1.024 1.024 0 .568.455 1.023 1.024 1.023.568 0 1.023-.455 1.023-1.023zm2.881 1.023c-.075-1.365-.379-2.578-1.364-3.563-.986-.986-2.2-1.29-3.564-1.365-1.403-.076-5.61-.076-7.013 0-1.365.076-2.54.379-3.564 1.365-.986.985-1.289 2.198-1.365 3.563-.076 1.403-.076 5.611 0 7.014.076 1.365.38 2.54 1.365 3.564 1.024.985 2.199 1.288 3.564 1.364 1.402.076 5.61.076 7.013 0 1.365-.076 2.578-.379 3.564-1.364.985-1.024 1.289-2.2 1.364-3.564.076-1.403.076-5.611 0-7.014zm-1.82 8.492c-.265.759-.871 1.327-1.591 1.63-1.138.456-3.792.342-5.005.342-1.25 0-3.905.114-5.004-.341-.758-.304-1.327-.872-1.63-1.63-.455-1.1-.341-3.754-.341-5.005 0-1.213-.114-3.867.34-5.004.304-.72.873-1.29 1.631-1.592 1.1-.455 3.753-.342 5.004-.342 1.213 0 3.867-.113 5.005.342.72.265 1.289.872 1.592 1.592.455 1.137.341 3.791.341 5.004 0 1.251.114 3.905-.341 5.004z\"/>\n    </svg>\n\n  )\n\n  const twitterActive = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"none\" viewBox=\"0 0 36 36\">\n      <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#1DA1F2\"/>\n      <path fill=\"#fff\"\n            d=\"M26.696 13.778c.758-.569 1.44-1.251 1.971-2.047-.682.303-1.478.53-2.274.606.834-.493 1.44-1.25 1.744-2.199-.759.455-1.63.797-2.502.986-.759-.796-1.782-1.251-2.92-1.251-2.198 0-3.98 1.782-3.98 3.98 0 .304.038.607.114.91-3.299-.189-6.256-1.781-8.227-4.17-.341.569-.53 1.251-.53 2.01 0 1.364.681 2.578 1.78 3.298-.644-.038-1.288-.19-1.819-.493v.038c0 1.933 1.365 3.526 3.185 3.905-.304.076-.683.151-1.024.151-.265 0-.493-.037-.758-.075.493 1.592 1.971 2.73 3.715 2.767-1.365 1.062-3.07 1.706-4.928 1.706-.341 0-.645-.038-.948-.076 1.744 1.138 3.829 1.782 6.104 1.782 7.316 0 11.297-6.028 11.297-11.297v-.531z\"/>\n    </svg>\n  )\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          // TODO: Replace this with error Toast\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        // TODO: Replace this with error Toast\n        console.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      // TODO: Replace this with error Toast\n      console.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      // TODO: Add error toast\n      console.log(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          // TODO: Replace this with error Toast\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        // TODO: Replace this with error Toast\n        console.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      // TODO: Replace this with error Toast\n      console.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    // TODO: Add success toast\n    console.log(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <i className=\"mr-3\">\n                  {facebookActive}\n                </i>\n                <i className=\"mr-3\">\n                  {instagramActive}\n                </i>\n                <i>\n                  {twitterActive}\n                </i>\n              </>\n              :\n              <>\n                <i className=\"mr-3\">\n                  {facebookInactive}\n                </i>\n                <i className=\"mr-3\">\n                  {instagramInactive}\n                </i>\n                <i>\n                  {twitterInactive}\n                </i>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport {connect} from \"react-redux\";\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({showCoverImagePicker: false})\n  }\n\n  closeShareRegistry = () => {\n    this.setState({showShareRegistry: false})\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({showEditRegistryDetail: false})\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({showEditRegistryDetail: true})\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({showCoverImagePicker: true})\n      }\n    }\n  ]\n  style = {\n    backgroundImage: 'url('+this.props.stateRegistryInfo.image.image+')'\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"view-registry-header\" style={this.style}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          <div className=\"cover-pic-update-options\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col d-flex justify-content-end\">\n                  <MoreOption\n                    data={this.COVER_PIC_OPTIONS}\n                    iconClass=\"icon-preview\"\n                    activeOptionClass=\"view-registry-cover-option-active\"\n                    buttonClass=\"update-cover-options p-1\"/>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)}/>\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    <a className=\"add-greeting-link text-sm font-medium\" href=\"#\"\n                       onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a>\n                  }\n                </div>\n                <div className=\"col-12 col-md-3 header-buttons\">\n                  <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\">View as Guest</Button>\n                  <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\" onClick={() => this.setState({showShareRegistry: true})}>Share</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n          <EditViewRegistryDetail\n            show={this.state.showEditRegistryDetail}\n            closeEditRegistryDetail={this.closeEditRegistryDetail}\n            info={this.props.stateRegistryInfo}\n          />\n\n          <ShareRegistry\n            show={this.state.showShareRegistry}\n            closeShareRegistry={this.closeShareRegistry}\n            registryInfo={this.props.stateRegistryInfo}\n          />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.stateViewRegistryProducts.length} {this.props.stateViewRegistryProducts.length === 1 ? \"item\" : \"items\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>\n            </div>\n\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 ?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateIsGotIt: state.viewRegistry.isGotItApplies,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);","import React, { useEffect } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, setFeaturedSortApplied } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFeaturedSortApplied = useSelector(state => state.viewRegistry.featuredSortApplied)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    updateViewRegistryPosition(stateRegistryInfo.id, items, dispatch)\n    // dispatch(setViewRegistryProducts(items))\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedFilteredProducts = (addedProducts, activeSortFilterState, viewRegistryProducts) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    // let sortedDataByMustHave = sortByMustHave([...stateAddedProducts])\n\n    if (activeSortFilterState.sortId === 1) {\n      if (stateRegistryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n        // sortedData = sortByFeatured([...addedProducts])\n      }\n      else {\n        sortedData = sortByMustHave([...addedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n          // dispatch(setViewRegistryProducts(viewRegistryProductsId))\n          // dispatch(setFeaturedSortApplied(true))\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...addedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...addedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n\n  }\n\n  const sortByLowToHigh = (productList) => {\n    // TODO\n    // let mustHaveProducts = [...productList]\n    // let index = -1;\n    // for (let product of mustHaveProducts) {\n    //   index++;\n    //   if (product.mostWanted === false) {\n    //     break\n    //   }\n    // }\n    // let nonMustHaveProducts = mustHaveProducts.splice(index);\n    // let tempMustHaveList = mustHaveProducts.sort((a, b) => { return a.item.price - b.item.price });\n    // let tempList = nonMustHaveProducts.sort((a, b) => { return a.item.price - b.item.price })\n    // let finalSortedProducts = tempMustHaveList.concat(tempList)\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    // TODO\n    // let mustHaveProducts = [...productList]\n    // let index = -1;\n    // for (let product of mustHaveProducts) {\n    //   index++;\n    //   if (product.mostWanted === false) {\n    //     break\n    //   }\n    // }\n    // let nonMustHaveProducts = mustHaveProducts.splice(index);\n    // let tempMustHaveList = mustHaveProducts.sort((a, b) => { return b.item.price - a.item.price });\n    // let tempList = nonMustHaveProducts.sort((a, b) => { return b.item.price - a.item.price })\n    // let finalSortedProducts = tempMustHaveList.concat(tempList)\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  useEffect(() => {\n    if (stateAddedProducts.length === 0) {\n      getProducts(stateRegistryInfo.id, dispatch);\n    }\n    if (stateAddedProducts.length > 0 && stateViewRegistryProducts.length === 0) {\n      let sortedData = sortByFeatured([...stateAddedProducts])\n      let viewRegistryProducts = sortedData.map((productData, index) => {\n        return { 'id': productData.id }\n      })\n      dispatch(setViewRegistryProducts(viewRegistryProducts))\n    }\n  })\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n          <div className=\"col-9\">\n            {/* Top Filter Section */}\n            <SortFilterSection />\n\n            {/* Added Products */}\n            <div className=\"mt-5\">\n              <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n                {filteredSortProducts.map((card, index) =>\n                  <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1} />\n                )}\n              </SortableContainer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from 'react'\nimport {NavLink, Switch, Route, Redirect} from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport {useTranslation} from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport {Navbar, Nav} from 'react-bootstrap';\n\nconst RegistryHero = (props) => {\n\n  // \"props.registryInfo\" will contain all registry information\n\n  const {t} = useTranslation();\n  const registryData = RegistryHeroData\n  return (\n    <>\n      <div className=\"registry-hero\">\n        <div className=\"container\">\n\n          {/* Registry Navbar */}\n          <div className=\"d-flex pt-6 registry-hero-header\">\n\n            {/* Registry Info */}\n            <div className=\"mr-3 mb-0\"><h1>{props.registryInfo.name}</h1></div>\n            <div className=\"d-flex mt-auto registry-hero-subtitle\">\n              <div>{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</div>\n              {/* <div>| Partner: {registryData.partner}</div> */}\n            </div>\n          </div>\n\n          {/* Adding Navbar */}\n          <div className=\"d-flex m-0\">\n            <Navbar expand=\"lg\" className=\"p-0\">\n              <Navbar.Toggle aria-controls=\"basic-navbar-na\" className=\"pb-2\"/>\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                  <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n                  <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n                  <NavLink to={route.MY_REGISTRY.TRACK_GIFTS} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                  <NavLink to={route.MY_REGISTRY.SHOWER} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.shower\")}</h4></NavLink>\n                  <NavLink to={route.MY_REGISTRY.ANNOUNCEMENTS} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.announcements\")}</h4></NavLink>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n            <NavLink to={route.MY_REGISTRY.TO_DOS} className=\"ml-auto registry-header-link\">\n              <h4>{t(\"registryHeader.link.toDos\")}</h4></NavLink>\n          </div>\n        </div>\n      </div>\n      {/* Registry Nav Routes */}\n        <Switch>\n          <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME}/></Route>\n          <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry}/>\n          <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry}/>\n        </Switch>\n    </>\n  )\n}\n\nexport default RegistryHero;","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {updateRegistryDetail} from \"utils/commonFunction\";\n\nclass ViewsContainer extends React.Component {\n\n  componentDidMount() {\n    updateRegistryDetail(this.props.dispatch);\n  }\n\n  render() {\n    return (\n      <>\n        {/*<div>*/}\n        {/*  <Link to=\"\" style={{ marginRight: \"30px\" }}>Home</Link>*/}\n        {/*  <Link to={route.REGISTRY.HOME}>Registry</Link>*/}\n        {/*</div>*/}\n\n        <Switch>\n          {/*<Route exact path=\"/\" component={Home} />*/}\n          {/*<Route path=\"/another\" component={Another} />*/}\n          <Route path={route.REGISTRY.HOME} component={this.props.stateRegistryInfo.id ? () => <RegistryHero registryInfo={this.props.stateRegistryInfo}/> : null} />\n          <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n          <Route render={() => <div>DEFAULT</div>}/>\n        </Switch>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}