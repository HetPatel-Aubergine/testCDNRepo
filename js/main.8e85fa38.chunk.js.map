{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","modules/personalise-checklist/PersonaliseCheckListActions.js","modules/personalise-checklist/PersonaliseCheckListReducer.js","modules/onboarding/OnboardingAction.js","modules/onboarding/OnboardingReducer.js","modules/guest-view/GuestViewAction.js","modules/guest-view/GuestViewReducer.js","modules/track-gifts/TrackGiftsAction.jsx","modules/track-gifts/components/view-by/ViewBy.jsx","modules/track-gifts/TrackGiftsReducer.jsx","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/modal-component/ModalComponent.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","api/queries.js","api/config.js","api/axios.js","utils/constants.js","api/mutations.js","utils/commonFunction.js","modules/commons/components/button-component/ButtonComponent.jsx","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/import-registry/category-pill/CategoryPill.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/import-registry/ImportRegistry.jsx","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/commons/components/cash-fund-card/cash-fund-card-not-added/CashFundCardNotAdded.jsx","modules/commons/components/cash-fund-card/CashFundCard.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/toggle-pills/TogglePills.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/components/view-filter/ViewFilter.jsx","modules/commons/components/gift-status-pill/GiftStatusPill.jsx","modules/guest-view/components/GuestViewCard.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/commons/components/toast/Toast.jsx","modules/registry-hero/component/todo-widget/TodoWidget.jsx","modules/track-gifts/containers/track-gifts-sidebar/TrackGiftsSidebar.jsx","modules/track-gifts/components/gift-card-pill/GiftCardPill.jsx","modules/track-gifts/components/gift-card/GiftCard.jsx","modules/track-gifts/containers/track-gifts-content/TrackGiftsContent.jsx","modules/track-gifts/TrackGifts.jsx","modules/registry-hero/RegistryHero.jsx","modules/commons/components/questions/option/Option.jsx","modules/onboarding/Onboarding.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/personalise-checklist/components/personalise-header/PersonaliseHeader.jsx","modules/personalise-checklist/components/personalise-footer/PersonaliseFooter.jsx","modules/personalise-checklist/PersonaliseChecklist.jsx","modules/personalise-checklist/components/edit-checklist/EditChecklist.jsx","modules/guest-view/containers/guest-view-header/GuestViewHeader.jsx","modules/guest-view/containers/guest-sort-filter/GuestSortFilter.jsx","modules/guest-view/containers/guest-sort/GuestSortSection.jsx","modules/guest-view/containers/guest-filter/GuestFilter.jsx","modules/guest-view/GuestView.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","SET_ANOTHER_STORE_REGISTRY_ITEMS","SET_CASH_FUND_CATEGORIES","addRecommendedProduct","params","toggleMustHaveProduct","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","setAnotherStoreRegistryItems","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","anotherStoreRegistry","cashFundCategories","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","setguestViewRegistry","setViewFilterCategory","setChildViewFilter","clearViewFilter","viewRegistryProducts","activeSortFilter","sortId","sortTitle","guestViewRegistry","viewFilterApplied","REGISTRY_ACTION_TYPES","updateRegistryInfo","setLoggingStatus","setOnboardingRegistry","info","loggedIn","todo","onboardingRegistry","PERSONALISE_CHECKLIST_ACTION_TYPES","setPersonaliseCheckListItems","addPersonalizeQuestion","addPersonalizeQuestionAnswer","updatePersonalizeQuestionAnswer","newSubCategory","subCategories","subCategory","totalItemsCount","setIsAddedCheckList","isAdded","editedPersonaliseCheckList","questions","answers","ONBOARDING_ACTION_TYPES","addOnboardingQuestion","addQuestionAnswer","updateQuestionAnswer","GUEST_VIEW_ACTION_TYPES","updateGuestViewInfo","setGuestViewProducts","setChildGuestViewFilter","clearGuestViewFilter","setGuestViewFilterCategory","setViewGuestPaginationInfo","clearViewGuestPaginationInfo","updated","activeGuestSortFilter","guestViewFilterApplied","guestFilterCategory","paginationInfo","trackGifts","pagination","TRACK_GIFTS_ACTION_TYPES","setTrackGiftsProduct","setTrackGiftsPaginationInfo","TRACK_GIFTS_VIEWS","ViewBy","activeView","useSelector","dispatch","useDispatch","changeTrackGiftView","view","className","join","onClick","products","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","personaliseCheckList","PersonaliseCheckListReducer","onboarding","Onboarding","TrackGiftsReducer","guestView","GuestViewReducer","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","shower","announcements","more","toDos","es","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","TRACK_GIFTS","ONBOARDING","PERSONALIZE","CHECKLIST","GUEST_VIEW","MoreOption","props","iconClass","buttonClass","data","map","option","index","key","name","ModalComponent","Modal","show","size","titleContent","Header","headerContent","closeModal","Body","children","footer","Footer","Counter","decrementHandler","counter","incrementHandler","CardItem","src","image","originalSrc","alt","href","productLink","tabindex","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","gql","GET_CATEGORIES","GET_PRODUCTS","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","GET_REGISTRIES","GET_QUESTIONS","GET_PERSONALIZE_QUESTIONS","GET_TRACK_GIFTS","GET_GUEST_REGISTRY_PRODUCT","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","axiosInstanceNoToken","axiosInstanceNoHeader","graphQLNoToken","post","graphQLNoHeader","graphQL","getAnotherRegistryProducts","axiosInstanceMultipart","graphQLMultipart","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","FILTERS","BOOKMARKLET_SCRIPT","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","REGISTER_USER","SAVE_QUESTION_RESPONSE","LOGIN_USER","ADD_PARTNER_ACCOUNT","SAVE_UPDATED_CHECKLIST","SAVE_SINGLE_QUESTION_RESPONSE","CREATE_REGISTRY","getProducts","registryId","query","variables","parseInt","then","res","finalData","registryItems","newItemObj","registryitemImage","imageUrl","registryCategories","catch","err","console","error","response","removeProductFromCartHandler","card","registryItemId","getCategories","toast","message","getRefinedCategory","categoryName","categoryType","isDesired","isExcluded","addedItemsCount","isParent","getAllCategories","getAll","subCategoriesIsExcluded","parentCategory","newParentCategory","registrySubCategories","newSubCategories","cat","refinedSubCate","subProductTypes","registrySubProductTypes","subProduct","operationName","errors","log","finalCategories","allCategories","updateRegistryDetail","registries","registryData","currentRegistryInfo","notFound","updateRegistryDetailState","e","getOnboardingQuestions","a","token","reqData","isPersonalize","Number","question","followUpQuestions","followUpQuestion","isAnswered","dataURItoBlob","dataURI","fileType","fileName","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","getGuestCategories","urlSlug","registryCategoriesAsGuest","ButtonComponent","React","forwardRef","ref","btnVariantClass","variant","disabled","AddedCard","stateGuestViewRegistry","stateRecommendedProducts","stateFilterApplied","stateAddedProducts","stateRegistryInfo","useState","setRecommendedProducts","setShow","modalTitle","showRemoveModel","setShowRemoveModel","moreOptionsData","unshift","categoryRecommended","jsonObject","JSON","stringify","uniqueSet","Set","Array","from","parse","showRecommendation","removeConfirmFooter","DragHandle","sortableHandle","disabledDrag","multipleCategories","draggable","isViewCard","cardId","newRecommended","incrementQuantity","decrementQuantity","existingProduct","sku","storeItemUrl","parseFloat","shopifyItemId","tags","success","CheckList","gotoPersonalize","event","preventDefault","isQuizPending","editablePersonalizeQuestions","this","t","style","width","percentage","Component","withTranslation","withRouter","CheckListItems","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","subProductType","handleToggleEvent","checkListIconEl","checkListHeader","current","firstChild","classList","toggle","createRef","subListItem","Accordion","Card","Toggle","as","eventKey","Collapse","connect","BookmarkletSection","updateModal","modalBody","modalTitleContent","modalFooterButtons","modalCloseHandler","setState","openAddBookmarkletModal","prevState","addItemToRegistry","TogglePills","activeClass","text","RadioButton","checked","onChange","changeHandler","textClass","display","count","CheckBox","value","SelectCategory","categories","setCategories","searchedCategories","setSearchedCategories","currentCategory","selectedCategory","setSelectedCategory","useEffect","resData","finalCheckList","finalSubCategory","tempSubCategory","tempCategory","getCategoriesToDisplay","find","allSelectedCategory","handleSelectionCategory","categorySelectBody","modalFooter","changeCurrentCategory","searchInputRef","changeLinkRef","placeholder","target","searchMatched","toLowerCase","match","searchCategoryInputChangeHandler","onFocus","contains","add","searchInputFocusHandler","onBlur","remove","searchInputBlurHandler","focus","changeLinkClickHandler","showModal","CategoryPill","removeCategory","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","hideProductDetails","setHideProductDetails","showLoading","setshowLoading","productInfo","productImage","productName","howToGift","note","mustHave","groupGift","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","ev","persist","changeProductName","noteChangeHandler","changeNote","selectFileHandler","files","file","includes","reader","FileReader","onload","changeProductImage","result","readAsDataURL","submitStoreUrl","keyCode","URL","url","productUrl","changeProductUrl","item_url","ctgry","getScrapedProduct","img","newPrice","char","isInteger","getRefinedPrice","onKeyUp","class","role","click","accept","rows","priceChangeHandler","addMyOwn","openCategorySelect","categoryId","finalcategory","removeSelectedCategory","toggleGroupGift","togglePurchased","changeHowToGift","ViewRecommend","viewDetailsBtn","cardRef","clearModalData","alert","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","childCategory","commonGetProducts","commonGetCategories","checkDataValidity","storeProduct","stateAnotherStoreProduct","storeUrl","storeName","hostname","formData","FormData","ADD_REGISTRY_ITEM_MUTATION","input","items","append","images","status","anotherStoreItemViewDetail","open","addOnMyOwnClickHandler","newCategory","displayName","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","height","offsetHeight","Filter","filterData","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","childId","parentId","childIndex","indexOf","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ImportGiftCard","ImportRegistry","registryUrl","errorMessage","loading","activeCategoryProductIndex","currentRegistryLink","inputHasFocus","inputRef","changeLoadingState","registryUrlChangeHandler","checkUrlAndGetRegistryItems","getAnotherRegistryProductsInfo","registryUrlKeyUpHandler","store_name","store_url","newProducts","finally","openSelectCategoryModal","productIndex","stateAnotherStoreRegistry","setProductCategories","newProductState","changeRegistryUrl","bind","AddGift","categoryList","openAddGiftModal","importGiftAnotherStoreHandler","importRegistry","validImportRegistryData","getCleanedRegistryItems","cleanedRegistryItems","itemStore","stores","newStore","importRegistryClickHandler","jsonGraphQL","addRegistryItems","FilterSection","deleteChipHandler","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","productCount","stateFilteredProducts","CashFundCardNotAdded","addButtonClickHandler","CashFundCard","selectedClass","AddCashFundModal","MAX_IMAGE_SIZE","cashFundImage","cashFundName","cashFundAmount","hideTotal","cashFundType","cashFundNote","markCompleted","imageRef","validateCashFundData","addCashFundClickHandler","isGroupGift","markAsCompleted","isCashFund","modalFooterButton","newProductImage","cashFundNameChangeHandler","cashFundAmountChangeHandler","cashFundHideTotalChangeHandler","cashFundTypeChangeHandler","stateCashFundCategories","changedCategory","cashFundNoteChangeHandler","mustHaveClickHandler","markCompletedClickHandler","allCashFundCategories","foundCategory","categoryData","cashFundCategory","selected","Everything","showCashFundModal","cashFundProduct","openCashFundModal","setCashFundCategoryAndOpenModal","closeCashFundModal","updateFilterList","newFilterList","isPurchased","isReserved","productId","mustHaveValue","setAllRecommendation","recommendedCategory","parentCat","recommendedCat","productType","rData","getSortedProducts","stateCategories","cashFundCount","productsToAppend","allProducts","added","total","recommendations","childFilterArray","categoryFound","addedRecommendations","groupedProducts","recommendationCount","totalProducts","totalRecommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","hasCashFund","stateProducts","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","registryImages","defaultImages","fileChangeHandler","imageId","updateRegistry","closeCoverImagePicker","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","siteHostName","location","host","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","setRegistryUrl","registryError","setRegistryError","inputContainerRef","changeRegistryVisibility","newRegistry","readOnly","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","handleGuestView","handleDisableViewGuest","COVER_PIC_OPTIONS","backgroundImage","activeOptionClass","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","filterCat","childCat","stateActiveSortFilter","stateViewRegistryProducts","ViewFilter","stateCategoriesInfo","stateFilterCategories","filterCategoryLimit","setFilterCategoryLimit","giftStatus","limit","parentFilterID","limitLength","isFound","newFilterCateoryLimit","categorylimit","changeParentLimitHandler","GiftStatusPill","pillVariantClass","GuestViewCard","amountReceived","tabIndex","ViewRegistryHome","localAddedProductState","handleFilterProductChange","registryItemsAnalysisCount","totalAvailable","totalReserved","totalPurchased","under50","between50100","moreThan100","maStoreItems","otherStoreItems","getFiltersApplied","isAvailable","sortBy","lessThanEqual","greaterThanEqual","hasPriceFilter","price_Lte","price_Gte","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","getSortedProductsByFilters","finalFilterProduct","filtersApplied","getSortedFilteredProducts","sortedProducts","sortedData","newSortedProducts","isFeatured","sortByMustHave","productData","sortByLowToHigh","sortByHighToLow","viewRegistryProductsId","addProduct","productList","sort","b","onSortEnd","oldIndex","newIndex","itemsOldPosition","arrayMove","position","oldPosition","updateViewRegistryPosition","helperClass","axis","lockAxis","useDragHandle","ViewRegistry","Toast","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","closeButton","parentElement","dismiss","TodoWidget","performTodoAction","stateTodo","TrackGiftsSidebar","GiftCardPill","amount","GiftCard","friendsDetailRef","toggleFriendsDetail","giftMessage","guestUser","firstName","lastName","isCashAcceptedOnly","isAmountReceived","user","guestEmail","contributionAmount","NoRecordFound","TrackGiftsContent","currentView","getTrackGiftsProduct","clearProducts","giftGivers","stateTrackGiftsView","after","stateTrackGiftsPagination","endCursor","first","registryGifts","gifts","pageInfo","hasNextPage","stateTrackGiftsProducts","checkProductAvailability","getProductsBasedOnView","availableProducts","guestUsersEmails","groupUser","groupProduct","next","hasMore","loader","dataLength","groupedProduct","TrackGifts","RegistryHero","useTranslation","RegistryHeroData","to","babyArrival","Option","MAIL_FORMAT","LOGIN_TITLE","SIGNUP_TITLE","PARTNER_TITLE","RADIO","PARTNER","login","toastMessage","signUpErrors","signInErrors","submitAnswer","bulkSaved","clearErrorState","createRegistry","submitAllAnswers","checkValidEmail","email","optionalRegistryId","submitBulk","stateOnboardingAnswers","stateOnboardingRegistry","returnToURL","answer","questionOptionInput","optionText","addRegistryMultipleQuestionOption","origin","registryQuestionOptionInput","updateOrCreateRegistrySingleQuestionOption","redirectionUrl","clearToastMessage","setToastMessage","gotoNextQuestion","nextQuestionId","returnNext","nextFullQuestion","idToMatch","stateOnboardingQuestions","ques","stateLoggedIn","setQuestionBasedOnId","questionId","finalQuestion","foundQuestion","parentQuestion","addAnswerToState","answerRadioQuestion","watchNextBtn","nextBtnState","answerDataQuestion","dateCheck","now","day","getDate","slice","month","getMonth","getFullYear","textInputTypeChangeHandler","inputRefs","enableBtn","changeLoginState","refs","setErrorBasedOnResponse","parentErrors","subErrors","newErrorState","signInClickHandler","emailRef","passwordRef","password","loginUser","set","registryRes","activeRegistry","getSignInContent","signUpClickHandler","nameRef","registerUser","getSignUpContent","savePartnerDetail","partnerDetail","addPartnerAccount","getPartnerContent","undefined","onpopstate","pathname","search","stateRouter","answerInputType","setTimeout","staticQuestionTitle","helpText","onKeyDown","min","content","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","customer","redirectVerifyToken","VerifyToken","verifyToken","PersonaliseFooter","prevQuestion","nextQuestion","PersonaliseChecklist","prevQuestionId","activeQuestionId","checkBoxSelected","CHECKBOX","calulatePercentage","answerQuestionCount","totalQuestionCount","totalAnwer","statePersonaliseQuestions","Math","ceil","answerCheckBoxQuestion","isActiveIdPresent","gotoPrevQuestion","popPrevQuestionId","pop","statePersonaliseAnswers","finalAnswer","submitQuestionAnswer","op","selectCheckboxAnswer","checkBoxRef","removeIndex","setStateQuestionWithSelectedAnswer","answerOpt","ans","questionOption","opt","selectedColorSchemes","prevQuestionID","currentQuestion","selectedOptionID","selectOptions","selectedOption","defaultChecked","showOverrideModal","closeAndSavePersonaliseCheckList","finalCheckListData","tempStateCheckList","tempData","registryCategoryId","itemsCount","itemCountData","gotoPersonaliseQuestions","parentCategories","GuestViewHeader","GuestSortFilter","GuestSortSection","setFilterhandler","GuestFilter","clearClickHandler","GuestView","isFirstTime","BABY_GIFTS_URL","AVAILABLE","RESERVED","PURCHASED","PRICE_1","PRICE_2","PRICE_3","MONICA_AND_ANDY","ELSEWHERE","updateGuestViewRegistryProduct","stateGuestViewPagination","registryAsGuest","pagenationInfo","guestProducts","getdataForFirstTime","registrySlug","guestViewInfo","registryUsers","partnerUser","filteredSortProducts","overflow","ViewsContainer","displayContent","foundRegistry","access_token","EditChecklist","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8e85fa38.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\",\n\n  // ANOTHER STORE REGISTRY\n  SET_ANOTHER_STORE_REGISTRY_ITEMS: \"SET_ANOTHER_STORE_REGISTRY_ITEMS\",\n\n  // SET CASH FUND CATEGORIES\n  SET_CASH_FUND_CATEGORIES: \"SET_CASH_FUND_CATEGORIES\"\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}\n\n//Another store Registry Items\nexport const setAnotherStoreRegistryItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n//Set Cash Fund Categories\nexport const setCashFundCategories = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES,\n\t\tpayload: params\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreRegistry = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nconst cashFundCategories = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct,\n  anotherStoreRegistry,\n  cashFundCategories\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_GUEST_VIEW: \"IS_GUEST_VIEW\",\n  SET_VIEW_FILTER_CATEGORY: \"SET_VIEW_FILTER_CATEGORY\",\n\n  // Filter\n\tSET_VIEW_PARENT_FILTER: \"SET_VIEW_PARENT_FILTER\",\n\tSET_VIEW_CHILD_FILTER: \"SET_VIEW_CHILD_FILTER\",\n\tCLEAR_VIEW_FILTER: \"CLEAR_VIEW_FILTER\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setguestViewRegistry = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW,\n    payload: params\n  }\n}\n\n// View Filter Category Section\nexport const setViewFilterCategory = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n\n// Filter Section\n\nexport const setParentViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewFilter = () => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER,\n\t}\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst guestViewRegistry = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst viewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    guestViewRegistry,\n    filterCategory,\n    viewFilterApplied\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\",\n  SET_LOGGING_STATUS: \"SET_LOGGING_STATUS\",\n  SET_TODO : \"SET_TODO\",\n  SET_ONBOARDING_REGISTRY: \"SET_ONBOARDING_REGISTRY\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}\n\nexport const setLoggingStatus = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS,\n    payload: params\n  }\n}\n\nexport const setTodo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_TODO,\n    payload: params\n  }\n}\n\nexport const setOnboardingRegistry = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY,\n    payload: params\n  }\n}\n","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst todo = (state = defaultData.todo, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_TODO:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst onboardingRegistry = (state = \"\", action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo,\n  loggedIn,\n  todo,\n  onboardingRegistry\n});","export const PERSONALISE_CHECKLIST_ACTION_TYPES = {\n\n\tGET_ALL_CHECKLIST_ITEMS: \"GET_ALL_CHECKLIST_ITEMS\",\n\tINCREMENT_CHECKLIST_QUANTITY: \"INCREMENT_CHECKLIST_QUANTITY\",\n\tDECREMENT_CHECKLIST_QUANTITY: \"DECREMENT_CHECKLIST_QUANTITY\",\n\tCHECKLIST_ADDED: \"CHECKLIST_ADDED\",\n\n\tPERSONALISE_ADD_QUESTION: \"PERSONALISE_ADD_QUESTION\",\n    PERSONALISE_ADD_ANSWER: \"PERSONALISE_ADD_ANSWER\",\n    PERSONALISE_UPDATE_ANSWER: \"PERSONALISE_UPDATE_ANSWER\"\n}\n\nexport const incrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\n\nexport const setPersonaliseCheckListItems = params => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\nexport const setIsActiveCheckList = (id, isAdded) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED,\n\t\tpayload: { id, isAdded }\n\t}\n}\n\nexport const addPersonalizeQuestion = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION,\n\t  payload: params\n\t}\n  }\n  \n  export const addPersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER,\n\t  payload: params\n\t}\n  }\n  \n  export const updatePersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER,\n\t  payload: params\n\t}\n  }","import {PERSONALISE_CHECKLIST_ACTION_TYPES} from \"./PersonaliseCheckListActions\";\nimport {combineReducers} from \"redux\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.totalItemsCount += quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id && subCategory.totalItemsCount > 1) {\n        subCategory.totalItemsCount -= quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst setIsAddedCheckList = (state, payload) => {\n  let {\n    id,\n    isAdded\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.isAdded = isAdded;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\n// Reducers\nconst editedPersonaliseCheckList = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS:\n      return [...action.payload];\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n      case PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED:\n        return setIsAddedCheckList(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER:\n      return [...state, action.payload]\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  editedPersonaliseCheckList,\n  questions,\n  answers\n})","export const ONBOARDING_ACTION_TYPES = {\n  ADD_QUESTION: \"ADD_QUESTION\",\n  ADD_ANSWER: \"ADD_ANSWER\",\n  UPDATE_ANSWER: \"UPDATE_ANSWER\"\n}\n\nexport const addOnboardingQuestion = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_QUESTION,\n    payload: params\n  }\n}\n\nexport const addQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_ANSWER,\n    payload: params\n  }\n}\n\nexport const updateQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.UPDATE_ANSWER,\n    payload: params\n  }\n}","import {ONBOARDING_ACTION_TYPES} from \"./OnboardingAction\";\nimport {combineReducers} from \"redux\";\n\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_QUESTION:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_ANSWER:\n      return [...state, action.payload]\n    case ONBOARDING_ACTION_TYPES.UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  questions,\n  answers\n});","export const GUEST_VIEW_ACTION_TYPES = {\n\tUPDATE_GUEST_VIEW_INFO: \"UPDATE_GUEST_VIEW_INFO\",\n\tSET_GUEST_VIEW_PRODUCT: \"SET_GUEST_VIEW_PRODUCT\",\n\tGUEST_ACTIVE_SORT_FILTER: \"GUEST_ACTIVE_SORT_FILTER\",\n\n\t// Filter\n\tSET_GUEST_VIEW_PARENT_FILTER: \"SET_GUEST_VIEW_PARENT_FILTER\",\n\tSET_GUEST_VIEW_CHILD_FILTER: \"SET_GUEST_VIEW_CHILD_FILTER\",\n\tCLEAR_GUEST_VIEW_FILTER: \"CLEAR_GUEST_VIEW_FILTER\",\n\n\tSET_GUEST_VIEW_FILTER_CATEGORY: \"SET_GUEST_VIEW_FILTER_CATEGORY\",\n\tGUEST_VIEW_SET_PAGINATION_INFO: \"GUEST_VIEW_SET_PAGINATION_INFO\",\n\tCLEAR_GUEST_PAGINATION_INFO: \"CLEAR_GUEST_PAGINATION_INFO\",\n\n\tGET_GUEST_CHECKLIST_ITEMS: \"GET_GUEST_CHECKLIST_ITEMS\",\n}\n\nexport const updateGuestViewInfo = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const setGuestViewProducts = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const activeGuestSortFilter = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_ACTIVE_SORT_FILTER,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\nexport const setParentGuestViewFilter = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildGuestViewFilter = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearGuestViewFilter = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_VIEW_FILTER,\n\t}\n}\n\n// View Filter Category Section\nexport const setGuestViewFilterCategory = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\nexport const setViewGuestPaginationInfo = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewGuestPaginationInfo = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO,\n\t}\n}\n\nexport const setGuestCheckListItems = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GET_GUEST_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n","import { GUEST_VIEW_ACTION_TYPES } from \"./GuestViewAction\";\nimport { combineReducers } from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst guestViewRegistry = (state = { updated: false }, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO:\n      return { ...action.payload }\n    default:\n      return state\n  }\n}\n\nconst addedGuestProducts = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PRODUCT:\n      return action.payload.length ? [...state, ...action.payload] : [];\n    default:\n      return state;\n  }\n}\n\nconst activeGuestSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GUEST_ACTIVE_SORT_FILTER:\n      return {...action.payload};\n    default:\n      return state;\n  }\n}\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst guestViewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst guestFilterCategory = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst paginationInfo = (state = defaultData.trackGifts.pagination, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO:\n      return {...action.payload}\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_PAGINATION_INFO:\n      return defaultData.trackGifts.pagination\n    default:\n      return state\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GET_GUEST_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  info: guestViewRegistry,\n  product: addedGuestProducts,\n  activeGuestSortFilter,\n  guestViewFilterApplied,\n  guestFilterCategory,\n  paginationInfo,\n  checkList,\n});","export const TRACK_GIFTS_ACTION_TYPES = {\n  TRACK_GIFTS_ACTIVE_VIEW: \"TRACK_GIFTS_ACTIVE_VIEW\",\n\n  TRACK_GIFTS_SET_PRODUCT: \"TRACK_GIFTS_SET_PRODUCT\",\n\n  TRACK_GIFTS_SET_PAGINATION_INFO: \"TRACK_GIFTS_SET_PAGINATION_INFO\"\n}\n\nexport const setActiveView = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_ACTIVE_VIEW,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsProduct = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PRODUCT,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsPaginationInfo = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PAGINATION_INFO,\n    payload: params\n  }\n}\n","import React from \"react\";\nimport \"./ViewBy.scss\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setActiveView} from \"../../TrackGiftsAction\";\n\nexport const TRACK_GIFTS_VIEWS = [\n  {\n    \"id\": 1,\n    \"text\": \"Gifts\"\n  },\n  {\n    \"id\": 2,\n    \"text\": \"Gift Givers\"\n  }\n]\n\nconst ViewBy = () => {\n  const activeView = useSelector(state => state.trackGifts.activeView);\n  const dispatch = useDispatch()\n\n  const changeTrackGiftView = view => {\n    dispatch(setActiveView(view))\n  }\n\n  return (\n    <div className=\"track-gift-view-by\">\n      <p className=\"text-sm\">View By</p>\n      <div className=\"view-by-toggle-section mt-1\">\n        <div\n          className={[\"view-by-toggle text-sm p-2\", activeView.id === TRACK_GIFTS_VIEWS[0].id ? \"active-view-toggle\" : \"\"].join(\" \")}\n          onClick={() => changeTrackGiftView(TRACK_GIFTS_VIEWS[0])}\n        >Gifts\n        </div>\n        <div\n          className={[\"view-by-toggle text-sm p-2\", activeView.id === TRACK_GIFTS_VIEWS[1].id ? \"active-view-toggle\" : \"\"].join(\" \")}\n          onClick={() => changeTrackGiftView(TRACK_GIFTS_VIEWS[1])}\n        >Gift\n          Givers\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewBy;","import {TRACK_GIFTS_ACTION_TYPES} from \"./TrackGiftsAction\";\nimport {combineReducers} from \"redux\";\nimport {TRACK_GIFTS_VIEWS} from \"./components/view-by/ViewBy\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// By default \"Gifts\" are selected\nconst activeView = (state = TRACK_GIFTS_VIEWS[0], action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_ACTIVE_VIEW:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst products = (state = [], action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PRODUCT:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst paginationInfo = (state = defaultData.trackGifts.pagination, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PAGINATION_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\n\nexport default combineReducers({\n  activeView,\n  products,\n  paginationInfo\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\nimport PersonaliseCheckListReducer from \"../modules/personalise-checklist/PersonaliseCheckListReducer\";\nimport Onboarding from \"../modules/onboarding/OnboardingReducer\";\nimport GuestViewReducer from \"../modules/guest-view/GuestViewReducer\";\nimport TrackGiftsReducer from \"../modules/track-gifts/TrackGiftsReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  personaliseCheckList: PersonaliseCheckListReducer,\n  onboarding: Onboarding,\n  trackGifts: TrackGiftsReducer,\n  guestView: GuestViewReducer,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n  LOGIN: {\n    VERIFY_TOKEN: APP_HOME_ROUTE + \"/verify-token/:token\"\n  },\n  REGISTRY: {\n    HOME: APP_HOME_ROUTE\n  },\n\n  MY_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/home\",\n    GIFTS_ADDED: APP_HOME_ROUTE + \"/~/gifts-added\",\n    GIFT_TO_ADD: APP_HOME_ROUTE + \"/~/gifts-to-add\",\n    GIFT_VIEW: APP_HOME_ROUTE + \"/guest-view\",\n    SHOWER: APP_HOME_ROUTE + \"/~/shower\",\n    ANNOUNCEMENTS: APP_HOME_ROUTE + \"/~/announcements\",\n    MORE: APP_HOME_ROUTE + \"/~/more\",\n    TO_DOS: APP_HOME_ROUTE + \"/~/to_dos\"\n  },\n\n  VIEW_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/view-registry\"\n  },\n\n  TRACK_GIFTS: {\n    HOME: APP_HOME_ROUTE + \"/track_gifts\"\n  },\n\n  ONBOARDING: {\n    HOME: APP_HOME_ROUTE + \"/onboarding\"\n  },\n\n  PERSONALIZE:{\n    HOME: APP_HOME_ROUTE + \"/personalize-quiz\",\n    CHECKLIST: APP_HOME_ROUTE + \"/personalize-checklist\"\n  },\n\n  GUEST_VIEW: {\n    HOME: APP_HOME_ROUTE+\"\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")} />\n      <div className={[\"more-option-dropdown\"].join(\" \")}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;\n","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      {props.title || props.titleContent ?\n        <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n          <div>\n            <div className=\"d-flex justify-content-between\">\n              <h1>{props.title}</h1>\n              <div className=\"d-flex\">\n                {props.headerContent ? props.headerContent : null}\n                <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n              </div>\n            </div>\n          </div>\n\n          {/* OPTIONAL CONTENT IN TITLE PORTION */}\n          {props.titleContent ? props.titleContent : null}\n\n        </Modal.Header> : null}\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n        {/* MODAL CONTENT GOES HERE */}\n        {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image text-center\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image?.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink} tabindex>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import { gql } from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  registryCategories(registryId:$registryId){\n    id,\n    isExcluded,\n    itemsCount,\n    addedItemsCount,\n    totalItemsCount,\n    subCategoriesIsExcluded,\n    category{\n      id,\n      categoryName,\n      description,\n      categoryType {\n        id,\n        name\n      }\n      isParent,\n    },\n    registrySubCategories{\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n      subCategoriesIsExcluded,\n      category{\n        id,\n        categoryName,\n        description,\n        categoryType {\n          id,\n          name\n        }\n        isParent,\n      },\n      registrySubProductTypes{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName,\n          description,\n          categoryType {\n            id,\n            name\n          }\n          isParent,\n        },\n      }\n    }\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems(\n  $registryId:Int!\n  $after: String, \n  $first: Int, \n  $isReserved: Boolean,\n  $isPurchased: Boolean,\n  $isAvailable: Boolean,\n  $sortBy: String,\n  $categories:[Int],\n  $price_Lte: Float,\n  $price_Gte: Float,\n  $store: [String],\n  ){\n    registryItems(\n      registryId:$registryId\n      isReserved: $isReserved,\n      isPurchased: $isPurchased,\n      isAvailable: $isAvailable,\n      sortBy: $sortBy,\n      categories: $categories,\n      price_Lte: $price_Lte,\n      price_Gte: $price_Gte,\n      store: $store,\n      ){\n      registryItems(after: $after, first: $first) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            orderNo,\n            giftMessage,\n            isReserved,\n            isAmountReceived,\n            isPurchased,\n            title,\n            registryCategories {\n              id,\n              category{\n                categoryName,\n                categoryType {\n                  id,\n                  name\n                }\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              sku,\n              price,\n              imageUrl,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n      registryItemsAnalysisCount{\n        totalAvailable,\n        totalReserved,\n        totalPurchased,\n        maStoreItems,\n        otherStoreItems,\n        under50,\n        moreThan100,\n        between50100,\n        totalFundsReceived\n      }\n      categoryData\n    }\n  }\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:[Int]!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      registryCategories:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nconst GET_QUESTIONS = `\n  query getQuestions($registryId: Int, $isPersonalize: Boolean!){\n  questions(registryId: $registryId, isPersonalize: $isPersonalize){\n    id,\n    title,\n    answerInputType,\n    fields,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      action,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          options{\n            id\n            value\n            toastMessage\n            action\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY = `\n  query getGuestRegistry($urlSlug: String!, $after: String, $first: Int){\n    registryAsGuest(urlSlug: $urlSlug){\n      id,\n      name,\n      displayName,\n      greeting,\n      isPublic,\n      urlSlug,\n      image {\n        id\n        image\n      },\n      user {\n        firstName,\n        partnerUser {\n          firstName\n        }\n      },\n      registryItems(after: $after, first: $first) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            orderNo,\n            giftMessage,\n            isReserved,\n            isAmountReceived,\n            isPurchased,\n            title,\n            groupGift {\n              amountReceived\n            }\n            registryCategories {\n              id,\n              category{\n                categoryName,\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              sku,\n              price,\n              imageUrl,\n              isCashFund,\n              hideTotal,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n    }\n  }\n`\n\nconst GET_PERSONALIZE_QUESTIONS = `\nquery editablePersonalizeQuestions($registryId: Int!){\n  editablePersonalizeQuestions(registryId: $registryId){\n    id,\n    title,\n    answerInputType,\n    fields,\n    isPersonalize,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          isPersonalize,\n          options{\n            id\n            value\n            toastMessage\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_TRACK_GIFTS = `\nquery registryGifts($registryId: Int!, $fundsReceived: Boolean, $giftGivers: Boolean!, $after: String, $first: Int) {\n  registryGifts(registryId: $registryId, fundsReceived: $fundsReceived, giftGivers: $giftGivers) {\n    gifts(after: $after, first: $first) {\n      edges {\n        node {\n          id\n          isGroupGift\n          featuredOrder\n          isReserved\n          isPurchased\n          isCashAcceptedOnly\n          isAmountReceived\n          giftMessage\n          item {\n            storeItemUrl\n            price\n            imageUrl\n            isCashFund\n          }\n          title\n          guestUser {\n            guestEmail\n            firstName\n            lastName\n            id\n            contributionAmount\n          }\n          groupGift {\n            id\n            amountReceived\n            guestUser {\n              guestEmail\n              firstName\n              lastName\n              id\n              contributionAmount\n            }\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n`\n\nconst GET_CASH_FUND_CATEGORIES = `\nquery getCashFund($registryId: Int!){\n  cashFundCategories(registryId:$registryId){\n    id\n    category{\n      id\n      categoryName\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY_PRODUCT = `\n  query getGuestRegistry(\n    $urlSlug: String!, \n    $after: String, \n    $first: Int, \n    $isReserved: Boolean,\n    $isPurchased: Boolean,\n    $isAvailable: Boolean,\n    $sortBy: String,\n    $categories:[Int],\n    $price_Lte: Float,\n    $price_Gte: Float,\n    $store: [String],\n    ){\n    registryAsGuest(\n      urlSlug: $urlSlug,\n      isReserved: $isReserved,\n      isPurchased: $isPurchased,\n      isAvailable: $isAvailable,\n      sortBy: $sortBy,\n      categories: $categories,\n      price_Lte: $price_Lte,\n      price_Gte: $price_Gte,\n      store: $store,\n      ){\n      registryItems(\n        after: $after, \n        first: $first,\n        ) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            orderNo,\n            giftMessage,\n            isReserved,\n            isAmountReceived,\n            isPurchased,\n            title,\n            groupGift {\n              amountReceived\n            }\n            registryCategories {\n              id,\n              category{\n                categoryName,\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              sku,\n              price,\n              imageUrl,\n              isCashFund,\n              hideTotal,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n      registryItemsAnalysisCount{\n        totalAvailable,\n        totalReserved,\n        totalPurchased,\n        maStoreItems,\n        otherStoreItems,\n        under50,\n        moreThan100,\n        between50100,\n        totalFundsReceived\n      }\n      categoryData  \n    }\n  }\n`;\n\nconst GET_GUEST_CHECKLIST = `\n  query registryCategoriesAsGuest($urlSlug: String!){\n    registryCategoriesAsGuest(urlSlug: $urlSlug){\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n       category{\n        id,\n        categoryName,\n        categoryType{\n          id,\n          name\n        }\n      },\n      registrySubCategories{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName\n        },\n        registrySubProductTypes{\n          id,\n          isExcluded,\n          itemsCount,\n          addedItemsCount,\n          totalItemsCount,\n          category{\n            id,\n            categoryName\n          },\n        }\n      }\n    }\n  }  \n`;\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_TRACK_GIFTS,\n  GET_CASH_FUND_CATEGORIES,\n  GET_GUEST_REGISTRY_PRODUCT,\n  GET_GUEST_CHECKLIST,\n};\n\n// Example to use queries added in home.jsx","const backendId = \"https://3.12.191.197\";\n// const backendId = \"http://localhost:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport { Cookies } from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: { \"Authorization\": cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\" }\n});\n\nconst axiosInstanceNoToken = axios.create({\n  baseURL: apiURL\n});\n\nconst axiosInstanceNoHeader = axios.create({\n  baseURL: apiURL\n});\n\nexport function graphQLNoToken(data) {\n  return axiosInstanceNoToken.post(\"/graphql\", data);\n}\n\nexport function graphQLNoHeader(data, options) {\n  return axiosInstanceNoHeader.post(\"/graphql\", data, options);\n}\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nexport function verifyAccessToken(data) {\n  return axiosInstanceNoToken.post(\"/user/verify/token\", data);\n}\n\nexport function getAnotherRegistryProducts(data) {\n  return axiosInstance.post(\"/registry/import\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n  VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL + \"/media/\"\n}\n\nexport const FILTERS = {\n  CATEGORIES_DISPLAY: \"Categories\",\n  PRICE_DISPLAY: \"Price\",\n  PRICE_DISPLAY_1: \"Under $50\",\n  PRICE_DISPLAY_2: \"$50 - $100\",\n  PRICE_DISPLAY_3: \"more than $100\",\n  STORE_DISPLAY: \"Store\",\n  MONICA_AND_ANDY_DISPLAY: \"Monica + Andy\",\n  ELSEWHERE_DISPLAY: \"Elsewhere\",\n  AVAILABLE_DISPLAY: \"Available\",\n  RESERVED_DISPLAY: \"Reserved\",\n  PURCHASED_DISPLAY: \"Purchased\",\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'https%3A%2F%2Fmonicaandandy-watertower.myshopify.com%2Fpages%2Fma_bady_registry_bookmarklet%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"\n\nexport const IMPORT_REGISTRY_EMAIL = \"storks@monicaandandy.com\"\n\nexport const TRACK_GIFTS_PRODUCTS_PER_REQUEST = 20\nexport const M_A_STORE_NAME = \"monicaandandy\"\n\nexport const M_A_FORGOT_PASSWORD_LINK = \"https://monicaandandy-watertower.myshopify.com/account/login#recover\"\nexport const VIEW_GIFT_PRODUCTS_PER_REQUEST = 20\n\nexport const CURRENCY = \"$\"\n","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    }\n  }\n}\n`\n\nconst REGISTER_USER = `\nmutation register_user($name: String!, $email: String!, $password: String!){\n  registerUser(registerInput:{\n      firstName:$name,\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\nconst SAVE_QUESTION_RESPONSE = `\nmutation addRegistryQuestionOption($registryId: Int!, $answers: [RegistryQuestionOptionInput]!){\n  addRegistryMultipleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $answers){\n    message\n  }\n}\n`\n\nconst SAVE_REGISTRY_DATA = `\nmutation saveRegistryData($registryData:RegistryInput!, $registryItems:[StoreInput]){\n  importRegistry(registryData: $registryData, registryItems: $registryItems) {\n    message\n  }\n}\n`\n\nconst LOGIN_USER = `\nmutation login_user($email: String!, $password: String!){\n  loginUser(loginInput:{\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\n\nconst ADD_PARTNER_ACCOUNT = `\nmutation addPartner($partnerDetail: AddPartnerAccountInput!){\n  addPartnerAccount(addPartnerAccountInput:$partnerDetail){\n    message\n  }\n}\n`\n\nconst SAVE_UPDATED_CHECKLIST = `\nmutation addDesiredChecklistItemCount($registryId:Int!, $itemCountData:[DesiredItemCountInput]!){\n  addDesiredChecklistItemCount(registryId: $registryId, itemCountData: $itemCountData){\n    message\n  }\n}\n`\n\nconst SAVE_SINGLE_QUESTION_RESPONSE = `\nmutation updateOrCreateRegistrySingleQuestionOption($registryId:Int!, $registryQuestionOptionInput: RegistryQuestionOptionInput!, $returnTo: String){\n  updateOrCreateRegistrySingleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $registryQuestionOptionInput, returnTo: $returnTo){\n    message,\n    redirectionUrl\n  }\n}\n`\n\nconst CREATE_REGISTRY = `\nmutation{\n  createRegistry{\n    registry{\n      id\n    },\n    message,\n    status\n  }\n}\n`\n\nexport {\n  TOGGLE_MUST_HAVE,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY,\n  UPDATE_VIEW_REGISTRY_POISTION,\n  UPDATE_REGISTRY_URL,\n  SAVE_REGISTRY_DATA,\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  SAVE_UPDATED_CHECKLIST,\n  SAVE_SINGLE_QUESTION_RESPONSE,\n  CREATE_REGISTRY\n};\n","import React from \"react\";\nimport {\n  GET_PRODUCTS,\n  REMOVE_REGISTRY_ITEM,\n  GET_CATEGORIES,\n  GET_REGISTRIES,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_GUEST_CHECKLIST\n} from \"../api/queries\";\nimport {graphQL, graphQLNoHeader, graphQLNoToken} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX} from \"./constants\";\nimport {\n  setRegistryProducts,\n  setCheckListItems,\n  toggleMustHaveProduct as toggleMustHaveProductAction,\n  setCashFundCategories\n} from \"../modules/my-registry/MyRegistryActions\";\nimport { CREATE_REGISTRY, TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION } from \"../api/mutations\";\nimport { setOnboardingRegistry, updateRegistryInfo } from \"../modules/registry/RegistryActions\";\nimport { setViewRegistryProducts } from \"../modules/view-registry/ViewRegistryActions\";\nimport { addOnboardingQuestion } from \"../modules/onboarding/OnboardingAction\";\nimport { addPersonalizeQuestion } from \"../modules/personalise-checklist/PersonaliseCheckListActions\";\nimport { updateGuestViewInfo, setGuestCheckListItems } from \"../modules/guest-view/GuestViewAction\";\nimport { toast } from \"react-toastify\";\nimport reducerDefaultData from \"data/ReducerDefaultData.json\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    let responseData = res.data.data.registryItems.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = { ...item.node }\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n\n    // TODO: change category\n    let finalData = responseData.filter(product => product.registryCategories.length > 0)\n    dispatch(setRegistryProducts(finalData))\n\n  }).catch(err => {\n    console.error(err.response)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch,) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n\n      toast.error((\n        <p><b>{card.title}</b> removed from your registry!</p>\n      ))\n\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n    toast.error((\n      <p>Some error occurred.</p>\n    ))\n  })\n}\n\nexport const getRefinedCategory = (category) => {\n  return ({\n    id: category.id,\n    category: category.category,\n    categoryName: category.category.categoryName,\n    description: category.category.description,\n    categoryType: category.category.categoryType,\n    isDesired: category.isDesired,\n    isExcluded: category.isExcluded,\n    addedItemsCount: category.addedItemsCount,\n    totalItemsCount: category.totalItemsCount,\n    isParent: category.category.isParent,\n  })\n}\n\n\n// Get all categories\nexport const getAllCategories = (registryCategories, getAll) => {\n  // let finalCondition = category.subCategoriesIsExcluded ?\n  let parentCategories = registryCategories.filter(category => getAll ? true : (category.subCategoriesIsExcluded ? !category.subCategoriesIsExcluded : !category.isExcluded))\n  let finalCategories = parentCategories.map(parentCategory => {\n    let newParentCategory = getRefinedCategory(parentCategory)\n    let subCategory = parentCategory.registrySubCategories;\n    delete parentCategory.registrySubCategories\n    let newSubCategories = subCategory.filter(cat => getAll ? true : (cat.subCategoriesIsExcluded ? !cat.subCategoriesIsExcluded : !cat.isExcluded))\n    newSubCategories = newSubCategories.map(cat => {\n      let refinedSubCate = getRefinedCategory(cat)\n      let subProductTypes = cat.registrySubProductTypes.map(subProduct => getRefinedCategory(subProduct))\n      refinedSubCate['subProductTypes'] = subProductTypes.filter(category => getAll ? true : !category.isExcluded)\n      return refinedSubCate\n    })\n    newParentCategory['subCategories'] = newSubCategories\n    return newParentCategory\n  })\n\n  return finalCategories\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    operationName: \"getCategories\",\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n\n      // let tempAllCategories = getAllCategories(res.data.data.registryCategories, true)\n      // let cashFundCategories = []\n      //\n      // for (const category of tempAllCategories) {\n      //   for (const subCategory of category.subCategories) {\n      //     if (Number(subCategory.categoryType.id) === 2) {\n      //       cashFundCategories.push(subCategory)\n      //     }\n      //   }\n      // }\n      // dispatch(setCashFundCategories(cashFundCategories))\n      let finalCategories = getAllCategories(res.data.data.registryCategories, false)\n      if (finalCategories.length === 0) {\n        let allCategories = getAllCategories(res.data.data.registryCategories, true)\n        dispatch(setCheckListItems(allCategories))\n      } else {\n        dispatch(setCheckListItems(finalCategories))\n      }\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}\n\nexport const updateRegistryDetailState = (dispatch, registryData) => {\n  let currentRegistryInfo = null;\n\n  currentRegistryInfo = registryData[0].node;\n  if (currentRegistryInfo.image) {\n    currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n  }\n\n  if (currentRegistryInfo) {\n    dispatch(updateRegistryInfo({ ...currentRegistryInfo }))\n  } else {\n    dispatch(updateRegistryInfo({ notFound: true }))\n    console.log(\"No registry found!\");\n  }\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        updateRegistryDetailState(dispatch, res.data.data.registries.edges)\n      } else {\n        dispatch(updateRegistryInfo({ notFound: true }))\n      }\n    } catch (e) {\n      dispatch(updateRegistryInfo({ notFound: true }))\n      console.error(e)\n    }\n  }).catch(err => {\n    dispatch(updateRegistryInfo({ notFound: true }))\n    console.error(err.response ? err.response.data : null)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, oldPosition, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      dispatch(setViewRegistryProducts(oldPosition))\n      toast.error(\"Somerhing went wrong while re-arranging Products\")\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    }\n\n  }).catch(err => {\n    dispatch(setViewRegistryProducts(oldPosition))\n    console.error(err.message)\n  })\n}\n\nexport const addProductHandler = (card, stateAddedProducts, stateRegistryInfo, dispatch) => {\n  let existingProduct = stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n  const registryId = parseInt(stateRegistryInfo.id)\n  if (existingProduct.length === 0) {\n    const title = card.title\n    const category = card.category.id\n    const storeItemUrl = card.onlineStoreUrl\n    const sku = card.variants.edges[0].node.sku\n    const price = parseFloat(card.variants.edges[0].node.price)\n    const quantity = parseInt(card.quantity)\n    const shopifyItemId = card.id\n    const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      variables: {\n        registryId: registryId,\n        title: title,\n        category: category,\n        tags: [],\n        storeItemUrl: storeItemUrl ? storeItemUrl : '',\n        sku: sku,\n        price: price,\n        quantity: quantity,\n        shopifyItemId: shopifyItemId,\n        imageUrl: imageUrl,\n      }\n    }\n    graphQL(data).then(_ => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  } else {\n    let data = {\n      query: UPDATE_REGISTRY_ITEM,\n      variables: {\n        registryItemId: existingProduct[0].id,\n        quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n      }\n    }\n    graphQL(data).then(res => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  }\n}\n\nexport const getOnboardingQuestions = async (dispatch, registryId = null, token = null) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: false,\n      registryId: registryId ? Number(registryId) : null\n    }\n  }\n  let options = {}\n  if (token) {\n    options = {headers: {\"Authorization\": \"Token \" + token}}\n  }\n\n  await graphQLNoHeader(reqData, options).then(async res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      await dispatch(addOnboardingQuestion(questions))\n    }\n  }).catch(err => {\n    // toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\n\nexport const getPersonalizeQuestions = (registryId, dispatch) => {\n  let reqData = {\n    query: GET_PERSONALIZE_QUESTIONS,\n    variables: {\n      registryId: registryId,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.editablePersonalizeQuestions) {\n      const questions = res.data.data.editablePersonalizeQuestions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addPersonalizeQuestion(questions))\n    }\n  }).catch(err => {\n    toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\nexport const updateGuestViewRegistry = (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_REGISTRY,\n    variables: {\n      urlSlug: urlSlug,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.registryAsGuest) {\n      let guestViewInfo = {...res.data.data.registryAsGuest}\n      if (guestViewInfo.image) {\n        guestViewInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + guestViewInfo.image.image;\n      }\n      delete guestViewInfo.registryItems\n      dispatch(updateGuestViewInfo(guestViewInfo))\n    }\n  }).catch(err => {\n    dispatch(updateGuestViewInfo({ notFound: true }))\n    if (err.response && err.response.data.errors) {\n      for (const error of err.response.data.errors) {\n        // TODO: Implement toast if necessary\n        console.log(error.message)\n      }\n    }\n  })\n}\n\nexport const createRegistry = dispatch => {\n  graphQL({ query: CREATE_REGISTRY }).then(res => {\n    if (res.data.data) {\n      let registryId = res.data.data.createRegistry.registry.id\n      if (registryId) {\n        dispatch(setOnboardingRegistry(registryId))\n      }\n    }\n  }).catch(err => {\n    console.log(err.response)\n  })\n}\n\nexport const dataURItoBlob = (dataURI, fileType, fileName) => {\n  let byteString = atob(dataURI.split(',')[1]);\n  let ab = new ArrayBuffer(byteString.length);\n  let ia = new Uint8Array(ab);\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  let blob = new Blob([ab], { type: fileType });\n  return new File([blob], fileName, {\n    type: fileType\n  })\n}\n\nexport const getGuestCategories = async (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_CHECKLIST,\n    variables: {\n      urlSlug: urlSlug,\n    }\n  }\n  await graphQL(reqData).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n      let finalCategories = getAllCategories(res.data.data.registryCategoriesAsGuest, true)\n      dispatch(setGuestCheckListItems(finalCategories))\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = React.forwardRef((props, ref) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n    ref={ref}\n    disabled={props.disabled ? props.disabled : false}\n  >{props.children}</button>\n})\n\nexport default ButtonComponent;","import React, { useState } from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport CardItem from \"../card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../button-component/ButtonComponent\";\n\nconst AddedCard = (props) => {\n\n  const dispatch = useDispatch();\n  let stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRecommendedProducts = useSelector(state => state.myRegistry.recommendedProducts)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const [recommendedProducts, setRecommendedProducts] = useState([])\n  const [show, setShow] = useState(false);\n  const modalTitle = `Recommended ${props.data.registryCategories[0].category.categoryName}`\n  const [showRemoveModel, setShowRemoveModel] = useState(false);\n\n  const showRecommendation = (category) => {\n    // Fetching all recommendations for that particular product category\n    let categoryRecommended = [...stateRecommendedProducts.filter(product => Number(category.id) === Number(product.category.id))]\n\n    // Removing duplicate products if found any\n    let jsonObject = categoryRecommended.map(JSON.stringify);\n    let uniqueSet = new Set(jsonObject);\n    categoryRecommended = Array.from(uniqueSet).map(JSON.parse);\n\n    setRecommendedProducts(categoryRecommended.map(product => {\n      // Resetting recommended product quantity\n      product.quantity = 1;\n      return product;\n    }));\n\n    setShow(true);\n  }\n\n  let moreOptionsData = [\n    {\n      name: \"Remove\",\n      action: () => setShowRemoveModel(true)\n    }\n  ]\n\n  if (Number(props.data.registryCategories[0].category.categoryType.id) !== 2) {\n    moreOptionsData.unshift({\n      name: \"View Recommendations\",\n      action: () => showRecommendation(props.data.registryCategories[0])\n    })\n  }\n\n\n  const removeConfirmFooter = (\n    <>\n      <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => setShowRemoveModel(false)}>Do not\n        remove</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={() => {\n        props.removeProductFromCartHandler();\n        setShowRemoveModel(false);\n      }}>Remove</Button>\n    </>\n  )\n\n  // Incrementing quantity of local recommended product\n  const incrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        product.quantity += quantity;\n      }\n      newRecommended.push(product)\n    }\n    setRecommendedProducts(newRecommended)\n  }\n\n  // Decrementing quantity of local recommended product\n  const decrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    let updated = false;\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        if (product.quantity - quantity <= 0) {\n          break;\n        } else {\n          product.quantity -= quantity;\n          updated = true;\n        }\n      }\n      newRecommended.push(product)\n    }\n\n    if (updated) {\n      setRecommendedProducts(newRecommended)\n    }\n  }\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i\n    className={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n    <div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n      <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n    </div>\n  </i>);\n\n  return (\n    <>\n      {!props.multipleCategories ?\n        <>\n          <div className=\"added-card py-5 pr-2\">\n            <div className=\"row\">\n              <div className=\"col-2\">\n              <div className=\"pl-2\">\n              {props.data?.item.imageUrl ?\n                <img\n                  className={[\"product-img d-block mx-auto\", Number(props.data.registryCategories[0].category.categoryType.id) === 2 ? \"added-card-product-image-radius\" : \"\"].join(\" \")}\n                  src={props.data?.item.imageUrl}\n                  alt={props.data?.item.title}/>\n                :\n                <div className=\"added-card-no-product-image\"/>\n              }\n\n            </div>\n\n              </div>\n              <div className=\"col\">\n                {/* TODO: change category */}\n                <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div>\n                <h2>{props.data.title}</h2>\n                <div className=\"d-flex mt-2\">\n                  <div className=\"\">${props.data.item.price}</div>\n                  {/*/!* TODO: Add Strikeout price dynamic *!/*/}\n                  {/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n                  {props.data.quantity > 1 ?\n                    <div className=\"ml-4 text-body d-flex\">\n                      Qty:{props.data.quantity}\n                      <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n                    </div> : <></>}\n                </div>\n              </div>\n              <div className={[\n                props.draggable ? \"col-4\" : \"col-3\",\n              ].join(\" \")}\n              >\n                <div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n                  {!stateGuestViewRegistry ?\n                    <button\n                      className={[\n                        \"mr-4 d-flex align-items-center added-gift-must-have-btn px-2\",\n                        props.data.mostWanted ? \"added-gift-must-have-active\" : \"added-gift-must-have-not-active\"\n                      ].join(\" \")}\n                      onClick={props.toggleMustHave}\n                    >\n                      <i className={[\"icon mr-1 d-block\", props.data.mostWanted ? \"heart-fill\" : \"heart\"].join(\" \")} />\n                      <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                    </button> :\n                    props.data.mostWanted ?\n                      <button\n                        className=\"mr-4 d-flex align-items-center added-gift-must-have-btn px-2 added-gift-must-have-active\">\n                        <i className=\"icon mr-1 d-block heart-fill\" />\n                        <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                      </button>\n                      : <></>\n                  }\n                  {!stateGuestViewRegistry ?\n                    <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\" />\n                    : <></>}\n                  {/* TODO: Add icon/rearrange icon */}\n                  {props.draggable && !stateGuestViewRegistry ?\n                    <DragHandle /> : <></>}\n                </div>\n              </div>\n            </div>\n          </div>\n          {props.isViewCard ?\n            <div className=\"row\">\n              <div className=\"col\">\n                {props.data.registryCategories.length > 1 ?\n                  props.data.registryCategories.map(category =>\n                    props.data.registryCategories[0].id !== category.id ?\n                      <div className=\"text-body font-medium p-6 added-card-other-category\">\n                        You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n                      </div>\n                      : null\n                  )\n                  : null}\n              </div>\n            </div> : null}\n        </>\n        :\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"text-body font-medium p-6 added-card-other-category\">\n              You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {props.multipleCategories.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n            </div>\n          </div>\n        </div>\n      }\n      <Modal\n        show={show}\n        closeModal={() => setShow(false)}\n        title={modalTitle}\n        size=\"xl\"\n      >\n        <div className=\"position-relative added-card-recommended\">\n          <div className=\"row category-recommended-products\">\n            {recommendedProducts.map((card, index) => (\n              <div className=\"col-4 mb-5\" key={\"CardItem-\" + index}>\n                <CardItem\n                  data={card}\n                  incrementQuantityHandler={() => incrementQuantity(card.id, 1)}\n                  decrementQuantityHandler={() => decrementQuantity(card.id, 1)}\n                  addProductHandler={() => addProductHandler(card, stateAddedProducts, stateRegistryInfo, dispatch)}\n                />\n              </div>\n            ))}\n            {recommendedProducts.length <= 0 ?\n              <div className=\"col text-center py-4\"><h4>No recommendation found</h4></div> : null}\n          </div>\n          {recommendedProducts.length > 0 ? <div className=\"added-card-recommends-bottom-gradient\" /> : null}\n        </div>\n      </Modal>\n      <Modal\n        show={showRemoveModel}\n        size=\"md\"\n        footer={removeConfirmFooter}\n      >\n        <h2>Do you want to remove {props.data.title}? </h2>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddedCard\n","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\nimport { GET_PERSONALIZE_QUESTIONS } from \"api/queries\";\nimport { graphQL } from \"api/axios\";\nimport { toast } from \"react-toastify\";\n\nclass CheckList extends React.Component {\n\n    gotoPersonalize = (event) => {\n        event.preventDefault();\n        // this.props.history.push(routes.PERSONALIZE.HOME)\n        \n        // If user has given answer or not\n        let isQuizPending = false\n        let reqData = {\n            query: GET_PERSONALIZE_QUESTIONS,\n            variables: {\n                registryId: 1,\n            }\n        }\n        // To route to edit-checklist or Quiz\n        graphQL(reqData).then(res => {\n            if (res.data.data.editablePersonalizeQuestions) {\n                const questions = res.data.data.editablePersonalizeQuestions\n                for (let question of questions) {\n                    if (question.answers.length > 0) {\n                        isQuizPending = false\n                        break;\n                    } \n                }\n                if(isQuizPending){\n                    this.props.history.push(routes.PERSONALIZE.HOME)\n                } else {\n                    this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n                }\n                \n            }\n        }).catch(err => {\n            toast.error(\"Error occurred while fetching questions\");\n            console.error(err);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"mb-3\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <a href=\"#\" className=\"ml-2 text-sm checklist-personalize\" tabindex onClick={(e) => this.gotoPersonalize(e)}>{this.props.t(\"checkList.personalize\")}</a>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\">\n                          <div className=\"check-list-progress mw-100\" style={{width: `${this.props.percentage}%`}}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nexport default withTranslation()(withRouter(CheckList));","import React, { Component } from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport { connect } from 'react-redux';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({ id, categoryName, addedItemsCount, totalItemsCount, subProductTypes }) => {\n      return (\n        <>\n          {subProductTypes.length === 0 ?\n            <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n              onClick={() => this.scrollToCategory(categoryName)}>\n              <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n\n              <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                {addedItemsCount >= totalItemsCount ?\n                  <div className=\"icon-done\" /> :\n                  (totalItemsCount > 0 ?\n                    <div className='ml-auto mb-auto align-self-end card-progress'>\n                      {addedItemsCount}/{totalItemsCount}\n                    </div>\n                    : null)}\n              </div>\n            </div> :\n            // Todo handle scroll\n            <>\n              <div className=\"card-body-contain align-items-center py-2\" key={categoryName + id}\n                onClick={() => this.scrollToCategory(categoryName)}>\n                <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n              </div>\n              <div className=\"text-sm\">\n                {subProductTypes.map((subProductType, index) => (\n                  <div className=\"sub-product-list d-flex py-2 ml-3 align-items-center\" key={subProductType.categoryName + subProductType.id}>\n                    <div>{subProductType.categoryName}</div>\n                    <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                      {subProductType.addedItemsCount >= subProductType.totalItemsCount ?\n                        <div className=\"icon-done\" /> :\n                        (totalItemsCount > 0 ?\n                          <div className='ml-auto mb-auto align-self-end card-progress'>\n                            {subProductType.addedItemsCount}/{subProductType.totalItemsCount}\n                          </div>\n                          : null)}\n\n                    </div>\n                  </div>\n                ))}\n\n              </div>\n            </>}\n        </>\n      )\n\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        {this.props.item.categoryName && this.props.item.isParent ?\n          <Card>\n            <Accordion.Toggle\n              onClick={this.handleToggleEvent}\n              as={Card.Header}\n              id={this.props.item.categoryName}\n              eventKey={this.props.item.categoryName}\n            >\n              <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n                <span className=\"checklist-icon-arrow\" />\n                <div className=\"ml-3 mb-0 w-100\">\n                  <div className=\"text-body\">{this.props.item.categoryName}</div>\n                  <div className=\"d-flex\">\n                    <div className=\"check-list-hearder-background\">\n                      <div className=\"check-list-hearder-progress mw-100\" style={{ width: `${(this.props.item.addedItemsCount / this.props.item.totalItemsCount) * 100}%` }} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Accordion.Toggle>\n            <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n              <Card.Body>\n                {subListItem}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          :\n          <p className=\"pl-6 mr-3 text-body others-cat\" onClick={() => this.scrollToCategory(this.props.item.categoryName)}>{this.props.item.categoryName}</p>\n        }\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              tabindex\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" tabindex className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a tabindex className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className={[\"checkbox d-flex align-items-center\", props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"checkbox__input mr-2\">\n        <input\n          type=\"checkbox\"\n          name={props.id}\n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n        />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n          <i className=\"icon-check\"></i>\n        </span>\n      </span>\n      <span className=\"radio__label text-sm\">{props.display} {props.count ? \"(\" + props.count + \")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React, {useState, useEffect} from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {GET_CATEGORIES} from \"../../../../api/queries\";\nimport {graphQL} from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {useSelector} from \"react-redux\";\nimport {getAllCategories} from \"../../../../utils/commonFunction\";\nimport CheckBox from \"../check-box/CheckBox\";\n\n// TODO: Change this Component to handle multiple categories\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [searchedCategories, setSearchedCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(props.currentCategory ? props.currentCategory : []);\n  // const [selectedCategory, setSelectedCategory] = useState([]);\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.registryCategories) {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = {...category}\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n        }\n        setCategories(finalCheckList);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    props.changeCurrentCategory(selectedCategory)\n    props.closeModal(false);\n  }\n\n  const handleSelectionCategory = (subCategory) => {\n    let sameCatagory = [...selectedCategory].find(category => subCategory.id === category.id)\n    if (sameCatagory) {\n      let allSelectedCategory = selectedCategory.filter(category => subCategory.id !== category.id)\n      setSelectedCategory(allSelectedCategory)\n    }\n    else {\n      let allSelectedCategory = [...selectedCategory, subCategory]\n      setSelectedCategory(allSelectedCategory)\n    }\n  }\n\n  useEffect(() => {\n    if (props.currentCategory) {\n      setSelectedCategory(props.currentCategory)\n    } else {\n      setSelectedCategory([])\n    }\n  }, [props.currentCategory])\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const getCategoriesToDisplay = (cat) => {\n    return (\n      <div className=\"col\">\n        {cat.map(category => {\n          return (\n            <div className=\"mb-6\" key={\"select-\" + category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              <div className=\"category-columns\">\n                {category.subCategories ?\n                  category.subCategories.map(subCategory =>\n                    <div className=\"w-100 category-column\">\n                      <label className=\"checkbox d-flex align-items-center py-1 px-2 m-0\">\n                        <span className=\"checkbox__input mr-2\">\n                          <input\n                            type=\"checkbox\"\n                            name={subCategory.id}\n                            value={subCategory.id}\n                            checked={selectedCategory.find(category => category.id === subCategory.id) ? \"checked\" : \"\"}\n                            onChange={() => handleSelectionCategory(subCategory)}\n                          />\n                          <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                            <i className=\"icon-check\"></i>\n                          </span>\n                        </span>\n                        <span className=\"select_category_radio__label text-body\">{subCategory.categoryName}</span>\n                      </label>\n                    </div>\n                  )\n                  : null}\n              </div>\n\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      {searchedCategories.length > 0 ? getCategoriesToDisplay(searchedCategories) : getCategoriesToDisplay(categories)}\n    </div>\n  )\n\n  const modalFooter = (\n    <div className=\"categories-modal-footer\">\n      <label>{selectedCategory.length > 0 ? selectedCategory.length + ' selected' : null}</label>\n      <Button\n        variant=\"primary\"\n        className=\"font-medium p-1\"\n        onClick={saveSelectedCategory}\n      >Done</Button>\n    </div>\n  )\n\n  // Search Category Section\n  const searchInputRef = React.createRef()\n  const changeLinkRef = React.createRef()\n\n  const focusSearchCategoryInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }\n\n  const searchInputFocusHandler = (e) => {\n    if (!e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.add(\"search-category-input-focus\");\n    }\n  }\n\n  const searchInputBlurHandler = (e) => {\n    if (e.target.value.length > 0) {\n      return\n    }\n\n    if (e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.remove(\"search-category-input-focus\");\n    }\n  }\n\n  const searchCategoryInputChangeHandler = (e) => {\n    if (e.target.value.length > 0) {\n      changeLinkRef.current.style.display = \"block\";\n\n      //  Searching through the category\n      let finalCategories = []\n      for (const parentCategory of categories) {\n        let newParentCategory = {...parentCategory}\n        newParentCategory.subCategories = []\n        let searchMatched = false\n\n        for (const subCategory of parentCategory.subCategories) {\n          if (subCategory.categoryName.toLowerCase().match(e.target.value.toLowerCase())) {\n            searchMatched = true\n            newParentCategory.subCategories.push(subCategory)\n          }\n        }\n\n        if (searchMatched) {\n          finalCategories.push(newParentCategory)\n          searchMatched = false\n        }\n      }\n      setSearchedCategories(finalCategories)\n    } else {\n      changeLinkRef.current.style.display = \"none\";\n    }\n  }\n\n  const changeLinkClickHandler = (e) => {\n    e.preventDefault();\n    if (searchInputRef.current) {\n      if (searchInputRef.current.value.length > 0) {\n        searchInputRef.current.value = \"\"\n      }\n      changeLinkRef.current.style.display = \"none\";\n      searchInputRef.current.focus()\n      setSearchedCategories([])\n    }\n  }\n\n  const headerContent = (\n    <div className=\"align-self-center d-flex position-relative select-category-search-section mr-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Search category...\"\n        className=\"search-category-input pl-5 py-1 pr-1 text-body m-0\"\n        ref={searchInputRef}\n        onChange={(e) => searchCategoryInputChangeHandler(e)}\n        onFocus={(e) => searchInputFocusHandler(e)}\n        onBlur={(e) => searchInputBlurHandler(e)}\n      />\n      <i className=\"icon-search search-category-icon\" onClick={focusSearchCategoryInput} />\n      <a\n        tabindex\n        className=\"search-category-clear-link text-sm font-medium\"\n        href=\"#\"\n        onClick={(e) => changeLinkClickHandler(e)}\n        ref={changeLinkRef}>Clear all</a>\n    </div>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={modalFooter}\n      headerContent={headerContent}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React from \"react\";\nimport \"./CategoryPill.scss\";\n\nconst CategoryPill = (props) => {\n  return (\n    <span className={[\"import-registry-category-pill text-sm p-1\", props.className ? props.className : \"\"].join(\" \")}>\n      {props.name}\n      <i className=\"icon-close remove-category-pill-icon ml-2\" onClick={props.removeCategory}/>\n    </span>\n  );\n}\n\nexport default CategoryPill;\n","import React, { createRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport { setAnotherStoreProductInfo } from \"modules/my-registry/MyRegistryActions\";\nimport { getScrapedProduct } from \"api/axios\";\nimport { toast } from 'react-toastify';\nimport CategoryPill from \"../import-registry/category-pill/CategoryPill\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst AddGiftAnotherStore = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n  const [hideProductDetails, setHideProductDetails] = useState(true);\n  const [showLoading, setshowLoading] = useState(false);\n\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      try {\n        new URL(ev.target.value);\n      } catch {\n        toast.error(\"Invalid Store Url\")\n        return;\n      }\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      let ctgry = category;\n      let data = defaultData.myRegistry.defaultAnotherStoreProductInfo;\n      data.category = ctgry\n      dispatch(setAnotherStoreProductInfo(data))\n      setshowLoading(true);\n      setHideProductDetails(true);\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = { ...productInfo };\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n          setshowLoading(false);\n          setHideProductDetails(false);\n        }\n      }).catch(err => {\n        setshowLoading(false);\n        toast.error(\"Invalid Store Url\")\n        return false;\n      })\n    }\n  }\n\n  const removeSelectedCategory = (categoryId) => {\n    if (productInfo.category.length) {\n      let finalcategory = productInfo.category.filter(category => category.id !== categoryId);\n      let prodInfo = { ...productInfo };\n      prodInfo.category = finalcategory;\n      dispatch(setAnotherStoreProductInfo(prodInfo));\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm font-medium add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                onKeyUp={(ev) => submitStoreUrl(ev)}\n                placeholder=\"Paste a product link that you want to add in your Monica and Andy Registry\" />\n              {/* <a className=\"text-sm\" href=\"#\">Change</a> */}\n            </div>\n          </div>\n\n          <div className={[\"row mt-4\", hideProductDetails ? \"\" : \"pt-6\"].join(\" \")}>\n            {hideProductDetails ? showLoading ?\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                  <h4 className=\"hide-product-details m-auto\">Please wait while we fetch the product details</h4>\n                </div>\n              </div>\n              :\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <h4 className=\"hide-product-details m-auto\">Please paste product link above to view details here</h4>\n                </div>\n              </div>\n              :\n              <>\n                <div className=\"col-5 add-gift-image-select\">\n                  <div className=\"mr-3\">\n                    {productImage?.value ?\n                      <img\n                        src={productImage.value}\n                        alt=\"Product Image\"\n                      />\n                      : null}\n\n                    <i className=\"icon-preview p-1\" onClick={() => {\n                      imageInput.current.click()\n                    }} />\n                    {/* TODO: Change above icon to camera icon */}\n\n                    <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                      onChange={(ev) => selectFileHandler(ev)} />\n                  </div>\n                </div>\n                <div className=\"col-7\">\n                  <div className=\"ml-3\">\n                    <div className=\"row\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Product Name</p>\n                        <textarea\n                          className=\"w-100 mt-1 h1 p-2\"\n                          rows=\"2\"\n                          value={productInfo.productName}\n                          onChange={(ev) => productNameChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container mr-2\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Price</p>\n                          <div className=\"price-input mt-1\">\n                            <input\n                              type=\"text\"\n                              className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                              value={price}\n                              onChange={(ev) => priceChangeHandler(ev)}\n                            />\n                          </div>\n                          {/*<span className=\"price-input text-body\">$</span>*/}\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                          <Counter\n                            className=\"mt-2\"\n                            counter={quantity}\n                            incrementHandler={incrementQuantity}\n                            decrementHandler={decrementQuantity}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    {!props.addMyOwn ?\n                      <>\n                        <div className=\"row mt-5\">\n                          <div className=\"col d-flex\">\n                            <p className=\"text-sm add-gift-store-label font-medium mb-1\">Category</p>\n                            <a className=\"text-sm ml-2 add-gift-link font-medium\" href=\"#\" tabindex onClick={(ev) => openCategorySelect(ev)}>Add</a>\n                            {/* <div className=\"position-relative\">\n                            <input type=\"text\" value={category.displayName} readOnly={true}\n                                   className=\"w-100 pl-2 pr-12 py-1 text-body input-background change-link-input\"/>\n                          </div> */}\n                          </div>\n                        </div>\n                        <div className=\"row mt-2\">\n                          <div className=\"col\">\n                            {category.map(cat => (\n                              <CategoryPill\n                                key={cat.id}\n                                name={cat.categoryName}\n                                removeCategory={() => removeSelectedCategory(cat.id)}\n                                className=\"mt-2 mr-3\"\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      </>\n                      : null}\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col d-flex\">\n                        <TogglePills\n                          iconClass=\"icon-heart\"\n                          activeClass={mustHave ? \"active-must-have\" : null}\n                          onClick={() => toggleMustHave(!mustHave)}\n                          text=\"Must Have\"\n                          className=\"mr-2\" />\n                        <TogglePills\n                          iconClass=\"icon-guest\"\n                          activeClass={groupGift ? \"active-group-gift\" : null}\n                          onClick={() => toggleGroupGift(!groupGift)}\n                          text=\"Group Gift\"\n                          className=\"mr-2\" />\n                        {/* TODO: Change above guest icon one added */}\n                        <TogglePills\n                          iconClass=\"icon-shopping-cart\"\n                          activeClass={purchased ? \"active-purchased\" : null}\n                          onClick={() => togglePurchased(!purchased)}\n                          text=\"Purchased\"\n                          className=\"mr-2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">How to gift?</p>\n                        {howToGiftOptions.map((option, index) => (\n                          <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                            <RadioButton\n                              name=\"how-to-gift\"\n                              textClass=\"text-sm\"\n                              display={option.text}\n                              checked={option.id === howToGift.id ? true : null}\n                              changeHandler={() => changeHowToGift(option)} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Notes</p>\n                        <textarea className=\"w-100 mt-1 text-body p-1\"\n                          rows=\"2\"\n                          placeholder=\"Write a note for your friends and family\"\n                          value={note}\n                          onChange={(ev) => noteChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","import React, { Component } from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  clearAnotherStoreProductInfo, setAnotherStoreProductInfo,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport { connect } from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport { ADD_REGISTRY_ITEM, UPDATE_REGISTRY_ITEM } from 'api/queries';\nimport { graphQL } from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { toast } from \"react-toastify\";\nimport { ADD_REGISTRY_ITEM as ADD_REGISTRY_ITEM_MUTATION } from 'api/mutations';\nimport BookmarkletSection from \"../add-gift/bookmarklet-section/BookmarkletSection\";\nimport AddGiftAnotherStore from \"../add-gift/add-gift-another-store/AddGiftAnotherStore\";\nimport Button from \"../button-component/ButtonComponent\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport { getProducts as commonGetProducts, getCategories as commonGetCategories } from \"../../../../utils/commonFunction\";\n\nclass ViewRecommend extends Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n    viewDetailsBtn: true,\n  }\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  cardRef = React.createRef()\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const shopifyItemId = card.id\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          // TODO: change category\n          category: [Number(category)],\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          imageUrl: imageUrl,\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    }\n  }\n\n  // Checking if product data is valid or not\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // // Valid Category\n    // if (!storeProduct.category.id) {\n    //   alert(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  // Adding Add on my own product to registry\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM_MUTATION,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            // TODO: change category\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  // Popping up Add on my own modal\n  addOnMyOwnClickHandler = (category) => {\n    this.clearModalData()\n    let newCategory = [{\n      ...category,\n      displayName: category.parentCategory + \" : \" + category.categoryName\n    }]\n    let prodInfo = { ...this.props.stateAnotherStoreProduct };\n    prodInfo.category = newCategory;\n    this.props.dispatch(setAnotherStoreProductInfo(prodInfo));\n\n    this.modalTitle = `Add my own ${category ? category.categoryName.toLowerCase() : \"\"}`\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection />\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore addMyOwn={true} />\n\n    this.setState((prevState, props) => ({\n      show: !prevState.show\n    }))\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\" />\n      </button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\" />\n      </button>\n    };\n\n    let modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >Save & Close</Button>\n      </>\n    )\n    return (\n      <>\n        <div className=\"recommended-cart my-6\">\n          <div className=\"row\">\n            <div className=\"col title\"><h2>{this.props.title}\n              {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n            </h2>\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Slider {...settings}>\n              {this.props.products.map((card, index) =>\n                // <div><>{index}</></div>\n                <div className=\"cart-view\" ref={this.cardRef}>\n                  <CardItem\n                    className=\"mr-4\"\n                    data={card}\n                    key={\"CardItem-\" + index}\n                    incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                    decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                    addProductHandler={() => this.addProductHandler(card)}\n                  />\n                </div>\n              )}\n              <div>\n                <div className=\"add-my-own-card mr-4 d-flex flex-column align-items-center justify-content-center\"\n                  style={{ height: this.cardRef.current ? this.cardRef.current.offsetHeight + 'px' : '200px' }}\n                  onClick={() => this.addOnMyOwnClickHandler(this.props.category)}\n                >\n                  <button className=\"add-my-own-button\" />\n                  <p className=\"text-body font-medium mt-5\">Add my own</p>\n                </div>\n              </div>\n            </Slider>\n          </div>\n          <div className=\"mt-6 card-buttom d-flex\">\n            {/* TODO: Change text to dynamic */}\n            <div>\n              <img className=\"blog-img\"\n                src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\"\n                alt={this.props.title} />\n            </div>\n            <div className=\"pl-4 my-auto\">\n              <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n              <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n            </div>\n            <div className=\"text-sm my-auto mr-6 ml-auto\">\n              <a href=\"\" className=\"read-more\" tabindex>Read more</a>\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n      ;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info,\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setParentFilter, setChildFilter, clearFilter } from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\" />\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                  {parentFilter.child.map(childFilter => (\n                    <CheckBox\n                      {...childFilter}\n                      key={childFilter.id}\n                      className=\"mb-4\"\n                      checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                      changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                    />\n                  ))}\n                </div>\n              )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n            onClick={clearClickHandler}\n            variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./ImportRegistry.scss\";\nimport { getAnotherRegistryProducts } from \"../../../../../api/axios\";\nimport { toast } from \"react-toastify\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport CategoryPill from \"./category-pill/CategoryPill\";\nimport { connect } from \"react-redux\";\nimport { setAnotherStoreRegistryItems } from \"../../../../my-registry/MyRegistryActions\";\n\nclass ImportRegistry extends React.Component {\n  state = {\n    registryUrl: \"\",\n    errorMessage: \"\",\n    loading: false,\n    categoryModalShow: false,\n    activeCategoryProductIndex: null,\n    currentRegistryLink: \"\",\n    inputHasFocus: false,\n    currentCategory: [],\n  }\n\n  inputRef = React.createRef()\n\n  setCategoryModalVisible = () => {\n    this.setState({ categoryModalShow: false, currentCategory:[] })\n  }\n\n  changeLoadingState = (value) => {\n    this.setState({\n      loading: value\n    })\n  }\n\n  registryUrlChangeHandler = (ev) => {\n    this.setState({\n      registryUrl: ev.target.value,\n      errorMessage: \"\"\n    })\n  }\n\n  checkUrlAndGetRegistryItems = () => {\n    // Checking for valid url\n    try {\n      new URL(this.state.registryUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return;\n    }\n\n    this.getAnotherRegistryProductsInfo();\n  }\n\n  registryUrlKeyUpHandler = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      this.checkUrlAndGetRegistryItems()\n    }\n  }\n\n  getAnotherRegistryProductsInfo = () => {\n\n    this.setState({\n      currentRegistryLink: this.state.registryUrl\n    })\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = true;\n    }\n\n    const registryUrl = new URL(this.state.registryUrl);\n    const storeName = registryUrl.hostname.split(\".\")[1]\n\n    const reqData = {\n      store_name: storeName,\n      store_url: this.state.registryUrl\n    }\n\n    this.changeLoadingState(true);\n\n    getAnotherRegistryProducts(reqData).then(res => {\n      try {\n        if (res.data) {\n          const products = res.data.products;\n          const registry = res.data.registry;\n\n          if (products && registry) {\n            let newProducts = products.filter(product => product.title)\n            newProducts = newProducts.map(product => {\n              product.categories = [];\n              return product;\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n            // this.setState({\n            //   products: newProducts\n            // })\n          } else {\n            this.setState({\n              errorMessage: \"No registry found. Please check url or make sure that registry is publicly accessible\"\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems([]))\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        toast.error(\"Some error occurred while reading registry products.\")\n      }\n\n    }).catch(err => {\n      toast.error(\"Some error occurred while fetching registry.\")\n      console.error(err);\n    }).finally(() => {\n      this.changeLoadingState(false)\n    })\n  }\n\n  openSelectCategoryModal = (ev, productIndex) => {\n    ev.preventDefault()\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      this.setState({\n        activeCategoryProductIndex: productIndex,\n        categoryModalShow: true,\n        currentCategory: this.props.stateAnotherStoreRegistry[productIndex].categories\n      })\n    } else {\n      console.log(\"Invalid Product Index\");\n    }\n  }\n\n  setProductCategories = (categories) => {\n    // Saving categories passed from SelectCategory Modal\n    if (Number.isInteger(this.state.activeCategoryProductIndex) && this.props.stateAnotherStoreRegistry[this.state.activeCategoryProductIndex]) {\n      let newProductState = [...this.props.stateAnotherStoreRegistry];\n      // TODO: Change this to support multiple categories\n      newProductState[this.state.activeCategoryProductIndex].categories = categories;\n      this.props.dispatch(setAnotherStoreRegistryItems(newProductState))\n      this.setState({\n        activeCategoryProductIndex: null\n      })\n    }\n  }\n\n  removeSelectedCategory = (productIndex, categoryId) => {\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      let newProducts = [...this.props.stateAnotherStoreRegistry]\n      newProducts[productIndex].categories = newProducts[productIndex].categories.filter(category => category.id !== categoryId);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n      // this.setState({\n      //   products: newProducts\n      // })\n    }\n  }\n\n  changeRegistryUrl = (e) => {\n    e.preventDefault();\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = false;\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"baby-registry-import-registry\">\n          <div className=\"row mt-5\">\n            <div className=\"col d-flex flex-column\">\n              <span className=\"baby-registry-required-field text-sm font-medium\">Registry URL</span>\n              <div className=\"position-relative mt-1\">\n                <input type=\"text\"\n                  className={[\"import-registry-input-field w-100 mb-0 mw-100 text-body pl-2 py-1 pr-14\", this.state.errorMessage ? \"import-registry-error-field\" : \"\"].join(\" \")}\n                  placeholder=\"Paste your registry URL here to import.  Please ensure it's publicly accessible.\"\n                  value={this.state.registryUrl}\n                  ref={this.inputRef}\n                  onChange={this.registryUrlChangeHandler.bind(this)}\n                  onFocus={() => this.setState({ inputHasFocus: true })}\n                  onBlur={() => this.setState({ inputHasFocus: false })}\n                />\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink === this.state.registryUrl && !this.state.inputHasFocus ?\n                  <a tabindex className=\"import-registry-change-link text-sm font-medium import-registry-category-link\" href=\"#\"\n                    onClick={(e) => this.changeRegistryUrl(e, this.inputRef)}>Change</a> : null}\n\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink !== this.state.registryUrl ?\n                  <div className=\"import-registry-submit-url-section\">\n                    {/*TODO: Change icons once added to global icons*/}\n                    <button className=\"icon-close mr-3\"\n                      onClick={() => this.setState({ registryUrl: \"\" })} />\n                    <button className=\"icon-check\" onClick={this.checkUrlAndGetRegistryItems} />\n                  </div>\n                  : null}\n              </div>\n              {this.state.errorMessage ?\n                <span className=\"import-registry-input-error-message text-body mt-1\">{this.state.errorMessage}</span>\n                : null}\n            </div>\n          </div>\n\n          <div className=\"row baby-registry-import-section mt-6\">\n            <div className=\"col\">\n              {this.props.stateAnotherStoreRegistry.length <= 0 || this.state.loading ?\n                // When no product exists\n                <div className=\"py-20 text-center import-registry-main-content\">\n                  {this.state.loading ?\n                    <>\n                      <div className=\"spinner-border import-registry-spinner\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                      <h4 className=\"mt-1 mx-auto import-registry-loading-text\">Please wait while we’re importing your\n                        registry</h4>\n                    </>\n                    :\n                    <h4 className=\"mx-auto import-registry-no-content-text\">\n                      Please paste your publicly accessible\n                      registry URL above to import items\n                      to M+A.\n                    </h4>\n                  }\n                </div>\n                :\n                // When products is filled\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"import-registry-main-content d-flex flex-column import-registry-products\">\n                      <div className=\"d-flex import-registry-products-column \">\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Items</p>\n                        </div>\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Category: Item</p>\n                        </div>\n                      </div>\n\n\n                      {this.props.stateAnotherStoreRegistry.map((product, index) => (\n                        <div className=\"d-flex import-registry-products-column\" key={\"Product-\" + index}>\n                          <div className=\"w-50 px-3\">\n                            <p className=\"py-3 text-body\">{product.title}</p>\n                          </div>\n                          <div className=\"w-50 px-3\">\n                            {product.categories.length <= 0 ?\n                              <div className=\"py-3\">\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Select category</a>\n                              </div>\n                              :\n                              <div className=\"pb-2\">\n                                {product.categories.map(category => (\n                                  <CategoryPill\n                                    key={category.id}\n                                    name={category.categoryName}\n                                    removeCategory={() => this.removeSelectedCategory(index, category.id)}\n                                    className=\"mt-2 mr-3\"\n                                  />\n                                ))}\n\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Add</a>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n          <SelectCategory\n            showModal={this.state.categoryModalShow}\n            closeModal={this.setCategoryModalVisible}\n            changeCurrentCategory={this.setProductCategories}\n            currentCategory={this.state.currentCategory}\n          />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ImportRegistry);","import React from 'react';\nimport \"./AddGift.scss\";\nimport { connect } from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport ImportRegistry from \"./import-registry/ImportRegistry\";\nimport { clearAnotherStoreProductInfo, setAnotherStoreRegistryItems } from \"modules/my-registry/MyRegistryActions\";\nimport { ADD_REGISTRY_ITEM, SAVE_REGISTRY_DATA } from \"../../../../api/mutations\";\nimport { graphQLMultipart as graphQL, graphQL as jsonGraphQL } from \"../../../../api/axios\";\nimport { getProducts, getCategories } from \"utils/commonFunction\";\nimport { toast } from \"react-toastify\";\nimport {IMPORT_REGISTRY_EMAIL} from \"../../../../utils/constants\";\nimport {dataURItoBlob} from \"../../../../utils/commonFunction\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n    this.props.dispatch(setAnotherStoreRegistryItems([]));\n  }\n\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      toast.error(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      toast.error(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      toast.error(\"Invalid Quantity\");\n      return false;\n    }\n\n    // TODO: if necessary Valid Category\n    // if (!storeProduct.category.id) {\n    //   toast.error(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Cash Funds</h4></div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name} />\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection />\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n                onClick={this.importRegistry}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  validImportRegistryData = (registryItems) => {\n    if (registryItems.length <= 0) {\n      toast.error(\"No Item found\");\n      return false;\n    }\n    // TODO: if necessary Valid Category\n    // for (const item of registryItems) {\n    //   if (item.categories.length <= 0) {\n    //     toast.error(\"Please select category for all product\");\n    //     return false;\n    //   }\n    // }\n    return true;\n  }\n\n  getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  getCleanedRegistryItems = (registryItems) => {\n    let cleanedRegistryItems = []\n    for (const item of registryItems) {\n      // TODO: Handle multiple store for single product\n      const itemStore = item.stores[0]\n      if (cleanedRegistryItems.find(el => el.storeName ? el.storeName === itemStore.name : false)) {\n        cleanedRegistryItems = cleanedRegistryItems.map(el => {\n          if (el.storeName === itemStore.name) {\n            if (el.items) {\n              el.items.push({\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              })\n            } else {\n              el['items'] = [{\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              }]\n            }\n            if (item.img) {\n              el.items[el.items.length - 1]['imageUrl'] = item.img\n            }\n          }\n          return el;\n        })\n      } else {\n        let newStore = {\n          storeName: itemStore.name,\n          items: [{\n            title: item.title,\n            // TODO: change category\n            registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n            quantity: 1,\n            tags: [],\n            price: this.getRefinedPrice(itemStore.price)\n          }]\n        }\n\n        if (item.img) {\n          newStore.items[newStore.items.length - 1]['imageUrl'] = item.img\n        }\n        cleanedRegistryItems.push(newStore)\n      }\n    }\n\n    return cleanedRegistryItems;\n  }\n\n  importRegistryClickHandler = () => {\n    if (!this.validImportRegistryData(this.props.stateAnotherStoreRegistry)) {\n      return;\n    }\n\n    const registryItems = this.getCleanedRegistryItems(this.props.stateAnotherStoreRegistry)\n    if (registryItems.length > 0) {\n      const reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          \"registryId\": this.props.stateRegistryInfo.id,\n          \"input\": registryItems\n        }\n      }\n      jsonGraphQL(reqData).then(res => {\n        if (res.data.data.addRegistryItems) {\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n          toast.success(\"Registry items imported successfully\");\n          this.clearModalData();\n          this.modalCloseHandler();\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection />\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore />\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  importRegistry = () => {\n    this.clearModalData()\n    this.modalTitle = \"Import Registry\"\n    this.modalBody = <ImportRegistry />\n\n    this.modalFooterButtons = (\n      <>\n        {/*TODO: change href of email us link*/}\n        <a href={\"mailto:\"+IMPORT_REGISTRY_EMAIL} tabindex target='_blank' className=\"mr-auto import-registry-email-link text-sm font-medium\">Email Us For Help</a>\n        {/*TODO: Integrate API when multiple category is supported*/}\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.importRegistryClickHandler}\n        >Import</Button>\n      </>\n    )\n\n    this.setState((prevState, _) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n            <span className=\"font-medium text-sm\">What is Add Gift?</span>\n            <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save\n              in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);\n","import React from \"react\";\nimport \"./CashFundCardNotAdded.scss\";\n\nclass CashFundCardNotAdded extends React.Component {\n  render() {\n    return (\n      <div\n        className={[\"baby-registry-cash-fund-card py-3 mb-2\", this.props.className ? this.props.className : \"\"].join(\" \")}>\n        <div className=\"row\">\n          <div className=\"col-2\">\n\n            <div className=\"pl-3\">\n              {this.props.data.item.imageUrl ?\n                <img className=\"cash-fund-image d-block mx-auto\" src={this.props.data.item.imageUrl}/>\n                :\n                <div className=\"baby-registry-cash-fund-no-image\" />\n              }\n            </div>\n\n          </div>\n          <div className=\"col\">\n            <div className=\"float-left\">\n              <p className=\"text-body font-medium\">{this.props.data.registryCategories[0].category.categoryName}</p>\n              <p\n                className=\"text-sm cash-fund-description\">{this.props.data.registryCategories[0].category.description}</p>\n            </div>\n            <button className=\"cash-fund-add-btn float-right mr-6\" onClick={this.props.addButtonClickHandler}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CashFundCardNotAdded;","import React from \"react\";\nimport CashFundCardNotAdded from \"./cash-fund-card-not-added/CashFundCardNotAdded\";\n\nclass CashFundCard extends React.Component {\n  render() {\n    return <CashFundCardNotAdded data={this.props.data} addButtonClickHandler={this.props.addButtonClickHandler}/>\n  }\n}\n\nexport default CashFundCard;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n    return (\n        <div\n          onClick={props.onClick}\n          className={[\"cash-fund-toggle-pills px-2 py-1\", props.className ? props.className : \"\", props.selectedClass ? props.selectedClass : \"\"].join(\" \")}>\n            <i className={[\"cash-fund-toggle-icon float-left\", props.iconClass ? props.iconClass : null].join(\" \")} />\n            <span className=\"text-sm ml-2\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default TogglePills;","import React from \"react\";\nimport \"./AddCashFundModal.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from \"../../button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport TogglePills from \"./toggle-pills/TogglePills\";\nimport {connect} from \"react-redux\";\nimport {graphQL, graphQLMultipart} from \"../../../../../api/axios\";\nimport {GET_CASH_FUND_CATEGORIES} from \"../../../../../api/queries\";\nimport {ADD_REGISTRY_ITEM} from \"../../../../../api/mutations\";\nimport {setCashFundCategories} from \"../../../../my-registry/MyRegistryActions\";\nimport {M_A_STORE_NAME} from \"../../../../../utils/constants\";\nimport {dataURItoBlob, getCategories, getProducts} from \"../../../../../utils/commonFunction\";\n\nclass AddCashFundModal extends React.Component {\n\n  // Accepted Image input types for Cash fund image\n  ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  MAX_IMAGE_SIZE = 5000000; // 5MB\n\n  // Cash Fund data\n  state = {\n    cashFundImage: {},\n    cashFundName: \"\",\n    cashFundAmount: \"\",\n    hideTotal: false,\n    cashFundType: {},\n    cashFundNote: \"\",\n    mustHave: false,\n    markCompleted: false\n  }\n\n  imageRef = React.createRef()\n\n  modalCloseHandler = () => {\n    this.props.closeModal();\n  }\n\n  validateCashFundData = () => {\n    if (this.state.cashFundName.length <= 0) {\n      toast.error(\"Please enter Cash Fund Name.\")\n      return false;\n    }\n\n    if (this.state.cashFundAmount.length <= 0) {\n      toast.error(\"Please enter Cash Fund Amount\")\n      return false;\n    }\n\n    if (!Number(this.state.cashFundAmount)) {\n      toast.error(\"Please enter valid amount\")\n      return false;\n    }\n\n    if (!this.state.cashFundType.id) {\n      toast.error(\"Please select Cash Fund Type.\")\n      return false;\n    }\n\n    return true;\n  }\n\n  // Adding Cash Fund\n  addCashFundClickHandler = () => {\n    if (this.validateCashFundData()) {\n      let formData = new FormData()\n\n      let reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id,\n          input: [{\n            storeName: M_A_STORE_NAME,\n            items: [{\n              title: this.state.cashFundName,\n              price: this.state.cashFundAmount,\n              mostWanted: this.state.mustHave,\n              tags: [],\n              quantity: 1,\n              isGroupGift: true,\n              hideTotal: this.state.hideTotal,\n              markAsCompleted: this.state.markCompleted,\n              note: this.state.cashFundNote,\n              registryCategories: [Number(this.state.cashFundType.id)],\n              isCashFund: true\n            }]\n          }]\n        }\n      }\n\n      if (this.state.cashFundImage.type === \"custom\") {\n        let map = {\n          images: [\"variables.input.0.items.0.images\"]\n        }\n        reqData.variables.input[0].items[0]['images'] = null;\n        console.log(dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n        formData.append(\"map\", JSON.stringify(map))\n        formData.append(\"images\", dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n      } else {\n        reqData.variables.input[0].items[0]['imageUrl'] = this.state.cashFundImage.value;\n      }\n\n      formData.append(\"operations\", JSON.stringify(reqData))\n\n      graphQLMultipart(formData).then(res => {\n        if (res.data.data && res.data.data.addRegistryItems) {\n          // Successfully added product\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n          toast.success((\n            <p><b>{this.state.cashFundName}</b> added to your registry!</p>\n          ))\n          this.modalCloseHandler()\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n  }\n\n  // Modal Data\n  modalTitle = \"Add Cash Fund\";\n  modalFooterButton = (\n    <Button\n      variant=\"primary\"\n      className=\"px-5 py-1 font-medium text-body\"\n      onClick={this.addCashFundClickHandler}\n    >Add & Close</Button>\n  )\n\n  // Handling custom image selection\n  selectFileHandler = (ev) => {\n    if (ev.target && ev.target.files.length > 0) {\n      const file = ev.target.files[0]\n\n      // Verifying file is image\n      if (this.ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= this.MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = (e) => {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              fileType: file.type,\n              fileName: file.name\n            }\n            this.setState({\n              cashFundImage: newProductImage\n            })\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n\n  // Input change handlers\n  cashFundNameChangeHandler = (ev) => {\n    this.setState({\n      cashFundName: ev.target.value\n    })\n  }\n\n  cashFundAmountChangeHandler = (ev) => {\n    this.setState({\n      cashFundAmount: ev.target.value\n    })\n  }\n\n  cashFundHideTotalChangeHandler = (_) => {\n    this.setState((prevState, _) => ({\n      hideTotal: !prevState.hideTotal\n    }))\n  }\n\n  cashFundTypeChangeHandler = (ev) => {\n    if (this.props.stateCashFundCategories.length > 0) {\n      const changedCategory = this.props.stateCashFundCategories.find(category => Number(category.id) === Number(ev.target.value))\n      if (changedCategory.id) {\n        this.setState({\n          cashFundType: changedCategory\n        })\n      }\n    }\n  }\n\n  cashFundNoteChangeHandler = (ev) => {\n    this.setState({\n      cashFundNote: ev.target.value\n    })\n  }\n\n  mustHaveClickHandler = () => {\n    this.setState((prevState, _) => ({\n      mustHave: !prevState.mustHave\n    }))\n  }\n\n  markCompletedClickHandler = () => {\n    this.setState((prevState, _) => ({\n      markCompleted: !prevState.markCompleted\n    }))\n  }\n\n\n  render() {\n    if (this.props.imageUrl && !this.state.cashFundImage.value && this.state.cashFundImage.value !== this.props.imageUrl) {\n      this.setState({\n        cashFundImage: {\n          type: \"url\",\n          value: this.props.imageUrl\n        }\n      })\n    }\n\n    if (this.props.stateCashFundCategories.length <= 0) {\n      // Fetching all cash fund categories\n      const reqData = {\n        query: GET_CASH_FUND_CATEGORIES,\n        operationName: \"getCashFund\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id\n        }\n      }\n\n      graphQL(reqData).then(res => {\n        console.log(res.data.data)\n        if (res.data.data && res.data.data.cashFundCategories) {\n          let allCashFundCategories = res.data.data.cashFundCategories.map(cat => {\n            cat.category.id = cat.id\n            return cat.category\n          })\n          this.props.dispatch(setCashFundCategories(allCashFundCategories))\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n\n\n    if (!this.state.cashFundType.id && this.props.stateCashFundCategories.length > 0) {\n      let foundCategory = false\n      if (this.props.categoryData?.registryCategories && this.props.categoryData.registryCategories.length > 0) {\n        for (let cashFundCategory of this.props.stateCashFundCategories) {\n          if (Number(this.props.categoryData.registryCategories[0].category.id) === Number(cashFundCategory.id)) {\n            foundCategory = true\n            this.setState({\n              cashFundType: cashFundCategory\n            })\n            break\n          }\n        }\n      }\n      if (!foundCategory) {\n        this.setState({\n          cashFundType: this.props.stateCashFundCategories[0]\n        })\n      }\n    }\n\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          title={this.modalTitle}\n          footer={this.modalFooterButton}\n          closeModal={this.modalCloseHandler}>\n\n          <div className=\"row cash-fund-modal-content\">\n            <div className=\"col-5\">\n              <div className=\"cash-fund-modal-image-section mr-1\">\n                {this.state.cashFundImage.type ?\n                  <img src={this.state.cashFundImage.value} alt=\"Cash Fund\" className=\"cash-fund-modal-image\"/>\n                  :\n                  <div className=\"cash-fund-modal-no-image\"/>\n                }\n                <i\n                  className=\"icon-preview change-cash-fund-image-icon p-1\"\n                  onClick={() => {\n                    this.imageRef.current.click()\n                  }}\n                />\n                <input\n                  type=\"file\"\n                  className=\"d-none\"\n                  ref={this.imageRef}\n                  accept={this.ACCEPTED_IMAGE_TYPE.join(\",\")}\n                  onChange={(ev) => this.selectFileHandler(ev)}\n                />\n              </div>\n            </div>\n            <div className=\"col-7 cash-fund-input-section\">\n              <div className=\"ml-3 mr-6\">\n\n                {/* Cash Fund name */}\n                <div className=\"row\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Cash Fund Name</p>\n                    <input\n                      className=\"cash-fund-input h2 mt-1 w-100 mw-100 p-2\"\n                      type=\"text\"\n                      value={this.state.cashFundName}\n                      onChange={(ev) => this.cashFundNameChangeHandler(ev)}\n                    />\n                  </div>\n                </div>\n\n                {/* Cash Fund type */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Type</p>\n                    <select\n                      className=\"cash-fund-select w-100 mw-100 px-2 py-1 mt-1 text-body\"\n                      onChange={(ev) => this.cashFundTypeChangeHandler(ev)}\n                    >{console.log(this.props.categoryData?.registryCategories[0].category.id)}\n                      {this.props.stateCashFundCategories.map(category => (\n                        <option\n                          value={category.id}\n                          selected={this.props.categoryData?.registryCategories[0].category.id === category.id}\n                        >{category.categoryName}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n\n                <div className=\"row mt-5\">\n\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium mb-1\">Total Amount</p>\n                    <div className=\"row\">\n\n                      {/* Cash fund amount */}\n                      <div className=\"col\">\n                        <div className=\"position-relative\">\n                          <input\n                            className=\"cash-fund-input w-100 mw-100 p-1 pl-5 text-body\"\n                            type=\"number\"\n                            value={this.state.cashFundAmount}\n                            onChange={(ev) => this.cashFundAmountChangeHandler(ev)}\n                          />\n                          <span className=\"cash-fund-price-input-currency text-body\">$</span>\n                        </div>\n                      </div>\n\n                      {/* Cash fund hidden option */}\n                      <div className=\"col align-self-center\">\n                        <label\n                          className=\"checkbox d-flex align-items-center\">\n                          <span className=\"checkbox__input mr-2\">\n                            <input\n                              type=\"checkbox\"\n                              onChange={(ev) => this.cashFundHideTotalChangeHandler(ev)}\n                            />\n                            <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i className=\"icon-check\"/>\n                            </span>\n                          </span>\n                          <span\n                            className=\"radio__label text-sm\">Hide total from guests</span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col\">\n                    <TogglePills\n                      text=\"Must Have\"\n                      iconClass=\"icon-heart\"\n                      selectedClass={this.state.mustHave ? \"cash-fund-must-have-selected\" : null}\n                      onClick={this.mustHaveClickHandler}\n                    />\n                    {/* TODO: Change below icon to rounded correct when added */}\n                    <TogglePills\n                      text=\"Mark As Completed\"\n                      iconClass=\"icon-check\"\n                      className=\"ml-2\"\n                      selectedClass={this.state.markCompleted ? \"cash-fund-completed-selected\" : null}\n                      onClick={this.markCompletedClickHandler}\n                    />\n                  </div>\n                </div>\n\n\n                {/* Cash fund note */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Notes</p>\n                    <textarea\n                      placeholder=\"Write a note for your friends and family\"\n                      className=\"cash-fund-textarea w-100 mw-100 mt-1 w-100 mw-100 p-1 text-body\"\n                      value={this.state.cashFundNote}\n                      onChange={(ev) => this.cashFundNoteChangeHandler(ev)}\n                      rows={2}/>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateCashFundCategories: state.myRegistry.cashFundCategories,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddCashFundModal);","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport {graphQL, getRecommendation} from 'api/axios';\nimport {GET_RECOMMENDATIONS} from 'api/queries';\nimport {TOGGLE_MUST_HAVE} from 'api/mutations';\nimport {getProducts, removeProductFromCartHandler, getCategories} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport config from \"api/config\";\nimport axios from \"axios\";\nimport CashFundCard from \"../../../commons/components/cash-fund-card/CashFundCard\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport AddCashFundModal from \"../../../commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal\";\n\nclass Everything extends Component {\n\n  state = {\n    showCashFundModal: false,\n    cashFundProduct: null\n  }\n\n  openCashFundModal = () => {\n    this.setState({\n      showCashFundModal: true\n    })\n  }\n\n  setCashFundCategoryAndOpenModal = (product) => {\n    this.setState({\n      cashFundProduct: {...product}\n    })\n    this.openCashFundModal()\n  }\n\n  closeCashFundModal = () => {\n    this.setState({\n      showCashFundModal: false,\n      cashFundProduct: null\n    })\n  }\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n\n  setAllRecommendation = async (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          ...category,\n          parentCategory: parentCat.categoryName,\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      // for (let i = 0; i <= 5; i++) {\n      // let recommendedCat = recommendedCategory[i]\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.categoryName\n        }\n      }\n      const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\n      const cookies = new Cookies();\n\n      await axios.get(apiURL + 'items', {\n        params: data,\n        headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n      })\n        .then(res => {\n          let rData = res.data.data.products.edges.map(item => {\n            let resData = {...item.node}\n            resData['quantity'] = 1\n            resData['category'] = recommendedCat\n            return resData\n          })\n          // count = count + 1;\n          if (rData.length !== 0) {\n            this.props.dispatch(addRecommendedProduct(rData))\n          }\n        }).catch(err => {\n          console.error(err.message)\n        })\n\n\n      // getRecommendation({ params: data }).then(res => {\n      //   let rData = res.data.data.products.edges.map(item => {\n      //     let resData = { ...item.node }\n      //     resData['quantity'] = 1\n      //     resData['category'] = recommendedCat\n      //     return resData\n      //   })\n      //   // count = count + 1;\n      //   this.props.dispatch(addRecommendedProduct(rData))\n      // }).catch(err => {\n      //   console.error(err.message)\n      // })\n      //   )\n      // ))\n      // count = count + 1;\n      // }\n      // else {\n      //   break;\n      // }\n    }\n  }\n\n  getSortedProducts = (addedProducts, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    const cashFundCategory = stateCategories.find(category => category.categoryType && Number(category.categoryType.id) === 2)\n    let cashFundCount = 0\n    if (cashFundCategory) {\n      let productsToAppend = []\n      for (let subCategory of cashFundCategory.subCategories) {\n        if (Number(subCategory.addedItemsCount) === 0) {\n          cashFundCount++;\n          productsToAppend.push({\n            item: {\n              imageUrl: \"\"\n            },\n            registryCategories: [{\n              id: subCategory.id,\n              category: {\n                ...subCategory\n              }\n            }]\n          })\n        }\n      }\n      addedProducts = [...addedProducts, ...productsToAppend]\n    }\n\n    let allProducts = []\n    let productCount = 0;\n    let categories = []\n    for (let parentCat of stateCategories) {\n      if (!parentCat.isParent) {\n        categories.push({\n          id: parentCat.id,\n          name: parentCat.categoryName,\n          added: parentCat.addedItemsCount,\n          total: parentCat.totalItemsCount,\n          parentCategory: {\n            id: parentCat.id,\n            name: parentCat.categoryName\n          },\n          categoryType: parentCat.categoryType,\n        })\n      } else {\n        for (let category of parentCat.subCategories) {\n          if (category.subProductTypes.length) {\n            for (let subProduct of category.subProductTypes) {\n              categories.push({\n                id: subProduct.id,\n                name: subProduct.categoryName,\n                added: subProduct.addedItemsCount,\n                total: subProduct.totalItemsCount,\n                parentCategory: {\n                  id: parentCat.id,\n                  name: parentCat.categoryName\n                },\n                categoryType: category.categoryType,\n              })\n            }\n          } else {\n            categories.push({\n              id: category.id,\n              name: category.categoryName,\n              added: category.addedItemsCount,\n              total: category.totalItemsCount,\n              parentCategory: {\n                id: parentCat.id,\n                name: parentCat.categoryName\n              },\n              categoryType: category.categoryType,\n            })\n          }\n        }\n      }\n    }\n\n\n    for (let category of categories) {\n      let products = []\n      let recommendations = []\n\n      // Getting filtered Products and recommendations\n      if (stateFilterApplied.parentFilter) {\n        if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n          if (stateFilterApplied.childFilter.length > 0) {\n            const childFilterArray = stateFilterApplied.childFilter\n\n            for (let product of addedProducts) {\n              let categoryFound = false\n              for (let cat of product.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              if (\n                ((childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n                  (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n                  // TODO: change category\n                  (childFilterArray.includes(\"reserved\") && product.isReserved)) && categoryFound\n              ) {\n                products.push(product)\n                // filteredProductsId.push(product.id)\n              }\n            }\n          } else {\n            // TODO: change category\n            products.push(...addedProducts.filter(el => {\n              let categoryFound = false\n              for (let cat of el.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              return categoryFound;\n            }))\n          }\n        } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n          let addedRecommendations = []\n          recommendations = stateRecommendedProducts.filter(el => {\n            if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n              addedRecommendations.push(el.id)\n              return true;\n            }\n            return false;\n          })\n        }\n      } else {\n        // TODO: Change this condition(el.item.category.length)\n        // TODO: change category\n        products.push(...addedProducts.filter(el => {\n          let categoryFound = false\n          for (let cat of el.registryCategories) {\n            if (cat.id === category.id) {\n              categoryFound = true\n              break\n            }\n          }\n          return categoryFound && el.registryCategories.length\n        }))\n        let addedRecommendations = []\n        recommendations = stateRecommendedProducts.filter(el => {\n          if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n            addedRecommendations.push(el.id)\n            return true;\n          }\n          return false;\n        })\n      }\n      productCount += products.length;\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: (category.added < category.total || category.total === 0) ? recommendations : []\n      })\n    }\n\n    // Grouping products based on parent category\n    let groupedProducts = []\n    for (const product of allProducts) {\n      let foundCategory = false;\n      groupedProducts = groupedProducts.map(el => {\n        if (el.id === product.category.parentCategory.id) {\n          foundCategory = true;\n          el.allProducts.push(product);\n        }\n        return el;\n      })\n\n      if (!foundCategory) {\n        groupedProducts.push({\n          ...product.category.parentCategory,\n          allProducts: [product]\n        })\n      }\n    }\n\n    // Adding total products and recommendations\n    groupedProducts = groupedProducts.map(el => {\n      let productCount = 0;\n      let recommendationCount = 0;\n\n      for (let product of el.allProducts) {\n        productCount += product.products.length;\n        recommendationCount += product.recommendations.length;\n      }\n\n      el['totalProducts'] = productCount;\n      el['totalRecommendations'] = recommendationCount;\n      return el;\n    })\n\n    // Removing items that does not have products or recommendations based on filters\n    if (stateFilterApplied.parentFilter) {\n      if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n        groupedProducts = groupedProducts.filter(product => product.totalProducts > 0)\n      } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n        groupedProducts = groupedProducts.filter(product => product.totalRecommendations > 0)\n      }\n    } else {\n      groupedProducts = groupedProducts.filter(product => (product.totalProducts > 0 || product.totalRecommendations > 0))\n    }\n\n    productCount -= cashFundCount\n    return {groupedProducts, productCount};\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for (let category of checklistItems) {\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems / totalItems) * 100;\n  }\n\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let {groupedProducts, productCount} = this.getSortedProducts(this.props.stateAddedProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"row mt-6\">\n            {/* View CheckList */}\n            <div className=\"col-3\">\n              <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)}/>\n              {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n                                                                     dispatch={this.props.dispatch}/>)}\n            </div>\n            <div className=\"col-9\">\n\n              {/* Top Filter Section */}\n              <FilterSection productCount={productCount}/>\n              <div className=\"mt-5\">\n                {groupedProducts.map(el => {\n                  let hasCashFund = false;\n                  return (<>\n                      <h4 className=\"text-uppercase my-4\">{el.name}</h4>\n                      {el.allProducts.map((product, i) => (\n                        <div id={product.category.name}>\n                          {product.products.map((card, index) => {\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2) {\n                              hasCashFund = true\n                            }\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2 && Number(card.registryCategories[0].category.addedItemsCount) === 0) {\n                              return (\n                                <CashFundCard\n                                  data={card}\n                                  key={\"cashFund\" + index}\n                                  className=\"mt-2\"\n                                  addButtonClickHandler={() => this.setCashFundCategoryAndOpenModal(card)}\n                                />\n                              )\n                            } else {\n                              return (\n                                <AddedCard\n                                  data={card} key={\"addedCard\" + index}\n                                  multipleCategories = {card.registryCategories.length > 1 ? card.registryCategories.find((cat, index) => Number(cat.id) === Number(product.category.id) && index != 0) : null}\n                                  toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                                  removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                                />\n                              )\n                            }\n                          })}\n                          {product.recommendations.length > 0 ?\n                            <ViewRecommend\n                              title={product.recommendations[0].category.categoryName}\n                              category={product.recommendations[0].category}\n                              products={product.recommendations}/>\n                            : null}\n                        </div>\n                      ))}\n                      {hasCashFund ?\n                        <div className=\"my-2\">\n                          <Button\n                            variant=\"secondary\"\n                            className=\" w-100 py-1 text-body font-medium\"\n                            onClick={this.openCashFundModal}\n                          >Add my own</Button>\n                        </div>\n                        : null}\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showCashFundModal ?\n          <AddCashFundModal\n            show={this.state.showCashFundModal}\n            closeModal={this.closeCashFundModal}\n            categoryData={this.state.cashFundProduct}\n          />\n          : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 7\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      toast.error(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n\t\t  props.closeCoverImagePicker();\n\t\t  setUploadImage(false);\n        } else {\n          toast.error(\"Some error occurred\");\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n\n  }\n\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={props.closeCoverImagePicker}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport { UPDATE_REGISTRY } from \"../../../../api/mutations\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport { toast } from 'react-toastify';\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      toast.error(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully updated registry information\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\" />\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\" />\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n        onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport routes from \"../../../../utils/routes\";\n\nconst ShareRegistry = (props) => {\n\n  const siteHostName = window.location.host + routes.REGISTRY.HOME;\n  // const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      toast.error(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      if (err.response.status === 400) {\n        setRegistryError(`${registryUrl} is not available. Please try something else.`)\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n      console.error(err.response.data)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toast.success(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section d-flex text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2 d-flex\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram .svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter.svg\"/>\n              </>\n              :\n              <>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook_disabled.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram _disabled.svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter_disabled.svg\"/>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport { setguestViewRegistry } from \"modules/view-registry/ViewRegistryActions\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({ showCoverImagePicker: false })\n  }\n\n  closeShareRegistry = () => {\n    this.setState({ showShareRegistry: false })\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  handleGuestView = () => {\n    toast.success(\"Viewing registry as guest\")\n    this.props.dispatch(setguestViewRegistry(true))\n  }\n\n  handleDisableViewGuest = () => {\n    this.props.dispatch(setguestViewRegistry(false))\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({ showCoverImagePicker: true })\n      }\n    }\n  ]\n\n\n  render() {\n    // const style = {\n    //   backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'\n    // }\n    return (\n      <>\n        {this.props.stateGuestViewRegistry ?\n          <div className=\"view-guest-header text-body py-2\">\n            <div className=\"container d-flex justify-content-between\" onClick={this.handleDisableViewGuest}>\n              <div className=\"d-flex align-items-center view-guest-link\">\n                <i className=\"icon-chevron-left view-guest-text mr-2\" />\n                <a className=\"view-guest-text\" tabindex>Back To View Registry</a>\n              </div>\n              <div className=\"view-guest-text\">This is how your guests will see your registry</div>\n              <a className=\"view-guest-text view-guest-link\">Share</a>\n            </div>\n          </div> : null\n        }\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')' }}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          {!this.props.stateGuestViewRegistry ?\n            <div className=\"cover-pic-update-options\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-end\">\n                    <MoreOption\n                      data={this.COVER_PIC_OPTIONS}\n                      iconClass=\"icon-preview\"\n                      activeOptionClass=\"view-registry-cover-option-active\"\n                      buttonClass=\"update-cover-options p-1\" />\n                  </div>\n                </div>\n              </div>\n            </div> : null\n          }\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    {!this.props.stateGuestViewRegistry ?\n                      <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)} />\n                      : null\n                    }\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    !this.props.stateGuestViewRegistry ?\n                      <a className=\"add-greeting-link text-sm font-medium\" href=\"#\" tabindex\n                        onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a> : null\n                  }\n                </div>\n                {!this.props.stateGuestViewRegistry ?\n                  <div className=\"col-12 col-md-3 header-buttons\">\n                    <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\"\n                      onClick={this.handleGuestView}>View as Guest</Button>\n                    <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\"\n                      onClick={() => this.setState({ showShareRegistry: true })}>Share</Button>\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n        <EditViewRegistryDetail\n          show={this.state.showEditRegistryDetail}\n          closeEditRegistryDetail={this.closeEditRegistryDetail}\n          info={this.props.stateRegistryInfo}\n        />\n\n        <ShareRegistry\n          show={this.state.showShareRegistry}\n          closeShareRegistry={this.closeShareRegistry}\n          registryInfo={this.props.stateRegistryInfo}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt, clearViewFilter, setChildViewFilter } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearViewFilter())\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              {this.props.stateGuestViewRegistry ?\n                <></> :\n                <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>}\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 && !this.props.stateGuestViewRegistry ?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    stateRegistryInfo: state.registry.info,\n    stateFilterApplied: state.viewRegistry.viewFilterApplied,\n    stateFilterCategory: state.viewRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);\n","import React, { useState, useEffect } from 'react'\nimport \"./ViewFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildViewFilter, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport { FILTERS } from \"utils/constants\"\n\nconst ViewFilter = () => {\n\n  const dispatch = useDispatch()\n  let tempParentFilterId = useSelector(state => state.viewRegistry.viewFilterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  let stateFilterCategories = useSelector(state => state.viewRegistry.filterCategory)\n  let [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  const getLimitOfFliter = (parentId) => {\n    let limit = null\n    const filterCategory = [...filterCategoryLimit]\n    for (let category of filterCategory) {\n      if (parentId === category.id && category.limit) {\n        limit = category.limit\n      }\n    }\n    return limit\n  }\n\n  // Updating product count in filter categories\n  const updateFilterList = (addedProducts) => {\n\n    let newFilterList = [\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        // limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          if (category.addedItemsCount > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = newCategory.addedItemsCount\n          return newCategory\n        })\n        // count: 0\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: addedProducts.filter((product) => product.item.price < 50).length\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: addedProducts.filter(product => (product.item.price >= 50 && product.item.price <= 100)).length\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: addedProducts.filter(product => (product.item.price > 100)).length\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName === MONICA_AND_ANDY).length\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName !== MONICA_AND_ANDY).length\n          },\n        ]\n      },\n\n    ]\n    if (!stateGuestViewRegistry) {\n      const giftStatus = {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: addedProducts.filter(product => !product.isReserved || !product.isPurchased).length\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: addedProducts.filter(product => product.isPurchased).length\n          }\n        ]\n      }\n      newFilterList.splice(0, 0, giftStatus)\n    }\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  useEffect(() => {\n    if (tempChildFilterIds.length === 0) {\n      updateFilterList(stateAddedProducts)\n    }\n  }, [stateAddedProducts, stateCategoriesInfo, tempChildFilterIds])\n\n\n  // Change event handlers\n\n  // TDOD: Add this if needed\n  // const parentChangeHandler = (parent) => {\n  //   dispatch(setParentViewFilter(parent.id))\n  //   if (parent.child) {\n  //     dispatch(setChildViewFilter(parent.child.map(child => child.id)))\n  //   } else {\n  //     dispatch(setChildViewFilter([]))\n  //   }\n  // }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildViewFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildViewFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearViewFilter())\n  }\n\n  const changeParentLimitHandler = (parentFilterID) => {\n    let limitLength = null\n    let filterCategory = [...stateFilterCategories].map(parentFilter => {\n      if (parentFilter.id === parentFilterID) {\n        parentFilter.limit = parentFilter.child.length\n        limitLength = parentFilter.child.length\n      }\n      return parentFilter\n    })\n    dispatch(setViewFilterCategory(filterCategory))\n\n    let isFound = false\n    let newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n      if (categorylimit.id === parentFilterID) {\n        categorylimit.limit = limitLength\n        isFound = true\n        return categorylimit\n      }\n      return categorylimit\n    })\n\n    if (!isFound) {\n      newFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n    }\n    setFilterCategoryLimit(newFilterCateoryLimit)\n  }\n\n  return (\n    <div className=\"view-filter\">\n      <div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n        <h4 className=\"font-weight-bold\">Filters</h4>\n        {tempChildFilterIds.length !== 0 ?\n          <a tabindex className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n        }\n      </div>\n      <div className=\"d-flex flex-column\">\n        {[...stateFilterCategories].map(parentFilter => (\n          <div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n            {/* Parent filter */}\n            <div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n            {/* Child filter */}\n            {parentFilter.child ? (\n              <div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n                <div className=\"mt-3 fliter-checkbox-section\">\n                  {parentFilter.child.map((childFilter, index) => (\n                    childFilter.count > 0 ?\n                      index < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n                        <label class=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n                          <span class=\"checkbox__input mr-2\">\n                            <input type=\"checkbox\"\n                              name={childFilter.display}\n                              value={childFilter.display}\n                              checked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n                              onChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n                            <span class=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i class=\"icon-check\"></i>\n                            </span>\n                          </span>\n                          <p class=\"radio__label text-sm\"><div>{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</div></p>\n                        </label>\n                        : null\n                      : null\n\n                  ))}\n                  {(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n                    <div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n                    : null\n                  }\n                </div>\n              </div>\n            )\n              : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewFilter;\n","import React from \"react\";\nimport \"./GiftStatusPill.scss\";\n\nconst GiftStatusPill = (props) => {\n  let pillVariantClass = \"\"\n\n  if (props.variant === 'purchased') {\n    pillVariantClass = \"purchased-pill\";\n  } else if (props.variant === 'reserved') {\n    pillVariantClass = \"reserved-pill\";\n  } else if (props.variant === 'default') {\n    pillVariantClass = \"default-pill\";\n  } else {\n    pillVariantClass = \"default-pill\";\n  }\n\n  return (\n    <div\n      className={[\"gift-status-pill px-3\", pillVariantClass, props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"text-sm font-medium\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default GiftStatusPill;","import React, { useState } from 'react'\nimport \"./GuestViewCard.scss\";\nimport MoreOption from \"../../commons/components/more-option/MoreOption\";\nimport {\n\tsortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../../commons/components/modal-component/ModalComponent\";\nimport CardItem from \"../../commons/components/card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../../commons/components/button-component/ButtonComponent\";\nimport GiftStatusPill from \"../../commons/components/gift-status-pill/GiftStatusPill\";\n\nconst GuestViewCard = (props) => {\n\n\tconst dispatch = useDispatch();\n\tconst stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n\n\t// Handle drag\n\t// TODO: Change Draggable icon\n\tconst DragHandle = sortableHandle(() => <i\n\t\tclassName={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n\t\t<div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n\t\t\t<p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n\t\t</div>\n\t</i>);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"added-card py-5 pr-2\">\n\t\t\t\t<div className=\"row pl-3\">\n\t\t\t\t\t<div className=\"col-2 guest-card-image\">\n\t\t\t\t\t\t{props.data?.item.imageUrl ?\n\t\t\t\t\t\t\t<img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.title} />\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div className=\"added-card-no-product-image\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{props.data.mostWanted ?\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center guest-must-have added-gift-must-have-btn px-1 added-gift-must-have-active\">\n\t\t\t\t\t\t\t\t<i className=\"icon mr-1 d-block heart-fill\" />\n\t\t\t\t\t\t\t\t<p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: <></>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t{/* <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div> */}\n\t\t\t\t\t\t<h2>{props.data.title}</h2>\n\t\t\t\t\t\t<div className=\"d-flex mt-2\">\n\t\t\t\t\t\t\t<div className=\"\">${props.data.item.price}</div>\n\t\t\t\t\t\t\t{/*/!* TODO: Add Strikeout price dynamic *!/*/}\n\t\t\t\t\t\t\t{/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n\t\t\t\t\t\t\t{/* {props.data.quantity > 1 ?\n\t\t\t\t\t\t\t\t<div className=\"ml-4 text-body d-flex\">\n\t\t\t\t\t\t\t\t\tQty:{props.data.quantity}\n\t\t\t\t\t\t\t\t\t<div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n\t\t\t\t\t\t\t\t</div> : <></>} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"d-flex mt-3\">\n\t\t\t\t\t\t\t{props.data.isPurchased ?\n\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"purchased\" text=\"Purchased\" />\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t{props.data.isReserved ?\n\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"reserved\" text=\"Reserved\" />\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t{props.data.isGroupGift ?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className=\"guest-toggle-pills px-1 mr-3 d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"guest-icon-active mr-1\" />\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm guest-icon-text\">Group Gift</span>\n\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium received-amount\">Received ${props.data.groupGift ? props.data.groupGift.amountReceived : 0} </span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm total-amount\">of ${props.data.item.price}</span>\n\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-background\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-progress mw-100\" style={{ width: `${props.data.groupGift ? props.data.groupGift.amountReceived / props.data.item.price * 100 : 0}%` }} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[\n\t\t\t\t\t\tprops.draggable ? \"col-4\" : \"col-3\",\n\t\t\t\t\t].join(\" \")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n\t\t\t\t\t\t\t<Button variant=\"secondary\" className=\"give-this-gift-btn font-medium text-body py-1 px-3 mr-3\"\n\t\t\t\t\t\t\t// onClick={this.handleGuestView}\n\t\t\t\t\t\t\t>Give This Gift</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* TODO: change category */}\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t{props.data.registryCategories.length > 1 ?\n\t\t\t\t\t\tprops.data.registryCategories.map(category =>\n\t\t\t\t\t\t\tprops.data.registryCategories[0].id !== category.id ?\n\t\t\t\t\t\t\t\t<div className=\"text-body font-medium p-6 added-card-other-category\">\n\t\t\t\t\t\t\t\t\tYou have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabIndex=\"true\">{props.data.title}</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default GuestViewCard","import React, { useEffect, useState } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition, getCategories } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\nimport ViewFilter from \"modules/view-registry/components/view-filter/ViewFilter\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport { FILTERS } from \"utils/constants\"\nimport { MEDIA_URL_PREFIX } from \"utils/constants\";\nimport { graphQL } from 'api/axios';\nimport { GET_PRODUCTS } from 'api/queries';\nimport GuestViewCard from \"modules/guest-view/components/GuestViewCard\";\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const [localAddedProductState, handleFilterProductChange] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  // Updating product count in filter categories\n  const updateFilterList = (registryItemsAnalysisCount, categoryData) => {\n\n    let newFilterList = [\n      {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: registryItemsAnalysisCount.totalAvailable\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: registryItemsAnalysisCount.totalReserved\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: registryItemsAnalysisCount.totalPurchased\n          }\n        ]\n      },\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        // limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          let id = category.category.id\n          let count = categoryData[id]\n          if (count > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          let id = category.category.id\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = categoryData[id]\n          return newCategory\n        })\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: registryItemsAnalysisCount.under50\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: registryItemsAnalysisCount.between50100\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: registryItemsAnalysisCount.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: registryItemsAnalysisCount.maStoreItems\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: registryItemsAnalysisCount.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  const getFiltersApplied = (stateFilterApplied, activeSortFilterState) => {\n    const childFilterArray = [...stateFilterApplied]\n    let filterApplied = {}\n    // For Gift Status\n    if (childFilterArray.includes(AVAILABLE)) {\n      filterApplied.isAvailable = true\n    }\n    if (childFilterArray.includes(RESERVED)) {\n      filterApplied.isReserved = true\n    }\n    if (childFilterArray.includes(PURCHASED)) {\n      filterApplied.isPurchased = true\n    }\n\n    // For Sort\n    if (activeSortFilterState.sortId === 2) {\n      filterApplied.sortBy = 'item__price'\n    } else if (activeSortFilterState.sortId === 3) {\n      filterApplied.sortBy = '-item__price'\n    }\n\n    // For Store\n    let store = []\n    if (childFilterArray.includes(MONICA_AND_ANDY)) {\n      store.push(MONICA_AND_ANDY)\n    }\n    if (childFilterArray.includes(ELSEWHERE)) {\n      store.push(ELSEWHERE)\n    }\n    if (store.length) {\n      filterApplied.store = store\n    }\n\n    let lessThanEqual = 0\n    let greaterThanEqual = 0\n    let hasPriceFilter = false\n    // For Price\n    if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_2) &&\n      childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 0\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_2)) {\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_3)) {\n      lessThanEqual = 49\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_2) &&\n      childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 50\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1)) {\n      lessThanEqual = 49\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_2)) {\n      greaterThanEqual = 50\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    if (hasPriceFilter) {\n      filterApplied.price_Lte = lessThanEqual\n      filterApplied.price_Gte = greaterThanEqual\n    }\n\n    let categories = []\n    // For categories\n    for (let cat of [...stateCategoriesInfo]) {\n      if (childFilterArray.includes(cat.category.id)) {\n        categories.push(cat.category.id)\n      }\n    }\n    if (categories.length) {\n      filterApplied.categories = categories\n    }\n\n    return filterApplied\n  }\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        isViewCard={true}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let itemsOldPosition = arrayMove([...stateViewRegistryProducts], oldIndex, oldIndex)\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    dispatch(setViewRegistryProducts(items))\n    updateViewRegistryPosition(stateRegistryInfo.id, items, itemsOldPosition, dispatch)\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedProductsByFilters = async (addedProducts, filterApplied) => {\n    let finalFilterProduct = []\n    let filtersApplied = getFiltersApplied(stateFilterApplied, activeSortFilterState)\n    let reqData = {\n      query: GET_PRODUCTS,\n      variables: {\n        registryId: stateRegistryInfo.id,\n        ...filtersApplied\n      }\n    }\n\n    await graphQL(reqData).then(res => {\n      if (res.data.data.registryItems) {\n        // Storing Product of GuestView\n        let responseData = [...res.data.data.registryItems.registryItems.edges].map(item => {\n          let newItemObj = { ...item.node }\n          delete newItemObj.registryitemImage;\n          if (item.node.registryitemImage.length > 0) {\n            newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n          }\n          return newItemObj;\n        })\n        let finalData = responseData.filter(product => product.registryCategories.length > 0)\n        updateFilterList({ ...res.data.data.registryItems.registryItemsAnalysisCount }, { ...res.data.data.registryItems.categoryData })\n\n        finalFilterProduct = finalData\n        return finalData\n      }\n    }).catch(err => {\n\n      if (err.response && err.response.data.errors) {\n        for (const error of err.response.data.errors) {\n          // TODO: Implement toast if necessary\n          console.log(error.message)\n        }\n      }\n    })\n    return finalFilterProduct\n  }\n\n  const getParentCategory = (id) => {\n    return [...stateCategoriesInfo].find((parentCategory) => parentCategory.subCategories.find((subCategory) => subCategory.id === id))\n  }\n\n  const getSortedFilteredProducts = async (addedProducts, activeSortFilterState, viewRegistryProducts, filterApplied, registryInfo) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    let newSortedProducts = null\n\n    if (filterApplied.length > 0) {\n      newSortedProducts = await getSortedProductsByFilters(addedProducts, filterApplied)\n    }\n    else {\n      newSortedProducts = [...addedProducts]\n    }\n\n    if (activeSortFilterState.sortId === 1) {\n      if (filterApplied.length > 0) {\n        sortedData = newSortedProducts\n      }\n      else if (registryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n      }\n      else {\n        sortedData = sortByMustHave([...newSortedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...newSortedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...newSortedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    // handleFilterProductChange(sortedProducts)\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n  }\n\n  const sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  //Clear filter state\n  const clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    dispatch(clearViewFilter())\n  }\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  useEffect(() => {\n    let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n    filteredSortProducts.then(product => {\n      handleFilterProductChange(product)\n    })\n  }, [stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo])\n\n  // updateFilterList(stateAddedProducts)\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <ViewFilter />\n          </div>\n          <div className=\"col\"></div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <SortFilterSection productCount={localAddedProductState.length} />\n            {/* Added Products */}\n            {!stateGuestViewRegistry ?\n              localAddedProductState.length > 0 ?\n                <div className=\"mt-5\">\n                  <SortableContainer onSortEnd={onSortEnd} helperClass=\"drag-add-card\" axis=\"y\" lockAxis=\"y\" useDragHandle>\n                    {localAddedProductState.map((card, index) =>\n                      <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1 || stateFilterApplied.length !== 0} />\n                    )}\n                  </SortableContainer>\n                </div> :\n                <div className=\"d-flex flex-column empty-filter mt-6 pb-8\">\n                  <div className=\"font-body empty-filter-title text-center mx-auto mt-10\">\n                    <p>We couldn’t find any gifts that matches your filters...</p>\n                    <p>Please try clearing ‘Filters’ to view gifts.</p>\n                  </div>\n                  <div className=\"mx-auto mt-3\">\n                    <Button\n                      variant=\"primary\"\n                      className=\"px-3 py-1 font-medium empty-filter-title text-body\"\n                      onClick={(ev) => clearFilterHandler(ev)}\n                    >\n                      Clear Filters\n                  </Button>\n                  </div>\n                </div> :\n              // Guest View Cards\n              localAddedProductState.length > 0 ?\n                localAddedProductState.map((card, index) =>\n                  <GuestViewCard\n                    data={card} key={\"addedCard\" + index}\n                  />) : null\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Toast.scss';\n\nconst Toast = () => {\n  const closeToastMessage = (parentId) => {\n    toast.dismiss(parentId);\n  }\n\n  return (\n    <ToastContainer\n      position=\"top-center\"\n      className=\"m-a-toast-container\"\n      toastClassName=\"m-a-toast\"\n      autoClose={4000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      draggable={false}\n      closeOnClick={false}\n      closeButton={<i className=\"icon-close m-a-toast-close\" onClick={(event) => closeToastMessage(event.target.parentElement.id)} />}\n    />\n  )\n}\n\nexport default Toast;","import React from \"react\";\nimport \"./TodoWidget.scss\";\nimport {connect} from \"react-redux\";\n\nclass TodoWidget extends React.Component {\n\n  performTodoAction = todo => {\n  //  Perform action related to to-do\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-todo-widget\">\n        {this.props.stateTodo.length > 0 ?\n          (\n            //  When there is To-do\n            <div className=\"baby-registry-todo-section\">\n              <button className=\"baby-steps-button d-flex align-items-center py-3 pl-4 pr-8\">\n                <i className=\"baby-steps-icon\"/>\n                <div className=\"ml-5\">\n                  <p className=\"text-body font-medium\">{this.props.stateTodo.length} Baby Steps</p>\n                  <p className=\"text-sm text-left\">to take next!</p>\n                </div>\n              </button>\n\n              <div className=\"baby-steps-todo-content p-2\">\n                {this.props.stateTodo.map(todo => (\n                  <div className=\"baby-step-todo d-flex justify-content-between py-2 align-items-center\">\n                    <p className=\"text-body mr-9\">{todo.text}</p>\n                    {/*TODO: Update below icon once updated*/}\n                    <button className=\"baby-step-action-btn p-2 icon-chevron-right float-right\" onClick={() => this.performTodoAction(todo)}/>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n          :\n          (\n            //  When there is no To-do\n            <div className=\"baby-registry-no-todo-section d-flex align-items-center py-4\">\n              <i className=\"no-todo-icon\"/>\n              <div className=\"ml-2\">\n                <p className=\"text-body font-medium\">Great job!</p>\n                <p className=\"text-sm\">More to come, soon.</p>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTodo: state.registry.todo\n})\n\nexport default connect(\n  mapStateToProps\n)(TodoWidget);","import React from \"react\";\nimport ViewBy from \"../../components/view-by/ViewBy\";\n\nclass TrackGiftsSidebar extends React.Component{\n  render() {\n    return (\n      <>\n        <ViewBy/>\n      </>\n    );\n  }\n}\n\nexport default TrackGiftsSidebar;","import React from \"react\";\nimport \"./GiftCardPill.scss\";\n\nconst GiftCardPill = (props) => {\n  let className = \"\"\n  let text = \"\"\n  switch (props.variant) {\n    case \"purchased\":\n      className = \"track-gifts-purchased-pill\"\n      text = \"Purchased\"\n      break\n    case \"reserved\":\n      className = \"track-gifts-reserved-pill\"\n      text = \"Reserved\"\n      break\n    case \"received\":\n      className = \"track-gifts-received-pill\"\n      text = \"Received\"\n      break\n    default:\n      className = \"\"\n      break\n  }\n\n  return (\n    <div className={[\"track-gifts-pills px-2 d-inline-block\", className].join(\" \")}>\n      <span className=\"text-sm font-medium\">{props.amount != null || undefined ? `$${props.amount}` : null} {text}</span>\n    </div>\n  )\n}\n\nexport default GiftCardPill","import React from \"react\";\nimport \"./GiftCard.scss\";\nimport GiftCardPill from \"../gift-card-pill/GiftCardPill\";\nimport {CURRENCY} from \"../../../../utils/constants\";\n\nclass GiftCard extends React.Component {\n  friendsDetailRef = React.createRef()\n\n  toggleFriendsDetail = e => {\n    e.preventDefault()\n    if (this.friendsDetailRef.current) {\n      this.friendsDetailRef.current.classList.toggle(\"track-gifts-show-friends-detail\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-track-gifts-card pt-3 pb-4\">\n        <div className=\"row\">\n\n          <div className=\"col-1\">\n            {this.props.data.item.imageUrl ?\n              <img src={this.props.data.item.imageUrl} className=\"track-gifts-card-image\"/>\n              :\n              <div className=\"track-gifts-no-product-image\"/>\n            }\n          </div>\n\n          <div className=\"col-5\">\n            <div className=\"track-gifts-product-description pl-1\">\n              <div className=\"d-flex\">\n                <h4\n                  className={[\"font-medium track-gifts-product-title\", this.props.data.giftMessage && this.props.data.guestUser ? \"mr-5\" : \"mr-9\"].join(\" \")}>\n                  {this.props.data.title}\n                </h4>\n                {this.props.data.giftMessage && this.props.data.guestUser ?\n                  <button className=\"ml-auto track-gifts-gift-message-container text-left\">\n                    <div className=\"track-gifts-gift-message-content p-5\">\n                      <h3>Gift Message</h3>\n                      <p className=\"text-body mt-5 track-gifts-gift-message\">{this.props.data.giftMessage}</p>\n                      <p\n                        className=\"mt-3 text-sm font-medium\">{`${this.props.data.guestUser.firstName} ${this.props.data.guestUser.lastName ? `${this.props.data.guestUser.lastName[0]}.` : ''}`}</p>\n                    </div>\n                  </button>\n                  : null}\n\n              </div>\n\n              {this.props.data.item.isCashFund ?\n                <div className=\"mt-2\">\n                  {this.props.data.groupGift ?\n                    <div>\n                      <span className=\"text-sm font-medium\">{`${CURRENCY}${this.props.data.groupGift.amountReceived}`}</span>\n                      <span className=\"text-sm\">{` of ${CURRENCY}${this.props.data.item.price} received`}</span>\n                      <div className=\"track-gifts-cash-fund-progress-bar\">\n                        <div className=\"track-gifts-cash-fund-progress mw-100\"\n                             style={{width: `${(this.props.data.groupGift.amountReceived / this.props.data.item.price) * 100}%`}}/>\n                      </div>\n                    </div>\n                    : null}\n\n                </div>\n                :\n                <div className=\"mt-2\">\n                  {this.props.data.isPurchased ? <GiftCardPill variant=\"purchased\"/> : null}\n                  {this.props.data.isReserved ? <GiftCardPill variant=\"reserved\"/> : null}\n                  {this.props.data.isCashAcceptedOnly && this.props.data.isAmountReceived ?\n                    <GiftCardPill variant=\"received\" amount={this.props.data.item.price}/> : null}\n                  {/* TODO: Add date of purchased */}\n                </div>\n              }\n\n\n            </div>\n          </div>\n\n          <div className=\"col-6\">\n            {this.props.data.isGroupGift ?\n              // Group Gift\n              (this.props.data.groupGift && this.props.data.groupGift.guestUser.length > 0 ?\n                <div className=\"track-gifts-group-users-details\">\n                  <p className=\"text-sm font-medium\">{`${this.props.data.groupGift.guestUser.length} friends`}</p>\n                  <a href=\"#\" className=\"track-gifts-view-friends-link text-sm font-medium\"\n                     onClick={(e) => this.toggleFriendsDetail(e)}>View</a>\n                  <div ref={this.friendsDetailRef} className=\"track-gifts-friends-detail pt-3 pb-1\">\n                    <div className=\"friends-detail-header d-flex pb-2 px-3\">\n                      <p className=\"text-sm font-medium\">{`${this.props.data.groupGift.guestUser.length} friends`}</p>\n                      <i className=\"icon-close close-friends-detail-icon ml-auto\" onClick={(e) => this.toggleFriendsDetail(e)}/>\n                    </div>\n                    <div className=\"px-3\">\n                      {this.props.data.groupGift.guestUser.map(user => (\n                        <div className=\"friend-detail d-flex py-2\">\n                          <div className=\"mr-10\">\n                            <p className=\"text-sm font-medium\">{`${user.firstName} ${user.lastName}`}</p>\n                            <p className=\"text-sm friend-user-email\">{user.guestEmail}</p>\n                          </div>\n                          <div className=\"ml-auto\">\n                            <p className=\"text-sm font-medium friend-contribution-amount\">{`${CURRENCY}${user.contributionAmount}`}</p>\n                            {/*  TODO: Add Contribution Date */}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                : null)\n              :\n              // Single guest User\n              (this.props.data.guestUser ?\n                <div className=\"track-gifts-user-detail\">\n                  <p\n                    className=\"text-sm font-medium\">{`${this.props.data.guestUser.firstName} ${this.props.data.guestUser.lastName}`}</p>\n                  <p className=\"text-sm track-gifts-user-email\">{this.props.data.guestUser.guestEmail}</p>\n                </div>\n                : null)\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GiftCard;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {TRACK_GIFTS_VIEWS} from \"../../components/view-by/ViewBy\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {setTrackGiftsProduct, setTrackGiftsPaginationInfo} from \"../../TrackGiftsAction\";\nimport {GET_TRACK_GIFTS} from \"api/queries\"\nimport {TRACK_GIFTS_PRODUCTS_PER_REQUEST} from \"../../../../utils/constants\";\nimport {graphQL} from \"../../../../api/axios\";\nimport GiftCard from \"../../components/gift-card/GiftCard\";\nimport \"./TrackGiftContent.scss\";\n\n// Component for No registry Gifts Found\nconst NoRecordFound = () => {\n  return (\n    <h2>No Gifts Found...</h2>\n  )\n}\n\nclass TrackGiftsContent extends React.Component {\n\n  state = {\n    currentView: null\n  }\n\n  getTrackGiftsProduct = (clearProducts = false) => {\n    let reqData = {\n      query: GET_TRACK_GIFTS,\n      operationName: \"registryGifts\",\n      variables: {\n        registryId: this.props.stateRegistryInfo?.id,\n        giftGivers: this.props.stateTrackGiftsView?.id === TRACK_GIFTS_VIEWS[1].id,  // [1] index is Gift Giver\n        after: clearProducts ? null : this.props.stateTrackGiftsPagination.endCursor,\n        first: TRACK_GIFTS_PRODUCTS_PER_REQUEST\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data.registryGifts && res.data.data.registryGifts.gifts && res.data.data.registryGifts.gifts.edges.length > 0) {\n        let registryGifts = res.data.data.registryGifts.gifts\n        let products = registryGifts.edges.map(item => ({...item.node}))\n        let pagination = null\n        if (registryGifts.pageInfo) {\n          pagination = {\n            hasNextPage: registryGifts.pageInfo.hasNextPage,\n            endCursor: registryGifts.pageInfo.endCursor,\n          }\n        }\n        if (pagination) {\n          this.props.dispatch(setTrackGiftsPaginationInfo({...pagination}))\n        }\n        if (products.length > 0) {\n          if (clearProducts) {\n            this.props.dispatch(setTrackGiftsProduct([...products]))\n          } else {\n            this.props.dispatch(setTrackGiftsProduct([...this.props.stateTrackGiftsProducts, ...products]))\n          }\n        }\n      } else {\n        this.props.dispatch(setTrackGiftsPaginationInfo({\n          hasNextPage: false,\n          endCursor: null\n        }))\n      }\n    }).catch(err => {\n      this.props.dispatch(setTrackGiftsPaginationInfo({\n        hasNextPage: false,\n        endCursor: null\n      }))\n      console.error(err.response)\n    })\n  }\n\n  checkProductAvailability = product => {\n    // Checking if product has any guestUser or not (Availability)\n    if (!product.isGroupGift) {\n      return !(product.isReserved || product.isPurchased || (product.isCashAcceptedOnly && product.isAmountReceived))\n    } else {\n      if (product.groupGift) {\n        return product.groupGift.guestUser.length <= 0\n      } else {\n        return true\n      }\n    }\n  }\n\n  getProductsBasedOnView = (view, stateProducts) => {\n    let products = []\n    let availableProducts = []\n    let guestUsersEmails = []\n\n    if (view?.id === TRACK_GIFTS_VIEWS[0].id) { // [0] index is Gifts\n      //  Gifts View\n      for (const product of stateProducts) {\n        if (this.checkProductAvailability(product)) {\n          availableProducts.push({...product})\n        } else {\n          products.push({...product})\n        }\n      }\n\n      // Show Available products in Gifts View only if Available Filter is applied\n      // if (availableProducts.length > 0) {\n      //   products.push(...availableProducts)\n      // }\n    } else {\n      //  Gift Giver View\n      for (const product of stateProducts) {\n        if (this.checkProductAvailability(product)) {\n          availableProducts.push({...product})\n        } else {\n          // Grouping Product\n          if (product.isGroupGift) {\n            // Looping through each groupGift User\n            for (const groupUser of product.groupGift.guestUser) {\n              // console.log(groupUser)\n              if (guestUsersEmails.indexOf(groupUser.guestEmail) !== -1) {\n                // User already have product\n                products = products.map(groupProduct => {\n                  if (groupProduct.user.guestEmail === groupUser.guestEmail) {\n                    groupProduct.products.push(product)\n                  }\n                  return groupProduct\n                })\n              } else {\n                // User doesn't have product\n                products.push({\n                  user: {...groupUser},\n                  products: [{...product}]\n                })\n                guestUsersEmails.push(groupUser.guestEmail)\n              }\n            }\n          } else {\n            //  Not a group Gift\n            if (guestUsersEmails.indexOf(product.guestUser.guestEmail) !== -1) {\n              // User already have product\n              products = products.map(groupProduct => {\n                if (groupProduct.user.guestEmail === product.guestUser.guestEmail) {\n                  groupProduct.products.push(product)\n                }\n                return groupProduct\n              })\n            } else {\n              // User doesn't have product\n              products.push({\n                user: {...product.guestUser},\n                products: [{...product}]\n              })\n              guestUsersEmails.push(product.guestUser.guestEmail)\n            }\n          }\n\n\n        }\n      }\n\n      if (availableProducts.length > 0) {\n        products.push({\n          availableProducts: true,\n          products: [...availableProducts]\n        })\n      }\n    }\n\n    return products\n  }\n\n  render() {\n\n    if (this.props.stateTrackGiftsProducts.length <= 0 && this.state.currentView && this.props.stateTrackGiftsPagination.hasNextPage) {\n      this.getTrackGiftsProduct(true)\n    }\n\n    // Getting new products when new views are switched\n    if (this.state.currentView?.id !== this.props.stateTrackGiftsView?.id) {\n      this.setState({\n        currentView: {...this.props.stateTrackGiftsView}\n      })\n      this.getTrackGiftsProduct(true)\n    }\n\n    const products = this.getProductsBasedOnView(this.props.stateTrackGiftsView, this.props.stateTrackGiftsProducts)\n\n    if (this.props.stateTrackGiftsProducts.length <= 0 && !this.props.stateTrackGiftsPagination.hasNextPage) {\n      return <NoRecordFound/>\n    } else if (this.props.stateTrackGiftsView?.id === TRACK_GIFTS_VIEWS[0].id) {\n\n      // For Gifts\n\n      return (\n        <div>\n          <div className=\"row mb-2\">\n            <div className=\"col-6\">\n              <p className=\"text-sm font-medium\">Gift details</p>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"text-sm font-medium\">Gifted by</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <InfiniteScroll\n                next={this.getTrackGiftsProduct}\n                hasMore={this.props.stateTrackGiftsPagination.hasNextPage}\n                loader={<h4>Loading...</h4>}\n                dataLength={this.props.stateTrackGiftsProducts.length}\n              >\n                {products.map(product => {\n                  // return <p className=\"my-5\">{product.title}</p>\n                  return <GiftCard data={product}/>\n                })}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n\n      // For Gift Giver\n\n      return (\n        <div>\n          <InfiniteScroll\n            next={this.getTrackGiftsProduct}\n            hasMore={this.props.stateTrackGiftsPagination.hasNextPage}\n            loader={<h4>Loading...</h4>}\n            dataLength={this.props.stateTrackGiftsProducts.length}\n          >\n            {products.map(groupedProduct => {\n                return (\n                  <div className=\"mb-4 track-gifts-gift-giver-view\">\n                    <div className=\"mb-2\">\n                    <span\n                      className=\"text-body font-medium\">{groupedProduct.availableProducts ? \"Available\" : `${groupedProduct.user.firstName} ${groupedProduct.user.lastName}`}\n                    </span>\n                      {!groupedProduct.availableProducts ? <span className=\"ml-1 text-body\">{groupedProduct.user.guestEmail}</span> : null }\n                      <span\n                        className=\"ml-1 text-body font-medium gift-givers-user-gift-count px-2\">{groupedProduct.products.length} gifts</span>\n                    </div>\n                    <div>\n                      {groupedProduct.products.map(product => (\n                        <GiftCard data={product}/>\n                      ))}\n                    </div>\n                  </div>\n                )\n            })}\n          </InfiniteScroll>\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info\n})\n\nexport default connect(\n  mapStateToProps\n)(TrackGiftsContent);","import React from \"react\";\nimport TrackGiftsSidebar from \"./containers/track-gifts-sidebar/TrackGiftsSidebar\";\nimport TrackGiftsContent from \"./containers/track-gifts-content/TrackGiftsContent\";\n\nclass TrackGifts extends React.Component {\n  render() {\n    return (\n      <div className=\"container mt-8\">\n        <div className=\"row\">\n\n          {/* Sidebar content */}\n          <div className=\"col-2\">\n            <div className=\"row mb-5\">\n              <div className=\"col\">\n                <h4 className=\"font-medium\">View</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <TrackGiftsSidebar/>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"col-10\">\n            <div className=\"row mb-5\">\n              <div className=\"col\">\n                <h4 className=\"font-medium\">Gifts</h4>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <TrackGiftsContent/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrackGifts;","import React from 'react';\nimport {NavLink, Switch, Route, Redirect} from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport {useTranslation} from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport {useSelector} from 'react-redux';\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport TodoWidget from \"./component/todo-widget/TodoWidget\";\nimport TrackGifts from \"../track-gifts/TrackGifts\";\n\nconst RegistryHero = (props) => {\n\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const {t} = useTranslation();\n  const registryData = RegistryHeroData\n\n  if (!stateRegistryInfo.id && stateRegistryInfo.notFound) {\n    return <Redirect to={route.ONBOARDING.HOME}/>\n  }\n\n  return (\n    <>\n      {!stateGuestViewRegistry ?\n        <div className=\"registry-hero\">\n          <div className=\"container pt-6\">\n            <div className=\"row\">\n              <div className=\"col d-flex justify-content-between align-items-start\">\n                <div className=\"d-flex align-items-end\">\n                  <h1>{stateRegistryInfo.name}</h1>\n                  <span className=\"text-sm ml-1\">{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</span>\n                </div>\n                <div>\n                  <TodoWidget/>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-flex registry-hero-navigation-links\">\n                  <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.TRACK_GIFTS.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> : null}\n\n      {/* Registry Nav Routes */}\n      {stateRegistryInfo.id ?\n        <Switch>\n          <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME}/></Route>\n          <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry}/>\n          <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry}/>\n          <Route exact path={route.TRACK_GIFTS.HOME} component={TrackGifts}/>\n        </Switch>\n        : null}\n\n      <Toast />\n    </>\n  )\n}\n\nexport default RegistryHero;","import React from \"react\";\nimport \"./Option.scss\";\n\nconst Option = (props) => {\n  return (\n    <div\n      className={[\"px-4 py-3 baby-registry-question-option\", props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}>{props.children}</div>\n  );\n}\n\nexport default Option;","import React from \"react\";\nimport \"./Onboarding.scss\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport routes from \"utils/routes\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport {addQuestionAnswer, updateQuestionAnswer} from \"./OnboardingAction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  CREATE_REGISTRY,\n  SAVE_SINGLE_QUESTION_RESPONSE\n} from \"../../api/mutations\";\nimport {graphQLNoToken, graphQLNoHeader} from \"../../api/axios\";\nimport {Cookies} from \"react-cookie\";\nimport {setLoggingStatus, setOnboardingRegistry} from \"../registry/RegistryActions\";\nimport {getOnboardingQuestions} from \"../../utils/commonFunction\";\nimport {GET_REGISTRIES} from \"../../api/queries\";\nimport {M_A_FORGOT_PASSWORD_LINK} from \"../../utils/constants\";\n\nclass Onboarding extends React.Component {\n\n  //EMAIL PATTERN\n  MAIL_FORMAT = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  // Static titles\n  LOGIN_TITLE = \"Sign in for free gifts, free shipping, and exclusive access to our limited edition prints\"\n  SIGNUP_TITLE = \"Let’s make it official. Time to create your account.\"\n  PARTNER_TITLE = \"Your partner’s details please\"\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  LOGIN = \"Login\"\n  PARTNER = \"Partner\"\n\n  state = {\n    parentId: null,\n    question: {},\n    login: false,\n    toastMessage: \"\",\n    signUpErrors: {},\n    signInErrors: {},\n    submitAnswer: false,\n    bulkSaved: true,\n  }\n\n  componentDidMount() {\n    window.onpopstate = () => {\n      if (this.props.location.pathname.search(routes.ONBOARDING.HOME) >= 0) {\n        this.setQuestionBasedOnId(this.props.match.params['questionId'])\n        this.clearToastMessage()\n      }\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      signUpErrors: {},\n      signInErrors: {}\n    })\n  }\n\n  createRegistry = () => {\n    let cookies = new Cookies();\n    graphQLNoHeader({query: CREATE_REGISTRY}, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data) {\n        let registryId = res.data.data.createRegistry.registry.id\n        if (registryId) {\n          this.props.dispatch(setOnboardingRegistry(registryId))\n          this.submitAllAnswers(registryId, true)\n        }\n      }\n    }).catch(err => {\n      console.error(err.response)\n    })\n  }\n\n  checkValidEmail = (email) => {\n    return email.match(this.MAIL_FORMAT)\n  }\n\n  submitAllAnswers = async (optionalRegistryId = null, submitBulk = false) => {\n    if (this.state.submitAnswer || submitBulk) {\n      if (this.props.stateOnboardingAnswers.length > 0 && (this.props.stateOnboardingRegistry || optionalRegistryId)) {\n        const registryId = optionalRegistryId ? optionalRegistryId : this.props.stateOnboardingRegistry;\n        let action = null;\n        let returnToURL = null;\n\n        const cookies = new Cookies();\n        const token = cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"\n\n        if (submitBulk) {\n          // Submitting all answers at once\n\n          const response = this.props.stateOnboardingAnswers.map(answer => {\n            return {\n              question: answer.question,\n              questionOptionInput: [\n                {\n                  option: answer.response.option,\n                  optionText: answer.response.optionText\n                }\n              ]\n            }\n          })\n          let reqData = {\n            query: SAVE_QUESTION_RESPONSE,\n            operationName: \"addRegistryQuestionOption\",\n            variables: {\n              registryId: registryId,\n              answers: response\n            }\n          }\n\n          await graphQLNoHeader(reqData, {\n            headers: {\"Authorization\": token}\n          }).then(res => {\n            if (res.data.data.addRegistryMultipleQuestionOption) {\n              console.log(\"Saved\")\n            }\n          }).catch(err => {\n            toast.error(\"Answer is not saved.\")\n            console.error(err.response);\n          }).finally(async () => {\n            await this.setState({\n              submitAnswer: false\n            })\n          })\n        } else {\n          //  Submitting single answer at once\n\n          let response = null\n\n          if (this.props.stateOnboardingAnswers.length > 0) {\n            const answer = this.props.stateOnboardingAnswers[this.props.stateOnboardingAnswers.length - 1]\n            action = answer.response.action ? answer.response.action : null;\n            response = {\n              question: answer.question,\n              questionOptionInput: [\n                {\n                  option: answer.response.option,\n                  optionText: answer.response.optionText\n                }\n              ]\n            }\n          }\n\n          if (action) {\n            switch (action) {\n              case \"build-registry\":\n                returnToURL = window.location.origin + routes.MY_REGISTRY.HOME\n                break\n              case \"registry-quiz\":\n                returnToURL = window.location.origin + routes.PERSONALIZE.HOME\n                break\n              default:\n                returnToURL = window.location.origin + routes.REGISTRY.HOME\n                break\n            }\n          }\n\n          if (response) {\n            let reqData = {\n              query: SAVE_SINGLE_QUESTION_RESPONSE,\n              operationName: \"updateOrCreateRegistrySingleQuestionOption\",\n              variables: {\n                registryId: registryId,\n                registryQuestionOptionInput: response\n              }\n            }\n\n            if (action && returnToURL) {\n              reqData.variables['returnTo'] = returnToURL\n            }\n\n            graphQLNoHeader(reqData, {\n              headers: {\"Authorization\": token}\n            }).then(res => {\n              if (res.data.data.updateOrCreateRegistrySingleQuestionOption) {\n                console.log(\"Saved\")\n                if (res.data.data.updateOrCreateRegistrySingleQuestionOption.redirectionUrl) {\n                  window.open(res.data.data.updateOrCreateRegistrySingleQuestionOption.redirectionUrl, \"_self\")\n                }\n              }\n            }).catch(err => {\n              console.error(err);\n            }).finally(() => {\n              this.setState({\n                submitAnswer: false\n              })\n            })\n          }\n        }\n\n      }\n    }\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    let nextFullQuestion = null;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.stateOnboardingQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          nextFullQuestion = ques\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      if (this.props.stateLoggedIn && this.state.redirectionUrl) {\n        // window.open(this.state.redirectionUrl, \"_self\")\n      }\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null\n      })\n\n      if (nextFullQuestion && nextFullQuestion.answers.length > 0 && (nextFullQuestion.options.length > 0 && !nextFullQuestion.options[0].action)) {\n        this.gotoNextQuestion(nextFullQuestion, null)\n        return;\n      } else {\n        this.setQuestionBasedOnId(nextQuestionId)\n        this.setToastMessage()\n        this.props.history.push(routes.ONBOARDING.HOME + `/${nextQuestionId}`)\n      }\n\n\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.stateOnboardingQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = async (questionId, response) => {\n    const alreadyAnswered = this.props.stateOnboardingAnswers.find(el => el.question === this.state.question.id)\n\n\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.stateOnboardingAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n          break;\n        }\n        newState.push(answer)\n      }\n      await this.props.dispatch(updateQuestionAnswer(newState))\n    } else {\n      await this.props.dispatch(addQuestionAnswer({question: questionId, response: response}))\n    }\n    await this.setState({\n      submitAnswer: true\n    })\n    this.submitAllAnswers(null, false)\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    this.addAnswerToState(questionId, {option: option.id, optionText: option.value, action: option.action});\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n  }\n\n  watchNextBtn = (ev) => {\n    this.setState({\n      nextBtnState: ev.target.value.length <= 0\n    })\n  }\n\n  answerDataQuestion = (questionId, response, dateCheck) => {\n    if (dateCheck) {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var currentDate = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n      if (currentDate <= response) {\n        this.addAnswerToState(questionId, {option: 0, optionText: response})\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Invalid date\")\n      }\n    } else {\n      this.addAnswerToState(questionId, {option: 0, optionText: response})\n      this.gotoNextQuestion(this.state.question, this.state.parentId);\n    }\n  }\n\n  textInputTypeChangeHandler = (ev, inputRefs) => {\n    let enableBtn = false;\n\n    for (const inputRef of inputRefs) {\n      if (inputRef.current.value.length <= 0) {\n        enableBtn = true\n        break\n      }\n    }\n\n    this.setState({\n      nextBtnState: enableBtn\n    })\n  }\n\n  changeLoginState = (ev, value, refs) => {\n    ev.preventDefault()\n    for (let ref of refs) {\n      if (ref.current) {\n        ref.current.value = \"\"\n      }\n    }\n    this.setState({\n      login: value\n    })\n  }\n\n  setErrorBasedOnResponse = (err, type) => {\n    if (err.response.data && err.response.data.errors) {\n      for (let error of err.response.data.errors) {\n        let parentErrors = err.response.data.errors\n\n        if (parentErrors.length > 0) {\n          for (const subErrors of parentErrors) {\n            if (subErrors.errors && (subErrors.errors instanceof Array ? subErrors.errors.length > 0 : true)) {\n              let newErrorState = {}\n              for (const error in subErrors.errors) {\n                newErrorState[error] = subErrors.errors[error].length > 0 ? subErrors.errors[error][0] : \"\"\n              }\n              switch (type) {\n                case \"signUp\":\n                  this.setState({\n                    signUpErrors: newErrorState\n                  })\n                  break\n                case \"signIn\":\n                  this.setState({\n                    signInErrors: newErrorState\n                  })\n                  break\n              }\n            } else {\n              toast.error(error.message)\n            }\n          }\n        }\n      }\n    }\n    console.error(err.response)\n  }\n\n  signInClickHandler = (emailRef, passwordRef) => {\n    if (emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signInErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    let reqData = {\n      query: LOGIN_USER,\n      operationName: \"login_user\",\n      variables: {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(async res => {\n      if (res.data.data.loginUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.loginUser.token, {path: \"/\"})\n\n        // Checking if user has registry\n        let data = {\n          query: GET_REGISTRIES\n        }\n        await graphQLNoHeader(data, {headers: {\"Authorization\": \"Token \" + res.data.data.loginUser.token}}).then(async registryRes => {\n          if (registryRes.data.data.registries.edges.length > 0) {\n            // TODO: Set currently active registry\n            let activeRegistry = registryRes.data.data.registries.edges[registryRes.data.data.registries.edges.length - 1]\n            let token = cookies.get(\"access_token\")\n            if (activeRegistry.node.id && token) {\n              await this.props.dispatch(setOnboardingRegistry(activeRegistry.node.id))\n              await getOnboardingQuestions(this.props.dispatch, activeRegistry.node.id, token)\n            }\n            if (res.data.data.loginUser.redirectionUrl) {\n              // window.open(res.data.data.loginUser.redirectionUrl, \"_self\")\n            }\n            // window.open(routes.MY_REGISTRY.HOME, \"_self\")\n            // updateRegistryDetailState(this.props.dispatch, registryRes.data.data.registries.edges);\n          } else {\n            // Creating Registry\n            this.createRegistry()\n          }\n\n        }).catch(err => {\n          console.error(err);\n        })\n        this.setState({\n          redirectionUrl: res.data.data.loginUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers(null, true)\n      }\n    }).catch(err => {\n      if (err.response.status === 401) {\n        toast.error(\"Invalid email or password\");\n        return;\n      }\n      this.setErrorBasedOnResponse(err, \"signIn\")\n    })\n  }\n\n  getSignInContent = () => {\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"signIn-email\"\n            ref={emailRef}\n            placeholder=\"johndoe@email.com\"\n          />\n          {this.state.signInErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-1\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"signIn-password\"\n            ref={passwordRef}\n            placeholder=\"Password\"\n          />\n          {this.state.signInErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.password}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <a className=\"text-body font-medium onboarding-link-text\" href={M_A_FORGOT_PASSWORD_LINK} target=\"_blank\">Forgot\n            Password</a>\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signInClickHandler(emailRef, passwordRef)}\n        >Sign In</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Don't have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                        onClick={(ev) => this.changeLoginState(ev, false, [emailRef, passwordRef])}\n        >Sign Up</a></h4>\n      </>\n    )\n  }\n\n  signUpClickHandler = (nameRef, emailRef, passwordRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signUpErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    // Clearing all error messages\n    this.clearErrorState()\n\n    let reqData = {\n      query: REGISTER_USER,\n      operationName: \"register_user\",\n      variables: {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.registerUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.registerUser.token, {path: \"/\"})\n        this.setState({\n          redirectionUrl: res.data.data.registerUser.redirectionUrl\n        })\n        this.createRegistry()\n        this.submitAllAnswers(null, true)\n        this.props.dispatch(setLoggingStatus(true))\n      }\n    }).catch(err => {\n      this.setErrorBasedOnResponse(err, \"signUp\")\n    })\n  }\n\n  getSignUpContent = () => {\n    let nameRef = React.createRef()\n    let emailRef = React.createRef()\n    let passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.name ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Doe\"\n            ref={nameRef}\n          />\n          {this.state.signUpErrors.name ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.name}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"johndoe@email.com\"\n            ref={emailRef}\n          />\n          {this.state.signUpErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n          />\n          {this.state.signUpErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.password}</p>\n            : null}\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signUpClickHandler(nameRef, emailRef, passwordRef)}\n        >Sign Up</Button>\n        <h4 className=\"mt-11\">Already have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\" tabindex\n                                                          onClick={(ev) => this.changeLoginState(ev, true, [nameRef, emailRef, passwordRef])}>Sign\n          In</a></h4>\n      </>\n    )\n  }\n\n  savePartnerDetail = (nameRef, emailRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      toast.error(\"Invalid email address\");\n      return;\n    }\n\n    const cookies = new Cookies();\n    let reqData = {\n      query: ADD_PARTNER_ACCOUNT,\n      operationName: \"addPartner\",\n      variables: {\n        partnerDetail: {\n          email: emailRef.current.value,\n          firstName: nameRef.current.value\n        }\n      }\n    }\n    graphQLNoHeader(reqData, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data.addPartnerAccount) {\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.response.data);\n    })\n  }\n\n  getPartnerContent = () => {\n    const nameRef = React.createRef()\n    const emailRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={nameRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1 mb-0\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={emailRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.savePartnerDetail(nameRef, emailRef)}\n        >Next</Button>\n      </>\n    )\n  }\n\n  render() {\n    // if (this.props.stateOnboardingAnswers) {\n    //   this.submitAllAnswers(null, false)\n    // }\n\n    // Redirecting user to registry home if registry found\n    if (this.props.stateRegistryInfo.id) {\n      return <Redirect to={routes.MY_REGISTRY.HOME}/>\n    }\n\n    // Redirecting to first question if not answered any\n    if (this.props.stateOnboardingQuestions.length > 0\n      && this.props.stateOnboardingAnswers.length <= 0\n      && this.props.location.pathname !== routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`) {\n      return <Redirect to={routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`}/>\n    }\n\n    if (!this.state.question.title && this.props.stateOnboardingQuestions.length > 0 && this.props.stateRouter.location.pathname !== routes.ONBOARDING.HOME + `/${this.state.question.id}`) {\n      this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    }\n\n    // Skipping Login Question if user is already logged in\n    if (this.props.stateLoggedIn && this.state.question.answerInputType === this.LOGIN) {\n      // If user already logged into M&A Store\n      this.setState((prevState, _) => ({\n        redirectionUrl: prevState.redirectionUrl ? prevState.redirectionUrl : routes.MY_REGISTRY.HOME\n      }))\n      this.gotoNextQuestion(this.state.question, null);\n    }\n\n    if (this.state.toastMessage) {\n      if (this.props.history.action === \"PUSH\") {\n        toast.dismiss()\n        toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n        setTimeout(() => this.setState({toastMessage: \"\"}), 4000)\n      }\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n    var now = new Date();\n    var day = (\"0\" + now.getDate()).slice(-2);\n    var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    var today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      options = this.state.question.options.map(option => (\n        <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n          <span className=\"text-sm ml-1 onboarding-option-help-text\">{option.helpText}</span> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === \"Date\") {\n      let inputRef = React.createRef();\n      options.push(\n        <div className=\"d-flex flex-column\">\n          {/*TODO: Get placeholder from backend*/}\n          <input\n            type=\"date\"\n            className=\"onboarding-input py-1 px-2 text-body mb-0\"\n            placeholder=\"Date\"\n            ref={inputRef}\n            onKeyDown={(e) => e.preventDefault()}\n            onChange={(ev) => this.watchNextBtn(ev)}\n            min={today}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(this.state.question.id, inputRef.current.value, true)}\n            className=\"px-3 py-1 font-medium mt-4 onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === \"Text\") {\n      let inputRefs = []\n      const inputRef = React.createRef()\n      inputRefs.push(inputRef)\n      options.push(\n        // TODO: Update this part if there is a Text type question\n        <div className=\"d-flex flex-column\">\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"Text\"\n            name=\"Answer\"\n            ref={inputRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(this.state.question.id, inputRef.current ? inputRef.current.value : \"\", false)}\n            className=\"mt-4 px-3 py-1 font-medium onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === this.LOGIN) {\n      let content = null;\n      if (this.state.login) {\n        staticQuestionTitle = this.LOGIN_TITLE\n        content = this.getSignInContent()\n      } else {\n        staticQuestionTitle = this.SIGNUP_TITLE\n        content = this.getSignUpContent()\n      }\n\n      options.push(content)\n    } else if (this.state.question.answerInputType === this.PARTNER) {\n      staticQuestionTitle = this.PARTNER_TITLE;\n      options.push(this.getPartnerContent())\n    }\n\n    return (\n      <>\n        <div className=\"baby-registry-onboarding container\">\n          <div className=\"row justify-content-center mt-24\">\n            <div className=\"col-12 col-md-6\">\n              <span\n                className=\"font-body onboading-question\">{[this.LOGIN, this.PARTNER].indexOf(this.state.question.answerInputType) !== -1 ? staticQuestionTitle : this.state.question.title}</span>\n            </div>\n          </div>\n          <div className=\"row justify-content-center mt-6\">\n            <div className=\"col-12 col-md-6\">\n              {options.map(option => option)}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          className=\"onboarding-toast-container\"\n          toastClassName=\"onboarding-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateOnboardingAnswers: state.onboarding.answers,\n    stateOnboardingRegistry: state.registry.onboardingRegistry,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Onboarding);","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from 'react';\nimport \"./PersonaliseHeader.scss\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\n\n\nconst PersonaliseHeader = (props) => {\n    const closePersonalise = (event) => {\n        event.preventDefault();\n        props.history.push(routes.REGISTRY.HOME)\n    }\n    \n    return (\n        <div className=\"personalise-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-between py-2\">\n                        <p className=\"text-body font-medium personalise-text\">My Registry Quiz</p>\n                        <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(PersonaliseHeader);","import React from 'react';\nimport \"./PersonaliseFooter.scss\";\n\n\nconst PersonaliseFooter = (props) => {\n  const closePersonalise = (event) => {\n    event.preventDefault();\n    // props.history.push(routes.REGISTRY.HOME)\n  }\n\n  return (\n    <div className=\"personalise-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4 justify-content-between pt-2 pb-4\">\n            <div className=\"mb-1\">\n              {props.percentage ? <p className=\"text-sm\">{props.percentage}% complete</p> : null}\n            </div>\n            <div className=\"personalise-progress-background\">\n              <div className=\"personalise-progress\" style={{ width: `${props.percentage}%` }} />\n            </div>\n          </div>\n          {/* <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} /> */}\n          <div className=\"col d-flex justify-content-end\">\n            <i className=\"icon-chevron-left align-self-center personalise-footer-icon p-2\" onClick={props.prevQuestion} />\n            <i className=\"icon-chevron-right align-self-center personalise-footer-icon p-2 ml-2\" onClick={props.nextQuestion} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonaliseFooter;","import React, { createRef } from \"react\";\n// import \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport PersonaliseHeader from \"./components/personalise-header/PersonaliseHeader\";\nimport { getPersonalizeQuestions } from \"utils/commonFunction\";\nimport { connect } from \"react-redux\";\nimport PersonaliseFooter from \"./components/personalise-footer/PersonaliseFooter\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport { updatePersonalizeQuestionAnswer, addPersonalizeQuestionAnswer, addPersonalizeQuestion } from \"./PersonaliseCheckListActions\";\nimport \"./PersonaliseChecklist.scss\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_SINGLE_QUESTION_RESPONSE } from 'api/mutations';\nimport { graphQL } from 'api/axios';\n\nclass PersonaliseChecklist extends React.Component {\n\n  state = {\n    parentId: null,\n    prevQuestionId: [],\n    question: {},\n    activeQuestionId: null,\n    toastMessage: \"\",\n    percentage: 0,\n    checkBoxSelected: []\n  }\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  CHECKBOX = \"Checkbox\"\n\n  componentDidMount() {\n    // getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    this.clearToastMessage()\n  }\n\n  calulatePercentage = (answerQuestionCount, totalQuestionCount) => {\n    let totalAnwer = 0;\n\n    const questions = [...this.props.statePersonaliseQuestions]\n    for (let question of questions) {\n      if (question.answers.length > 0) {\n        totalAnwer++;\n      }\n      if (questions.followUpQuestion) {\n        for (let subQuestion of question.followUpQuestions) {\n          if (subQuestion.answers.length > 0) {\n            totalAnwer++;\n          }\n        }\n      }\n    }\n    return this.props.statePersonaliseQuestions.length ? Math.ceil(totalAnwer * 100 / totalQuestionCount) : 0;\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    if (this.state.question.answerInputType === this.CHECKBOX) {\n      this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)\n    }\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.statePersonaliseQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null,\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        activeQuestionId: nextQuestionId\n      })\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.clearToastMessage();\n    }\n  }\n\n  gotoPrevQuestion = (prevQuestionId) => {\n    this.setQuestionBasedOnId(prevQuestionId);\n    if (this.state.prevQuestionId.length > 1) {\n      let popPrevQuestionId = [...this.state.prevQuestionId];\n      popPrevQuestionId.pop();\n      this.clearToastMessage();\n      this.setState({\n        prevQuestionId: popPrevQuestionId,\n        activeQuestionId: popPrevQuestionId.length > 0 ? popPrevQuestionId[popPrevQuestionId.length - 1] : this.state.activeQuestionId\n      })\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.statePersonaliseQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId,\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.statePersonaliseAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.statePersonaliseAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n        }\n        else {\n          newState.push(answer)\n        }\n      }\n      this.props.dispatch(updatePersonalizeQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addPersonalizeQuestionAnswer({ question: this.state.question.id, response: response }))\n    }\n  }\n\n  isActiveIdPresent = () => {\n    for (let prevQuestion of this.state.prevQuestionId) {\n      if (prevQuestion === this.state.activeQuestionId) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    this.addAnswerToState(option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    let finalAnswer = [{\n      option: option.id,\n      optionText: option.value\n    }]\n\n    this.submitQuestionAnswer(questionId, finalAnswer);\n  }\n\n  answerCheckBoxQuestion = (questionId, option) => {\n    this.addAnswerToState(option[0]);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    // let finalAnswer = [{\n    //   option: option.id,\n    //   optionText: option.value\n    // }]\n\n    let finalAnswer = []\n\n    for (let op of option) {\n      finalAnswer.push({option: op.id, optionText: op.value})\n    }\n\n    this.submitQuestionAnswer(questionId, finalAnswer);\n  }\n\n  selectCheckboxAnswer = (event, checkBoxRef, option) => {\n    checkBoxRef.current.classList.toggle(\"personalise-checkbox-selected\");\n    if (event.target.checked) {\n      this.setState({\n        // checkBoxSelected: selectedOption.push(option)\n        checkBoxSelected: [...this.state.checkBoxSelected, option]\n      })\n    }\n    else {\n      var removeIndex = this.state.checkBoxSelected.map(function (item) {return item.id;}).indexOf(option.id);\n      this.state.checkBoxSelected.splice(removeIndex, 1);\n    }\n  }\n\n  submitQuestionAnswer = (questionId, answer) => {\n    this.setToastMessage()\n    let questionOptionInput = {\n      question: questionId,\n      questionOptionInput: answer\n    }\n    let reqData = {\n      query: SAVE_SINGLE_QUESTION_RESPONSE,\n      variables: {\n        registryId: this.props.stateRegistryInfo.id,\n        registryQuestionOptionInput: questionOptionInput\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data) {\n        console.log('Answer Done')\n        this.setStateQuestionWithSelectedAnswer(questionId, answer)\n      }\n    }).catch(err => {\n      toast.error(\"Error occurred while fetching questions\");\n      console.error(err);\n    })\n  }\n\n  setStateQuestionWithSelectedAnswer = (questionId, answer) => {\n    let answerOpt = []\n    for (let ans of answer) {\n      answerOpt.push({ questionOption: { id: ans.option }, optionText: ans.optionText })\n    }\n\n    // Setting question state with selected answer\n    const questions = [...this.props.statePersonaliseQuestions].map(question => {\n\n      if (question.id === questionId) {\n        question.answers = answerOpt\n      }\n      question.options = question.options.map(opt => {\n        if (opt.followUpQuestions.length > 0) {\n          opt.followUpQuestions.map(followUpQuestion => {\n            if (opt.id === questionId) {\n              opt.answers = answerOpt\n            }\n          })\n        }\n        return opt;\n      })\n      question.isAnswered = false;\n      return question;\n    })\n    this.props.dispatch(addPersonalizeQuestion(questions))\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  selectedColorSchemes = (data) => {\n    if (this.state.checkBoxSelected.length <= 0) {\n      this.setState({\n        checkBoxSelected: [...data]\n      })\n    }\n  }\n\n  render() {\n\n    if (!this.state.question.id && this.props.statePersonaliseQuestions.length > 0) {\n      let prevQuestionID = []\n      let currentQuestion = null\n      for (let question of this.props.statePersonaliseQuestions){\n        if (!question.isPersonalize) {\n          prevQuestionID.push(question.id)\n        }\n        else {\n          currentQuestion = question\n          break\n        }\n      }\n      this.setState({\n        prevQuestionId: prevQuestionID,\n        activeQuestionId: currentQuestion.id,\n        question: currentQuestion\n      })\n\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      const selectedOptionID = this.state.question.answers?.length > 0 ? this.state.question.answers[0].questionOption.id : null\n      options = this.state.question.options.map(option => (\n        <Option className={[\"mb-2 mr-4\", selectedOptionID === option.id ? \"answer-selected\" : \"\"].join(\" \")} onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n            <div className=\"text-sm onboarding-option-help-text\">{option.helpText}</div> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === this.CHECKBOX) {\n      // TODO: If it is selected\n      const selectedOptionID = []\n      if (this.state.question.answers?.length > 0) {\n        for (let ans of this.state.question.answers) {\n          if (!selectedOptionID.includes(ans.questionOption.id)) {\n            selectedOptionID.push(ans.questionOption.id)\n          }\n        }\n        const selectOptions = []\n        for (let selectedOption of this.state.question.options) {\n          if (selectedOptionID.includes(selectedOption.id)) {\n            selectOptions.push(selectedOption)\n          }\n        }\n        this.selectedColorSchemes(selectOptions);\n      }\n      options = this.state.question.options.map(option => {\n        let checkBoxRef = createRef();\n        return (\n          <div\n            className={[\"personalise-checkbox mr-3 mb-3\", selectedOptionID.includes(option.id) ? \"personalise-checkbox-selected\" : \"\"].join(\" \")} ref={checkBoxRef}>\n            <label className=\"checkbox d-flex align-items-center pb-0 mb-0\">\n              <span className=\"checkbox__input p-2\">\n                <input\n                  type=\"checkbox\"\n                  name={option.id}\n                  value={option.id}\n                  onChange={(e) => this.selectCheckboxAnswer(e, checkBoxRef, option)}\n                  defaultChecked={selectedOptionID.includes(option.id)}\n                />\n                <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                  <i className=\"icon-check\"></i>\n                </span>\n              </span>\n              <h4 className=\"radio__label pr-2\">{option.value}</h4>\n            </label>\n          </div>\n        )\n      })\n      options.push(\n        // <div>\n        //   <Button\n        //     variant=\"primary\"\n        //     className=\"px-3 py-1 font-medium onboarding-next-button\"\n        //     onClick={() => this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)}\n        //   >Done</Button>\n        // </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"personalise\">\n          {/* Personalise Header */}\n          <PersonaliseHeader />\n\n          {/* Personalise Body */}\n          <div className=\"baby-registry-onboarding container mb-15\">\n            <div className=\"row justify-content-center mt-24\">\n              <div className=\"col-12 col-md-6\">\n                <span\n                  className=\"font-body onboading-question\">{this.state.question.title}</span>\n              </div>\n            </div>\n            <div className=\"row justify-content-center mt-6\">\n              <div className=\"col-12 col-md-6\">\n                {options.map(option => option)}\n              </div>\n            </div>\n          </div>\n\n          {/* Personalise Footer */}\n          <PersonaliseFooter\n            percentage={this.calulatePercentage(this.props.statePersonaliseAnswers.length, this.props.statePersonaliseQuestions.length)}\n            prevQuestion={() => { this.gotoPrevQuestion(this.state.prevQuestionId[this.state.prevQuestionId.length - 1]) }}\n            nextQuestion={() => { this.gotoNextQuestion(this.state.question, this.state.parentId) }}\n          />\n        </div>\n\n        <ToastContainer\n          position=\"top-center\"\n          className=\"personalise-toast-container\"\n          toastClassName=\"personalise-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n    statePersonaliseAnswers: state.personaliseCheckList.answers,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React, { useState } from \"react\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { setPersonaliseCheckListItems } from \"../../PersonaliseCheckListActions\";\nimport { connect } from \"react-redux\";\nimport './EditChecklist.scss';\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {\n  incrementCheckListQuantity,\n  setIsActiveCheckList,\n  decrementCheckListQuantity\n} from \"../../PersonaliseCheckListActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_UPDATED_CHECKLIST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport { getAllCategories } from 'utils/commonFunction';\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\n\n// import {setCheckListItems} from \"../../../my-registry/MyRegistryActions\";\n\nclass PersonaliseChecklist extends React.Component {\n  state = {\n\t  showOverrideModal: false\n\t};\n\n  componentDidMount() {\n    this.getAllCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n  getAllCategories = (registryId, dispatch) => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryId)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.errors || res.data.error) {\n        // TODO: Add toast\n        console.log('Something went wrong-->', res.data.errors)\n        return;\n      } else {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  if (subProductType.isExcluded) {\n                    subProductType.totalItemsCount = 1\n                    subProductType['isAdded'] = false\n                  } else {\n                    subProductType['isAdded'] = true\n                  }\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                if (subCategory.isExcluded) {\n                  subCategory.totalItemsCount = 1\n                  subCategory['isAdded'] = false\n                } else {\n                  subCategory['isAdded'] = true\n                }\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = { ...category }\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n\n        }\n        dispatch(setPersonaliseCheckListItems(finalCheckList))\n      }\n    }).catch(err => {\n      console.error('Something went wrong-->', err);\n    })\n  }\n\n  closeAndSavePersonaliseCheckList = (event) => {\n    event.preventDefault();\n    let finalCheckListData = []\n    let tempStateCheckList = [...this.props.stateCheckList]\n    for (let category of tempStateCheckList) {\n      for (let subCategory of category.subCategories) {\n        // let tempData = null\n        let tempData = {\n          registryCategoryId: subCategory.id,\n          itemsCount: subCategory.totalItemsCount,\n          isExcluded: !subCategory.isAdded\n        }\n        finalCheckListData.push(tempData)\n      }\n    }\n\n    let registryId = this.props.stateRegistryInfo.id\n    let data = {\n      query: SAVE_UPDATED_CHECKLIST,\n      variables: {\n        registryId: registryId,\n        itemCountData: finalCheckListData\n      },\n    }\n\n    graphQL(data).then(res => {\n      if (res.data) {\n        toast.success((\n          <p>Personalise Checklist Updated Successfully</p>\n        ))\n        this.props.history.push(routes.REGISTRY.HOME)\n      }\n\n    }).catch(err => {\n      console.error(err.message)\n      toast.error((\n        <p>Some error occurred.</p>\n      ))\n    })\n  }\n\n  gotoPersonaliseQuestions = (event) => {\n    event.preventDefault();\n    this.props.history.push(routes.PERSONALIZE.HOME)\n  }\n\n  removeConfirmFooter = (\n    <>\n\t  <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => {\n\t  this.props.history.push(routes.REGISTRY.HOME)\n\t  this.setState({showOverrideModal:false})\n\t  }}>Do Not Override</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={(e) => {\n\t\tthis.closeAndSavePersonaliseCheckList(e)\n\t\tthis.setState({showOverrideModal:false});\n      }}>Yes, Please Override</Button>\n    </>\n  )\n\n  render() {\n    return (\n\t  // TODO: API call\n\t  <>\n      <div className=\"personalise-checklist\">\n        {/* Header */}\n        <div className=\"py-2 personalise-checklist-header font-body font-medium\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col \">Edit Checklist</div>\n              <div className=\"col d-flex align-items-center justify-content-end\">\n                <a className=\"mr-6 personalise-header-link\" tabindex onClick={(e) => { this.gotoPersonaliseQuestions(e) }}>Take our quiz</a>\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1  font-medium done-btn\"\n                    onClick={()=>this.setState({showOverrideModal:true})}\n                  >Save & Close</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* All categries selection body */}\n        {this.props.stateCheckList.map((parentCategories, i) => (\n          <div className=\"mt-6 container\" key={parentCategories.categoryName + \"-\" + i}>\n            <div className=\"checklist-title pb-4 body-text\">\n              {parentCategories.categoryName}\n            </div>\n            <div className=\"row mt-4\">\n              {parentCategories.subCategories.map((subCategories, i) => (\n                <div className=\"col-3 mb-5\" key={subCategories.id}>\n                  <div className={[\"checklist-card pl-2 pr-3 py-3\",\n                    !subCategories.isAdded ? \"add-checklist-bg\" : \"\"].join(' ')\n                  }>\n                    <div className=\"d-flex mb-4 checklist-action-btn\">\n                      <div className=\"text-body font-medium align-self-center\">{subCategories.categoryName}</div>\n                      {subCategories.addedItemsCount <= 0 ?\n                        <div className=\"ml-auto\">\n                          <button className={[\"checklist-add-btn\",\n                            !subCategories.isAdded ? \"checklist-icon-plus\" : \"icon-close\"].join(' ')}\n                            onClick={() => this.props.dispatch(setIsActiveCheckList(subCategories.id, !subCategories.isAdded))} />\n                        </div>\n                        : null\n                      }\n                    </div>\n                    <div className=\"d-flex align-items-center\">\n                      <Counter\n                        counter={subCategories.totalItemsCount}\n                        incrementHandler={() => this.props.dispatch(incrementCheckListQuantity(subCategories.id, 1))}\n                        decrementHandler={() => this.props.dispatch(decrementCheckListQuantity(subCategories.id, 1))}\n                      />\n                      {subCategories.addedItemsCount > 0 ?\n                        <span className=\"ml-auto text-sm item-count-label\">{subCategories.addedItemsCount} added</span>\n                        : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        <Toast />\n      </div>\n\t  <Modal\n        show={this.state.showOverrideModal}\n        size=\"lg\"\n        footer={this.removeConfirmFooter}\n      >\n        <h2 className=\"mb-1\">This will override your personalizd suggestions that came from registry quiz.</h2>\n\t\t    <label className=\"text-sm\">If you do not want to override, click on ‘Do Not Override’, which will take you to your registry. the changes you made in edit checklist will be discarded.</label>\n      </Modal>\n\t  </>\n    );\n  }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport \"./GuestViewHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\n\n\nclass GuestViewHeader extends React.Component {\n\n  state = {\n    showEditRegistryDetail: false,\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateGuestViewRegistry.image.image + ')' }}>\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateGuestViewRegistry.displayName ? this.props.stateGuestViewRegistry.displayName : \"\"}</h2>\n                  </div>\n                  {this.props.stateGuestViewRegistry.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateGuestViewRegistry.greeting}</span>\n                    :\n                    null\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.guestView.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(GuestViewHeader);","import React from 'react';\nimport \"./GuestSortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeGuestSortFilter } from '../../GuestViewAction';\n\nconst GuestSortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.guestView.activeGuestSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeGuestSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GuestSortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport GuestSortFilter from \"../guest-sort-filter/GuestSortFilter\";\nimport './GuestSortSection.scss';\nimport { clearGuestViewFilter, setChildGuestViewFilter, setGuestViewProducts, clearViewGuestPaginationInfo } from \"../../GuestViewAction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass GuestSortSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = async (isParent, childId) => {\n    if (isParent) {\n      await this.props.dispatch(clearGuestViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      await this.props.dispatch(setChildGuestViewFilter(newChildArray))\n    }\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n    await this.props.dispatch(setGuestViewProducts([]))\n    await this.props.setFilterhandler()\n  }\n\n  //Clear filter state\n  clearFilterHandler = async (ev) => {\n    ev.preventDefault()\n    await this.props.dispatch(clearGuestViewFilter())\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n\t\tawait this.props.dispatch(setGuestViewProducts([]))\n    await this.props.setFilterhandler()\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <GuestSortFilter />\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.guestView.product,\n    stateActiveSortFilter: state.guestView.activeGuestSortFilter,\n    stateGuestViewRegistry: state.guestView.guestViewRegistry,\n    stateRegistryInfo: state.guestView.info,\n    stateFilterApplied: state.guestView.guestViewFilterApplied,\n    stateFilterCategory: state.guestView.guestFilterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestSortSection);\n","import React, { useState } from 'react'\nimport \"./GuestFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildGuestViewFilter, clearGuestViewFilter, setGuestViewFilterCategory, setGuestViewProducts, clearViewGuestPaginationInfo } from '../../GuestViewAction';\nimport { FILTERS } from \"utils/constants\";\n\nconst GuestFilter = (props) => {\n\n\tconst dispatch = useDispatch()\n\tlet tempParentFilterId = useSelector(state => state.guestView.guestViewFilterApplied.parentFilter)\n\tlet tempChildFilterIds = useSelector(state => state.guestView.guestViewFilterApplied.childFilter)\n\tlet stateAddedProducts = useSelector(state => state.guestView.product)\n\tconst stateCategoriesInfo = useSelector(state => state.guestView.checkList)\n\tlet stateFilterCategories = useSelector(state => state.guestView.guestFilterCategory)\n\tlet [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n\tconst childChangeHandler = async (childId, parentId) => {\n\n\t\tif (parentId !== tempParentFilterId) {\n\t\t\tif (tempChildFilterIds.length > 0) {\n\t\t\t\tawait dispatch(setChildGuestViewFilter([]))\n\t\t\t}\n\t\t}\n\n\t\tconst childIndex = tempChildFilterIds.indexOf(childId)\n\n\t\tif (childIndex === -1) {\n\t\t\tawait dispatch(setChildGuestViewFilter([...tempChildFilterIds, childId]))\n\t\t} else {\n\t\t\tlet newChildArray = [...tempChildFilterIds]\n\t\t\tnewChildArray.splice(childIndex, 1)\n\t\t\tawait dispatch(setChildGuestViewFilter(newChildArray))\n\t\t}\n\t\tawait dispatch(clearViewGuestPaginationInfo())\n\t\tawait dispatch(setGuestViewProducts([]))\n\t\tprops.setFilterhandler()\n\t}\n\n\tconst clearClickHandler = async () => {\n\t\tawait dispatch(clearGuestViewFilter())\n    await dispatch(clearViewGuestPaginationInfo())\n\t\tawait dispatch(setGuestViewProducts([]))\n    await props.setFilterhandler()\n\t}\n\n\tconst changeParentLimitHandler = (parentFilterID) => {\n\t\tlet limitLength = null\n\t\tlet filterCategory = [...stateFilterCategories].map(parentFilter => {\n\t\t\tif (parentFilter.id === parentFilterID) {\n\t\t\t\tparentFilter.limit = parentFilter.child.length\n\t\t\t\tlimitLength = parentFilter.child.length\n\t\t\t}\n\t\t\treturn parentFilter\n\t\t})\n\t\tdispatch(setGuestViewFilterCategory(filterCategory))\n\n\t\tlet isFound = false\n\t\tlet newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n\t\t\tif (categorylimit.id === parentFilterID) {\n\t\t\t\tcategorylimit.limit = limitLength\n\t\t\t\tisFound = true\n\t\t\t\treturn categorylimit\n\t\t\t}\n\t\t\treturn categorylimit\n\t\t})\n\n\t\tif (!isFound) {\n\t\t\tnewFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n\t\t}\n\t\tsetFilterCategoryLimit(newFilterCateoryLimit)\n\t}\n\n\treturn (\n\t\t<div className=\"view-filter\">\n\t\t\t<div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n\t\t\t\t<h4 className=\"font-weight-bold\">Filters</h4>\n\t\t\t\t{tempChildFilterIds.length !== 0 ?\n\t\t\t\t\t<a tabindex className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t{console.log('filetrs: ',stateFilterCategories)}\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t{[...stateFilterCategories].map(parentFilter => (\n\t\t\t\t\t<div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n\t\t\t\t\t\t{/* Parent filter */}\n\t\t\t\t\t\t<div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n\t\t\t\t\t\t{/* Child filter */}\n\t\t\t\t\t\t{parentFilter.child ? (\n\t\t\t\t\t\t\t<div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n\t\t\t\t\t\t\t\t<div className=\"mt-3 fliter-checkbox-section\">\n\t\t\t\t\t\t\t\t\t{parentFilter.child.map((childFilter, index) => (\n\t\t\t\t\t\t\t\t\t\tchildFilter.count > 0 ?\n\t\t\t\t\t\t\t\t\t\t\tindex < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"checkbox__input mr-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={childFilter.display}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={childFilter.display}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-check\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"radio__label text-sm\">{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t: null\n\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GuestFilter;\n","import React from \"react\";\nimport \"./GuestView.scss\";\nimport { connect } from \"react-redux\";\nimport { updateGuestViewRegistry, getGuestCategories } from \"../../utils/commonFunction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport GuestViewHeader from \"./containers/guest-view-header/GuestViewHeader\";\nimport GuestSortSection from \"./containers/guest-sort/GuestSortSection\";\nimport GuestViewCard from \"./components/GuestViewCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { VIEW_GIFT_PRODUCTS_PER_REQUEST } from \"utils/constants\";\nimport { setGuestViewProducts, setViewGuestPaginationInfo, updateGuestViewInfo, setGuestViewFilterCategory } from './GuestViewAction';\nimport { GET_GUEST_REGISTRY_PRODUCT } from 'api/queries';\nimport { MEDIA_URL_PREFIX } from \"utils/constants\";\nimport { graphQL } from 'api/axios';\nimport GuestFilter from './containers/guest-filter/GuestFilter';\nimport { FILTERS } from \"utils/constants\";\n\n\nclass GuestView extends React.Component {\n\n  state = {\n    isFirstTime: true\n  }\n\n  BABY_GIFTS_URL = \"https://monicaandandy.com/collections/baby-gifts\"\n\n  // Constant variables for filters\n  AVAILABLE = \"available\"\n  RESERVED = \"reserved\"\n  PURCHASED = \"purchased\"\n  PRICE_1 = \"price-1\"\n  PRICE_2 = \"price-2\"\n  PRICE_3 = \"price-3\"\n  MONICA_AND_ANDY = \"monicaandandy\"\n  ELSEWHERE = \"elsewhere\"\n\n  // Updating product count in filter categories\n  updateFilterList = (registryItemsAnalysisCount, categoryData) => {\n\n    let newFilterList = [\n      {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: this.AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: registryItemsAnalysisCount.totalAvailable\n          },\n          {\n            id: this.RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: registryItemsAnalysisCount.totalReserved\n          },\n          {\n            id: this.PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: registryItemsAnalysisCount.totalPurchased\n          }\n        ]\n      },\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        // limit: this.getLimitOfFliter(\"categories\") ? this.getLimitOfFliter(\"categories\") : 6,\n        child: [...this.props.stateCategoriesInfo].filter(category => {\n          let id = category.category.id\n          let count = categoryData[id]\n          if (count > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          let id = category.category.id\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = categoryData[id]\n          return newCategory\n        })\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: this.PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: registryItemsAnalysisCount.under50\n          },\n          {\n            id: this.PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: registryItemsAnalysisCount.between50100\n          },\n          {\n            id: this.PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: registryItemsAnalysisCount.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: this.MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: registryItemsAnalysisCount.maStoreItems\n          },\n          {\n            id: this.ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: registryItemsAnalysisCount.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    this.props.dispatch(setGuestViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  getFiltersApplied = (stateFilterApplied, activeSortFilterState) => {\n    const childFilterArray = [...stateFilterApplied]\n    let filterApplied = {}\n    // For Gift Status\n    if (childFilterArray.includes(this.AVAILABLE)) {\n      filterApplied.isAvailable = true\n    }\n    if (childFilterArray.includes(this.RESERVED)) {\n      filterApplied.isReserved = true\n    }\n    if (childFilterArray.includes(this.PURCHASED)) {\n      filterApplied.isPurchased = true\n    }\n\n    // For Sort\n    if (activeSortFilterState.sortId === 2) {\n      filterApplied.sortBy = 'item__price'\n    } else if (activeSortFilterState.sortId === 3) {\n      filterApplied.sortBy = '-item__price'\n    }\n\n    // For Store\n    let store = []\n    if (childFilterArray.includes(this.MONICA_AND_ANDY)) {\n      store.push(this.MONICA_AND_ANDY)\n    }\n    if (childFilterArray.includes(this.ELSEWHERE)) {\n      store.push(this.ELSEWHERE)\n    }\n    if (store.length) {\n      filterApplied.store = store\n    }\n\n    let lessThanEqual = 0\n    let greaterThanEqual = 0\n    let hasPriceFilter = false\n    // For Price\n    if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_2) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 0\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_2)) {\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      lessThanEqual = 49\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_2) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 50\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1)) {\n      lessThanEqual = 49\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_2)) {\n      greaterThanEqual = 50\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    if (hasPriceFilter) {\n      filterApplied.price_Lte = lessThanEqual\n      filterApplied.price_Gte = greaterThanEqual\n    }\n\n    let categories = []\n    // For categories\n    for (let cat of [...this.props.stateCategoriesInfo]) {\n      if (childFilterArray.includes(cat.category.id)) {\n        categories.push(cat.category.id)\n      }\n    }\n    if (categories.length) {\n      filterApplied.categories = categories\n    }\n\n    return filterApplied\n  }\n\n  updateGuestViewRegistryProduct = (urlSlug) => {\n    let filtersApplied = this.getFiltersApplied(this.props.stateFilterApplied, this.props.activeSortFilterState)\n    let reqData = {\n      query: GET_GUEST_REGISTRY_PRODUCT,\n      variables: {\n        urlSlug: urlSlug,\n        after: this.props.stateGuestViewPagination.endCursor,\n        first: VIEW_GIFT_PRODUCTS_PER_REQUEST,\n        ...filtersApplied\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data.registryAsGuest) {\n\n        // Storing PagenationInfo\n        let pagenationInfo = { ...res.data.data.registryAsGuest.registryItems.pageInfo }\n        this.props.dispatch(setViewGuestPaginationInfo(pagenationInfo))\n\n        // Storing Product of GuestView\n        let responseData = [...res.data.data.registryAsGuest.registryItems.edges].map(item => {\n          let newItemObj = { ...item.node }\n          delete newItemObj.registryitemImage;\n          if (item.node.registryitemImage.length > 0) {\n            newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n          }\n          return newItemObj;\n        })\n        let finalData = responseData.filter(product => product.registryCategories.length > 0)\n        this.props.dispatch(setGuestViewProducts(finalData))\n        this.updateFilterList({ ...res.data.data.registryAsGuest.registryItemsAnalysisCount }, { ...res.data.data.registryAsGuest.categoryData })\n      }\n    }).catch(err => {\n      this.props.dispatch(updateGuestViewInfo({ notFound: true }))\n      if (err.response && err.response.data.errors) {\n        for (const error of err.response.data.errors) {\n          // TODO: Implement toast if necessary\n          console.log(error.message)\n        }\n      }\n    })\n  }\n\n  sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  getSortedFilteredProducts = (guestProducts, activeSortFilterState, filterApplied) => {\n    let sortedProducts = [];\n    if (activeSortFilterState.sortId === 1) {\n      sortedProducts = [...guestProducts]\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedProducts = this.sortByLowToHigh([...guestProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedProducts = this.sortByHighToLow([...guestProducts])\n    }\n\n    return sortedProducts;\n  }\n\n  getdataForFirstTime = async () => {\n    await getGuestCategories(this.props.match.params.registrySlug, this.props.dispatch)\n    await this.props.dispatch(setGuestViewProducts([]))\n    await this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)\n  }\n\n  render() {\n\n    if (this.props.stateGuestViewRegistry.urlSlug !== this.props.match.params.registrySlug) {\n      updateGuestViewRegistry(this.props.match.params.registrySlug, this.props.dispatch)\n    }\n\n    // When registry doesn't exists\n    if (this.props.stateGuestViewRegistry.notFound) {\n      return <h1>Registry not found</h1>;\n    }\n\n    if (this.props.stateGuestViewRegistry.id) {\n      // When registry exists and it is not public\n      if (this.props.stateGuestViewRegistry.isPublic === false) {\n        let registryUsers = [this.props.stateGuestViewRegistry.user.firstName]\n        if (this.props.stateGuestViewRegistry.user.partnerUser) {\n          registryUsers.push(this.props.stateGuestViewRegistry.user.partnerUser.firstName)\n        }\n        return (\n          <div className=\"container mt-17\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n                <h1>{this.props.stateGuestViewRegistry.displayName}</h1>\n                {/*TODO: Display partner name as well below*/}\n                {registryUsers.length === 1 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> is still curating their baby registry</h4> : null}\n                {registryUsers.length === 2 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> and <span className=\"text-capitalize\">{registryUsers[1]}</span> are still curating their baby registry</h4> : null}\n\n                <Button\n                  variant=\"primary\"\n                  className=\"py-1 px-2 mt-3 text-body font-medium\"\n                  onClick={() => window.location.href = this.BABY_GIFTS_URL}\n                >Shop baby Gifts</Button>\n              </div>\n            </div>\n          </div>\n        )\n      } else {\n\n        let filteredSortProducts = this.getSortedFilteredProducts(this.props.stateAddedProducts, this.props.activeSortFilterState, this.props.stateFilterApplied)\n\n        // Fetching product for first time \n        if (this.state.isFirstTime && this.props.stateAddedProducts.length <= 0 && this.props.stateGuestViewRegistry.urlSlug) {\n          this.setState({\n            isFirstTime: false\n          })\n          this.getdataForFirstTime()\n          // this.updateFilterList(this.props.stateAddedProducts)\n        }\n\n        // When registry exists and it is public\n        return (\n          <>\n            <GuestViewHeader />\n            <div className=\"container mt-7\">\n              <div className=\"row\">\n                <div className=\"col-2\">\n                  <GuestFilter setFilterhandler={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)} />\n                </div>\n                <div className=\"col\"></div>\n                <div className=\"col-9\">\n                  <GuestSortSection\n                    productCount={filteredSortProducts.length}\n                    setFilterhandler={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)}\n                  />\n\n                  <div className=\"mt-5\">\n                    <InfiniteScroll\n                      next={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)}\n                      hasMore={this.props.stateGuestViewPagination.hasNextPage}\n                      loader={<h4>Loading...</h4>}\n                      dataLength={this.props.stateAddedProducts.length}\n                      style={{ overflow: \"hidden\" }}\n                    >\n\n                      {filteredSortProducts.length > 0 ?\n                        filteredSortProducts.map((card, index) =>\n                          <GuestViewCard\n                            data={card} key={\"addedCard\" + index}\n                          />) : null}\n                    </InfiniteScroll>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )\n      }\n    }\n\n\n    // Default return\n    return <></>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stateGuestViewRegistry: state.guestView.info,\n    stateAddedProducts: state.guestView.product,\n    activeSortFilterState: state.guestView.activeGuestSortFilter,\n    stateFilterApplied: state.guestView.guestViewFilterApplied.childFilter,\n    stateGuestViewPagination: state.guestView.paginationInfo,\n    stateCategoriesInfo: state.guestView.checkList,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestView);","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport Onboarding from \"../onboarding/Onboarding\";\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {\n  updateRegistryDetail,\n  getOnboardingQuestions,\n  createRegistry,\n  getPersonalizeQuestions,\n  getCategories,\n  getProducts\n} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport {verifyAccessToken} from \"../../api/axios\";\nimport {setLoggingStatus, updateRegistryInfo} from \"../registry/RegistryActions\";\nimport PersonaliseChecklist from \"../personalise-checklist/PersonaliseChecklist\";\nimport EditChecklist from \"modules/personalise-checklist/components/edit-checklist/EditChecklist\";\nimport GuestView from \"../guest-view/GuestView\";\nimport MyRegistry from \"../my-registry/MyRegistry\";\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\n\nclass ViewsContainer extends React.Component {\n\n  state = {\n    displayContent: false,\n    foundRegistry: false\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    const access_token = cookies.get(\"access_token\")\n    if (access_token) {\n      verifyAccessToken({token: access_token}).then(res => {\n        if (res.data.data.customer) {\n          this.props.dispatch(setLoggingStatus(true))\n          if (res.data.data.registries.length > 0) {\n            this.setState({\n              foundRegistry: true\n            })\n            updateRegistryDetail(this.props.dispatch);\n            // TODO: Get products of active registry\n            getCategories(res.data.data.registries[res.data.data.registries.length - 1].id, this.props.dispatch);\n            // TODO: Get categories of active registry\n            getProducts(res.data.data.registries[res.data.data.registries.length - 1].id, this.props.dispatch);\n          } else {\n            this.props.dispatch(updateRegistryInfo({notFound: true}))\n\n            //  Creating New Registry\n            createRegistry(this.props.dispatch)\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n        this.props.dispatch(setLoggingStatus(false))\n        this.props.dispatch(updateRegistryInfo({notFound: true}))\n      }).finally(() => {\n        this.setState({\n          displayContent: true\n        })\n      })\n    } else {\n      this.setState({\n        displayContent: true\n      })\n      this.props.dispatch(updateRegistryInfo({notFound: true}))\n    }\n  }\n\n  render() {\n\n    // if (this.props.stateRouter.location.pathname.search(route.GUEST_VIEW.HOME) !== -1) {\n    //   console.log(route.GUEST_VIEW.HOME+\"/:registryName\")\n    //   return <Redirect to={this.props.stateRouter.location.pathname}/>\n    // }\n\n    // Redirecting user to onboarding is no registry found\n    // if (this.props.stateRouter.location.pathname.search(route.ONBOARDING.HOME) === -1 && !this.props.stateRegistryInfo.id && !this.state.foundRegistry && this.state.displayContent) {\n    //   console.log(this.props.stateRouter.location.pathname)\n    //   return <Redirect to={route.ONBOARDING.HOME}/>\n    // }\n\n    if (this.props.stateOnboardingQuestions.length <= 0) {\n      getOnboardingQuestions(this.props.dispatch)\n    }\n\n    if (this.props.stateRegistryInfo.id && this.props.statePersonaliseQuestions.length <= 0) {\n      getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    }\n\n    return (\n      <>\n        {this.state.displayContent ?\n          <Switch>\n            <Route exact path={route.PERSONALIZE.CHECKLIST} component={EditChecklist}/>\n            <Route exact path={route.PERSONALIZE.HOME} component={PersonaliseChecklist}/>\n            <Route exact path={route.ONBOARDING.HOME + \"/:questionId?\"} component={Onboarding}/>\n            <Route exact path={route.MY_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.VIEW_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.TRACK_GIFTS.HOME} component={RegistryHero}/>\n            <Route exact path={route.GUEST_VIEW.HOME + \"/:registrySlug\"} component={GuestView}/>\n            <Route path={route.REGISTRY.HOME} component={RegistryHero}/>\n            <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n            <Route render={() => <div>DEFAULT</div>}/>\n          </Switch>\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateRouter: state.router,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}