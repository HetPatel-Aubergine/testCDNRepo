{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","modules/personalise-checklist/PersonaliseCheckListActions.js","modules/personalise-checklist/PersonaliseCheckListReducer.js","modules/onboarding/OnboardingAction.js","modules/onboarding/OnboardingReducer.js","modules/guest-view/GuestViewAction.js","modules/guest-view/GuestViewReducer.js","modules/track-gifts/TrackGiftsAction.jsx","modules/track-gifts/components/view-by/ViewBy.jsx","modules/track-gifts/TrackGiftsReducer.jsx","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/modal-component/ModalComponent.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","api/queries.js","api/config.js","api/axios.js","utils/constants.js","api/mutations.js","modules/track-gifts/components/gift-card-pill/GiftCardPill.jsx","modules/track-gifts/components/gift-card/GiftCard.jsx","modules/track-gifts/containers/track-gifts-content/TrackGiftsContent.jsx","utils/commonFunction.js","modules/commons/components/button-component/ButtonComponent.jsx","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/import-registry/category-pill/CategoryPill.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/import-registry/ImportRegistry.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/toggle-pills/TogglePills.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal.jsx","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/commons/components/cash-fund-card/cash-fund-card-not-added/CashFundCardNotAdded.jsx","modules/commons/components/cash-fund-card/CashFundCard.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/components/view-filter/ViewFilter.jsx","modules/commons/components/gift-status-pill/GiftStatusPill.jsx","modules/guest-view/components/GuestViewCard.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/commons/components/toast/Toast.jsx","modules/registry-hero/component/todo-widget/TodoWidget.jsx","modules/track-gifts/components/filters/Filters.jsx","modules/track-gifts/components/thank-you-list/ThankYouList.jsx","modules/track-gifts/containers/track-gifts-sidebar/TrackGiftsSidebar.jsx","modules/track-gifts/components/search/Search.jsx","modules/track-gifts/components/add-gift/AddGift.jsx","modules/track-gifts/TrackGifts.jsx","modules/registry-hero/RegistryHero.jsx","modules/commons/components/questions/option/Option.jsx","modules/onboarding/Onboarding.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/personalise-checklist/components/personalise-header/PersonaliseHeader.jsx","modules/personalise-checklist/components/personalise-footer/PersonaliseFooter.jsx","modules/personalise-checklist/PersonaliseChecklist.jsx","modules/personalise-checklist/components/edit-checklist/EditChecklist.jsx","modules/guest-view/containers/guest-view-header/GuestViewHeader.jsx","modules/guest-view/containers/guest-sort-filter/GuestSortFilter.jsx","modules/guest-view/containers/guest-sort/GuestSortSection.jsx","modules/guest-view/containers/guest-filter/GuestFilter.jsx","modules/guest-view/GuestView.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","SET_ANOTHER_STORE_REGISTRY_ITEMS","SET_CASH_FUND_CATEGORIES","addRecommendedProduct","params","toggleMustHaveProduct","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","setAnotherStoreRegistryItems","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","anotherStoreRegistry","cashFundCategories","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","setguestViewRegistry","setViewFilterCategory","setChildViewFilter","clearViewFilter","viewRegistryProducts","activeSortFilter","sortId","sortTitle","guestViewRegistry","viewFilterApplied","REGISTRY_ACTION_TYPES","updateRegistryInfo","setLoggingStatus","setOnboardingRegistry","info","loggedIn","todo","onboardingRegistry","PERSONALISE_CHECKLIST_ACTION_TYPES","setPersonaliseCheckListItems","addPersonalizeQuestion","addPersonalizeQuestionAnswer","updatePersonalizeQuestionAnswer","newSubCategory","subCategories","subCategory","totalItemsCount","setIsAddedCheckList","isAdded","editedPersonaliseCheckList","questions","answers","ONBOARDING_ACTION_TYPES","addOnboardingQuestion","addQuestionAnswer","updateQuestionAnswer","GUEST_VIEW_ACTION_TYPES","updateGuestViewInfo","setGuestViewProducts","setChildGuestViewFilter","clearGuestViewFilter","setGuestViewFilterCategory","setViewGuestPaginationInfo","clearViewGuestPaginationInfo","updated","activeGuestSortFilter","guestViewFilterApplied","guestFilterCategory","paginationInfo","trackGifts","pagination","TRACK_GIFTS_ACTION_TYPES","setTrackGiftsProduct","setTrackGiftsPaginationInfo","setTrackGiftsFilters","setTrackGiftsSearch","TRACK_GIFTS_VIEWS","ViewBy","activeView","useSelector","dispatch","useDispatch","changeTrackGiftView","view","className","join","onClick","products","filters","search","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","personaliseCheckList","PersonaliseCheckListReducer","onboarding","Onboarding","TrackGiftsReducer","guestView","GuestViewReducer","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","shower","announcements","more","toDos","es","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","TRACK_GIFTS","ONBOARDING","PERSONALIZE","CHECKLIST","GUEST_VIEW","MoreOption","props","iconClass","buttonClass","data","map","option","index","key","name","ModalComponent","Modal","show","size","titleContent","Header","headerContent","closeModal","Body","children","footer","Footer","Counter","decrementHandler","counter","incrementHandler","CardItem","src","image","originalSrc","alt","href","productLink","tabindex","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","gql","GET_CATEGORIES","GET_PRODUCTS","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","GET_REGISTRIES","GET_QUESTIONS","GET_PERSONALIZE_QUESTIONS","GET_TRACK_GIFTS","GET_GUEST_REGISTRY_PRODUCT","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","axiosInstanceNoToken","axiosInstanceNoHeader","graphQLNoToken","post","graphQLNoHeader","graphQL","getAnotherRegistryProducts","axiosInstanceMultipart","graphQLMultipart","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","FILTERS","BOOKMARKLET_SCRIPT","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","REGISTER_USER","SAVE_QUESTION_RESPONSE","LOGIN_USER","ADD_PARTNER_ACCOUNT","SAVE_UPDATED_CHECKLIST","SAVE_SINGLE_QUESTION_RESPONSE","CREATE_REGISTRY","TRACK_GIFTS_ADD_GIFT","GiftCardPill","text","variant","amount","GiftCard","friendsDetailRef","React","createRef","toggleFriendsDetail","e","preventDefault","current","classList","toggle","this","imageUrl","giftMessage","guestUser","firstName","lastName","isCashFund","groupGift","amountReceived","style","width","isPurchased","isReserved","isCashAcceptedOnly","isAmountReceived","isGroupGift","ref","user","guestEmail","contributionAmount","Component","LOCAL_2_API_FILTERS_MAPPING","4","1","3","2","5","NoRecordFound","TrackGiftsContent","currentView","checkProductAvailability","getProductsBasedOnView","stateProducts","availableProducts","guestUsersEmails","groupUser","indexOf","groupProduct","stateTrackGiftsProducts","stateTrackGiftsPagination","hasNextPage","getTrackGiftsProduct","stateTrackGiftsFilters","stateTrackGiftsView","stateRegistryInfo","setState","next","hasMore","loader","dataLength","groupedProduct","connect","getProducts","registryId","query","variables","parseInt","then","res","finalData","registryItems","newItemObj","registryitemImage","registryCategories","catch","err","console","error","response","removeProductFromCartHandler","card","registryItemId","getCategories","toast","message","getRefinedCategory","categoryName","categoryType","isDesired","isExcluded","addedItemsCount","isParent","getAllCategories","getAll","subCategoriesIsExcluded","parentCategory","newParentCategory","registrySubCategories","newSubCategories","cat","refinedSubCate","subProductTypes","registrySubProductTypes","subProduct","operationName","errors","log","finalCategories","allCategories","updateRegistryDetail","registries","registryData","currentRegistryInfo","notFound","updateRegistryDetailState","getOnboardingQuestions","a","token","reqData","isPersonalize","Number","question","followUpQuestions","followUpQuestion","isAnswered","dataURItoBlob","dataURI","fileType","fileName","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","getGuestCategories","urlSlug","registryCategoriesAsGuest","getTrackGiftsFilterStatus","filterString","trackGiftsFilter","returnStatus","selected","clearProducts","trackGiftsFilters","trackGiftsProduct","trackGiftsPagination","trackGiftsView","giftGivers","after","endCursor","first","isAvailable","isFundsReceived","isReturned","registryGifts","registryGiftItemsCount","allFilterCounts","newFilters","count","gifts","pageInfo","ButtonComponent","forwardRef","btnVariantClass","disabled","AddedCard","stateGuestViewRegistry","stateRecommendedProducts","stateFilterApplied","stateAddedProducts","useState","setRecommendedProducts","setShow","modalTitle","showRemoveModel","setShowRemoveModel","moreOptionsData","unshift","categoryRecommended","jsonObject","JSON","stringify","uniqueSet","Set","Array","from","parse","showRecommendation","removeConfirmFooter","DragHandle","sortableHandle","disabledDrag","multipleCategories","draggable","isViewCard","cardId","newRecommended","incrementQuantity","decrementQuantity","existingProduct","sku","storeItemUrl","parseFloat","shopifyItemId","tags","success","CheckList","gotoPersonalize","event","isQuizPending","editablePersonalizeQuestions","t","percentage","withTranslation","withRouter","CheckListItems","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","subProductType","handleToggleEvent","checkListIconEl","checkListHeader","firstChild","subListItem","Accordion","Card","Toggle","as","eventKey","Collapse","BookmarkletSection","updateModal","modalBody","modalTitleContent","modalFooterButtons","modalCloseHandler","openAddBookmarkletModal","prevState","addItemToRegistry","TogglePills","activeClass","RadioButton","checked","onChange","changeHandler","textClass","display","CheckBox","value","SelectCategory","categories","setCategories","searched","setSearched","searchedCategories","setSearchedCategories","currentCategory","selectedCategory","setSelectedCategory","useEffect","resData","finalCheckList","finalSubCategory","tempSubCategory","tempCategory","getCategoriesToDisplay","find","allSelectedCategory","handleSelectionCategory","categorySelectBody","modalFooter","changeCurrentCategory","searchInputRef","changeLinkRef","placeholder","target","searchMatched","toLowerCase","match","searchCategoryInputChangeHandler","onFocus","contains","add","searchInputFocusHandler","onBlur","remove","searchInputBlurHandler","focus","changeLinkClickHandler","showModal","CategoryPill","removeCategory","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","hideProductDetails","setHideProductDetails","showLoading","setshowLoading","productInfo","productImage","productName","howToGift","note","mustHave","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","ev","persist","changeProductName","noteChangeHandler","changeNote","selectFileHandler","files","file","includes","reader","FileReader","onload","changeProductImage","result","readAsDataURL","submitStoreUrl","keyCode","URL","url","productUrl","changeProductUrl","item_url","ctgry","getScrapedProduct","img","newPrice","char","isInteger","getRefinedPrice","onKeyUp","class","role","click","accept","rows","priceChangeHandler","addMyOwn","openCategorySelect","categoryId","finalcategory","removeSelectedCategory","toggleGroupGift","togglePurchased","changeHowToGift","ViewRecommend","viewDetailsBtn","cardRef","clearModalData","alert","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","childCategory","commonGetProducts","commonGetCategories","checkDataValidity","storeProduct","stateAnotherStoreProduct","storeUrl","storeName","hostname","formData","FormData","ADD_REGISTRY_ITEM_MUTATION","input","items","append","images","status","anotherStoreItemViewDetail","open","addOnMyOwnClickHandler","newCategory","displayName","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","height","offsetHeight","Filter","filterData","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","childId","parentId","childIndex","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ImportGiftCard","ImportRegistry","registryUrl","errorMessage","loading","activeCategoryProductIndex","currentRegistryLink","inputHasFocus","inputRef","changeLoadingState","registryUrlChangeHandler","checkUrlAndGetRegistryItems","getAnotherRegistryProductsInfo","registryUrlKeyUpHandler","store_name","store_url","newProducts","finally","openSelectCategoryModal","productIndex","stateAnotherStoreRegistry","setProductCategories","newProductState","changeRegistryUrl","bind","selectedClass","AddCashFundModal","MAX_IMAGE_SIZE","cashFundImage","cashFundName","categoryData","cashFundAmount","hideTotal","cashFundType","cashFundNote","markCompleted","imageRef","validateCashFundData","addCashFundClickHandler","selectedCat","markAsCompleted","addRegistryItems","presentCategories","resetThenSet","modalFooterButton","newProductImage","cashFundNameChangeHandler","cashFundAmountChangeHandler","cashFundHideTotalChangeHandler","cashFundTypeChangeHandler","stateCashFundCategories","changedCategory","cashFundNoteChangeHandler","mustHaveClickHandler","markCompletedClickHandler","allCashFundCategories","foundCategory","cashFundCategory","list","AddGift","showCashFundModal","cashFundProduct","currentContent","categoryList","openCashFundModal","closeCashFundModal","openAddGiftModal","importGiftAnotherStoreHandler","importRegistry","validImportRegistryData","getCleanedRegistryItems","cleanedRegistryItems","itemStore","stores","newStore","importRegistryClickHandler","jsonGraphQL","FilterSection","deleteChipHandler","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","productCount","stateFilteredProducts","CashFundCardNotAdded","addButtonClickHandler","CashFundCard","Everything","setCashFundCategoryAndOpenModal","updateFilterList","newFilterList","productId","mustHaveValue","setAllRecommendation","recommendedCategory","parentCat","recommendedCat","productType","rData","getSortedProducts","stateCategories","cashFundCount","productsToAppend","allProducts","added","total","recommendations","childFilterArray","categoryFound","addedRecommendations","groupedProducts","recommendationCount","totalProducts","totalRecommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","hasCashFund","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","registryImages","defaultImages","fileChangeHandler","imageId","updateRegistry","closeCoverImagePicker","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","siteHostName","location","host","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","setRegistryUrl","registryError","setRegistryError","inputContainerRef","changeRegistryVisibility","newRegistry","readOnly","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","handleGuestView","handleDisableViewGuest","COVER_PIC_OPTIONS","backgroundImage","activeOptionClass","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","filterCat","childCat","stateActiveSortFilter","stateViewRegistryProducts","ViewFilter","stateCategoriesInfo","stateFilterCategories","filterCategoryLimit","setFilterCategoryLimit","giftStatus","limit","parentFilterID","limitLength","isFound","newFilterCateoryLimit","categorylimit","changeParentLimitHandler","GiftStatusPill","pillVariantClass","GuestViewCard","tabIndex","ViewRegistryHome","localAddedProductState","handleFilterProductChange","registryItemsAnalysisCount","totalAvailable","totalReserved","totalPurchased","under50","between50100","moreThan100","maStoreItems","otherStoreItems","getFiltersApplied","sortBy","lessThanEqual","greaterThanEqual","hasPriceFilter","price_Lte","price_Gte","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","getSortedProductsByFilters","finalFilterProduct","filtersApplied","getSortedFilteredProducts","sortedProducts","sortedData","newSortedProducts","isFeatured","sortByMustHave","productData","sortByLowToHigh","sortByHighToLow","viewRegistryProductsId","addProduct","productList","sort","b","onSortEnd","oldIndex","newIndex","itemsOldPosition","arrayMove","position","oldPosition","updateViewRegistryPosition","helperClass","axis","lockAxis","useDragHandle","ViewRegistry","Toast","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","closeButton","parentElement","dismiss","TodoWidget","performTodoAction","stateTodo","Filters","filterChangeHandler","filterId","allUnselected","stateFilters","newFilter","ThankYouList","TrackGiftsSidebar","Search","inputContainer","applySearch","searchState","stateTrackGiftsSearch","searchInputChangeHandler","searchInput","searchText","clearClickHandler","searchClickHandler","EMAIL_RE","giftName","orderNumber","userName","userEmail","validDate","valid","addGiftClickHandler","guestName","addGift","giftNameChangeHandler","newErrorState","storeNameChangeHandler","orderNumberChangeHandler","userNameChangeHandler","userEmailChangeHandler","TrackGifts","RegistryHero","useTranslation","RegistryHeroData","to","babyArrival","Option","MAIL_FORMAT","LOGIN_TITLE","SIGNUP_TITLE","PARTNER_TITLE","RADIO","PARTNER","LITTLE_ONCE_ID","questionId","optionId","BOTH_OPTION_ID","SKIP_BOTH_OPTION","login","toastMessage","signUpErrors","signInErrors","submitAnswer","bulkSaved","clearErrorState","createRegistry","submitAllAnswers","checkValidEmail","email","optionalRegistryId","submitBulk","stateOnboardingAnswers","stateOnboardingRegistry","returnToURL","answer","questionOptionInput","optionText","addRegistryMultipleQuestionOption","origin","registryQuestionOptionInput","updateOrCreateRegistrySingleQuestionOption","redirectionUrl","clearToastMessage","setToastMessage","gotoNextQuestion","nextQuestionId","returnNext","nextFullQuestion","idToMatch","stateOnboardingQuestions","ques","stateLoggedIn","setQuestionBasedOnId","finalQuestion","foundQuestion","parentQuestion","addAnswerToState","answerRadioQuestion","watchNextBtn","nextBtnState","answerDataQuestion","dateCheck","now","day","getDate","slice","month","getMonth","getFullYear","textInputTypeChangeHandler","inputRefs","enableBtn","changeLoginState","refs","setErrorBasedOnResponse","parentErrors","subErrors","signInClickHandler","emailRef","passwordRef","password","loginUser","set","registryRes","activeRegistry","getSignInContent","signUpClickHandler","nameRef","registerUser","getSignUpContent","savePartnerDetail","partnerDetail","addPartnerAccount","getPartnerContent","undefined","onpopstate","pathname","stateRouter","answerInputType","setTimeout","staticQuestionTitle","helpText","min","max","content","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","customer","redirectVerifyToken","VerifyToken","verifyToken","PersonaliseFooter","prevQuestion","nextQuestion","PersonaliseChecklist","prevQuestionId","activeQuestionId","checkBoxSelected","CHECKBOX","calulatePercentage","answerQuestionCount","totalQuestionCount","totalAnwer","statePersonaliseQuestions","Math","ceil","answerCheckBoxQuestion","isActiveIdPresent","gotoPrevQuestion","popPrevQuestionId","pop","statePersonaliseAnswers","finalAnswer","submitQuestionAnswer","op","selectCheckboxAnswer","checkBoxRef","removeIndex","setStateQuestionWithSelectedAnswer","answerOpt","ans","questionOption","opt","selectedColorSchemes","prevQuestionID","currentQuestion","selectedOptionID","selectOptions","selectedOption","defaultChecked","showOverrideModal","closeAndSavePersonaliseCheckList","finalCheckListData","tempStateCheckList","tempData","registryCategoryId","itemsCount","itemCountData","gotoPersonaliseQuestions","parentCategories","GuestViewHeader","GuestSortFilter","GuestSortSection","setFilterhandler","GuestFilter","GuestView","isFirstTime","BABY_GIFTS_URL","AVAILABLE","RESERVED","PURCHASED","PRICE_1","PRICE_2","PRICE_3","MONICA_AND_ANDY","ELSEWHERE","updateGuestViewRegistryProduct","stateGuestViewPagination","registryAsGuest","pagenationInfo","guestProducts","getdataForFirstTime","registrySlug","guestViewInfo","registryUsers","partnerUser","filteredSortProducts","overflow","ViewsContainer","displayContent","foundRegistry","access_token","EditChecklist","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.433025bb.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\",\n\n  // ANOTHER STORE REGISTRY\n  SET_ANOTHER_STORE_REGISTRY_ITEMS: \"SET_ANOTHER_STORE_REGISTRY_ITEMS\",\n\n  // SET CASH FUND CATEGORIES\n  SET_CASH_FUND_CATEGORIES: \"SET_CASH_FUND_CATEGORIES\"\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}\n\n//Another store Registry Items\nexport const setAnotherStoreRegistryItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n//Set Cash Fund Categories\nexport const setCashFundCategories = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES,\n\t\tpayload: params\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreRegistry = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nconst cashFundCategories = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct,\n  anotherStoreRegistry,\n  cashFundCategories\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_GUEST_VIEW: \"IS_GUEST_VIEW\",\n  SET_VIEW_FILTER_CATEGORY: \"SET_VIEW_FILTER_CATEGORY\",\n\n  // Filter\n\tSET_VIEW_PARENT_FILTER: \"SET_VIEW_PARENT_FILTER\",\n\tSET_VIEW_CHILD_FILTER: \"SET_VIEW_CHILD_FILTER\",\n\tCLEAR_VIEW_FILTER: \"CLEAR_VIEW_FILTER\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setguestViewRegistry = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW,\n    payload: params\n  }\n}\n\n// View Filter Category Section\nexport const setViewFilterCategory = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n\n// Filter Section\n\nexport const setParentViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewFilter = () => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER,\n\t}\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst guestViewRegistry = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst viewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    guestViewRegistry,\n    filterCategory,\n    viewFilterApplied\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\",\n  SET_LOGGING_STATUS: \"SET_LOGGING_STATUS\",\n  SET_TODO : \"SET_TODO\",\n  SET_ONBOARDING_REGISTRY: \"SET_ONBOARDING_REGISTRY\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}\n\nexport const setLoggingStatus = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS,\n    payload: params\n  }\n}\n\nexport const setTodo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_TODO,\n    payload: params\n  }\n}\n\nexport const setOnboardingRegistry = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY,\n    payload: params\n  }\n}\n","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst todo = (state = defaultData.todo, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_TODO:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst onboardingRegistry = (state = \"\", action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo,\n  loggedIn,\n  todo,\n  onboardingRegistry\n});","export const PERSONALISE_CHECKLIST_ACTION_TYPES = {\n\n\tGET_ALL_CHECKLIST_ITEMS: \"GET_ALL_CHECKLIST_ITEMS\",\n\tINCREMENT_CHECKLIST_QUANTITY: \"INCREMENT_CHECKLIST_QUANTITY\",\n\tDECREMENT_CHECKLIST_QUANTITY: \"DECREMENT_CHECKLIST_QUANTITY\",\n\tCHECKLIST_ADDED: \"CHECKLIST_ADDED\",\n\n\tPERSONALISE_ADD_QUESTION: \"PERSONALISE_ADD_QUESTION\",\n    PERSONALISE_ADD_ANSWER: \"PERSONALISE_ADD_ANSWER\",\n    PERSONALISE_UPDATE_ANSWER: \"PERSONALISE_UPDATE_ANSWER\"\n}\n\nexport const incrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\n\nexport const setPersonaliseCheckListItems = params => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\nexport const setIsActiveCheckList = (id, isAdded) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED,\n\t\tpayload: { id, isAdded }\n\t}\n}\n\nexport const addPersonalizeQuestion = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION,\n\t  payload: params\n\t}\n  }\n  \n  export const addPersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER,\n\t  payload: params\n\t}\n  }\n  \n  export const updatePersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER,\n\t  payload: params\n\t}\n  }","import {PERSONALISE_CHECKLIST_ACTION_TYPES} from \"./PersonaliseCheckListActions\";\nimport {combineReducers} from \"redux\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.totalItemsCount += quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id && subCategory.totalItemsCount > 1) {\n        subCategory.totalItemsCount -= quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst setIsAddedCheckList = (state, payload) => {\n  let {\n    id,\n    isAdded\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.isAdded = isAdded;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\n// Reducers\nconst editedPersonaliseCheckList = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS:\n      return [...action.payload];\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n      case PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED:\n        return setIsAddedCheckList(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER:\n      return [...state, action.payload]\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  editedPersonaliseCheckList,\n  questions,\n  answers\n})","export const ONBOARDING_ACTION_TYPES = {\n  ADD_QUESTION: \"ADD_QUESTION\",\n  ADD_ANSWER: \"ADD_ANSWER\",\n  UPDATE_ANSWER: \"UPDATE_ANSWER\"\n}\n\nexport const addOnboardingQuestion = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_QUESTION,\n    payload: params\n  }\n}\n\nexport const addQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_ANSWER,\n    payload: params\n  }\n}\n\nexport const updateQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.UPDATE_ANSWER,\n    payload: params\n  }\n}","import {ONBOARDING_ACTION_TYPES} from \"./OnboardingAction\";\nimport {combineReducers} from \"redux\";\n\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_QUESTION:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_ANSWER:\n      return [...state, action.payload]\n    case ONBOARDING_ACTION_TYPES.UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  questions,\n  answers\n});","export const GUEST_VIEW_ACTION_TYPES = {\n\tUPDATE_GUEST_VIEW_INFO: \"UPDATE_GUEST_VIEW_INFO\",\n\tSET_GUEST_VIEW_PRODUCT: \"SET_GUEST_VIEW_PRODUCT\",\n\tGUEST_ACTIVE_SORT_FILTER: \"GUEST_ACTIVE_SORT_FILTER\",\n\n\t// Filter\n\tSET_GUEST_VIEW_PARENT_FILTER: \"SET_GUEST_VIEW_PARENT_FILTER\",\n\tSET_GUEST_VIEW_CHILD_FILTER: \"SET_GUEST_VIEW_CHILD_FILTER\",\n\tCLEAR_GUEST_VIEW_FILTER: \"CLEAR_GUEST_VIEW_FILTER\",\n\n\tSET_GUEST_VIEW_FILTER_CATEGORY: \"SET_GUEST_VIEW_FILTER_CATEGORY\",\n\tGUEST_VIEW_SET_PAGINATION_INFO: \"GUEST_VIEW_SET_PAGINATION_INFO\",\n\tCLEAR_GUEST_PAGINATION_INFO: \"CLEAR_GUEST_PAGINATION_INFO\",\n\n\tGET_GUEST_CHECKLIST_ITEMS: \"GET_GUEST_CHECKLIST_ITEMS\",\n}\n\nexport const updateGuestViewInfo = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const setGuestViewProducts = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const activeGuestSortFilter = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_ACTIVE_SORT_FILTER,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\nexport const setParentGuestViewFilter = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildGuestViewFilter = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearGuestViewFilter = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_VIEW_FILTER,\n\t}\n}\n\n// View Filter Category Section\nexport const setGuestViewFilterCategory = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\nexport const setViewGuestPaginationInfo = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewGuestPaginationInfo = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO,\n\t}\n}\n\nexport const setGuestCheckListItems = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GET_GUEST_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n","import { GUEST_VIEW_ACTION_TYPES } from \"./GuestViewAction\";\nimport { combineReducers } from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst guestViewRegistry = (state = { updated: false }, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO:\n      return { ...action.payload }\n    default:\n      return state\n  }\n}\n\nconst addedGuestProducts = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PRODUCT:\n      return action.payload.length ? [...state, ...action.payload] : [];\n    default:\n      return state;\n  }\n}\n\nconst activeGuestSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GUEST_ACTIVE_SORT_FILTER:\n      return {...action.payload};\n    default:\n      return state;\n  }\n}\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst guestViewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst guestFilterCategory = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst paginationInfo = (state = defaultData.trackGifts.pagination, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO:\n      return {...action.payload}\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_PAGINATION_INFO:\n      return defaultData.trackGifts.pagination\n    default:\n      return state\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GET_GUEST_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  info: guestViewRegistry,\n  product: addedGuestProducts,\n  activeGuestSortFilter,\n  guestViewFilterApplied,\n  guestFilterCategory,\n  paginationInfo,\n  checkList,\n});","export const TRACK_GIFTS_ACTION_TYPES = {\n  TRACK_GIFTS_ACTIVE_VIEW: \"TRACK_GIFTS_ACTIVE_VIEW\",\n\n  TRACK_GIFTS_SET_PRODUCT: \"TRACK_GIFTS_SET_PRODUCT\",\n\n  TRACK_GIFTS_SET_PAGINATION_INFO: \"TRACK_GIFTS_SET_PAGINATION_INFO\",\n\n  TRACK_GIFTS_SET_FILTERS: \"TRACK_GIFTS_SET_FILTERS\",\n\n  TRACK_GIFTS_SET_SEARCH: \"TRACK_GIFTS_SET_SEARCH\"\n}\n\nexport const setActiveView = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_ACTIVE_VIEW,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsProduct = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PRODUCT,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsPaginationInfo = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PAGINATION_INFO,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsFilters = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_FILTERS,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsSearch = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_SEARCH,\n    payload: params\n  }\n}\n","import React from \"react\";\nimport \"./ViewBy.scss\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setActiveView} from \"../../TrackGiftsAction\";\n\nexport const TRACK_GIFTS_VIEWS = [\n  {\n    \"id\": 1,\n    \"text\": \"Gifts\"\n  },\n  {\n    \"id\": 2,\n    \"text\": \"Gift Givers\"\n  }\n]\n\nconst ViewBy = () => {\n  const activeView = useSelector(state => state.trackGifts.activeView);\n  const dispatch = useDispatch()\n\n  const changeTrackGiftView = view => {\n    dispatch(setActiveView(view))\n  }\n\n  return (\n    <div className=\"track-gift-view-by\">\n      <p className=\"text-sm\">View By</p>\n      <div className=\"view-by-toggle-section mt-1\">\n        <div\n          className={[\"view-by-toggle text-sm p-2\", activeView.id === TRACK_GIFTS_VIEWS[0].id ? \"active-view-toggle\" : \"\"].join(\" \")}\n          onClick={() => changeTrackGiftView(TRACK_GIFTS_VIEWS[0])}\n        >Gifts\n        </div>\n        <div\n          className={[\"view-by-toggle text-sm p-2\", activeView.id === TRACK_GIFTS_VIEWS[1].id ? \"active-view-toggle\" : \"\"].join(\" \")}\n          onClick={() => changeTrackGiftView(TRACK_GIFTS_VIEWS[1])}\n        >Gift\n          Givers\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewBy;","import {TRACK_GIFTS_ACTION_TYPES} from \"./TrackGiftsAction\";\nimport {combineReducers} from \"redux\";\nimport {TRACK_GIFTS_VIEWS} from \"./components/view-by/ViewBy\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// By default \"Gifts\" are selected\nconst activeView = (state = TRACK_GIFTS_VIEWS[0], action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_ACTIVE_VIEW:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst products = (state = [], action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PRODUCT:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst paginationInfo = (state = defaultData.trackGifts.pagination, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PAGINATION_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst filters = (state = defaultData.trackGifts.filters, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_FILTERS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst search = (state = defaultData.trackGifts.search, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_SEARCH:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\n\nexport default combineReducers({\n  activeView,\n  products,\n  paginationInfo,\n  filters,\n  search\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\nimport PersonaliseCheckListReducer from \"../modules/personalise-checklist/PersonaliseCheckListReducer\";\nimport Onboarding from \"../modules/onboarding/OnboardingReducer\";\nimport GuestViewReducer from \"../modules/guest-view/GuestViewReducer\";\nimport TrackGiftsReducer from \"../modules/track-gifts/TrackGiftsReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  personaliseCheckList: PersonaliseCheckListReducer,\n  onboarding: Onboarding,\n  trackGifts: TrackGiftsReducer,\n  guestView: GuestViewReducer,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n  LOGIN: {\n    VERIFY_TOKEN: APP_HOME_ROUTE + \"/verify-token/:token\"\n  },\n  REGISTRY: {\n    HOME: APP_HOME_ROUTE\n  },\n\n  MY_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/home\",\n    GIFTS_ADDED: APP_HOME_ROUTE + \"/~/gifts-added\",\n    GIFT_TO_ADD: APP_HOME_ROUTE + \"/~/gifts-to-add\",\n    GIFT_VIEW: APP_HOME_ROUTE + \"/guest-view\",\n    SHOWER: APP_HOME_ROUTE + \"/~/shower\",\n    ANNOUNCEMENTS: APP_HOME_ROUTE + \"/~/announcements\",\n    MORE: APP_HOME_ROUTE + \"/~/more\",\n    TO_DOS: APP_HOME_ROUTE + \"/~/to_dos\"\n  },\n\n  VIEW_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/view-registry\"\n  },\n\n  TRACK_GIFTS: {\n    HOME: APP_HOME_ROUTE + \"/track_gifts\"\n  },\n\n  ONBOARDING: {\n    HOME: APP_HOME_ROUTE + \"/onboarding\"\n  },\n\n  PERSONALIZE:{\n    HOME: APP_HOME_ROUTE + \"/personalize-quiz\",\n    CHECKLIST: APP_HOME_ROUTE + \"/personalize-checklist\"\n  },\n\n  GUEST_VIEW: {\n    HOME: APP_HOME_ROUTE+\"\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")} />\n      <div className={[\"more-option-dropdown\"].join(\" \")}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;\n","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      {props.title || props.titleContent ?\n        <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n          <div>\n            <div className=\"d-flex justify-content-between\">\n              <h1>{props.title}</h1>\n              <div className=\"d-flex\">\n                {props.headerContent ? props.headerContent : null}\n                <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n              </div>\n            </div>\n          </div>\n\n          {/* OPTIONAL CONTENT IN TITLE PORTION */}\n          {props.titleContent ? props.titleContent : null}\n\n        </Modal.Header> : null}\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n        {/* MODAL CONTENT GOES HERE */}\n        {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image text-center\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image?.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink} tabindex>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import { gql } from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  registryCategories(registryId:$registryId){\n    id,\n    isExcluded,\n    itemsCount,\n    addedItemsCount,\n    totalItemsCount,\n    subCategoriesIsExcluded,\n    category{\n      id,\n      categoryName,\n      description,\n      categoryType {\n        id,\n        name\n      }\n      isParent,\n    },\n    registrySubCategories{\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n      subCategoriesIsExcluded,\n      category{\n        id,\n        categoryName,\n        description,\n        categoryType {\n          id,\n          name\n        }\n        isParent,\n      },\n      registrySubProductTypes{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName,\n          description,\n          categoryType {\n            id,\n            name\n          }\n          isParent,\n        },\n      }\n    }\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems(\n  $registryId:Int!\n  $after: String,\n  $first: Int,\n  $isReserved: Boolean,\n  $isPurchased: Boolean,\n  $isAvailable: Boolean,\n  $sortBy: String,\n  $categories:[Int],\n  $price_Lte: Float,\n  $price_Gte: Float,\n  $store: [String],\n  ){\n    registryItems(\n      registryId:$registryId\n      isReserved: $isReserved,\n      isPurchased: $isPurchased,\n      isAvailable: $isAvailable,\n      sortBy: $sortBy,\n      categories: $categories,\n      price_Lte: $price_Lte,\n      price_Gte: $price_Gte,\n      store: $store,\n      ){\n      registryItems(after: $after, first: $first) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            orderNo,\n            giftMessage,\n            isReserved,\n            isAmountReceived,\n            isPurchased,\n            title,\n            registryCategories {\n              id,\n              category{\n                categoryName,\n                categoryType {\n                  id,\n                  name\n                }\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              sku,\n              price,\n              imageUrl,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n      registryItemsAnalysisCount{\n        totalAvailable,\n        totalReserved,\n        totalPurchased,\n        maStoreItems,\n        otherStoreItems,\n        under50,\n        moreThan100,\n        between50100,\n        totalFundsReceived\n      }\n      categoryData\n    }\n  }\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:[Int]!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      registryCategories:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nconst GET_QUESTIONS = `\n  query getQuestions($registryId: Int, $isPersonalize: Boolean!){\n  questions(registryId: $registryId, isPersonalize: $isPersonalize){\n    id,\n    title,\n    answerInputType,\n    fields,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      action,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          options{\n            id\n            value\n            toastMessage\n            action\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY = `\n  query getGuestRegistry($urlSlug: String!, $after: String, $first: Int){\n    registryAsGuest(urlSlug: $urlSlug){\n      id,\n      name,\n      displayName,\n      greeting,\n      isPublic,\n      urlSlug,\n      image {\n        id\n        image\n      },\n      user {\n        firstName,\n        partnerUser {\n          firstName\n        }\n      },\n      registryItems(after: $after, first: $first) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            orderNo,\n            giftMessage,\n            isReserved,\n            isAmountReceived,\n            isPurchased,\n            title,\n            groupGift {\n              amountReceived\n            }\n            registryCategories {\n              id,\n              category{\n                categoryName,\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              sku,\n              price,\n              imageUrl,\n              isCashFund,\n              hideTotal,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n    }\n  }\n`\n\nconst GET_PERSONALIZE_QUESTIONS = `\nquery editablePersonalizeQuestions($registryId: Int!){\n  editablePersonalizeQuestions(registryId: $registryId){\n    id,\n    title,\n    answerInputType,\n    fields,\n    isPersonalize,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          isPersonalize,\n          options{\n            id\n            value\n            toastMessage\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_TRACK_GIFTS = `\nquery registryGifts($registryId: Int!, $giftGivers: Boolean!, $after: String, $first: Int,\n                    $isReserved: Boolean, $isAvailable: Boolean, $isPurchased: Boolean, $isFundsReceived: Boolean, $isReturned: Boolean) {\n  registryGifts(registryId: $registryId, giftGivers: $giftGivers,\n                isReserved: $isReserved, isAvailable: $isAvailable, isPurchased: $isPurchased, isFundsReceived: $isFundsReceived, isReturned: $isReturned) {\n    registryGiftItemsCount{\n        totalAvailable,\n        totalPurchased,\n        totalReserved,\n        totalFundsReceived,\n        totalReturned\n      }\n    gifts(after: $after, first: $first) {\n      edges {\n        node {\n          id\n          isGroupGift\n          featuredOrder\n          isReserved\n          isPurchased\n          isCashAcceptedOnly\n          isAmountReceived\n          giftMessage\n          item {\n            storeItemUrl\n            price\n            imageUrl\n            isCashFund\n          }\n          title\n          guestUser {\n            guestEmail\n            firstName\n            lastName\n            id\n            contributionAmount\n          }\n          groupGift {\n            id\n            amountReceived\n            guestUser {\n              guestEmail\n              firstName\n              lastName\n              id\n              contributionAmount\n            }\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n`\n\nconst GET_CASH_FUND_CATEGORIES = `\nquery getCashFund($registryId: Int!){\n  cashFundCategories(registryId:$registryId){\n    id\n    category{\n      id\n      categoryName\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY_PRODUCT = `\n  query getGuestRegistry(\n    $urlSlug: String!,\n    $after: String,\n    $first: Int,\n    $isReserved: Boolean,\n    $isPurchased: Boolean,\n    $isAvailable: Boolean,\n    $sortBy: String,\n    $categories:[Int],\n    $price_Lte: Float,\n    $price_Gte: Float,\n    $store: [String],\n    ){\n    registryAsGuest(\n      urlSlug: $urlSlug,\n      isReserved: $isReserved,\n      isPurchased: $isPurchased,\n      isAvailable: $isAvailable,\n      sortBy: $sortBy,\n      categories: $categories,\n      price_Lte: $price_Lte,\n      price_Gte: $price_Gte,\n      store: $store,\n      ){\n      registryItems(\n        after: $after,\n        first: $first,\n        ) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            orderNo,\n            giftMessage,\n            isReserved,\n            isAmountReceived,\n            isPurchased,\n            title,\n            groupGift {\n              amountReceived\n            }\n            registryCategories {\n              id,\n              category{\n                categoryName,\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              sku,\n              price,\n              imageUrl,\n              isCashFund,\n              hideTotal,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n      registryItemsAnalysisCount{\n        totalAvailable,\n        totalReserved,\n        totalPurchased,\n        maStoreItems,\n        otherStoreItems,\n        under50,\n        moreThan100,\n        between50100,\n        totalFundsReceived\n      }\n      categoryData\n    }\n  }\n`;\n\nconst GET_GUEST_CHECKLIST = `\n  query registryCategoriesAsGuest($urlSlug: String!){\n    registryCategoriesAsGuest(urlSlug: $urlSlug){\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n       category{\n        id,\n        categoryName,\n        categoryType{\n          id,\n          name\n        }\n      },\n      registrySubCategories{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName\n        },\n        registrySubProductTypes{\n          id,\n          isExcluded,\n          itemsCount,\n          addedItemsCount,\n          totalItemsCount,\n          category{\n            id,\n            categoryName\n          },\n        }\n      }\n    }\n  }\n`;\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_TRACK_GIFTS,\n  GET_CASH_FUND_CATEGORIES,\n  GET_GUEST_REGISTRY_PRODUCT,\n  GET_GUEST_CHECKLIST,\n};\n\n// Example to use queries added in home.jsx","const backendId = \"https://3.12.191.197\";\n// const backendId = \"http://localhost:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport { Cookies } from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: { \"Authorization\": cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\" }\n});\n\nconst axiosInstanceNoToken = axios.create({\n  baseURL: apiURL\n});\n\nconst axiosInstanceNoHeader = axios.create({\n  baseURL: apiURL\n});\n\nexport function graphQLNoToken(data) {\n  return axiosInstanceNoToken.post(\"/graphql\", data);\n}\n\nexport function graphQLNoHeader(data, options) {\n  return axiosInstanceNoHeader.post(\"/graphql\", data, options);\n}\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nexport function verifyAccessToken(data) {\n  return axiosInstanceNoToken.post(\"/user/verify/token\", data);\n}\n\nexport function getAnotherRegistryProducts(data) {\n  return axiosInstance.post(\"/registry/import\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n  VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL + \"/media/\"\n}\n\nexport const FILTERS = {\n  CATEGORIES_DISPLAY: \"Categories\",\n  PRICE_DISPLAY: \"Price\",\n  PRICE_DISPLAY_1: \"Under $50\",\n  PRICE_DISPLAY_2: \"$50 - $100\",\n  PRICE_DISPLAY_3: \"more than $100\",\n  STORE_DISPLAY: \"Store\",\n  MONICA_AND_ANDY_DISPLAY: \"Monica + Andy\",\n  ELSEWHERE_DISPLAY: \"Elsewhere\",\n  AVAILABLE_DISPLAY: \"Available\",\n  RESERVED_DISPLAY: \"Reserved\",\n  PURCHASED_DISPLAY: \"Purchased\",\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'https%3A%2F%2Fmonicaandandy-watertower.myshopify.com%2Fpages%2Fma_bady_registry_bookmarklet%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"\n\nexport const IMPORT_REGISTRY_EMAIL = \"storks@monicaandandy.com\"\n\nexport const TRACK_GIFTS_PRODUCTS_PER_REQUEST = 20\nexport const M_A_STORE_NAME = \"monicaandandy\"\n\nexport const M_A_FORGOT_PASSWORD_LINK = \"https://monicaandandy-watertower.myshopify.com/account/login#recover\"\nexport const VIEW_GIFT_PRODUCTS_PER_REQUEST = 20\n\nexport const CURRENCY = \"$\"\n","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    }\n  }\n}\n`\n\nconst REGISTER_USER = `\nmutation register_user($name: String!, $email: String!, $password: String!){\n  registerUser(registerInput:{\n      firstName:$name,\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\nconst SAVE_QUESTION_RESPONSE = `\nmutation addRegistryQuestionOption($registryId: Int!, $answers: [RegistryQuestionOptionInput]!){\n  addRegistryMultipleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $answers){\n    message\n  }\n}\n`\n\nconst SAVE_REGISTRY_DATA = `\nmutation saveRegistryData($registryData:RegistryInput!, $registryItems:[StoreInput]){\n  importRegistry(registryData: $registryData, registryItems: $registryItems) {\n    message\n  }\n}\n`\n\nconst LOGIN_USER = `\nmutation login_user($email: String!, $password: String!){\n  loginUser(loginInput:{\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\n\nconst ADD_PARTNER_ACCOUNT = `\nmutation addPartner($partnerDetail: AddPartnerAccountInput!){\n  addPartnerAccount(addPartnerAccountInput:$partnerDetail){\n    message\n  }\n}\n`\n\nconst SAVE_UPDATED_CHECKLIST = `\nmutation addDesiredChecklistItemCount($registryId:Int!, $itemCountData:[DesiredItemCountInput]!){\n  addDesiredChecklistItemCount(registryId: $registryId, itemCountData: $itemCountData){\n    message\n  }\n}\n`\n\nconst SAVE_SINGLE_QUESTION_RESPONSE = `\nmutation updateOrCreateRegistrySingleQuestionOption($registryId:Int!, $registryQuestionOptionInput: RegistryQuestionOptionInput!, $returnTo: String){\n  updateOrCreateRegistrySingleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $registryQuestionOptionInput, returnTo: $returnTo){\n    message,\n    redirectionUrl\n  }\n}\n`\n\nconst CREATE_REGISTRY = `\nmutation{\n  createRegistry{\n    registry{\n      id\n    },\n    message,\n    status\n  }\n}\n`\n\nconst TRACK_GIFTS_ADD_GIFT = `\nmutation addGift($registryId: Int!, $gifts: [GiftInput]){\n  addGift(registryId: $registryId, gifts: $gifts){\n   message,\n   status\n  }\n}\n`\n\nexport {\n  TOGGLE_MUST_HAVE,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY,\n  UPDATE_VIEW_REGISTRY_POISTION,\n  UPDATE_REGISTRY_URL,\n  SAVE_REGISTRY_DATA,\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  SAVE_UPDATED_CHECKLIST,\n  SAVE_SINGLE_QUESTION_RESPONSE,\n  CREATE_REGISTRY,\n  TRACK_GIFTS_ADD_GIFT\n};\n","import React from \"react\";\nimport \"./GiftCardPill.scss\";\n\nconst GiftCardPill = (props) => {\n  let className = \"\"\n  let text = \"\"\n  switch (props.variant) {\n    case \"purchased\":\n      className = \"track-gifts-purchased-pill\"\n      text = \"Purchased\"\n      break\n    case \"reserved\":\n      className = \"track-gifts-reserved-pill\"\n      text = \"Reserved\"\n      break\n    case \"received\":\n      className = \"track-gifts-received-pill\"\n      text = \"Received\"\n      break\n    default:\n      className = \"\"\n      break\n  }\n\n  return (\n    <div className={[\"track-gifts-pills px-2 d-inline-block\", className].join(\" \")}>\n      <span className=\"text-sm font-medium\">{props.amount != null || undefined ? `$${props.amount}` : null} {text}</span>\n    </div>\n  )\n}\n\nexport default GiftCardPill","import React from \"react\";\nimport \"./GiftCard.scss\";\nimport GiftCardPill from \"../gift-card-pill/GiftCardPill\";\nimport {CURRENCY} from \"../../../../utils/constants\";\n\nclass GiftCard extends React.Component {\n  friendsDetailRef = React.createRef()\n\n  toggleFriendsDetail = e => {\n    e.preventDefault()\n    if (this.friendsDetailRef.current) {\n      this.friendsDetailRef.current.classList.toggle(\"track-gifts-show-friends-detail\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-track-gifts-card pt-3 pb-4\">\n        <div className=\"row\">\n\n          <div className=\"col-1\">\n            {this.props.data.item.imageUrl ?\n              <img src={this.props.data.item.imageUrl} className=\"track-gifts-card-image\"/>\n              :\n              <div className=\"track-gifts-no-product-image\"/>\n            }\n          </div>\n\n          <div className=\"col-5\">\n            <div className=\"track-gifts-product-description pl-1\">\n              <div className=\"d-flex\">\n                <h4\n                  className={[\"font-medium track-gifts-product-title\", this.props.data.giftMessage && this.props.data.guestUser ? \"mr-5\" : \"mr-9\"].join(\" \")}>\n                  {this.props.data.title}\n                </h4>\n                {this.props.data.giftMessage && this.props.data.guestUser ?\n                  <button className=\"ml-auto track-gifts-gift-message-container text-left\">\n                    <div className=\"track-gifts-gift-message-content p-5\">\n                      <h3>Gift Message</h3>\n                      <p className=\"text-body mt-5 track-gifts-gift-message\">{this.props.data.giftMessage}</p>\n                      <p\n                        className=\"mt-3 text-sm font-medium\">{`${this.props.data.guestUser.firstName} ${this.props.data.guestUser.lastName ? `${this.props.data.guestUser.lastName[0]}.` : ''}`}</p>\n                    </div>\n                  </button>\n                  : null}\n\n              </div>\n\n              {this.props.data.item.isCashFund ?\n                <div className=\"mt-2\">\n                  {this.props.data.groupGift ?\n                    <div>\n                      <span\n                        className=\"text-sm font-medium\">{`${CURRENCY}${this.props.data.groupGift.amountReceived}`}</span>\n                      <span className=\"text-sm\">{` of ${CURRENCY}${this.props.data.item.price} received`}</span>\n                      <div className=\"track-gifts-cash-fund-progress-bar\">\n                        <div className=\"track-gifts-cash-fund-progress mw-100\"\n                             style={{width: `${(this.props.data.groupGift.amountReceived / this.props.data.item.price) * 100}%`}}/>\n                      </div>\n                    </div>\n                    : null}\n\n                </div>\n                :\n                <div className=\"mt-2\">\n                  {this.props.data.isPurchased ? <GiftCardPill variant=\"purchased\"/> : null}\n                  {this.props.data.isReserved ? <GiftCardPill variant=\"reserved\"/> : null}\n                  {this.props.data.isCashAcceptedOnly && this.props.data.isAmountReceived ?\n                    <GiftCardPill variant=\"received\" amount={this.props.data.item.price}/> : null}\n                  {/* TODO: Add date of purchased */}\n                </div>\n              }\n\n\n            </div>\n          </div>\n\n          <div className=\"col-6\">\n            {this.props.data.isGroupGift ?\n              // Group Gift\n              (this.props.data.groupGift && this.props.data.groupGift.guestUser.length > 0 ?\n                <div className=\"track-gifts-group-users-details\">\n                  <p className=\"text-sm font-medium\">{`${this.props.data.groupGift.guestUser.length} friends`}</p>\n                  <a href=\"#\" className=\"track-gifts-view-friends-link text-sm font-medium\"\n                     onClick={(e) => this.toggleFriendsDetail(e)}>View</a>\n                  <div ref={this.friendsDetailRef} className=\"track-gifts-friends-detail pt-3 pb-1\">\n                    <div className=\"friends-detail-header d-flex pb-2 px-3\">\n                      <p className=\"text-sm font-medium\">{`${this.props.data.groupGift.guestUser.length} friends`}</p>\n                      <i className=\"icon-close close-friends-detail-icon ml-auto\"\n                         onClick={(e) => this.toggleFriendsDetail(e)}/>\n                    </div>\n                    <div className=\"px-3\">\n                      {this.props.data.groupGift.guestUser.map(user => (\n                        <div className=\"friend-detail d-flex py-2\">\n                          <div className=\"mr-10\">\n                            <p\n                              className=\"text-sm font-medium\">{`${user.firstName ? user.firstName : ''} ${user.lastName ? user.lastName : ''}`}</p>\n                            <p className=\"text-sm friend-user-email\">{user.guestEmail}</p>\n                          </div>\n                          <div className=\"ml-auto\">\n                            <p\n                              className=\"text-sm font-medium friend-contribution-amount\">{`${CURRENCY}${user.contributionAmount}`}</p>\n                            {/*  TODO: Add Contribution Date */}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                : null)\n              :\n              // Single guest User\n              (this.props.data.guestUser ?\n                <div className=\"track-gifts-user-detail\">\n                  <p\n                    className=\"text-sm font-medium\">{`${this.props.data.guestUser.firstName ? this.props.data.guestUser.firstName : ''} ${this.props.data.guestUser.lastName ? this.props.data.guestUser.lastName : ''}`}</p>\n                  <p className=\"text-sm track-gifts-user-email\">{this.props.data.guestUser.guestEmail}</p>\n                </div>\n                : null)\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GiftCard;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {TRACK_GIFTS_VIEWS} from \"../../components/view-by/ViewBy\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport GiftCard from \"../../components/gift-card/GiftCard\";\nimport \"./TrackGiftContent.scss\";\n\nexport const LOCAL_2_API_FILTERS_MAPPING = {\n  4: \"totalAvailable\",\n  1: \"totalPurchased\",\n  3: \"totalReserved\",\n  2: \"totalFundsReceived\",\n  5: \"totalReturned\"\n}\n\n// Component for No registry Gifts Found\nconst NoRecordFound = () => {\n  return (\n    <h2>No Gifts Found...</h2>\n  )\n}\n\nclass TrackGiftsContent extends React.Component {\n\n  state = {\n    currentView: null\n  }\n\n  checkProductAvailability = product => {\n    // Checking if product has any guestUser or not (Availability)\n    if (!product.isGroupGift) {\n      return !(product.isReserved || product.isPurchased || (product.isCashAcceptedOnly && product.isAmountReceived))\n    } else {\n      if (product.groupGift) {\n        return product.groupGift.guestUser.length <= 0\n      } else {\n        return true\n      }\n    }\n  }\n\n  getProductsBasedOnView = (view, stateProducts) => {\n    let products = []\n    let availableProducts = []\n    let guestUsersEmails = []\n\n    if (view?.id === TRACK_GIFTS_VIEWS[0].id) { // [0] index is Gifts\n      //  Gifts View\n      for (const product of stateProducts) {\n        if (this.checkProductAvailability(product)) {\n          availableProducts.push({...product})\n        } else {\n          products.push({...product})\n        }\n      }\n\n      // Show Available products in Gifts View only if Available Filter is applied\n      // if (availableProducts.length > 0) {\n      //   products.push(...availableProducts)\n      // }\n    } else {\n      //  Gift Giver View\n      for (const product of stateProducts) {\n        if (this.checkProductAvailability(product)) {\n          availableProducts.push({...product})\n        } else {\n          // Grouping Product\n          if (product.isGroupGift) {\n            // Looping through each groupGift User\n            for (const groupUser of product.groupGift.guestUser) {\n              // console.log(groupUser)\n              if (guestUsersEmails.indexOf(groupUser.guestEmail) !== -1) {\n                // User already have product\n                products = products.map(groupProduct => {\n                  if (groupProduct.user.guestEmail === groupUser.guestEmail) {\n                    groupProduct.products.push(product)\n                  }\n                  return groupProduct\n                })\n              } else {\n                // User doesn't have product\n                products.push({\n                  user: {...groupUser},\n                  products: [{...product}]\n                })\n                guestUsersEmails.push(groupUser.guestEmail)\n              }\n            }\n          } else {\n            //  Not a group Gift\n            if (guestUsersEmails.indexOf(product.guestUser.guestEmail) !== -1) {\n              // User already have product\n              products = products.map(groupProduct => {\n                if (groupProduct.user.guestEmail === product.guestUser.guestEmail) {\n                  groupProduct.products.push(product)\n                }\n                return groupProduct\n              })\n            } else {\n              // User doesn't have product\n              products.push({\n                user: {...product.guestUser},\n                products: [{...product}]\n              })\n              guestUsersEmails.push(product.guestUser.guestEmail)\n            }\n          }\n\n\n        }\n      }\n\n      if (availableProducts.length > 0) {\n        products.push({\n          availableProducts: true,\n          products: [...availableProducts]\n        })\n      }\n    }\n\n    return products\n  }\n\n  render() {\n\n    if (this.props.stateTrackGiftsProducts.length <= 0 && this.state.currentView && this.props.stateTrackGiftsPagination.hasNextPage) {\n      getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.dispatch)\n    }\n\n    // Getting new products when new views are switched\n    if (this.state.currentView?.id !== this.props.stateTrackGiftsView?.id) {\n      this.setState({\n        currentView: {...this.props.stateTrackGiftsView}\n      })\n      getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.dispatch)\n    }\n\n    const products = this.getProductsBasedOnView(this.props.stateTrackGiftsView, this.props.stateTrackGiftsProducts)\n\n    if (this.props.stateTrackGiftsProducts.length <= 0 && !this.props.stateTrackGiftsPagination.hasNextPage) {\n      return <NoRecordFound/>\n    } else if (this.props.stateTrackGiftsView?.id === TRACK_GIFTS_VIEWS[0].id) {\n\n      // For Gifts\n\n      return (\n        <div>\n          <div className=\"row mb-2\">\n            <div className=\"col-6\">\n              <p className=\"text-sm font-medium\">Gift details</p>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"text-sm font-medium\">Gifted by</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <InfiniteScroll\n                next={() => getTrackGiftsProduct(false, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.dispatch)}\n                hasMore={this.props.stateTrackGiftsPagination.hasNextPage}\n                loader={<h4>Loading...</h4>}\n                dataLength={this.props.stateTrackGiftsProducts.length}\n              >\n                {products.map(product => {\n                  // return <p className=\"my-5\">{product.title}</p>\n                  return <GiftCard data={product}/>\n                })}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n\n      // For Gift Giver\n\n      return (\n        <div>\n          <InfiniteScroll\n            next={() => getTrackGiftsProduct(false, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.dispatch)}\n            hasMore={this.props.stateTrackGiftsPagination.hasNextPage}\n            loader={<h4>Loading...</h4>}\n            dataLength={this.props.stateTrackGiftsProducts.length}\n          >\n            {products.map(groupedProduct => {\n              return (\n                <div className=\"mb-4 track-gifts-gift-giver-view\">\n                  <div className=\"mb-2\">\n                    <span\n                      className=\"text-body font-medium\">{groupedProduct.availableProducts ? \"Available\" : `${groupedProduct.user.firstName ? groupedProduct.user.firstName : \"\"} ${groupedProduct.user.lastName ? groupedProduct.user.lastName : \"\"}`}\n                    </span>\n                    {!groupedProduct.availableProducts ?\n                      <span className=\"ml-1 text-body\">{groupedProduct.user.guestEmail}</span> : null}\n                    <span\n                      className=\"ml-1 text-body font-medium gift-givers-user-gift-count px-2\">{groupedProduct.products.length} gifts</span>\n                  </div>\n                  <div>\n                    {groupedProduct.products.map(product => (\n                      <GiftCard data={product}/>\n                    ))}\n                  </div>\n                </div>\n              )\n            })}\n          </InfiniteScroll>\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsFilters: state.trackGifts.filters\n})\n\nexport default connect(\n  mapStateToProps\n)(TrackGiftsContent);","import React from \"react\";\nimport {\n  GET_PRODUCTS,\n  REMOVE_REGISTRY_ITEM,\n  GET_CATEGORIES,\n  GET_REGISTRIES,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_GUEST_CHECKLIST, GET_TRACK_GIFTS\n} from \"../api/queries\";\nimport {graphQL, graphQLNoHeader, graphQLNoToken} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX, TRACK_GIFTS_PRODUCTS_PER_REQUEST} from \"./constants\";\nimport {\n  setRegistryProducts,\n  setCheckListItems,\n  toggleMustHaveProduct as toggleMustHaveProductAction,\n  setCashFundCategories\n} from \"../modules/my-registry/MyRegistryActions\";\nimport {CREATE_REGISTRY, TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION} from \"../api/mutations\";\nimport {setOnboardingRegistry, updateRegistryInfo} from \"../modules/registry/RegistryActions\";\nimport {setViewRegistryProducts} from \"../modules/view-registry/ViewRegistryActions\";\nimport {addOnboardingQuestion} from \"../modules/onboarding/OnboardingAction\";\nimport {addPersonalizeQuestion} from \"../modules/personalise-checklist/PersonaliseCheckListActions\";\nimport {updateGuestViewInfo, setGuestCheckListItems} from \"../modules/guest-view/GuestViewAction\";\nimport {toast} from \"react-toastify\";\nimport reducerDefaultData from \"data/ReducerDefaultData.json\";\nimport {TRACK_GIFTS_VIEWS} from \"../modules/track-gifts/components/view-by/ViewBy\";\nimport {\n  setTrackGiftsFilters,\n  setTrackGiftsPaginationInfo,\n  setTrackGiftsProduct\n} from \"../modules/track-gifts/TrackGiftsAction\";\nimport {LOCAL_2_API_FILTERS_MAPPING} from \"../modules/track-gifts/containers/track-gifts-content/TrackGiftsContent\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    let responseData = res.data.data.registryItems.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = {...item.node}\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n\n    // TODO: change category\n    let finalData = responseData.filter(product => product.registryCategories.length > 0)\n    dispatch(setRegistryProducts(finalData))\n\n  }).catch(err => {\n    console.error(err.response)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch,) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n\n      toast.error((\n        <p><b>{card.title}</b> removed from your registry!</p>\n      ))\n\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n    toast.error((\n      <p>Some error occurred.</p>\n    ))\n  })\n}\n\nexport const getRefinedCategory = (category) => {\n  return ({\n    id: category.id,\n    category: category.category,\n    categoryName: category.category.categoryName,\n    description: category.category.description,\n    categoryType: category.category.categoryType,\n    isDesired: category.isDesired,\n    isExcluded: category.isExcluded,\n    addedItemsCount: category.addedItemsCount,\n    totalItemsCount: category.totalItemsCount,\n    isParent: category.category.isParent,\n  })\n}\n\n\n// Get all categories\nexport const getAllCategories = (registryCategories, getAll) => {\n  // let finalCondition = category.subCategoriesIsExcluded ?\n  let parentCategories = registryCategories.filter(category => getAll ? true : (category.subCategoriesIsExcluded ? !category.subCategoriesIsExcluded : !category.isExcluded))\n  let finalCategories = parentCategories.map(parentCategory => {\n    let newParentCategory = getRefinedCategory(parentCategory)\n    let subCategory = parentCategory.registrySubCategories;\n    delete parentCategory.registrySubCategories\n    let newSubCategories = subCategory.filter(cat => getAll ? true : (cat.subCategoriesIsExcluded ? !cat.subCategoriesIsExcluded : !cat.isExcluded))\n    newSubCategories = newSubCategories.map(cat => {\n      let refinedSubCate = getRefinedCategory(cat)\n      let subProductTypes = cat.registrySubProductTypes.map(subProduct => getRefinedCategory(subProduct))\n      refinedSubCate['subProductTypes'] = subProductTypes.filter(category => getAll ? true : !category.isExcluded)\n      return refinedSubCate\n    })\n    newParentCategory['subCategories'] = newSubCategories\n    return newParentCategory\n  })\n\n  return finalCategories\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    operationName: \"getCategories\",\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n\n      // let tempAllCategories = getAllCategories(res.data.data.registryCategories, true)\n      // let cashFundCategories = []\n      //\n      // for (const category of tempAllCategories) {\n      //   for (const subCategory of category.subCategories) {\n      //     if (Number(subCategory.categoryType.id) === 2) {\n      //       cashFundCategories.push(subCategory)\n      //     }\n      //   }\n      // }\n      // dispatch(setCashFundCategories(cashFundCategories))\n      let finalCategories = getAllCategories(res.data.data.registryCategories, false)\n      if (finalCategories.length === 0) {\n        let allCategories = getAllCategories(res.data.data.registryCategories, true)\n        dispatch(setCheckListItems(allCategories))\n      } else {\n        dispatch(setCheckListItems(finalCategories))\n      }\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}\n\nexport const updateRegistryDetailState = (dispatch, registryData) => {\n  let currentRegistryInfo = null;\n\n  currentRegistryInfo = registryData[0].node;\n  if (currentRegistryInfo.image) {\n    currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n  }\n\n  if (currentRegistryInfo) {\n    dispatch(updateRegistryInfo({...currentRegistryInfo}))\n  } else {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.log(\"No registry found!\");\n  }\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        updateRegistryDetailState(dispatch, res.data.data.registries.edges)\n      } else {\n        dispatch(updateRegistryInfo({notFound: true}))\n      }\n    } catch (e) {\n      dispatch(updateRegistryInfo({notFound: true}))\n      console.error(e)\n    }\n  }).catch(err => {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.error(err.response ? err.response.data : null)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, oldPosition, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      dispatch(setViewRegistryProducts(oldPosition))\n      toast.error(\"Somerhing went wrong while re-arranging Products\")\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    }\n\n  }).catch(err => {\n    dispatch(setViewRegistryProducts(oldPosition))\n    console.error(err.message)\n  })\n}\n\nexport const addProductHandler = (card, stateAddedProducts, stateRegistryInfo, dispatch) => {\n  let existingProduct = stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n  const registryId = parseInt(stateRegistryInfo.id)\n  if (existingProduct.length === 0) {\n    const title = card.title\n    const category = card.category.id\n    const storeItemUrl = card.onlineStoreUrl\n    const sku = card.variants.edges[0].node.sku\n    const price = parseFloat(card.variants.edges[0].node.price)\n    const quantity = parseInt(card.quantity)\n    const shopifyItemId = card.id\n    const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      variables: {\n        registryId: registryId,\n        title: title,\n        category: category,\n        tags: [],\n        storeItemUrl: storeItemUrl ? storeItemUrl : '',\n        sku: sku,\n        price: price,\n        quantity: quantity,\n        shopifyItemId: shopifyItemId,\n        imageUrl: imageUrl,\n      }\n    }\n    graphQL(data).then(_ => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  } else {\n    let data = {\n      query: UPDATE_REGISTRY_ITEM,\n      variables: {\n        registryItemId: existingProduct[0].id,\n        quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n      }\n    }\n    graphQL(data).then(res => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  }\n}\n\nexport const getOnboardingQuestions = async (dispatch, registryId = null, token = null) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: false,\n      registryId: registryId ? Number(registryId) : null\n    }\n  }\n  let options = {}\n  if (token) {\n    options = {headers: {\"Authorization\": \"Token \" + token}}\n  }\n\n  await graphQLNoHeader(reqData, options).then(async res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      await dispatch(addOnboardingQuestion(questions))\n    }\n  }).catch(err => {\n    // toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\n\nexport const getPersonalizeQuestions = (registryId, dispatch) => {\n  let reqData = {\n    query: GET_PERSONALIZE_QUESTIONS,\n    variables: {\n      registryId: registryId,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.editablePersonalizeQuestions) {\n      const questions = res.data.data.editablePersonalizeQuestions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addPersonalizeQuestion(questions))\n    }\n  }).catch(err => {\n    toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\nexport const updateGuestViewRegistry = (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_REGISTRY,\n    variables: {\n      urlSlug: urlSlug,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.registryAsGuest) {\n      let guestViewInfo = {...res.data.data.registryAsGuest}\n      if (guestViewInfo.image) {\n        guestViewInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + guestViewInfo.image.image;\n      }\n      delete guestViewInfo.registryItems\n      dispatch(updateGuestViewInfo(guestViewInfo))\n    }\n  }).catch(err => {\n    dispatch(updateGuestViewInfo({notFound: true}))\n    if (err.response && err.response.data.errors) {\n      for (const error of err.response.data.errors) {\n        // TODO: Implement toast if necessary\n        console.log(error.message)\n      }\n    }\n  })\n}\n\nexport const createRegistry = dispatch => {\n  graphQL({query: CREATE_REGISTRY}).then(res => {\n    if (res.data.data) {\n      let registryId = res.data.data.createRegistry.registry.id\n      if (registryId) {\n        dispatch(setOnboardingRegistry(registryId))\n      }\n    }\n  }).catch(err => {\n    console.log(err.response)\n  })\n}\n\nexport const dataURItoBlob = (dataURI, fileType, fileName) => {\n  let byteString = atob(dataURI.split(',')[1]);\n  let ab = new ArrayBuffer(byteString.length);\n  let ia = new Uint8Array(ab);\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  let blob = new Blob([ab], {type: fileType});\n  return new File([blob], fileName, {\n    type: fileType\n  })\n}\n\nexport const getGuestCategories = async (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_CHECKLIST,\n    variables: {\n      urlSlug: urlSlug,\n    }\n  }\n  await graphQL(reqData).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n      let finalCategories = getAllCategories(res.data.data.registryCategoriesAsGuest, true)\n      dispatch(setGuestCheckListItems(finalCategories))\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}\n\nconst getTrackGiftsFilterStatus = (filterString, trackGiftsFilter) => {\n  let returnStatus = false\n  switch (filterString) {\n    case \"available\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 4) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"purchased\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 1) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"reserved\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 3) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"fundsReceived\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 2) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"returned\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 5) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    default:\n      returnStatus = false\n      break\n  }\n  return returnStatus;\n}\n\nexport const getTrackGiftsProduct = (clearProducts = false, trackGiftsFilters, trackGiftsProduct, trackGiftsPagination, trackGiftsView, registryInfo, dispatch) => {\n  // TODO: Change this Function when Search API in implemented\n  let reqData = {\n    query: GET_TRACK_GIFTS,\n    operationName: \"registryGifts\",\n    variables: {\n      registryId: registryInfo?.id,\n      giftGivers: trackGiftsView?.id === TRACK_GIFTS_VIEWS[1].id,  // [1] index is Gift Giver\n      after: clearProducts ? null : trackGiftsPagination.endCursor,\n      first: TRACK_GIFTS_PRODUCTS_PER_REQUEST,\n      isReserved: getTrackGiftsFilterStatus(\"reserved\", trackGiftsFilters),\n      isAvailable: getTrackGiftsFilterStatus(\"available\", trackGiftsFilters),\n      isPurchased: getTrackGiftsFilterStatus(\"purchased\", trackGiftsFilters),\n      isFundsReceived: getTrackGiftsFilterStatus(\"fundsReceived\", trackGiftsFilters),\n      isReturned: getTrackGiftsFilterStatus(\"returned\", trackGiftsFilters),\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    // Updating Track Gifts Filters\n    if (res.data.data.registryGifts && res.data.data.registryGifts.registryGiftItemsCount) {\n      const allFilterCounts = res.data.data.registryGifts.registryGiftItemsCount;\n      const newFilters = trackGiftsFilters.map(filter => {\n        filter.count = allFilterCounts[LOCAL_2_API_FILTERS_MAPPING[filter.id]] ? allFilterCounts[LOCAL_2_API_FILTERS_MAPPING[filter.id]] : 0\n        return filter\n      })\n\n      dispatch(setTrackGiftsFilters(newFilters))\n    }\n\n    // Updating Track Gifts Products\n    if (res.data.data.registryGifts && res.data.data.registryGifts.gifts && res.data.data.registryGifts.gifts.edges.length > 0) {\n      let registryGifts = res.data.data.registryGifts.gifts\n      let products = registryGifts.edges.map(item => ({...item.node}))\n      let pagination = null\n      if (registryGifts.pageInfo) {\n        pagination = {\n          hasNextPage: registryGifts.pageInfo.hasNextPage,\n          endCursor: registryGifts.pageInfo.endCursor,\n        }\n      }\n      if (pagination) {\n        dispatch(setTrackGiftsPaginationInfo({...pagination}))\n      }\n      if (clearProducts) {\n        dispatch(setTrackGiftsProduct([...products]))\n      } else {\n        dispatch(setTrackGiftsProduct([...trackGiftsProduct, ...products]))\n      }\n\n    } else {\n      dispatch(setTrackGiftsPaginationInfo({\n        hasNextPage: false,\n        endCursor: null\n      }))\n    }\n  }).catch(err => {\n    dispatch(setTrackGiftsPaginationInfo({\n      hasNextPage: false,\n      endCursor: null\n    }))\n    console.error(err.response)\n  })\n}","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = React.forwardRef((props, ref) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n    ref={ref}\n    disabled={props.disabled ? props.disabled : false}\n  >{props.children}</button>\n})\n\nexport default ButtonComponent;","import React, { useState } from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport CardItem from \"../card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../button-component/ButtonComponent\";\n\nconst AddedCard = (props) => {\n\n  const dispatch = useDispatch();\n  let stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRecommendedProducts = useSelector(state => state.myRegistry.recommendedProducts)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const [recommendedProducts, setRecommendedProducts] = useState([])\n  const [show, setShow] = useState(false);\n  const modalTitle = `Recommended ${props.data.registryCategories[0].category.categoryName}`\n  const [showRemoveModel, setShowRemoveModel] = useState(false);\n\n  const showRecommendation = (category) => {\n    // Fetching all recommendations for that particular product category\n    let categoryRecommended = [...stateRecommendedProducts.filter(product => Number(category.id) === Number(product.category.id))]\n\n    // Removing duplicate products if found any\n    let jsonObject = categoryRecommended.map(JSON.stringify);\n    let uniqueSet = new Set(jsonObject);\n    categoryRecommended = Array.from(uniqueSet).map(JSON.parse);\n\n    setRecommendedProducts(categoryRecommended.map(product => {\n      // Resetting recommended product quantity\n      product.quantity = 1;\n      return product;\n    }));\n\n    setShow(true);\n  }\n\n  let moreOptionsData = [\n    {\n      name: \"Remove\",\n      action: () => setShowRemoveModel(true)\n    }\n  ]\n\n  if (Number(props.data.registryCategories[0].category.categoryType.id) !== 2) {\n    moreOptionsData.unshift({\n      name: \"View Recommendations\",\n      action: () => showRecommendation(props.data.registryCategories[0])\n    })\n  }\n\n\n  const removeConfirmFooter = (\n    <>\n      <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => setShowRemoveModel(false)}>Do not\n        remove</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={() => {\n        props.removeProductFromCartHandler();\n        setShowRemoveModel(false);\n      }}>Remove</Button>\n    </>\n  )\n\n  // Incrementing quantity of local recommended product\n  const incrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        product.quantity += quantity;\n      }\n      newRecommended.push(product)\n    }\n    setRecommendedProducts(newRecommended)\n  }\n\n  // Decrementing quantity of local recommended product\n  const decrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    let updated = false;\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        if (product.quantity - quantity <= 0) {\n          break;\n        } else {\n          product.quantity -= quantity;\n          updated = true;\n        }\n      }\n      newRecommended.push(product)\n    }\n\n    if (updated) {\n      setRecommendedProducts(newRecommended)\n    }\n  }\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i\n    className={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n    <div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n      <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n    </div>\n  </i>);\n\n  return (\n    <>\n      {!props.multipleCategories ?\n        <>\n          <div className=\"added-card py-5 pr-2\">\n            <div className=\"row\">\n              <div className=\"col-2\">\n              <div className=\"pl-2\">\n              {props.data?.item.imageUrl ?\n                <img\n                  className={[\"product-img d-block mx-auto\", Number(props.data.registryCategories[0].category.categoryType.id) === 2 ? \"added-card-product-image-radius\" : \"\"].join(\" \")}\n                  src={props.data?.item.imageUrl}\n                  alt={props.data?.item.title}/>\n                :\n                <div className=\"added-card-no-product-image\"/>\n              }\n\n            </div>\n\n              </div>\n              <div className=\"col\">\n                {/* TODO: change category */}\n                <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div>\n                <h2>{props.data.title}</h2>\n                <div className=\"d-flex mt-2\">\n                  <div className=\"\">${props.data.item.price}</div>\n                  {/*/!* TODO: Add Strikeout price dynamic *!/*/}\n                  {/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n                  {props.data.quantity > 1 ?\n                    <div className=\"ml-4 text-body d-flex\">\n                      Qty:{props.data.quantity}\n                      <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n                    </div> : <></>}\n                </div>\n              </div>\n              <div className={[\n                props.draggable ? \"col-4\" : \"col-3\",\n              ].join(\" \")}\n              >\n                <div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n                  {!stateGuestViewRegistry ?\n                    <button\n                      className={[\n                        \"mr-4 d-flex align-items-center added-gift-must-have-btn px-2\",\n                        props.data.mostWanted ? \"added-gift-must-have-active\" : \"added-gift-must-have-not-active\"\n                      ].join(\" \")}\n                      onClick={props.toggleMustHave}\n                    >\n                      <i className={[\"icon mr-1 d-block\", props.data.mostWanted ? \"heart-fill\" : \"heart\"].join(\" \")} />\n                      <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                    </button> :\n                    props.data.mostWanted ?\n                      <button\n                        className=\"mr-4 d-flex align-items-center added-gift-must-have-btn px-2 added-gift-must-have-active\">\n                        <i className=\"icon mr-1 d-block heart-fill\" />\n                        <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                      </button>\n                      : <></>\n                  }\n                  {!stateGuestViewRegistry ?\n                    <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\" />\n                    : <></>}\n                  {/* TODO: Add icon/rearrange icon */}\n                  {props.draggable && !stateGuestViewRegistry ?\n                    <DragHandle /> : <></>}\n                </div>\n              </div>\n            </div>\n          </div>\n          {props.isViewCard ?\n            <div className=\"row\">\n              <div className=\"col\">\n                {props.data.registryCategories.length > 1 ?\n                  props.data.registryCategories.map(category =>\n                    props.data.registryCategories[0].id !== category.id ?\n                      <div className=\"text-body font-medium p-6 added-card-other-category\">\n                        You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n                      </div>\n                      : null\n                  )\n                  : null}\n              </div>\n            </div> : null}\n        </>\n        :\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"text-body font-medium p-6 added-card-other-category\">\n              You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {props.multipleCategories.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n            </div>\n          </div>\n        </div>\n      }\n      <Modal\n        show={show}\n        closeModal={() => setShow(false)}\n        title={modalTitle}\n        size=\"xl\"\n      >\n        <div className=\"position-relative added-card-recommended\">\n          <div className=\"row category-recommended-products\">\n            {recommendedProducts.map((card, index) => (\n              <div className=\"col-4 mb-5\" key={\"CardItem-\" + index}>\n                <CardItem\n                  data={card}\n                  incrementQuantityHandler={() => incrementQuantity(card.id, 1)}\n                  decrementQuantityHandler={() => decrementQuantity(card.id, 1)}\n                  addProductHandler={() => addProductHandler(card, stateAddedProducts, stateRegistryInfo, dispatch)}\n                />\n              </div>\n            ))}\n            {recommendedProducts.length <= 0 ?\n              <div className=\"col text-center py-4\"><h4>No recommendation found</h4></div> : null}\n          </div>\n          {recommendedProducts.length > 0 ? <div className=\"added-card-recommends-bottom-gradient\" /> : null}\n        </div>\n      </Modal>\n      <Modal\n        show={showRemoveModel}\n        size=\"md\"\n        footer={removeConfirmFooter}\n      >\n        <h2>Do you want to remove {props.data.title}? </h2>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddedCard\n","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\nimport { GET_PERSONALIZE_QUESTIONS } from \"api/queries\";\nimport { graphQL } from \"api/axios\";\nimport { toast } from \"react-toastify\";\n\nclass CheckList extends React.Component {\n\n    gotoPersonalize = (event) => {\n        event.preventDefault();\n        // this.props.history.push(routes.PERSONALIZE.HOME)\n        \n        // If user has given answer or not\n        let isQuizPending = false\n        let reqData = {\n            query: GET_PERSONALIZE_QUESTIONS,\n            variables: {\n                registryId: 1,\n            }\n        }\n        // To route to edit-checklist or Quiz\n        graphQL(reqData).then(res => {\n            if (res.data.data.editablePersonalizeQuestions) {\n                const questions = res.data.data.editablePersonalizeQuestions\n                for (let question of questions) {\n                    if (question.answers.length > 0) {\n                        isQuizPending = false\n                        break;\n                    } \n                }\n                if(isQuizPending){\n                    this.props.history.push(routes.PERSONALIZE.HOME)\n                } else {\n                    this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n                }\n                \n            }\n        }).catch(err => {\n            toast.error(\"Error occurred while fetching questions\");\n            console.error(err);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"mb-3\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <a href=\"#\" className=\"ml-2 text-sm checklist-personalize\" tabindex onClick={(e) => this.gotoPersonalize(e)}>{this.props.t(\"checkList.personalize\")}</a>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\">\n                          <div className=\"check-list-progress mw-100\" style={{width: `${this.props.percentage}%`}}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nexport default withTranslation()(withRouter(CheckList));","import React, { Component } from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport { connect } from 'react-redux';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({ id, categoryName, addedItemsCount, totalItemsCount, subProductTypes }) => {\n      return (\n        <>\n          {subProductTypes.length === 0 ?\n            <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n              onClick={() => this.scrollToCategory(categoryName)}>\n              <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n\n              <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                {addedItemsCount >= totalItemsCount ?\n                  <div className=\"icon-done\" /> :\n                  (totalItemsCount > 0 ?\n                    <div className='ml-auto mb-auto align-self-end card-progress'>\n                      {addedItemsCount}/{totalItemsCount}\n                    </div>\n                    : null)}\n              </div>\n            </div> :\n            // Todo handle scroll\n            <>\n              <div className=\"card-body-contain align-items-center py-2\" key={categoryName + id}\n                onClick={() => this.scrollToCategory(categoryName)}>\n                <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n              </div>\n              <div className=\"text-sm\">\n                {subProductTypes.map((subProductType, index) => (\n                  <div className=\"sub-product-list d-flex py-2 ml-3 align-items-center\" key={subProductType.categoryName + subProductType.id}>\n                    <div>{subProductType.categoryName}</div>\n                    <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                      {subProductType.addedItemsCount >= subProductType.totalItemsCount ?\n                        <div className=\"icon-done\" /> :\n                        (totalItemsCount > 0 ?\n                          <div className='ml-auto mb-auto align-self-end card-progress'>\n                            {subProductType.addedItemsCount}/{subProductType.totalItemsCount}\n                          </div>\n                          : null)}\n\n                    </div>\n                  </div>\n                ))}\n\n              </div>\n            </>}\n        </>\n      )\n\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        {this.props.item.categoryName && this.props.item.isParent ?\n          <Card>\n            <Accordion.Toggle\n              onClick={this.handleToggleEvent}\n              as={Card.Header}\n              id={this.props.item.categoryName}\n              eventKey={this.props.item.categoryName}\n            >\n              <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n                <span className=\"checklist-icon-arrow\" />\n                <div className=\"ml-3 mb-0 w-100\">\n                  <div className=\"text-body\">{this.props.item.categoryName}</div>\n                  <div className=\"d-flex\">\n                    <div className=\"check-list-hearder-background\">\n                      <div className=\"check-list-hearder-progress mw-100\" style={{ width: `${(this.props.item.addedItemsCount / this.props.item.totalItemsCount) * 100}%` }} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Accordion.Toggle>\n            <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n              <Card.Body>\n                {subListItem}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          :\n          <p className=\"pl-6 mr-3 text-body others-cat\" onClick={() => this.scrollToCategory(this.props.item.categoryName)}>{this.props.item.categoryName}</p>\n        }\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              tabindex\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" tabindex className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a tabindex className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className={[\"checkbox d-flex align-items-center\", props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"checkbox__input mr-2\">\n        <input\n          type=\"checkbox\"\n          name={props.id}\n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n        />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n          <i className=\"icon-check\"></i>\n        </span>\n      </span>\n      <span className={[\"radio__label text-sm\", props.textClass ? props.textClass : \"\"].join(\" \")}>{props.display} {props.count ? \"(\" + props.count + \")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React, {useState, useEffect} from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {GET_CATEGORIES} from \"../../../../api/queries\";\nimport {graphQL} from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {useSelector} from \"react-redux\";\nimport {getAllCategories} from \"../../../../utils/commonFunction\";\nimport CheckBox from \"../check-box/CheckBox\";\n\n// TODO: Change this Component to handle multiple categories\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [searched, setSearched] = useState(false)\n  const [searchedCategories, setSearchedCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(props.currentCategory ? props.currentCategory : []);\n  // const [selectedCategory, setSelectedCategory] = useState([]);\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.registryCategories) {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = {...category}\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n        }\n        setCategories(finalCheckList);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    props.changeCurrentCategory(selectedCategory)\n    props.closeModal(false);\n  }\n\n  const handleSelectionCategory = (subCategory) => {\n    let sameCatagory = [...selectedCategory].find(category => subCategory.id === category.id)\n    if (sameCatagory) {\n      let allSelectedCategory = selectedCategory.filter(category => subCategory.id !== category.id)\n      setSelectedCategory(allSelectedCategory)\n    }\n    else {\n      let allSelectedCategory = [...selectedCategory, subCategory]\n      setSelectedCategory(allSelectedCategory)\n    }\n  }\n\n  useEffect(() => {\n    if (props.currentCategory) {\n      setSelectedCategory(props.currentCategory)\n    } else {\n      setSelectedCategory([])\n    }\n  }, [props.currentCategory])\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const getCategoriesToDisplay = (cat) => {\n    return (\n      <div className=\"col\">\n        {cat.map(category => {\n          return (\n            <div className=\"mb-6\" key={\"select-\" + category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              <div className=\"category-columns\">\n                {category.subCategories ?\n                  category.subCategories.map(subCategory =>\n                    <div className=\"w-100 category-column\">\n                      <label className=\"checkbox d-flex align-items-center py-1 px-2 m-0\">\n                        <span className=\"checkbox__input mr-2\">\n                          <input\n                            type=\"checkbox\"\n                            name={subCategory.id}\n                            value={subCategory.id}\n                            checked={selectedCategory.find(category => category.id === subCategory.id) ? \"checked\" : \"\"}\n                            onChange={() => handleSelectionCategory(subCategory)}\n                          />\n                          <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                            <i className=\"icon-check\"></i>\n                          </span>\n                        </span>\n                        <span className=\"select_category_radio__label text-body\">{subCategory.categoryName}</span>\n                      </label>\n                    </div>\n                  )\n                  : null}\n              </div>\n\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      {searched ? (searchedCategories.length > 0 ? getCategoriesToDisplay(searchedCategories) : getCategoriesToDisplay([])) : getCategoriesToDisplay(categories)}\n    </div>\n  )\n\n  const modalFooter = (\n    <div className=\"categories-modal-footer\">\n      <label>{selectedCategory.length > 0 ? selectedCategory.length + ' selected' : null}</label>\n      <Button\n        variant=\"primary\"\n        className=\"font-medium p-1\"\n        onClick={saveSelectedCategory}\n      >Done</Button>\n    </div>\n  )\n\n  // Search Category Section\n  const searchInputRef = React.createRef()\n  const changeLinkRef = React.createRef()\n\n  const focusSearchCategoryInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }\n\n  const searchInputFocusHandler = (e) => {\n    if (!e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.add(\"search-category-input-focus\");\n    }\n  }\n\n  const searchInputBlurHandler = (e) => {\n    if (e.target.value.length > 0) {\n      return\n    }\n\n    if (e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.remove(\"search-category-input-focus\");\n    }\n  }\n\n  const searchCategoryInputChangeHandler = (e) => {\n    setSearched(true)\n    if (e.target.value.length > 0) {\n      changeLinkRef.current.style.display = \"block\";\n\n      //  Searching through the category\n      let finalCategories = []\n      for (const parentCategory of categories) {\n        let newParentCategory = {...parentCategory}\n        newParentCategory.subCategories = []\n        let searchMatched = false\n\n        for (const subCategory of parentCategory.subCategories) {\n          if (subCategory.categoryName.toLowerCase().match(e.target.value.toLowerCase())) {\n            searchMatched = true\n            newParentCategory.subCategories.push(subCategory)\n          }\n        }\n\n        if (searchMatched) {\n          finalCategories.push(newParentCategory)\n          searchMatched = false\n        }\n      }\n      setSearchedCategories(finalCategories)\n    } else {\n      changeLinkRef.current.style.display = \"none\";\n    }\n  }\n\n  const changeLinkClickHandler = (e) => {\n    e.preventDefault();\n    if (searchInputRef.current) {\n      if (searchInputRef.current.value.length > 0) {\n        searchInputRef.current.value = \"\"\n      }\n      changeLinkRef.current.style.display = \"none\";\n      searchInputRef.current.focus()\n      setSearchedCategories([])\n    }\n  }\n\n  const headerContent = (\n    <div className=\"align-self-center d-flex position-relative select-category-search-section mr-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Search category...\"\n        className=\"search-category-input pl-5 py-1 pr-1 text-body m-0\"\n        ref={searchInputRef}\n        onChange={(e) => searchCategoryInputChangeHandler(e)}\n        onFocus={(e) => searchInputFocusHandler(e)}\n        onBlur={(e) => searchInputBlurHandler(e)}\n      />\n      <i className=\"icon-search search-category-icon\" onClick={focusSearchCategoryInput} />\n      <a\n        tabindex='0'\n        className=\"search-category-clear-link text-sm font-medium\"\n        href=\"#\"\n        onClick={(e) => changeLinkClickHandler(e)}\n        ref={changeLinkRef}>Clear all</a>\n    </div>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={modalFooter}\n      headerContent={headerContent}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React from \"react\";\nimport \"./CategoryPill.scss\";\n\nconst CategoryPill = (props) => {\n  return (\n    <span className={[\"import-registry-category-pill text-sm p-1\", props.className ? props.className : \"\"].join(\" \")}>\n      {props.name}\n      <i className=\"icon-close remove-category-pill-icon ml-2\" onClick={props.removeCategory}/>\n    </span>\n  );\n}\n\nexport default CategoryPill;\n","import React, { createRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport { setAnotherStoreProductInfo } from \"modules/my-registry/MyRegistryActions\";\nimport { getScrapedProduct } from \"api/axios\";\nimport { toast } from 'react-toastify';\nimport CategoryPill from \"../import-registry/category-pill/CategoryPill\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst AddGiftAnotherStore = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n  const [hideProductDetails, setHideProductDetails] = useState(true);\n  const [showLoading, setshowLoading] = useState(false);\n\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      try {\n        new URL(ev.target.value);\n      } catch {\n        toast.error(\"Invalid Store Url\")\n        return;\n      }\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      let ctgry = category;\n      let data = defaultData.myRegistry.defaultAnotherStoreProductInfo;\n      data.category = ctgry\n      dispatch(setAnotherStoreProductInfo(data))\n      setshowLoading(true);\n      setHideProductDetails(true);\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = { ...productInfo };\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n          setshowLoading(false);\n          setHideProductDetails(false);\n        }\n      }).catch(err => {\n        setshowLoading(false);\n        toast.error(\"Invalid Store Url\")\n        return false;\n      })\n    }\n  }\n\n  const removeSelectedCategory = (categoryId) => {\n    if (productInfo.category.length) {\n      let finalcategory = productInfo.category.filter(category => category.id !== categoryId);\n      let prodInfo = { ...productInfo };\n      prodInfo.category = finalcategory;\n      dispatch(setAnotherStoreProductInfo(prodInfo));\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm font-medium add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                onKeyUp={(ev) => submitStoreUrl(ev)}\n                placeholder=\"Paste a product link that you want to add in your Monica and Andy Registry\" />\n              {/* <a className=\"text-sm\" href=\"#\">Change</a> */}\n            </div>\n          </div>\n\n          <div className={[\"row mt-4\", hideProductDetails ? \"\" : \"pt-6\"].join(\" \")}>\n            {hideProductDetails ? showLoading ?\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                  <h4 className=\"hide-product-details m-auto\">Please wait while we fetch the product details</h4>\n                </div>\n              </div>\n              :\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <h4 className=\"hide-product-details m-auto\">Please paste product link above to view details here</h4>\n                </div>\n              </div>\n              :\n              <>\n                <div className=\"col-5 add-gift-image-select\">\n                  <div className=\"mr-3\">\n                    {productImage?.value ?\n                      <img\n                        src={productImage.value}\n                        alt=\"Product Image\"\n                      />\n                      : null}\n\n                    <i className=\"icon-preview p-1\" onClick={() => {\n                      imageInput.current.click()\n                    }} />\n                    {/* TODO: Change above icon to camera icon */}\n\n                    <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                      onChange={(ev) => selectFileHandler(ev)} />\n                  </div>\n                </div>\n                <div className=\"col-7\">\n                  <div className=\"ml-3\">\n                    <div className=\"row\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Product Name</p>\n                        <textarea\n                          className=\"w-100 mt-1 h1 p-2\"\n                          rows=\"2\"\n                          value={productInfo.productName}\n                          onChange={(ev) => productNameChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container mr-2\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Price</p>\n                          <div className=\"price-input mt-1\">\n                            <input\n                              type=\"text\"\n                              className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                              value={price}\n                              onChange={(ev) => priceChangeHandler(ev)}\n                            />\n                          </div>\n                          {/*<span className=\"price-input text-body\">$</span>*/}\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                          <Counter\n                            className=\"mt-2\"\n                            counter={quantity}\n                            incrementHandler={incrementQuantity}\n                            decrementHandler={decrementQuantity}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    {!props.addMyOwn ?\n                      <>\n                        <div className=\"row mt-5\">\n                          <div className=\"col d-flex\">\n                            <p className=\"text-sm add-gift-store-label font-medium mb-1\">Category</p>\n                            <a className=\"text-sm ml-2 add-gift-link font-medium\" href=\"#\" tabindex onClick={(ev) => openCategorySelect(ev)}>Add</a>\n                            {/* <div className=\"position-relative\">\n                            <input type=\"text\" value={category.displayName} readOnly={true}\n                                   className=\"w-100 pl-2 pr-12 py-1 text-body input-background change-link-input\"/>\n                          </div> */}\n                          </div>\n                        </div>\n                        <div className=\"row mt-2\">\n                          <div className=\"col\">\n                            {category.map(cat => (\n                              <CategoryPill\n                                key={cat.id}\n                                name={cat.categoryName}\n                                removeCategory={() => removeSelectedCategory(cat.id)}\n                                className=\"mt-2 mr-3\"\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      </>\n                      : null}\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col d-flex\">\n                        <TogglePills\n                          iconClass=\"icon-heart\"\n                          activeClass={mustHave ? \"active-must-have\" : null}\n                          onClick={() => toggleMustHave(!mustHave)}\n                          text=\"Must Have\"\n                          className=\"mr-2\" />\n                        <TogglePills\n                          iconClass=\"icon-guest\"\n                          activeClass={groupGift ? \"active-group-gift\" : null}\n                          onClick={() => toggleGroupGift(!groupGift)}\n                          text=\"Group Gift\"\n                          className=\"mr-2\" />\n                        {/* TODO: Change above guest icon one added */}\n                        <TogglePills\n                          iconClass=\"icon-shopping-cart\"\n                          activeClass={purchased ? \"active-purchased\" : null}\n                          onClick={() => togglePurchased(!purchased)}\n                          text=\"Purchased\"\n                          className=\"mr-2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">How to gift?</p>\n                        {howToGiftOptions.map((option, index) => (\n                          <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                            <RadioButton\n                              name=\"how-to-gift\"\n                              textClass=\"text-sm\"\n                              display={option.text}\n                              checked={option.id === howToGift.id ? true : null}\n                              changeHandler={() => changeHowToGift(option)} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Notes</p>\n                        <textarea className=\"w-100 mt-1 text-body p-1\"\n                          rows=\"2\"\n                          placeholder=\"Write a note for your friends and family\"\n                          value={note}\n                          onChange={(ev) => noteChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","import React, { Component } from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  clearAnotherStoreProductInfo, setAnotherStoreProductInfo,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport { connect } from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport { ADD_REGISTRY_ITEM, UPDATE_REGISTRY_ITEM } from 'api/queries';\nimport { graphQL } from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { toast } from \"react-toastify\";\nimport { ADD_REGISTRY_ITEM as ADD_REGISTRY_ITEM_MUTATION } from 'api/mutations';\nimport BookmarkletSection from \"../add-gift/bookmarklet-section/BookmarkletSection\";\nimport AddGiftAnotherStore from \"../add-gift/add-gift-another-store/AddGiftAnotherStore\";\nimport Button from \"../button-component/ButtonComponent\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport { getProducts as commonGetProducts, getCategories as commonGetCategories } from \"../../../../utils/commonFunction\";\n\nclass ViewRecommend extends Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n    viewDetailsBtn: true,\n  }\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  cardRef = React.createRef()\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const shopifyItemId = card.id\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          // TODO: change category\n          category: [Number(category)],\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          imageUrl: imageUrl,\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    }\n  }\n\n  // Checking if product data is valid or not\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // // Valid Category\n    // if (!storeProduct.category.id) {\n    //   alert(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  // Adding Add on my own product to registry\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM_MUTATION,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            // TODO: change category\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  // Popping up Add on my own modal\n  addOnMyOwnClickHandler = (category) => {\n    this.clearModalData()\n    let newCategory = [{\n      ...category,\n      displayName: category.parentCategory + \" : \" + category.categoryName\n    }]\n    let prodInfo = { ...this.props.stateAnotherStoreProduct };\n    prodInfo.category = newCategory;\n    this.props.dispatch(setAnotherStoreProductInfo(prodInfo));\n\n    this.modalTitle = `Add my own ${category ? category.categoryName.toLowerCase() : \"\"}`\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection />\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore addMyOwn={true} />\n\n    this.setState((prevState, props) => ({\n      show: !prevState.show\n    }))\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\" />\n      </button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\" />\n      </button>\n    };\n\n    let modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >Save & Close</Button>\n      </>\n    )\n    return (\n      <>\n        <div className=\"recommended-cart my-6\">\n          <div className=\"row\">\n            <div className=\"col title\"><h2>{this.props.title}\n              {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n            </h2>\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Slider {...settings}>\n              {this.props.products.map((card, index) =>\n                // <div><>{index}</></div>\n                <div className=\"cart-view\" ref={this.cardRef}>\n                  <CardItem\n                    className=\"mr-4\"\n                    data={card}\n                    key={\"CardItem-\" + index}\n                    incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                    decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                    addProductHandler={() => this.addProductHandler(card)}\n                  />\n                </div>\n              )}\n              <div>\n                <div className=\"add-my-own-card mr-4 d-flex flex-column align-items-center justify-content-center\"\n                  style={{ height: this.cardRef.current ? this.cardRef.current.offsetHeight + 'px' : '200px' }}\n                  onClick={() => this.addOnMyOwnClickHandler(this.props.category)}\n                >\n                  <button className=\"add-my-own-button\" />\n                  <p className=\"text-body font-medium mt-5\">Add my own</p>\n                </div>\n              </div>\n            </Slider>\n          </div>\n          <div className=\"mt-6 card-buttom d-flex\">\n            {/* TODO: Change text to dynamic */}\n            <div>\n              <img className=\"blog-img\"\n                src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\"\n                alt={this.props.title} />\n            </div>\n            <div className=\"pl-4 my-auto\">\n              <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n              <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n            </div>\n            <div className=\"text-sm my-auto mr-6 ml-auto\">\n              <a href=\"\" className=\"read-more\" tabindex>Read more</a>\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n      ;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info,\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setParentFilter, setChildFilter, clearFilter } from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\" />\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                  {parentFilter.child.map(childFilter => (\n                    <CheckBox\n                      {...childFilter}\n                      key={childFilter.id}\n                      className=\"mb-4\"\n                      checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                      changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                    />\n                  ))}\n                </div>\n              )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n            onClick={clearClickHandler}\n            variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./ImportRegistry.scss\";\nimport { getAnotherRegistryProducts } from \"../../../../../api/axios\";\nimport { toast } from \"react-toastify\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport CategoryPill from \"./category-pill/CategoryPill\";\nimport { connect } from \"react-redux\";\nimport { setAnotherStoreRegistryItems } from \"../../../../my-registry/MyRegistryActions\";\n\nclass ImportRegistry extends React.Component {\n  state = {\n    registryUrl: \"\",\n    errorMessage: \"\",\n    loading: false,\n    categoryModalShow: false,\n    activeCategoryProductIndex: null,\n    currentRegistryLink: \"\",\n    inputHasFocus: false,\n    currentCategory: [],\n  }\n\n  inputRef = React.createRef()\n\n  setCategoryModalVisible = () => {\n    this.setState({ categoryModalShow: false, currentCategory:[] })\n  }\n\n  changeLoadingState = (value) => {\n    this.setState({\n      loading: value\n    })\n  }\n\n  registryUrlChangeHandler = (ev) => {\n    this.setState({\n      registryUrl: ev.target.value,\n      errorMessage: \"\"\n    })\n  }\n\n  checkUrlAndGetRegistryItems = () => {\n    // Checking for valid url\n    try {\n      new URL(this.state.registryUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return;\n    }\n\n    this.getAnotherRegistryProductsInfo();\n  }\n\n  registryUrlKeyUpHandler = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      this.checkUrlAndGetRegistryItems()\n    }\n  }\n\n  getAnotherRegistryProductsInfo = () => {\n\n    this.setState({\n      currentRegistryLink: this.state.registryUrl\n    })\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = true;\n    }\n\n    const registryUrl = new URL(this.state.registryUrl);\n    const storeName = registryUrl.hostname.split(\".\")[1]\n\n    const reqData = {\n      store_name: storeName,\n      store_url: this.state.registryUrl\n    }\n\n    this.changeLoadingState(true);\n\n    getAnotherRegistryProducts(reqData).then(res => {\n      try {\n        if (res.data) {\n          const products = res.data.products;\n          const registry = res.data.registry;\n\n          if (products && registry) {\n            let newProducts = products.filter(product => product.title)\n            newProducts = newProducts.map(product => {\n              product.categories = [];\n              return product;\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n            // this.setState({\n            //   products: newProducts\n            // })\n          } else {\n            this.setState({\n              errorMessage: \"Looks like this registry is not publically accessible. Please change the settings and try again.\"\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems([]))\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        toast.error(\"Some error occurred while reading registry products.\")\n      }\n\n    }).catch(err => {\n      toast.error(\"Some error occurred while fetching registry.\")\n      console.error(err);\n    }).finally(() => {\n      this.changeLoadingState(false)\n    })\n  }\n\n  openSelectCategoryModal = (ev, productIndex) => {\n    ev.preventDefault()\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      this.setState({\n        activeCategoryProductIndex: productIndex,\n        categoryModalShow: true,\n        currentCategory: this.props.stateAnotherStoreRegistry[productIndex].categories\n      })\n    } else {\n      console.log(\"Invalid Product Index\");\n    }\n  }\n\n  setProductCategories = (categories) => {\n    // Saving categories passed from SelectCategory Modal\n    if (Number.isInteger(this.state.activeCategoryProductIndex) && this.props.stateAnotherStoreRegistry[this.state.activeCategoryProductIndex]) {\n      let newProductState = [...this.props.stateAnotherStoreRegistry];\n      // TODO: Change this to support multiple categories\n      newProductState[this.state.activeCategoryProductIndex].categories = categories;\n      this.props.dispatch(setAnotherStoreRegistryItems(newProductState))\n      this.setState({\n        activeCategoryProductIndex: null\n      })\n    }\n  }\n\n  removeSelectedCategory = (productIndex, categoryId) => {\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      let newProducts = [...this.props.stateAnotherStoreRegistry]\n      newProducts[productIndex].categories = newProducts[productIndex].categories.filter(category => category.id !== categoryId);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n      // this.setState({\n      //   products: newProducts\n      // })\n    }\n  }\n\n  changeRegistryUrl = (e) => {\n    e.preventDefault();\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = false;\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"baby-registry-import-registry\">\n          <div className=\"row mt-5\">\n            <div className=\"col d-flex flex-column\">\n              <span className=\"baby-registry-required-field text-sm font-medium\">Registry URL</span>\n              <div className=\"position-relative mt-1\">\n                <input type=\"text\"\n                  className={[\"import-registry-input-field w-100 mb-0 mw-100 text-body pl-2 py-1 pr-14\", this.state.errorMessage ? \"import-registry-error-field\" : \"\"].join(\" \")}\n                  placeholder=\"Paste your registry URL here to import.  Please ensure it's publicly accessible.\"\n                  value={this.state.registryUrl}\n                  ref={this.inputRef}\n                  onChange={this.registryUrlChangeHandler.bind(this)}\n                  onFocus={() => this.setState({ inputHasFocus: true })}\n                  onBlur={() => this.setState({ inputHasFocus: false })}\n                />\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink === this.state.registryUrl && !this.state.inputHasFocus ?\n                  <a tabindex className=\"import-registry-change-link text-sm font-medium import-registry-category-link\" href=\"#\"\n                    onClick={(e) => this.changeRegistryUrl(e, this.inputRef)}>Change</a> : null}\n\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink !== this.state.registryUrl ?\n                  <div className=\"import-registry-submit-url-section\">\n                    {/*TODO: Change icons once added to global icons*/}\n                    <button className=\"icon-close mr-3\"\n                      onClick={() => this.setState({ registryUrl: \"\" })} />\n                    <button className=\"icon-check\" onClick={this.checkUrlAndGetRegistryItems} />\n                  </div>\n                  : null}\n              </div>\n              {this.state.errorMessage ?\n                <span className=\"import-registry-input-error-message text-body mt-1\">{this.state.errorMessage}</span>\n                : null}\n            </div>\n          </div>\n\n          <div className=\"row baby-registry-import-section mt-6\">\n            <div className=\"col\">\n              {this.props.stateAnotherStoreRegistry.length <= 0 || this.state.loading ?\n                // When no product exists\n                <div className=\"py-20 text-center import-registry-main-content\">\n                  {this.state.loading ?\n                    <>\n                      <div className=\"spinner-border import-registry-spinner\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                      <h4 className=\"mt-1 mx-auto import-registry-loading-text\">Please wait while we’re importing your\n                        registry</h4>\n                    </>\n                    :\n                    <h4 className=\"mx-auto import-registry-no-content-text\">\n                      Please paste your publicly accessible\n                      registry URL above to import items\n                      to M+A.\n                    </h4>\n                  }\n                </div>\n                :\n                // When products is filled\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"import-registry-main-content d-flex flex-column import-registry-products\">\n                      <div className=\"d-flex import-registry-products-column \">\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Items</p>\n                        </div>\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Category: Item</p>\n                        </div>\n                      </div>\n\n\n                      {this.props.stateAnotherStoreRegistry.map((product, index) => (\n                        <div className=\"d-flex import-registry-products-column\" key={\"Product-\" + index}>\n                          <div className=\"w-50 px-3\">\n                            <p className=\"py-3 text-body\">{product.title}</p>\n                          </div>\n                          <div className=\"w-50 px-3\">\n                            {product.categories.length <= 0 ?\n                              <div className=\"py-3\">\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Select category</a>\n                              </div>\n                              :\n                              <div className=\"pb-2\">\n                                {product.categories.map(category => (\n                                  <CategoryPill\n                                    key={category.id}\n                                    name={category.categoryName}\n                                    removeCategory={() => this.removeSelectedCategory(index, category.id)}\n                                    className=\"mt-2 mr-3\"\n                                  />\n                                ))}\n\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Add</a>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n          <SelectCategory\n            showModal={this.state.categoryModalShow}\n            closeModal={this.setCategoryModalVisible}\n            changeCurrentCategory={this.setProductCategories}\n            currentCategory={this.state.currentCategory}\n          />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ImportRegistry);","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n    return (\n        <div\n          onClick={props.onClick}\n          className={[\"cash-fund-toggle-pills px-2 py-1\", props.className ? props.className : \"\", props.selectedClass ? props.selectedClass : \"\"].join(\" \")}>\n            <i className={[\"cash-fund-toggle-icon float-left\", props.iconClass ? props.iconClass : null].join(\" \")} />\n            <span className=\"text-sm ml-2\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default TogglePills;","import React from \"react\";\nimport \"./AddCashFundModal.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from \"../../button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport TogglePills from \"./toggle-pills/TogglePills\";\nimport {connect} from \"react-redux\";\nimport {graphQL, graphQLMultipart} from \"../../../../../api/axios\";\nimport {GET_CASH_FUND_CATEGORIES} from \"../../../../../api/queries\";\nimport {ADD_REGISTRY_ITEM} from \"../../../../../api/mutations\";\nimport {setCashFundCategories} from \"../../../../my-registry/MyRegistryActions\";\nimport {M_A_STORE_NAME} from \"../../../../../utils/constants\";\nimport {dataURItoBlob, getCategories, getProducts} from \"../../../../../utils/commonFunction\";\nimport {Dropdown} from 'reactjs-dropdown-component';\n\nclass AddCashFundModal extends React.Component {\n\n  // Accepted Image input types for Cash fund image\n  ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  MAX_IMAGE_SIZE = 5000000; // 5MB\n\n  // Cash Fund data\n  state = {\n    cashFundImage: {},\n    cashFundName: this.props.categoryData? this.props.categoryData.registryCategories[0].category.categoryName : \"\",\n    cashFundAmount: \"\",\n    hideTotal: false,\n    cashFundType: {},\n    cashFundNote: \"\",\n    mustHave: false,\n    markCompleted: false,\n    categories: []\n  }\n\n  imageRef = React.createRef()\n\n  modalCloseHandler = () => {\n    this.props.closeModal();\n  }\n\n  validateCashFundData = () => {\n    if (this.state.cashFundName.length <= 0) {\n      toast.error(\"Please enter Cash Fund Name.\")\n      return false;\n    }\n\n    if (this.state.cashFundAmount.length <= 0) {\n      toast.error(\"Please enter Cash Fund Amount\")\n      return false;\n    }\n\n    if (!Number(this.state.cashFundAmount)) {\n      toast.error(\"Please enter valid amount\")\n      return false;\n    }\n\n\n    let selectedCat = this.state.categories.find(category => category.selected)\n    if (!selectedCat) {\n      toast.error(\"Please select Cash Fund Type.\")\n      return false;\n    }\n\n    return true;\n  }\n\n  // Adding Cash Fund\n  addCashFundClickHandler = () => {\n    if (this.validateCashFundData()) {\n      let formData = new FormData()\n      let selectedCat = this.state.categories.find(category => category.selected)\n      let reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id,\n          input: [{\n            storeName: M_A_STORE_NAME,\n            items: [{\n              title: this.state.cashFundName,\n              price: this.state.cashFundAmount,\n              mostWanted: this.state.mustHave,\n              tags: [],\n              quantity: 1,\n              isGroupGift: true,\n              hideTotal: this.state.hideTotal,\n              markAsCompleted: this.state.markCompleted,\n              note: this.state.cashFundNote,\n              registryCategories: [Number(selectedCat.id)],\n              isCashFund: true\n            }]\n          }]\n        }\n      }\n\n      if (this.state.cashFundImage.type === \"custom\") {\n        let map = {\n          images: [\"variables.input.0.items.0.images\"]\n        }\n        reqData.variables.input[0].items[0]['images'] = null;\n        console.log(dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n        formData.append(\"map\", JSON.stringify(map))\n        formData.append(\"images\", dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n      } else {\n        reqData.variables.input[0].items[0]['imageUrl'] = this.state.cashFundImage.value;\n      }\n\n      formData.append(\"operations\", JSON.stringify(reqData))\n\n      graphQLMultipart(formData).then(res => {\n        if (res.data.data && res.data.data.addRegistryItems) {\n          // Successfully added product\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n          toast.success((\n            <p><b>{this.state.cashFundName}</b> added to your registry!</p>\n          ))\n          this.modalCloseHandler()\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n  }\n\n  presentCategories = (allCategories) => {\n    let categories = allCategories.map(category => {\n      let categoryData = {\n        id: category.id,\n        title: category.categoryName,\n        selected: this.props.categoryData && this.props.categoryData.registryCategories[0].category.id === category.id ? true : false,\n        key: \"categories\"\n      }\n      return categoryData\n    })\n    this.setState({categories: [...categories]})\n  }\n\n  resetThenSet = (id, key) => {\n    this.setState({\n      categories: this.state.categories.map(category => {\n        category.selected = category.id === id;\n        return category;\n      })\n    })\n  }\n\n  // Modal Data\n  modalTitle = \"Add Cash Fund\";\n  modalFooterButton = (\n    <Button\n      variant=\"primary\"\n      className=\"px-5 py-1 font-medium text-body\"\n      onClick={this.addCashFundClickHandler}\n    >Add & Close</Button>\n  )\n\n  // Handling custom image selection\n  selectFileHandler = (ev) => {\n    if (ev.target && ev.target.files.length > 0) {\n      const file = ev.target.files[0]\n\n      // Verifying file is image\n      if (this.ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= this.MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = (e) => {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              fileType: file.type,\n              fileName: file.name\n            }\n            this.setState({\n              cashFundImage: newProductImage\n            })\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n\n  // Input change handlers\n  cashFundNameChangeHandler = (ev) => {\n    this.setState({\n      cashFundName: ev.target.value\n    })\n  }\n\n  cashFundAmountChangeHandler = (ev) => {\n    this.setState({\n      cashFundAmount: ev.target.value\n    })\n  }\n\n  cashFundHideTotalChangeHandler = (_) => {\n    this.setState((prevState, _) => ({\n      hideTotal: !prevState.hideTotal\n    }))\n  }\n\n  cashFundTypeChangeHandler = (ev) => {\n    if (this.props.stateCashFundCategories.length > 0) {\n      const changedCategory = this.props.stateCashFundCategories.find(category => Number(category.id) === Number(ev.target.value))\n      if (changedCategory.id) {\n        this.setState({\n          cashFundType: changedCategory\n        })\n      }\n    }\n  }\n\n  cashFundNoteChangeHandler = (ev) => {\n    this.setState({\n      cashFundNote: ev.target.value\n    })\n  }\n\n  mustHaveClickHandler = () => {\n    this.setState((prevState, _) => ({\n      mustHave: !prevState.mustHave\n    }))\n  }\n\n  markCompletedClickHandler = () => {\n    this.setState((prevState, _) => ({\n      markCompleted: !prevState.markCompleted\n    }))\n  }\n\n  \n  render() {\n    \n    if (this.props.imageUrl && !this.state.cashFundImage.value && this.state.cashFundImage.value !== this.props.imageUrl) {\n      this.setState({\n        cashFundImage: {\n          type: \"url\",\n          value: this.props.imageUrl\n        }\n      })\n    }\n    \n    if(this.props.stateCashFundCategories.length > 0 && this.state.categories.length<=0){\n      this.presentCategories(this.props.stateCashFundCategories)\n    }\n  \n    if (this.props.stateCashFundCategories.length <= 0) {\n      // Fetching all cash fund categories\n      const reqData = {\n        query: GET_CASH_FUND_CATEGORIES,\n        operationName: \"getCashFund\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id\n        }\n      }\n\n\n      graphQL(reqData).then(res => {\n        console.log(res.data.data)\n        if (res.data.data && res.data.data.cashFundCategories) {\n          let allCashFundCategories = res.data.data.cashFundCategories.map(cat => {\n            cat.category.id = cat.id\n            return cat.category\n          })\n          this.presentCategories(allCashFundCategories);\n          this.props.dispatch(setCashFundCategories(allCashFundCategories))\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n\n\n    if (!this.state.cashFundType.id && this.props.stateCashFundCategories.length > 0) {\n      let foundCategory = false\n      if (this.props.categoryData?.registryCategories && this.props.categoryData.registryCategories.length > 0) {\n        for (let cashFundCategory of this.props.stateCashFundCategories) {\n          if (Number(this.props.categoryData.registryCategories[0].category.id) === Number(cashFundCategory.id)) {\n            foundCategory = true\n            this.setState({\n              cashFundType: cashFundCategory\n            })\n            break\n          }\n        }\n      }\n      if (!foundCategory) {\n        this.setState({\n          cashFundType: this.props.stateCashFundCategories[0]\n        })\n      }\n    }\n\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          title={this.modalTitle}\n          footer={this.modalFooterButton}\n          closeModal={this.modalCloseHandler}>\n\n          <div className=\"row cash-fund-modal-content\">\n            <div className=\"col-5\">\n              <div className=\"cash-fund-modal-image-section mr-1\">\n                {this.state.cashFundImage.type ?\n                  <img src={this.state.cashFundImage.value} alt=\"Cash Fund\" className=\"cash-fund-modal-image\" />\n                  :\n                  <div className=\"cash-fund-modal-no-image\" />\n                }\n                <i\n                  className=\"icon-preview change-cash-fund-image-icon p-1\"\n                  onClick={() => {\n                    this.imageRef.current.click()\n                  }}\n                />\n                <input\n                  type=\"file\"\n                  className=\"d-none\"\n                  ref={this.imageRef}\n                  accept={this.ACCEPTED_IMAGE_TYPE.join(\",\")}\n                  onChange={(ev) => this.selectFileHandler(ev)}\n                />\n              </div>\n            </div>\n            <div className=\"col-7 cash-fund-input-section\">\n              <div className=\"ml-3 mr-6\">\n\n                {/* Cash Fund name */}\n                <div className=\"row\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Cash Fund Name<label className=\"asterik\">*</label></p>\n                    <input\n                      className=\"cash-fund-input h2 mt-1 w-100 mw-100 p-2\"\n                      type=\"text\"\n                      value={this.state.cashFundName}\n                      onChange={(ev) => this.cashFundNameChangeHandler(ev)}\n                    />\n                  </div>\n                </div>\n\n                {/* Cash Fund type */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium mb-1\">Type<label className=\"asterik\">*</label></p>\n                    <div className=\"cash-fund-select w-100 mw-100\">\n                    <Dropdown\n                      title=\"Select category\"\n                      list={this.state.categories}\n                      resetThenSet={this.resetThenSet}\n                    />\n                    </div>\n                  </div>\n                </div>\n\n\n                <div className=\"row mt-5\">\n\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium mb-1\">Total Amount<label className=\"asterik\">*</label></p>\n                    <div className=\"row\">\n\n                      {/* Cash fund amount */}\n                      <div className=\"col\">\n                        <div className=\"position-relative\">\n                          <input\n                            className=\"cash-fund-input w-100 mw-100 p-1 pl-5 text-body\"\n                            type=\"number\"\n                            value={this.state.cashFundAmount}\n                            onChange={(ev) => this.cashFundAmountChangeHandler(ev)}\n                          />\n                          <span className=\"cash-fund-price-input-currency text-body\">$</span>\n                        </div>\n                      </div>\n\n                      {/* Cash fund hidden option */}\n                      <div className=\"col align-self-center\">\n                        <label\n                          className=\"checkbox d-flex align-items-center\">\n                          <span className=\"checkbox__input mr-2\">\n                            <input\n                              type=\"checkbox\"\n                              onChange={(ev) => this.cashFundHideTotalChangeHandler(ev)}\n                            />\n                            <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i className=\"icon-check\" />\n                            </span>\n                          </span>\n                          <span\n                            className=\"radio__label text-sm\">Hide total from guests</span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col\">\n                    <TogglePills\n                      text=\"Must Have\"\n                      iconClass=\"icon-heart\"\n                      selectedClass={this.state.mustHave ? \"cash-fund-must-have-selected\" : null}\n                      onClick={this.mustHaveClickHandler}\n                    />\n                    {/* TODO: Change below icon to rounded correct when added */}\n                    <TogglePills\n                      text=\"Mark As Completed\"\n                      iconClass=\"icon-check\"\n                      className=\"ml-2\"\n                      selectedClass={this.state.markCompleted ? \"cash-fund-completed-selected\" : null}\n                      onClick={this.markCompletedClickHandler}\n                    />\n                  </div>\n                </div>\n\n\n                {/* Cash fund note */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Notes</p>\n                    <textarea\n                      placeholder=\"Write a note for your friends and family\"\n                      className=\"cash-fund-textarea w-100 mw-100 mt-1 w-100 mw-100 p-1 text-body\"\n                      value={this.state.cashFundNote}\n                      onChange={(ev) => this.cashFundNoteChangeHandler(ev)}\n                      rows={2} />\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateCashFundCategories: state.myRegistry.cashFundCategories,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddCashFundModal);","import React from 'react';\nimport \"./AddGift.scss\";\nimport {connect} from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport ImportRegistry from \"./import-registry/ImportRegistry\";\nimport {clearAnotherStoreProductInfo, setAnotherStoreRegistryItems} from \"modules/my-registry/MyRegistryActions\";\nimport {ADD_REGISTRY_ITEM, SAVE_REGISTRY_DATA} from \"../../../../api/mutations\";\nimport {graphQLMultipart as graphQL, graphQL as jsonGraphQL} from \"../../../../api/axios\";\nimport {getProducts, getCategories} from \"utils/commonFunction\";\nimport {toast} from \"react-toastify\";\nimport {IMPORT_REGISTRY_EMAIL} from \"../../../../utils/constants\";\nimport {dataURItoBlob} from \"../../../../utils/commonFunction\";\nimport AddCashFundModal from \"../../../commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false,\n    showCashFundModal: false,\n    cashFundProduct: null,\n    currentContent: \"\"\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n    this.props.dispatch(setAnotherStoreRegistryItems([]));\n  }\n\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      toast.error(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      toast.error(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      toast.error(\"Invalid Quantity\");\n      return false;\n    }\n\n    // TODO: if necessary Valid Category\n    // if (!storeProduct.category.id) {\n    //   toast.error(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  openCashFundModal = () => {\n    this.modalCloseHandler();\n    this.setState({\n      showCashFundModal: true\n    })\n  }\n\n  closeCashFundModal = () => {\n    this.setState({\n      showCashFundModal: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\" onClick={this.openCashFundModal}><h4 className=\"m-auto\">Cash Funds</h4>\n            </div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name}/>\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection/>\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n                onClick={this.importRegistry}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  validImportRegistryData = (registryItems) => {\n    if (registryItems.length <= 0) {\n      toast.error(\"No Item found\");\n      return false;\n    }\n    // TODO: if necessary Valid Category\n    // for (const item of registryItems) {\n    //   if (item.categories.length <= 0) {\n    //     toast.error(\"Please select category for all product\");\n    //     return false;\n    //   }\n    // }\n    return true;\n  }\n\n  getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  getCleanedRegistryItems = (registryItems) => {\n    let cleanedRegistryItems = []\n    for (const item of registryItems) {\n      // TODO: Handle multiple store for single product\n      const itemStore = item.stores[0]\n      if (cleanedRegistryItems.find(el => el.storeName ? el.storeName === itemStore.name : false)) {\n        cleanedRegistryItems = cleanedRegistryItems.map(el => {\n          if (el.storeName === itemStore.name) {\n            if (el.items) {\n              el.items.push({\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              })\n            } else {\n              el['items'] = [{\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              }]\n            }\n            if (item.img) {\n              el.items[el.items.length - 1]['imageUrl'] = item.img\n            }\n          }\n          return el;\n        })\n      } else {\n        let newStore = {\n          storeName: itemStore.name,\n          items: [{\n            title: item.title,\n            // TODO: change category\n            registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n            quantity: 1,\n            tags: [],\n            price: this.getRefinedPrice(itemStore.price)\n          }]\n        }\n\n        if (item.img) {\n          newStore.items[newStore.items.length - 1]['imageUrl'] = item.img\n        }\n        cleanedRegistryItems.push(newStore)\n      }\n    }\n\n    return cleanedRegistryItems;\n  }\n\n  importRegistryClickHandler = () => {\n    if (!this.validImportRegistryData(this.props.stateAnotherStoreRegistry)) {\n      return;\n    }\n\n    const registryItems = this.getCleanedRegistryItems(this.props.stateAnotherStoreRegistry)\n    if (registryItems.length > 0) {\n      const reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          \"registryId\": this.props.stateRegistryInfo.id,\n          \"input\": registryItems\n        }\n      }\n      jsonGraphQL(reqData).then(res => {\n        if (res.data.data.addRegistryItems) {\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n          toast.success(\"Registry items imported successfully\");\n          this.clearModalData();\n          this.modalCloseHandler();\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore/>\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal,\n      currentContent: \"anotherStoreProduct\"\n    }))\n  }\n\n  importRegistry = () => {\n    this.clearModalData()\n    this.modalTitle = \"Import Registry\"\n    this.modalBody = <ImportRegistry/>\n\n    this.setState((prevState, _) => ({\n      updateModal: !prevState.updateModal,\n      currentContent: \"importRegistry\"\n    }))\n  }\n\n  render() {\n\n    if (this.props.stateAnotherStoreProduct && this.state.currentContent === \"anotherStoreProduct\") {\n      this.modalFooterButtons = (\n        <>\n          <Button\n            variant=\"secondary\"\n            className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n            disabled={!this.props.stateAnotherStoreProduct.productName}\n            onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n          >View Details</Button>\n          <Button\n            variant=\"primary\"\n            className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n            disabled={!this.props.stateAnotherStoreProduct.productName}\n            onClick={this.addItemToRegistry}\n          >Save & Close</Button>\n        </>\n      )\n    }\n\n    if (this.props.stateAnotherStoreRegistry && this.state.currentContent === \"importRegistry\") {\n      this.modalFooterButtons = (\n        <>\n          {/*TODO: change href of email us link*/}\n          <a href={\"mailto:\" + IMPORT_REGISTRY_EMAIL} tabindex target='_blank'\n             className=\"mr-auto import-registry-email-link text-sm font-medium\">Email Us For Help</a>\n          {/*TODO: Integrate API when multiple category is supported*/}\n          <Button\n            variant=\"primary\"\n            className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n            disabled={this.props.stateAnotherStoreRegistry.length <= 0}\n            onClick={this.importRegistryClickHandler}\n          >Import</Button>\n        </>\n      )\n    }\n\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n            <span className=\"font-medium text-sm\">What is Add Gift?</span>\n            <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save\n              in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n\n        {this.state.showCashFundModal ?\n          <AddCashFundModal\n            show={this.state.showCashFundModal}\n            closeModal={this.closeCashFundModal}\n            categoryData={this.state.cashFundProduct}\n          />\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);\n","import React from \"react\";\nimport \"./CashFundCardNotAdded.scss\";\n\nclass CashFundCardNotAdded extends React.Component {\n  render() {\n    return (\n      <div\n        className={[\"baby-registry-cash-fund-card py-3 mb-2\", this.props.className ? this.props.className : \"\"].join(\" \")}>\n        <div className=\"row\">\n          <div className=\"col-2\">\n\n            <div className=\"pl-3\">\n              {this.props.data.item.imageUrl ?\n                <img className=\"cash-fund-image d-block mx-auto\" src={this.props.data.item.imageUrl}/>\n                :\n                <div className=\"baby-registry-cash-fund-no-image\" />\n              }\n            </div>\n\n          </div>\n          <div className=\"col\">\n            <div className=\"float-left\">\n              <p className=\"text-body font-medium\">{this.props.data.registryCategories[0].category.categoryName}</p>\n              <p\n                className=\"text-sm cash-fund-description\">{this.props.data.registryCategories[0].category.description}</p>\n            </div>\n            <button className=\"cash-fund-add-btn float-right mr-6\" onClick={this.props.addButtonClickHandler}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CashFundCardNotAdded;","import React from \"react\";\nimport CashFundCardNotAdded from \"./cash-fund-card-not-added/CashFundCardNotAdded\";\n\nclass CashFundCard extends React.Component {\n  render() {\n    return <CashFundCardNotAdded data={this.props.data} addButtonClickHandler={this.props.addButtonClickHandler}/>\n  }\n}\n\nexport default CashFundCard;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport {graphQL, getRecommendation} from 'api/axios';\nimport {GET_RECOMMENDATIONS} from 'api/queries';\nimport {TOGGLE_MUST_HAVE} from 'api/mutations';\nimport {getProducts, removeProductFromCartHandler, getCategories} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport config from \"api/config\";\nimport axios from \"axios\";\nimport CashFundCard from \"../../../commons/components/cash-fund-card/CashFundCard\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport AddCashFundModal from \"../../../commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal\";\n\nclass Everything extends Component {\n\n  state = {\n    showCashFundModal: false,\n    cashFundProduct: null\n  }\n\n  openCashFundModal = () => {\n    this.setState({\n      showCashFundModal: true\n    })\n  }\n\n  setCashFundCategoryAndOpenModal = (product) => {\n    this.setState({\n      cashFundProduct: {...product}\n    })\n    this.openCashFundModal()\n  }\n\n  closeCashFundModal = () => {\n    this.setState({\n      showCashFundModal: false,\n      cashFundProduct: null\n    })\n  }\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n\n  setAllRecommendation = async (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          ...category,\n          parentCategory: parentCat.categoryName,\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      // for (let i = 0; i <= 5; i++) {\n      // let recommendedCat = recommendedCategory[i]\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.categoryName\n        }\n      }\n      const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\n      const cookies = new Cookies();\n\n      await axios.get(apiURL + 'items', {\n        params: data,\n        headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n      })\n        .then(res => {\n          let rData = res.data.data.products.edges.map(item => {\n            let resData = {...item.node}\n            resData['quantity'] = 1\n            resData['category'] = recommendedCat\n            return resData\n          })\n          // count = count + 1;\n          if (rData.length !== 0) {\n            this.props.dispatch(addRecommendedProduct(rData))\n          }\n        }).catch(err => {\n          console.error(err.message)\n        })\n\n\n      // getRecommendation({ params: data }).then(res => {\n      //   let rData = res.data.data.products.edges.map(item => {\n      //     let resData = { ...item.node }\n      //     resData['quantity'] = 1\n      //     resData['category'] = recommendedCat\n      //     return resData\n      //   })\n      //   // count = count + 1;\n      //   this.props.dispatch(addRecommendedProduct(rData))\n      // }).catch(err => {\n      //   console.error(err.message)\n      // })\n      //   )\n      // ))\n      // count = count + 1;\n      // }\n      // else {\n      //   break;\n      // }\n    }\n  }\n\n  getSortedProducts = (addedProducts, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    const cashFundCategory = stateCategories.find(category => category.categoryType && Number(category.categoryType.id) === 2)\n    let cashFundCount = 0\n    if (cashFundCategory) {\n      let productsToAppend = []\n      for (let subCategory of cashFundCategory.subCategories) {\n        if (Number(subCategory.addedItemsCount) === 0) {\n          cashFundCount++;\n          productsToAppend.push({\n            item: {\n              imageUrl: \"\"\n            },\n            registryCategories: [{\n              id: subCategory.id,\n              category: {\n                ...subCategory\n              }\n            }]\n          })\n        }\n      }\n      addedProducts = [...addedProducts, ...productsToAppend]\n    }\n\n    let allProducts = []\n    let productCount = 0;\n    let categories = []\n    for (let parentCat of stateCategories) {\n      if (!parentCat.isParent) {\n        categories.push({\n          id: parentCat.id,\n          name: parentCat.categoryName,\n          added: parentCat.addedItemsCount,\n          total: parentCat.totalItemsCount,\n          parentCategory: {\n            id: parentCat.id,\n            name: parentCat.categoryName\n          },\n          categoryType: parentCat.categoryType,\n        })\n      } else {\n        for (let category of parentCat.subCategories) {\n          if (category.subProductTypes.length) {\n            for (let subProduct of category.subProductTypes) {\n              categories.push({\n                id: subProduct.id,\n                name: subProduct.categoryName,\n                added: subProduct.addedItemsCount,\n                total: subProduct.totalItemsCount,\n                parentCategory: {\n                  id: parentCat.id,\n                  name: parentCat.categoryName\n                },\n                categoryType: category.categoryType,\n              })\n            }\n          } else {\n            categories.push({\n              id: category.id,\n              name: category.categoryName,\n              added: category.addedItemsCount,\n              total: category.totalItemsCount,\n              parentCategory: {\n                id: parentCat.id,\n                name: parentCat.categoryName\n              },\n              categoryType: category.categoryType,\n            })\n          }\n        }\n      }\n    }\n\n\n    for (let category of categories) {\n      let products = []\n      let recommendations = []\n\n      // Getting filtered Products and recommendations\n      if (stateFilterApplied.parentFilter) {\n        if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n          if (stateFilterApplied.childFilter.length > 0) {\n            const childFilterArray = stateFilterApplied.childFilter\n\n            for (let product of addedProducts) {\n              let categoryFound = false\n              for (let cat of product.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              if (\n                ((childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n                  (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n                  // TODO: change category\n                  (childFilterArray.includes(\"reserved\") && product.isReserved)) && categoryFound\n              ) {\n                products.push(product)\n                // filteredProductsId.push(product.id)\n              }\n            }\n          } else {\n            // TODO: change category\n            products.push(...addedProducts.filter(el => {\n              let categoryFound = false\n              for (let cat of el.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              return categoryFound;\n            }))\n          }\n        } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n          let addedRecommendations = []\n          recommendations = stateRecommendedProducts.filter(el => {\n            if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n              addedRecommendations.push(el.id)\n              return true;\n            }\n            return false;\n          })\n        }\n      } else {\n        // TODO: Change this condition(el.item.category.length)\n        // TODO: change category\n        products.push(...addedProducts.filter(el => {\n          let categoryFound = false\n          for (let cat of el.registryCategories) {\n            if (cat.id === category.id) {\n              categoryFound = true\n              break\n            }\n          }\n          return categoryFound && el.registryCategories.length\n        }))\n        let addedRecommendations = []\n        recommendations = stateRecommendedProducts.filter(el => {\n          if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n            addedRecommendations.push(el.id)\n            return true;\n          }\n          return false;\n        })\n      }\n      productCount += products.length;\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: (category.added < category.total || category.total === 0) ? recommendations : []\n      })\n    }\n\n    // Grouping products based on parent category\n    let groupedProducts = []\n    for (const product of allProducts) {\n      let foundCategory = false;\n      groupedProducts = groupedProducts.map(el => {\n        if (el.id === product.category.parentCategory.id) {\n          foundCategory = true;\n          el.allProducts.push(product);\n        }\n        return el;\n      })\n\n      if (!foundCategory) {\n        groupedProducts.push({\n          ...product.category.parentCategory,\n          allProducts: [product]\n        })\n      }\n    }\n\n    // Adding total products and recommendations\n    groupedProducts = groupedProducts.map(el => {\n      let productCount = 0;\n      let recommendationCount = 0;\n\n      for (let product of el.allProducts) {\n        productCount += product.products.length;\n        recommendationCount += product.recommendations.length;\n      }\n\n      el['totalProducts'] = productCount;\n      el['totalRecommendations'] = recommendationCount;\n      return el;\n    })\n\n    // Removing items that does not have products or recommendations based on filters\n    if (stateFilterApplied.parentFilter) {\n      if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n        groupedProducts = groupedProducts.filter(product => product.totalProducts > 0)\n      } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n        groupedProducts = groupedProducts.filter(product => product.totalRecommendations > 0)\n      }\n    } else {\n      groupedProducts = groupedProducts.filter(product => (product.totalProducts > 0 || product.totalRecommendations > 0))\n    }\n\n    productCount -= cashFundCount\n    return {groupedProducts, productCount};\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for (let category of checklistItems) {\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems / totalItems) * 100;\n  }\n\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let {groupedProducts, productCount} = this.getSortedProducts(this.props.stateAddedProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"row mt-6\">\n            {/* View CheckList */}\n            <div className=\"col-3\">\n              <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)}/>\n              {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n                                                                     dispatch={this.props.dispatch}/>)}\n            </div>\n            <div className=\"col-9\">\n\n              {/* Top Filter Section */}\n              <FilterSection productCount={productCount}/>\n              <div className=\"mt-5\">\n                {groupedProducts.map(el => {\n                  let hasCashFund = false;\n                  return (<>\n                      <h4 className=\"text-uppercase my-4\">{el.name}</h4>\n                      {el.allProducts.map((product, i) => (\n                        <div id={product.category.name}>\n                          {product.products.map((card, index) => {\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2) {\n                              hasCashFund = true\n                            }\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2 && Number(card.registryCategories[0].category.addedItemsCount) === 0) {\n                              return (\n                                <CashFundCard\n                                  data={card}\n                                  key={\"cashFund\" + index}\n                                  className=\"mt-2\"\n                                  addButtonClickHandler={() => this.setCashFundCategoryAndOpenModal(card)}\n                                />\n                              )\n                            } else {\n                              return (\n                                <AddedCard\n                                  data={card} key={\"addedCard\" + index}\n                                  multipleCategories = {card.registryCategories.length > 1 ? card.registryCategories.find((cat, index) => Number(cat.id) === Number(product.category.id) && index != 0) : null}\n                                  toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                                  removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                                />\n                              )\n                            }\n                          })}\n                          {product.recommendations.length > 0 ?\n                            <ViewRecommend\n                              title={product.recommendations[0].category.categoryName}\n                              category={product.recommendations[0].category}\n                              products={product.recommendations}/>\n                            : null}\n                        </div>\n                      ))}\n                      {hasCashFund ?\n                        <div className=\"my-2\">\n                          <Button\n                            variant=\"secondary\"\n                            className=\" w-100 py-1 text-body font-medium\"\n                            onClick={this.openCashFundModal}\n                          >Add my own</Button>\n                        </div>\n                        : null}\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showCashFundModal ?\n          <AddCashFundModal\n            show={this.state.showCashFundModal}\n            closeModal={this.closeCashFundModal}\n            categoryData={this.state.cashFundProduct}\n          />\n          : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 7\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      toast.error(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n\t\t  props.closeCoverImagePicker();\n\t\t  setUploadImage(false);\n        } else {\n          toast.error(\"Some error occurred\");\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n\n  }\n\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={props.closeCoverImagePicker}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport { UPDATE_REGISTRY } from \"../../../../api/mutations\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport { toast } from 'react-toastify';\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      toast.error(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully updated registry information\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\" />\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\" />\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n        onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport routes from \"../../../../utils/routes\";\n\nconst ShareRegistry = (props) => {\n\n  const siteHostName = window.location.host + routes.REGISTRY.HOME;\n  // const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      toast.error(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      if (err.response.status === 400) {\n        setRegistryError(`${registryUrl} is not available. Please try something else.`)\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n      console.error(err.response.data)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toast.success(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section d-flex text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2 d-flex\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram .svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter.svg\"/>\n              </>\n              :\n              <>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook_disabled.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram _disabled.svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter_disabled.svg\"/>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport { setguestViewRegistry } from \"modules/view-registry/ViewRegistryActions\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({ showCoverImagePicker: false })\n  }\n\n  closeShareRegistry = () => {\n    this.setState({ showShareRegistry: false })\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  handleGuestView = () => {\n    toast.success(\"Viewing registry as guest\")\n    this.props.dispatch(setguestViewRegistry(true))\n  }\n\n  handleDisableViewGuest = () => {\n    this.props.dispatch(setguestViewRegistry(false))\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({ showCoverImagePicker: true })\n      }\n    }\n  ]\n\n\n  render() {\n    // const style = {\n    //   backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'\n    // }\n    return (\n      <>\n        {this.props.stateGuestViewRegistry ?\n          <div className=\"view-guest-header text-body py-2\">\n            <div className=\"container d-flex justify-content-between\" onClick={this.handleDisableViewGuest}>\n              <div className=\"d-flex align-items-center view-guest-link\">\n                <i className=\"icon-chevron-left view-guest-text mr-2\" />\n                <a className=\"view-guest-text\" tabindex>Back To View Registry</a>\n              </div>\n              <div className=\"view-guest-text\">This is how your guests will see your registry</div>\n              <a className=\"view-guest-text view-guest-link\">Share</a>\n            </div>\n          </div> : null\n        }\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')' }}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          {!this.props.stateGuestViewRegistry ?\n            <div className=\"cover-pic-update-options\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-end\">\n                    <MoreOption\n                      data={this.COVER_PIC_OPTIONS}\n                      iconClass=\"icon-preview\"\n                      activeOptionClass=\"view-registry-cover-option-active\"\n                      buttonClass=\"update-cover-options p-1\" />\n                  </div>\n                </div>\n              </div>\n            </div> : null\n          }\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    {!this.props.stateGuestViewRegistry ?\n                      <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)} />\n                      : null\n                    }\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    !this.props.stateGuestViewRegistry ?\n                      <a className=\"add-greeting-link text-sm font-medium\" href=\"#\" tabindex\n                        onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a> : null\n                  }\n                </div>\n                {!this.props.stateGuestViewRegistry ?\n                  <div className=\"col-12 col-md-3 header-buttons\">\n                    <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\"\n                      onClick={this.handleGuestView}>View as Guest</Button>\n                    <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\"\n                      onClick={() => this.setState({ showShareRegistry: true })}>Share</Button>\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n        <EditViewRegistryDetail\n          show={this.state.showEditRegistryDetail}\n          closeEditRegistryDetail={this.closeEditRegistryDetail}\n          info={this.props.stateRegistryInfo}\n        />\n\n        <ShareRegistry\n          show={this.state.showShareRegistry}\n          closeShareRegistry={this.closeShareRegistry}\n          registryInfo={this.props.stateRegistryInfo}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt, clearViewFilter, setChildViewFilter } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearViewFilter())\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              {this.props.stateGuestViewRegistry ?\n                <></> :\n                <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>}\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 && !this.props.stateGuestViewRegistry ?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    stateRegistryInfo: state.registry.info,\n    stateFilterApplied: state.viewRegistry.viewFilterApplied,\n    stateFilterCategory: state.viewRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);\n","import React, { useState, useEffect } from 'react'\nimport \"./ViewFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildViewFilter, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport { FILTERS } from \"utils/constants\"\n\nconst ViewFilter = () => {\n\n  const dispatch = useDispatch()\n  let tempParentFilterId = useSelector(state => state.viewRegistry.viewFilterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  let stateFilterCategories = useSelector(state => state.viewRegistry.filterCategory)\n  let [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  const getLimitOfFliter = (parentId) => {\n    let limit = null\n    const filterCategory = [...filterCategoryLimit]\n    for (let category of filterCategory) {\n      if (parentId === category.id && category.limit) {\n        limit = category.limit\n      }\n    }\n    return limit\n  }\n\n  // Updating product count in filter categories\n  const updateFilterList = (addedProducts) => {\n\n    let newFilterList = [\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        // limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          if (category.addedItemsCount > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = newCategory.addedItemsCount\n          return newCategory\n        })\n        // count: 0\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: addedProducts.filter((product) => product.item.price < 50).length\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: addedProducts.filter(product => (product.item.price >= 50 && product.item.price <= 100)).length\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: addedProducts.filter(product => (product.item.price > 100)).length\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName === MONICA_AND_ANDY).length\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName !== MONICA_AND_ANDY).length\n          },\n        ]\n      },\n\n    ]\n    if (!stateGuestViewRegistry) {\n      const giftStatus = {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: addedProducts.filter(product => !product.isReserved || !product.isPurchased).length\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: addedProducts.filter(product => product.isPurchased).length\n          }\n        ]\n      }\n      newFilterList.splice(0, 0, giftStatus)\n    }\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  useEffect(() => {\n    if (tempChildFilterIds.length === 0) {\n      updateFilterList(stateAddedProducts)\n    }\n  }, [stateAddedProducts, stateCategoriesInfo, tempChildFilterIds])\n\n\n  // Change event handlers\n\n  // TDOD: Add this if needed\n  // const parentChangeHandler = (parent) => {\n  //   dispatch(setParentViewFilter(parent.id))\n  //   if (parent.child) {\n  //     dispatch(setChildViewFilter(parent.child.map(child => child.id)))\n  //   } else {\n  //     dispatch(setChildViewFilter([]))\n  //   }\n  // }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildViewFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildViewFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearViewFilter())\n  }\n\n  const changeParentLimitHandler = (parentFilterID) => {\n    let limitLength = null\n    let filterCategory = [...stateFilterCategories].map(parentFilter => {\n      if (parentFilter.id === parentFilterID) {\n        parentFilter.limit = parentFilter.child.length\n        limitLength = parentFilter.child.length\n      }\n      return parentFilter\n    })\n    dispatch(setViewFilterCategory(filterCategory))\n\n    let isFound = false\n    let newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n      if (categorylimit.id === parentFilterID) {\n        categorylimit.limit = limitLength\n        isFound = true\n        return categorylimit\n      }\n      return categorylimit\n    })\n\n    if (!isFound) {\n      newFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n    }\n    setFilterCategoryLimit(newFilterCateoryLimit)\n  }\n\n  return (\n    <div className=\"view-filter\">\n      <div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n        <h4 className=\"font-weight-bold\">Filters</h4>\n        {tempChildFilterIds.length !== 0 ?\n          <a tabindex='0' className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n        }\n      </div>\n      <div className=\"d-flex flex-column\">\n        {[...stateFilterCategories].map(parentFilter => (\n          <div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n            {/* Parent filter */}\n            <div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n            {/* Child filter */}\n            {parentFilter.child ? (\n              <div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n                <div className=\"mt-3 fliter-checkbox-section\">\n                  {parentFilter.child.map((childFilter, index) => (\n                    childFilter.count > 0 ?\n                      index < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n                        <label class=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n                          <span class=\"checkbox__input mr-2\">\n                            <input type=\"checkbox\"\n                              name={childFilter.display}\n                              value={childFilter.display}\n                              checked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n                              onChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n                            <span class=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i class=\"icon-check\"></i>\n                            </span>\n                          </span>\n                          <p class=\"radio__label text-sm\"><div>{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</div></p>\n                        </label>\n                        : null\n                      : null\n\n                  ))}\n                  {(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n                    <div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n                    : null\n                  }\n                </div>\n              </div>\n            )\n              : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewFilter;\n","import React from \"react\";\nimport \"./GiftStatusPill.scss\";\n\nconst GiftStatusPill = (props) => {\n  let pillVariantClass = \"\"\n\n  if (props.variant === 'purchased') {\n    pillVariantClass = \"purchased-pill\";\n  } else if (props.variant === 'reserved') {\n    pillVariantClass = \"reserved-pill\";\n  } else if (props.variant === 'default') {\n    pillVariantClass = \"default-pill\";\n  } else {\n    pillVariantClass = \"default-pill\";\n  }\n\n  return (\n    <div\n      className={[\"gift-status-pill px-3\", pillVariantClass, props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"text-sm font-medium\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default GiftStatusPill;","import React, { useState } from 'react'\nimport \"./GuestViewCard.scss\";\nimport MoreOption from \"../../commons/components/more-option/MoreOption\";\nimport {\n\tsortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../../commons/components/modal-component/ModalComponent\";\nimport CardItem from \"../../commons/components/card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../../commons/components/button-component/ButtonComponent\";\nimport GiftStatusPill from \"../../commons/components/gift-status-pill/GiftStatusPill\";\n\nconst GuestViewCard = (props) => {\n\n\tconst dispatch = useDispatch();\n\tconst stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n\n\t// Handle drag\n\t// TODO: Change Draggable icon\n\tconst DragHandle = sortableHandle(() => <i\n\t\tclassName={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n\t\t<div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n\t\t\t<p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n\t\t</div>\n\t</i>);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"added-card py-5 pr-2\">\n\t\t\t\t<div className=\"row pl-3\">\n\t\t\t\t\t<div className=\"col-2 guest-card-image\">\n\t\t\t\t\t\t{props.data?.item.imageUrl ?\n\t\t\t\t\t\t\t<img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.title} />\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div className=\"added-card-no-product-image\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{props.data.mostWanted ?\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center guest-must-have added-gift-must-have-btn px-1 added-gift-must-have-active\">\n\t\t\t\t\t\t\t\t<i className=\"icon mr-1 d-block heart-fill\" />\n\t\t\t\t\t\t\t\t<p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: <></>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t{/* <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div> */}\n\t\t\t\t\t\t<h2>{props.data.title}</h2>\n\t\t\t\t\t\t<div className=\"d-flex mt-2\">\n\t\t\t\t\t\t\t<div className=\"\">${props.data.item.price}</div>\n\t\t\t\t\t\t\t{/*/!* TODO: Add Strikeout price dynamic *!/*/}\n\t\t\t\t\t\t\t{/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n\t\t\t\t\t\t\t{/* {props.data.quantity > 1 ?\n\t\t\t\t\t\t\t\t<div className=\"ml-4 text-body d-flex\">\n\t\t\t\t\t\t\t\t\tQty:{props.data.quantity}\n\t\t\t\t\t\t\t\t\t<div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n\t\t\t\t\t\t\t\t</div> : <></>} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"d-flex mt-3\">\n\t\t\t\t\t\t\t{props.data.isPurchased ?\n\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"purchased\" text=\"Purchased\" />\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t{props.data.isReserved ?\n\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"reserved\" text=\"Reserved\" />\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t{props.data.isGroupGift ?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className=\"guest-toggle-pills px-1 mr-3 d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"guest-icon-active mr-1\" />\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm guest-icon-text\">Group Gift</span>\n\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium received-amount\">Received ${props.data.groupGift ? props.data.groupGift.amountReceived : 0} </span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm total-amount\">of ${props.data.item.price}</span>\n\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-background\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-progress mw-100\" style={{ width: `${props.data.groupGift ? props.data.groupGift.amountReceived / props.data.item.price * 100 : 0}%` }} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[\n\t\t\t\t\t\tprops.draggable ? \"col-4\" : \"col-3\",\n\t\t\t\t\t].join(\" \")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n\t\t\t\t\t\t\t<Button variant=\"secondary\" className=\"give-this-gift-btn font-medium text-body py-1 px-3 mr-3\"\n\t\t\t\t\t\t\t// onClick={this.handleGuestView}\n\t\t\t\t\t\t\t>Give This Gift</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* TODO: change category */}\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t{props.data.registryCategories.length > 1 ?\n\t\t\t\t\t\tprops.data.registryCategories.map(category =>\n\t\t\t\t\t\t\tprops.data.registryCategories[0].id !== category.id ?\n\t\t\t\t\t\t\t\t<div className=\"text-body font-medium p-6 added-card-other-category\">\n\t\t\t\t\t\t\t\t\tYou have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabIndex=\"true\">{props.data.title}</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default GuestViewCard","import React, { useEffect, useState } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition, getCategories } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\nimport ViewFilter from \"modules/view-registry/components/view-filter/ViewFilter\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport { FILTERS } from \"utils/constants\"\nimport { MEDIA_URL_PREFIX } from \"utils/constants\";\nimport { graphQL } from 'api/axios';\nimport { GET_PRODUCTS } from 'api/queries';\nimport GuestViewCard from \"modules/guest-view/components/GuestViewCard\";\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const [localAddedProductState, handleFilterProductChange] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  // Updating product count in filter categories\n  const updateFilterList = (registryItemsAnalysisCount, categoryData) => {\n\n    let newFilterList = [\n      {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: registryItemsAnalysisCount.totalAvailable\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: registryItemsAnalysisCount.totalReserved\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: registryItemsAnalysisCount.totalPurchased\n          }\n        ]\n      },\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        // limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          let id = category.category.id\n          let count = categoryData[id]\n          if (count > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          let id = category.category.id\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = categoryData[id]\n          return newCategory\n        })\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: registryItemsAnalysisCount.under50\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: registryItemsAnalysisCount.between50100\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: registryItemsAnalysisCount.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: registryItemsAnalysisCount.maStoreItems\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: registryItemsAnalysisCount.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  const getFiltersApplied = (stateFilterApplied, activeSortFilterState) => {\n    const childFilterArray = [...stateFilterApplied]\n    let filterApplied = {}\n    // For Gift Status\n    if (childFilterArray.includes(AVAILABLE)) {\n      filterApplied.isAvailable = true\n    }\n    if (childFilterArray.includes(RESERVED)) {\n      filterApplied.isReserved = true\n    }\n    if (childFilterArray.includes(PURCHASED)) {\n      filterApplied.isPurchased = true\n    }\n\n    // For Sort\n    if (activeSortFilterState.sortId === 2) {\n      filterApplied.sortBy = 'item__price'\n    } else if (activeSortFilterState.sortId === 3) {\n      filterApplied.sortBy = '-item__price'\n    }\n\n    // For Store\n    let store = []\n    if (childFilterArray.includes(MONICA_AND_ANDY)) {\n      store.push(MONICA_AND_ANDY)\n    }\n    if (childFilterArray.includes(ELSEWHERE)) {\n      store.push(ELSEWHERE)\n    }\n    if (store.length) {\n      filterApplied.store = store\n    }\n\n    let lessThanEqual = 0\n    let greaterThanEqual = 0\n    let hasPriceFilter = false\n    // For Price\n    if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_2) &&\n      childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 0\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_2)) {\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_3)) {\n      lessThanEqual = 49\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_2) &&\n      childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 50\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1)) {\n      lessThanEqual = 49\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_2)) {\n      greaterThanEqual = 50\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    if (hasPriceFilter) {\n      filterApplied.price_Lte = lessThanEqual\n      filterApplied.price_Gte = greaterThanEqual\n    }\n\n    let categories = []\n    // For categories\n    for (let cat of [...stateCategoriesInfo]) {\n      if (childFilterArray.includes(cat.category.id)) {\n        categories.push(cat.category.id)\n      }\n    }\n    if (categories.length) {\n      filterApplied.categories = categories\n    }\n\n    return filterApplied\n  }\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        isViewCard={true}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let itemsOldPosition = arrayMove([...stateViewRegistryProducts], oldIndex, oldIndex)\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    dispatch(setViewRegistryProducts(items))\n    updateViewRegistryPosition(stateRegistryInfo.id, items, itemsOldPosition, dispatch)\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedProductsByFilters = async (addedProducts, filterApplied) => {\n    let finalFilterProduct = []\n    let filtersApplied = getFiltersApplied(stateFilterApplied, activeSortFilterState)\n    let reqData = {\n      query: GET_PRODUCTS,\n      variables: {\n        registryId: stateRegistryInfo.id,\n        ...filtersApplied\n      }\n    }\n\n    await graphQL(reqData).then(res => {\n      if (res.data.data.registryItems) {\n        // Storing Product of GuestView\n        let responseData = [...res.data.data.registryItems.registryItems.edges].map(item => {\n          let newItemObj = { ...item.node }\n          delete newItemObj.registryitemImage;\n          if (item.node.registryitemImage.length > 0) {\n            newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n          }\n          return newItemObj;\n        })\n        let finalData = responseData.filter(product => product.registryCategories.length > 0)\n        updateFilterList({ ...res.data.data.registryItems.registryItemsAnalysisCount }, { ...res.data.data.registryItems.categoryData })\n\n        finalFilterProduct = finalData\n        return finalData\n      }\n    }).catch(err => {\n\n      if (err.response && err.response.data.errors) {\n        for (const error of err.response.data.errors) {\n          // TODO: Implement toast if necessary\n          console.log(error.message)\n        }\n      }\n    })\n    return finalFilterProduct\n  }\n\n  const getParentCategory = (id) => {\n    return [...stateCategoriesInfo].find((parentCategory) => parentCategory.subCategories.find((subCategory) => subCategory.id === id))\n  }\n\n  const getSortedFilteredProducts = async (addedProducts, activeSortFilterState, viewRegistryProducts, filterApplied, registryInfo) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    let newSortedProducts = null\n\n    if (filterApplied.length > 0) {\n      newSortedProducts = await getSortedProductsByFilters(addedProducts, filterApplied)\n    }\n    else {\n      newSortedProducts = [...addedProducts]\n    }\n\n    if (activeSortFilterState.sortId === 1) {\n      if (filterApplied.length > 0) {\n        sortedData = newSortedProducts\n      }\n      else if (registryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n      }\n      else {\n        sortedData = sortByMustHave([...newSortedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...newSortedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...newSortedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    // handleFilterProductChange(sortedProducts)\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n  }\n\n  const sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  //Clear filter state\n  const clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    dispatch(clearViewFilter())\n  }\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  useEffect(() => {\n    let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n    filteredSortProducts.then(product => {\n      handleFilterProductChange(product)\n    })\n  }, [stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo])\n\n  // updateFilterList(stateAddedProducts)\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <ViewFilter />\n          </div>\n          <div className=\"col\"></div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <SortFilterSection productCount={localAddedProductState.length} />\n            {/* Added Products */}\n            {!stateGuestViewRegistry ?\n              localAddedProductState.length > 0 ?\n                <div className=\"mt-5\">\n                  <SortableContainer onSortEnd={onSortEnd} helperClass=\"drag-add-card\" axis=\"y\" lockAxis=\"y\" useDragHandle>\n                    {localAddedProductState.map((card, index) =>\n                      <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1 || stateFilterApplied.length !== 0} />\n                    )}\n                  </SortableContainer>\n                </div> :\n                <div className=\"d-flex flex-column empty-filter mt-6 pb-8\">\n                  <div className=\"font-body empty-filter-title text-center mx-auto mt-10\">\n                    <p>We couldn’t find any gifts that matches your filters...</p>\n                    <p>Please try clearing ‘Filters’ to view gifts.</p>\n                  </div>\n                  <div className=\"mx-auto mt-3\">\n                    <Button\n                      variant=\"primary\"\n                      className=\"px-3 py-1 font-medium empty-filter-title text-body\"\n                      onClick={(ev) => clearFilterHandler(ev)}\n                    >\n                      Clear Filters\n                  </Button>\n                  </div>\n                </div> :\n              // Guest View Cards\n              localAddedProductState.length > 0 ?\n                localAddedProductState.map((card, index) =>\n                  <GuestViewCard\n                    data={card} key={\"addedCard\" + index}\n                  />) : null\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Toast.scss';\n\nconst Toast = () => {\n  const closeToastMessage = (parentId) => {\n    toast.dismiss(parentId);\n  }\n\n  return (\n    <ToastContainer\n      position=\"top-center\"\n      className=\"m-a-toast-container\"\n      toastClassName=\"m-a-toast\"\n      autoClose={4000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      draggable={false}\n      closeOnClick={false}\n      closeButton={<i className=\"icon-close m-a-toast-close\" onClick={(event) => closeToastMessage(event.target.parentElement.id)} />}\n    />\n  )\n}\n\nexport default Toast;","import React from \"react\";\nimport \"./TodoWidget.scss\";\nimport {connect} from \"react-redux\";\n\nclass TodoWidget extends React.Component {\n\n  performTodoAction = todo => {\n  //  Perform action related to to-do\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-todo-widget\">\n        {this.props.stateTodo.length > 0 ?\n          (\n            //  When there is To-do\n            <div className=\"baby-registry-todo-section\">\n              <button className=\"baby-steps-button d-flex align-items-center py-3 pl-4 pr-8\">\n                <i className=\"baby-steps-icon\"/>\n                <div className=\"ml-5\">\n                  <p className=\"text-body font-medium\">{this.props.stateTodo.length} Baby Steps</p>\n                  <p className=\"text-sm text-left\">to take next!</p>\n                </div>\n              </button>\n\n              <div className=\"baby-steps-todo-content p-2\">\n                {this.props.stateTodo.map(todo => (\n                  <div className=\"baby-step-todo d-flex justify-content-between py-2 align-items-center\">\n                    <p className=\"text-body mr-9\">{todo.text}</p>\n                    {/*TODO: Update below icon once updated*/}\n                    <button className=\"baby-step-action-btn p-2 icon-chevron-right float-right\" onClick={() => this.performTodoAction(todo)}/>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n          :\n          (\n            //  When there is no To-do\n            <div className=\"baby-registry-no-todo-section d-flex align-items-center py-4\">\n              <i className=\"no-todo-icon\"/>\n              <div className=\"ml-2\">\n                <p className=\"text-body font-medium\">Great job!</p>\n                <p className=\"text-sm\">More to come, soon.</p>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTodo: state.registry.todo\n})\n\nexport default connect(\n  mapStateToProps\n)(TodoWidget);","import React from \"react\";\nimport \"./Filters.scss\";\nimport {connect} from 'react-redux';\nimport CheckBox from \"../../../commons/components/check-box/CheckBox\";\nimport {setTrackGiftsFilters} from \"../../TrackGiftsAction\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport defaultData from \"data/ReducerDefaultData.json\"\n\nclass Filters extends React.Component {\n\n  filterChangeHandler = async filterId => {\n    let allUnselected = true\n    let newFilters = this.props.stateFilters.map(filter => {\n      let newFilter = {...filter}\n      if (newFilter.id === filterId) {\n        newFilter.selected = !newFilter.selected\n      }\n      if (newFilter.count > 0 && newFilter.selected) {\n        allUnselected = false\n      }\n      return newFilter\n    })\n\n    // Resetting filter to default when all filter are unselected\n    if (allUnselected){\n      newFilters = defaultData.trackGifts.filters\n    }\n\n    await this.props.dispatch(setTrackGiftsFilters(newFilters))\n    getTrackGiftsProduct(true, newFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.dispatch)\n  }\n\n  render() {\n    return (\n      <div className=\"track-gifts-filters\">\n        <p className=\"text-sm\">Filters</p>\n        <div className=\"mt-3\">\n          {this.props.stateFilters.map(filter => (\n            filter.count > 0 ?\n              <CheckBox\n                display={filter.text}\n                count={filter.count}\n                checked={filter.selected ? \"checked\" : \"\"}\n                id={`trackGiftFilter-${filter.id}`}\n                className=\"mb-3\"\n                textClass=\"track-gifts-filter-text\"\n                changeHandler={() => this.filterChangeHandler(filter.id)}\n              />\n              :\n              null\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info\n})\n\nexport default connect(\n  mapStateToProps\n)(Filters);","import React from \"react\";\nimport \"./ThankYouList.scss\"\n\nclass ThankYouList extends React.Component {\n  render() {\n    return (\n      <div className=\"track-gifts-thank-you-list p-4 mr-5\">\n        <img src=\"https://raw.githack.com/HetPatel-Aubergine/testCDNRepo/master/icons/file_heart.svg\" alt=\"Thank you list\"/>\n        <p className=\"mt-2 text-body font-medium\">Thank you list</p>\n        <p className=\"mt-1 text-sm track-gifts-thank-you-desc\">Let your gift-givers know that you are thankful to them.</p>\n        {/* TODO: Integrate API on Download Click */}\n        <a href=\"#\" className=\"mt-1 track-gifts-thank-you-link text-sm\">Download</a>\n      </div>\n    );\n  }\n}\n\nexport default ThankYouList;","import React from \"react\";\nimport ViewBy from \"../../components/view-by/ViewBy\";\nimport Filters from \"../../components/filters/Filters\";\nimport ThankYouList from \"../../components/thank-you-list/ThankYouList\";\n\nclass TrackGiftsSidebar extends React.Component {\n  render() {\n    return (\n      <>\n        <ViewBy/>\n        <div className=\"mt-4\">\n          <Filters/>\n        </div>\n        <div className=\"mt-4\">\n          <ThankYouList />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TrackGiftsSidebar;","import React from \"react\";\nimport \"./Search.scss\";\nimport {connect} from \"react-redux\";\nimport {setTrackGiftsSearch} from \"../../TrackGiftsAction\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\n\nclass Search extends React.Component {\n  inputRef = React.createRef()\n  inputContainer = React.createRef()\n\n  applySearch = () => {\n    let searchState = {...this.props.stateTrackGiftsSearch}\n    searchState.searched = true\n    getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.dispatch)\n    this.props.dispatch(setTrackGiftsSearch(searchState))\n  }\n\n  searchInputChangeHandler = async () => {\n    if (this.inputRef.current && this.inputContainer.current) {\n      let searchInput = this.inputRef.current\n      if (searchInput.value.length > 0) {\n        if (!this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n          //Adding class to increase width\n          this.inputContainer.current.classList.add(\"track-gifts-search-container-focus\")\n        }\n      }\n\n      await this.props.dispatch(setTrackGiftsSearch({\n        searched: false,\n        searchText: searchInput.value\n      }))\n    }\n  }\n\n  searchInputFocusHandler = () => {\n    if (this.inputContainer.current) {\n      if (!this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n        //Adding class to increase width\n        this.inputContainer.current.classList.add(\"track-gifts-search-container-focus\")\n      }\n    }\n  }\n\n  searchInputBlurHandler = () => {\n    if (this.inputRef.current && this.inputContainer.current) {\n      let searchInput = this.inputRef.current\n      if (searchInput.value.length <= 0) {\n        if (this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n          //Removing class to decrease width\n          this.inputContainer.current.classList.remove(\"track-gifts-search-container-focus\")\n        }\n      }\n\n      if (searchInput.value.length >= 3 && !this.props.stateTrackGiftsSearch.searched) {\n        this.applySearch()\n      }\n    }\n  }\n\n  clearClickHandler = async ev => {\n    ev.preventDefault()\n    await this.props.dispatch(setTrackGiftsSearch({\n      searched: false,\n      searchText: \"\"\n    }))\n    if (this.inputRef.current) {\n      this.inputRef.current.focus()\n    }\n\n    this.applySearch()\n  }\n\n  searchClickHandler = async ev => {\n    ev.preventDefault()\n    this.applySearch()\n  }\n\n  render() {\n    return (\n      <div className=\"ml-auto track-gifts-search-container\" ref={this.inputContainer}>\n        <input\n          type=\"text\"\n          ref={this.inputRef}\n          placeholder=\"Search\"\n          value={this.props.stateTrackGiftsSearch.searchText}\n          onChange={this.searchInputChangeHandler}\n          onFocus={this.searchInputFocusHandler}\n          onBlur={this.searchInputBlurHandler}\n          className={[\"track-gifts-search-input pl-6 text-body py-1 w-100 mw-100\", this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ? \"pr-10\": \"pr-12\"].join(\" \")}\n        />\n        <i className=\"icon-search track-gifts-search-icon\"/>\n        {!this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ?\n          <a className=\"track-gifts-search-input-link text-body\" href=\"#\"\n             onClick={(ev) => this.searchClickHandler(ev)}>Search</a>\n          : null}\n        {this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ?\n          <a className=\"track-gifts-search-input-link text-body\" href=\"#\"\n             onClick={(ev) => this.clearClickHandler(ev)}>Clear</a>\n          : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsSearch: state.trackGifts.search,\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info\n})\n\nexport default connect(\n  mapStateToProps\n)(Search);","import React from \"react\";\nimport \"./AddGift.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {connect} from 'react-redux'\nimport {TRACK_GIFTS_ADD_GIFT} from \"../../../../api/mutations\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst EMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\nclass AddGift extends React.Component {\n  state = {\n    show: false,\n    giftName: \"\",\n    storeName: \"\",\n    orderNumber: \"\",\n    userName: \"\",\n    userEmail: \"\",\n    errors: {}\n  }\n\n  openAddGiftModal = () => {\n\n    this.setState({\n      show: true,\n      giftName: \"\",\n      storeName: \"\",\n      orderNumber: \"\",\n      userName: \"\",\n      userEmail: \"\",\n      errors: {}\n    })\n  }\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  validDate = () => {\n    let valid = true\n    let errors = {}\n\n    if (this.state.giftName.length <= 0) {\n      errors['giftName'] = \"Gift Name is required field\"\n      valid = false\n    }\n\n    if (this.state.userName.length <= 0) {\n      errors['userName'] = \"Name is required field\"\n      valid = false\n    }\n\n    if (this.state.userEmail.length <= 0) {\n      errors['userEmail'] = \"Email address is required field\"\n      valid = false\n    } else {\n      if (!this.state.userEmail.match(EMAIL_RE)) {\n        errors['userEmail'] = \"Invalid Email address\"\n        valid = false\n      }\n    }\n\n    this.setState({\n      errors: errors\n    })\n\n    return valid\n  }\n\n  addGiftClickHandler = () => {\n    if (!this.validDate()) {\n      return false\n    }\n\n    let reqData = {\n      query: TRACK_GIFTS_ADD_GIFT,\n      variables: {\n        registryId: this.props.stateRegistryInfo?.id,\n        gifts: [{\n          guestName: this.state.userName ? this.state.userName : null,\n          guestEmail: this.state.userEmail ? this.state.userEmail : null,\n          items: [{\n            title: this.state.giftName ? this.state.giftName : null,\n            quantity: 1,\n            price: 0.0\n          }]\n        }]\n      }\n    }\n\n    if (this.state.storeName) {\n      reqData.variables.gifts['storeName'] = this.state.storeName\n    }\n\n    if (this.state.orderNumber) {\n      reqData.variables.gifts['orderNo'] = this.state.orderNumber\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data.addGift) {\n        toast.success(<p><b>{this.state.giftName} gift added.</b></p>)\n        getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.dispatch)\n        this.modalCloseHandler()\n      } else if (res.data.errors) {\n        toast.error(\"Some error occurred.\")\n        console.error({...res.data.errors})\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\")\n      console.error(err.response)\n    })\n\n  }\n\n  // Input Change Handlers\n  giftNameChangeHandler = ev => {\n    if (this.state.errors.giftName) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.giftName\n      this.setState({\n        errors: newErrorState\n      })\n    }\n\n    this.setState({\n      giftName: ev.target.value\n    })\n  }\n\n  storeNameChangeHandler = ev => {\n    this.setState({\n      storeName: ev.target.value\n    })\n  }\n\n  orderNumberChangeHandler = ev => {\n    this.setState({\n      orderNumber: ev.target.value\n    })\n  }\n\n  userNameChangeHandler = ev => {\n    if (this.state.errors.userName) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.userName\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    this.setState({\n      userName: ev.target.value\n    })\n  }\n\n  userEmailChangeHandler = ev => {\n    if (this.state.errors.userEmail) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.userEmail\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    this.setState({\n      userEmail: ev.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"track-gifts-add-gift-container\">\n\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 text-body font-medium track-gifts-add-gift-button\"\n          onClick={this.openAddGiftModal}\n        >Add Gift</Button>\n\n        <Modal\n          show={this.state.show}\n          title=\"Add Gift\"\n          size=\"md\"\n          footer={\n            <Button\n              variant=\"primary\"\n              onClick={this.addGiftClickHandler}\n              className=\"px-5 py-1 text-body font-medium track-gifts-add-gift-button\"\n            >Add & Close</Button>\n          }\n          closeModal={this.modalCloseHandler}>\n          <div className=\"track-gifts-add-gift-form\">\n\n            {/* Gift Name */}\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Gift\n                    Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"gift-name\"\n                    value={this.state.giftName}\n                    onChange={(ev) => this.giftNameChangeHandler(ev)}\n                    placeholder=\"Eg. Coming Home Blanket by Monica+Andy\"\n                    className={[\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.giftName ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}/>\n                  {this.state.errors.giftName ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.giftName}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row mt-2\">\n              {/* Store Name */}\n              <div className=\"col-6\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label className=\"track-gifts-add-gift-input-label text-sm font-medium mb-1\">Store Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"store-name\"\n                    value={this.state.storeName}\n                    onChange={(ev) => this.storeNameChangeHandler(ev)}\n                    className=\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\"\n                    placeholder=\"Eg. Target\"/>\n                </div>\n              </div>\n\n              {/* Order Number */}\n              <div className=\"col-6\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label className=\"track-gifts-add-gift-input-label text-sm font-medium mb-1\">Order number</label>\n                  <input\n                    type=\"text\"\n                    name=\"order-number\"\n                    value={this.state.orderNumber}\n                    onChange={(ev) => this.orderNumberChangeHandler(ev)}\n                    className=\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\"\n                    placeholder=\"00012345\"/>\n                </div>\n              </div>\n            </div>\n\n            {/* User Info */}\n            <div className=\"row mt-5\">\n              <div className=\"col\">\n                <p className=\"text-body font-medium\">Gifted By</p>\n              </div>\n            </div>\n\n            {/* User Name */}\n            <div className=\"row mt-2\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"user-name\"\n                    placeholder=\"John Doe\"\n                    value={this.state.userName}\n                    onChange={(ev) => this.userNameChangeHandler(ev)}\n                    className={[\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.userName ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}\n                  />\n                  {this.state.errors.userName ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.userName}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n            {/* User email */}\n            <div className=\"row mt-2 mb-1\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Email\n                    address</label>\n                  <input\n                    type=\"text\"\n                    name=\"user-email\"\n                    placeholder=\"johndoe@email.com\"\n                    value={this.state.userEmail}\n                    onChange={(ev) => this.userEmailChangeHandler(ev)}\n                    className={[\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.userEmail ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}\n                  />\n                  {this.state.errors.userEmail ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.userEmail}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info\n})\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from \"react\";\nimport TrackGiftsSidebar from \"./containers/track-gifts-sidebar/TrackGiftsSidebar\";\nimport TrackGiftsContent from \"./containers/track-gifts-content/TrackGiftsContent\";\nimport Search from \"./components/search/Search\";\nimport AddGift from \"./components/add-gift/AddGift\";\n\nclass TrackGifts extends React.Component {\n  render() {\n    return (\n      <div className=\"container mt-8\">\n        <div className=\"row\">\n\n          {/* Sidebar content */}\n          <div className=\"col-2\">\n            <div className=\"row mb-5\">\n              <div className=\"col\">\n                <h4 className=\"font-medium\">View</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <TrackGiftsSidebar/>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"col-10\">\n            <div className=\"row mb-5\">\n              <div className=\"col\">\n                <h4 className=\"font-medium\">Gifts</h4>\n              </div>\n              <div className=\"col-5\">\n                <Search/>\n              </div>\n              <div className=\"col-2\">\n                <AddGift/>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <TrackGiftsContent/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrackGifts;","import React from 'react';\nimport {NavLink, Switch, Route, Redirect} from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport {useTranslation} from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport {useSelector} from 'react-redux';\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport TodoWidget from \"./component/todo-widget/TodoWidget\";\nimport TrackGifts from \"../track-gifts/TrackGifts\";\n\nconst RegistryHero = (props) => {\n\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const {t} = useTranslation();\n  const registryData = RegistryHeroData\n\n  if (!stateRegistryInfo.id && stateRegistryInfo.notFound) {\n    return <Redirect to={route.ONBOARDING.HOME}/>\n  }\n\n  return (\n    <>\n      {!stateGuestViewRegistry ?\n        <div className=\"registry-hero\">\n          <div className=\"container pt-6\">\n            <div className=\"row\">\n              <div className=\"col d-flex justify-content-between align-items-start\">\n                <div className=\"d-flex align-items-end\">\n                  <h1>{stateRegistryInfo.name}</h1>\n                  <span className=\"text-sm ml-1\">{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</span>\n                </div>\n                <div>\n                  <TodoWidget/>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-flex registry-hero-navigation-links\">\n                  <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.TRACK_GIFTS.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> : null}\n\n      {/* Registry Nav Routes */}\n      {stateRegistryInfo.id ?\n        <Switch>\n          <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME}/></Route>\n          <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry}/>\n          <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry}/>\n          <Route exact path={route.TRACK_GIFTS.HOME} component={TrackGifts}/>\n        </Switch>\n        : null}\n\n      <Toast />\n    </>\n  )\n}\n\nexport default RegistryHero;","import React from \"react\";\nimport \"./Option.scss\";\n\nconst Option = (props) => {\n  return (\n    <div\n      className={[\"px-4 py-3 baby-registry-question-option\", props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}>{props.children}</div>\n  );\n}\n\nexport default Option;","import React from \"react\";\nimport \"./Onboarding.scss\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport routes from \"utils/routes\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport {addQuestionAnswer, updateQuestionAnswer} from \"./OnboardingAction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  CREATE_REGISTRY,\n  SAVE_SINGLE_QUESTION_RESPONSE\n} from \"../../api/mutations\";\nimport {graphQLNoToken, graphQLNoHeader} from \"../../api/axios\";\nimport {Cookies} from \"react-cookie\";\nimport {setLoggingStatus, setOnboardingRegistry} from \"../registry/RegistryActions\";\nimport {getOnboardingQuestions} from \"../../utils/commonFunction\";\nimport {GET_REGISTRIES} from \"../../api/queries\";\nimport {M_A_FORGOT_PASSWORD_LINK} from \"../../utils/constants\";\n\nclass Onboarding extends React.Component {\n\n  //EMAIL PATTERN\n  MAIL_FORMAT = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  // Static titles\n  LOGIN_TITLE = \"Sign in for free gifts, free shipping, and exclusive access to our limited edition prints\"\n  SIGNUP_TITLE = \"Let’s make it official. Time to create your account.\"\n  PARTNER_TITLE = \"Your partner’s details please\"\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  LOGIN = \"Login\"\n  PARTNER = \"Partner\"\n\n  // Data to remove Both option\n  LITTLE_ONCE_ID = {\n    questionId: 5,\n    optionId: 7\n  }\n\n  BOTH_OPTION_ID = {\n    questionId: 6,\n    optionId: 13\n  }\n\n  SKIP_BOTH_OPTION = false\n\n  state = {\n    parentId: null,\n    question: {},\n    login: false,\n    toastMessage: \"\",\n    signUpErrors: {},\n    signInErrors: {},\n    submitAnswer: false,\n    bulkSaved: true\n  }\n\n  componentDidMount() {\n    window.onpopstate = () => {\n      if (this.props.location.pathname.search(routes.ONBOARDING.HOME) >= 0) {\n        this.setQuestionBasedOnId(this.props.match.params['questionId'])\n        this.clearToastMessage()\n      }\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      signUpErrors: {},\n      signInErrors: {}\n    })\n  }\n\n  createRegistry = () => {\n    let cookies = new Cookies();\n    graphQLNoHeader({query: CREATE_REGISTRY}, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data) {\n        let registryId = res.data.data.createRegistry.registry.id\n        if (registryId) {\n          this.props.dispatch(setOnboardingRegistry(registryId))\n          this.submitAllAnswers(registryId, true)\n        }\n      }\n    }).catch(err => {\n      console.error(err.response)\n    })\n  }\n\n  checkValidEmail = (email) => {\n    return email.match(this.MAIL_FORMAT)\n  }\n\n  submitAllAnswers = async (optionalRegistryId = null, submitBulk = false) => {\n    if (this.state.submitAnswer || submitBulk) {\n      if (this.props.stateOnboardingAnswers.length > 0 && (this.props.stateOnboardingRegistry || optionalRegistryId)) {\n        const registryId = optionalRegistryId ? optionalRegistryId : this.props.stateOnboardingRegistry;\n        let action = null;\n        let returnToURL = null;\n\n        const cookies = new Cookies();\n        const token = cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"\n\n        if (submitBulk) {\n          // Submitting all answers at once\n\n          const response = this.props.stateOnboardingAnswers.map(answer => {\n            return {\n              question: answer.question,\n              questionOptionInput: [\n                {\n                  option: answer.response.option,\n                  optionText: answer.response.optionText\n                }\n              ]\n            }\n          })\n          let reqData = {\n            query: SAVE_QUESTION_RESPONSE,\n            operationName: \"addRegistryQuestionOption\",\n            variables: {\n              registryId: registryId,\n              answers: response\n            }\n          }\n\n          await graphQLNoHeader(reqData, {\n            headers: {\"Authorization\": token}\n          }).then(res => {\n            if (res.data.data.addRegistryMultipleQuestionOption) {\n              console.log(\"Saved\")\n            }\n          }).catch(err => {\n            toast.error(\"Answer is not saved.\")\n            console.error(err.response);\n          }).finally(async () => {\n            await this.setState({\n              submitAnswer: false\n            })\n          })\n        } else {\n          //  Submitting single answer at once\n\n          let response = null\n\n          if (this.props.stateOnboardingAnswers.length > 0) {\n            const answer = this.props.stateOnboardingAnswers[this.props.stateOnboardingAnswers.length - 1]\n            action = answer.response.action ? answer.response.action : null;\n            response = {\n              question: answer.question,\n              questionOptionInput: [\n                {\n                  option: answer.response.option,\n                  optionText: answer.response.optionText\n                }\n              ]\n            }\n          }\n\n          if (action) {\n            switch (action) {\n              case \"build-registry\":\n                returnToURL = window.location.origin + routes.MY_REGISTRY.HOME\n                break\n              case \"registry-quiz\":\n                returnToURL = window.location.origin + routes.PERSONALIZE.HOME\n                break\n              default:\n                returnToURL = window.location.origin + routes.REGISTRY.HOME\n                break\n            }\n          }\n\n          if (response) {\n            let reqData = {\n              query: SAVE_SINGLE_QUESTION_RESPONSE,\n              operationName: \"updateOrCreateRegistrySingleQuestionOption\",\n              variables: {\n                registryId: registryId,\n                registryQuestionOptionInput: response\n              }\n            }\n\n            if (action && returnToURL) {\n              reqData.variables['returnTo'] = returnToURL\n            }\n\n            graphQLNoHeader(reqData, {\n              headers: {\"Authorization\": token}\n            }).then(res => {\n              if (res.data.data.updateOrCreateRegistrySingleQuestionOption) {\n                console.log(\"Saved\")\n                if (res.data.data.updateOrCreateRegistrySingleQuestionOption.redirectionUrl) {\n                  window.open(res.data.data.updateOrCreateRegistrySingleQuestionOption.redirectionUrl, \"_self\")\n                }\n              }\n            }).catch(err => {\n              console.error(err);\n            }).finally(() => {\n              this.setState({\n                submitAnswer: false\n              })\n            })\n          }\n        }\n\n      }\n    }\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    let nextFullQuestion = null;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.stateOnboardingQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          nextFullQuestion = ques\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      if (this.props.stateLoggedIn && this.state.redirectionUrl) {\n        // window.open(this.state.redirectionUrl, \"_self\")\n      }\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null\n      })\n\n      if (nextFullQuestion && nextFullQuestion.answers.length > 0 && (nextFullQuestion.options.length > 0 && !nextFullQuestion.options[0].action)) {\n        this.gotoNextQuestion(nextFullQuestion, null)\n        return;\n      } else {\n        this.setQuestionBasedOnId(nextQuestionId)\n        this.setToastMessage()\n        this.props.history.push(routes.ONBOARDING.HOME + `/${nextQuestionId}`)\n      }\n\n\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.stateOnboardingQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = async (questionId, response, option = null) => {\n    const alreadyAnswered = this.props.stateOnboardingAnswers.find(el => el.question === this.state.question.id)\n\n\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.stateOnboardingAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n          break;\n        }\n        newState.push(answer)\n      }\n      await this.props.dispatch(updateQuestionAnswer(newState))\n    } else {\n      await this.props.dispatch(addQuestionAnswer({question: questionId, response: response}))\n    }\n    await this.setState({\n      submitAnswer: true\n    })\n\n    if (option) {\n      if (option.toastMessage) {\n        this.setState({\n          toastMessage: option.toastMessage\n        })\n      }\n    }\n\n    this.submitAllAnswers(null, false)\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    if (Number(this.state.question.id) === this.LITTLE_ONCE_ID.questionId && Number(option.id) === this.LITTLE_ONCE_ID.optionId) {\n        this.SKIP_BOTH_OPTION = true\n    } else if (this.SKIP_BOTH_OPTION) {\n      this.SKIP_BOTH_OPTION = false\n    }\n    this.addAnswerToState(questionId, {option: option.id, optionText: option.value, action: option.action}, option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n  }\n\n  watchNextBtn = (ev) => {\n    this.setState({\n      nextBtnState: ev.target.value.length <= 0\n    })\n  }\n\n  answerDataQuestion = (questionId, response, dateCheck) => {\n    if (dateCheck) {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var currentDate = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n      if (currentDate <= response) {\n        this.addAnswerToState(questionId, {option: 0, optionText: response})\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Invalid date\")\n      }\n    } else {\n      this.addAnswerToState(questionId, {option: 0, optionText: response})\n      this.gotoNextQuestion(this.state.question, this.state.parentId);\n    }\n  }\n\n  textInputTypeChangeHandler = (ev, inputRefs) => {\n    let enableBtn = false;\n\n    for (const inputRef of inputRefs) {\n      if (inputRef.current.value.length <= 0) {\n        enableBtn = true\n        break\n      }\n    }\n\n    this.setState({\n      nextBtnState: enableBtn\n    })\n  }\n\n  changeLoginState = (ev, value, refs) => {\n    ev.preventDefault()\n    for (let ref of refs) {\n      if (ref.current) {\n        ref.current.value = \"\"\n      }\n    }\n    this.setState({\n      login: value\n    })\n  }\n\n  setErrorBasedOnResponse = (err, type) => {\n    if (err.response.data && err.response.data.errors) {\n      for (let error of err.response.data.errors) {\n        let parentErrors = err.response.data.errors\n\n        if (parentErrors.length > 0) {\n          for (const subErrors of parentErrors) {\n            if (subErrors.errors && (subErrors.errors instanceof Array ? subErrors.errors.length > 0 : true)) {\n              let newErrorState = {}\n              for (const error in subErrors.errors) {\n                newErrorState[error] = subErrors.errors[error].length > 0 ? subErrors.errors[error][0] : \"\"\n              }\n              switch (type) {\n                case \"signUp\":\n                  this.setState({\n                    signUpErrors: newErrorState\n                  })\n                  break\n                case \"signIn\":\n                  this.setState({\n                    signInErrors: newErrorState\n                  })\n                  break\n              }\n            } else {\n              toast.error(error.message)\n            }\n          }\n        }\n      }\n    }\n    console.error(err.response)\n  }\n\n  signInClickHandler = (emailRef, passwordRef) => {\n    if (emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signInErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    let reqData = {\n      query: LOGIN_USER,\n      operationName: \"login_user\",\n      variables: {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(async res => {\n      if (res.data.data.loginUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.loginUser.token, {path: \"/\"})\n\n        // Checking if user has registry\n        let data = {\n          query: GET_REGISTRIES\n        }\n        await graphQLNoHeader(data, {headers: {\"Authorization\": \"Token \" + res.data.data.loginUser.token}}).then(async registryRes => {\n          if (registryRes.data.data.registries.edges.length > 0) {\n            // TODO: Set currently active registry\n            let activeRegistry = registryRes.data.data.registries.edges[registryRes.data.data.registries.edges.length - 1]\n            let token = cookies.get(\"access_token\")\n            if (activeRegistry.node.id && token) {\n              await this.props.dispatch(setOnboardingRegistry(activeRegistry.node.id))\n              await getOnboardingQuestions(this.props.dispatch, activeRegistry.node.id, token)\n            }\n            if (res.data.data.loginUser.redirectionUrl) {\n              // window.open(res.data.data.loginUser.redirectionUrl, \"_self\")\n            }\n            // window.open(routes.MY_REGISTRY.HOME, \"_self\")\n            // updateRegistryDetailState(this.props.dispatch, registryRes.data.data.registries.edges);\n          } else {\n            // Creating Registry\n            this.createRegistry()\n          }\n\n        }).catch(err => {\n          console.error(err);\n        })\n        this.setState({\n          redirectionUrl: res.data.data.loginUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers(null, true)\n      }\n    }).catch(err => {\n      if (err.response.status === 401) {\n        toast.error(\"Invalid email or password\");\n        return;\n      }\n      this.setErrorBasedOnResponse(err, \"signIn\")\n    })\n  }\n\n  getSignInContent = () => {\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"signIn-email\"\n            ref={emailRef}\n            placeholder=\"johndoe@email.com\"\n          />\n          {this.state.signInErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-1\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"signIn-password\"\n            ref={passwordRef}\n            placeholder=\"Password\"\n          />\n          {this.state.signInErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.password}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <a className=\"text-body font-medium onboarding-link-text\" href={M_A_FORGOT_PASSWORD_LINK} target=\"_blank\">Forgot\n            Password</a>\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signInClickHandler(emailRef, passwordRef)}\n        >Sign In</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Don't have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                        onClick={(ev) => this.changeLoginState(ev, false, [emailRef, passwordRef])}\n        >Sign Up</a></h4>\n      </>\n    )\n  }\n\n  signUpClickHandler = (nameRef, emailRef, passwordRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signUpErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    // Clearing all error messages\n    this.clearErrorState()\n\n    let reqData = {\n      query: REGISTER_USER,\n      operationName: \"register_user\",\n      variables: {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.registerUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.registerUser.token, {path: \"/\"})\n        this.setState({\n          redirectionUrl: res.data.data.registerUser.redirectionUrl\n        })\n        this.createRegistry()\n        this.submitAllAnswers(null, true)\n        this.props.dispatch(setLoggingStatus(true))\n      }\n    }).catch(err => {\n      this.setErrorBasedOnResponse(err, \"signUp\")\n    })\n  }\n\n  getSignUpContent = () => {\n    let nameRef = React.createRef()\n    let emailRef = React.createRef()\n    let passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.name ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Doe\"\n            ref={nameRef}\n          />\n          {this.state.signUpErrors.name ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.name}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"johndoe@email.com\"\n            ref={emailRef}\n          />\n          {this.state.signUpErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n          />\n          {this.state.signUpErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.password}</p>\n            : null}\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signUpClickHandler(nameRef, emailRef, passwordRef)}\n        >Sign Up</Button>\n        <h4 className=\"mt-11\">Already have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\" tabindex\n                                                          onClick={(ev) => this.changeLoginState(ev, true, [nameRef, emailRef, passwordRef])}>Sign\n          In</a></h4>\n      </>\n    )\n  }\n\n  savePartnerDetail = (nameRef, emailRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      toast.error(\"Invalid email address\");\n      return;\n    }\n\n    const cookies = new Cookies();\n    let reqData = {\n      query: ADD_PARTNER_ACCOUNT,\n      operationName: \"addPartner\",\n      variables: {\n        partnerDetail: {\n          email: emailRef.current.value,\n          firstName: nameRef.current.value\n        }\n      }\n    }\n    graphQLNoHeader(reqData, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data.addPartnerAccount) {\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.response.data);\n    })\n  }\n\n  getPartnerContent = () => {\n    const nameRef = React.createRef()\n    const emailRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={nameRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1 mb-0\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={emailRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.savePartnerDetail(nameRef, emailRef)}\n        >Next</Button>\n      </>\n    )\n  }\n\n  render() {\n    // if (this.props.stateOnboardingAnswers) {\n    //   this.submitAllAnswers(null, false)\n    // }\n\n    // Redirecting user to registry home if registry found\n    if (this.props.stateRegistryInfo.id) {\n      return <Redirect to={routes.MY_REGISTRY.HOME}/>\n    }\n\n    // Redirecting to first question if not answered any\n    if (this.props.stateOnboardingQuestions.length > 0\n      && this.props.stateOnboardingAnswers.length <= 0\n      && this.props.location.pathname !== routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`) {\n      return <Redirect to={routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`}/>\n    }\n\n    if (!this.state.question.title && this.props.stateOnboardingQuestions.length > 0 && this.props.stateRouter.location.pathname !== routes.ONBOARDING.HOME + `/${this.state.question.id}`) {\n      this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    }\n\n    // Skipping Login Question if user is already logged in\n    if (this.props.stateLoggedIn && this.state.question.answerInputType === this.LOGIN) {\n      // If user already logged into M&A Store\n      this.setState((prevState, _) => ({\n        redirectionUrl: prevState.redirectionUrl ? prevState.redirectionUrl : routes.MY_REGISTRY.HOME\n      }))\n      this.gotoNextQuestion(this.state.question, null);\n    }\n\n    if (this.state.toastMessage) {\n      if (this.props.history.action === \"PUSH\") {\n        toast.dismiss()\n        toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n        setTimeout(() => this.setState({toastMessage: \"\"}), 4000)\n      }\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n    var now = new Date();\n    var day = (\"0\" + now.getDate()).slice(-2);\n    var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    var today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      for (const option of this.state.question.options) {\n        if (this.SKIP_BOTH_OPTION && Number(this.state.question.id) === this.BOTH_OPTION_ID.questionId && Number(option.id) === this.BOTH_OPTION_ID.optionId){\n          this.SKIP_BOTH_OPTION = true\n        } else {\n          options.push(\n            <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n              <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n              <span className=\"text-sm ml-1 onboarding-option-help-text\">{option.helpText}</span> : null}</Option>\n          )\n        }\n      }\n    } else if (this.state.question.answerInputType === \"Date\") {\n      let inputRef = React.createRef();\n      options.push(\n        <div className=\"d-flex flex-column\">\n          {/*TODO: Get placeholder from backend*/}\n          <input\n            type=\"date\"\n            className=\"onboarding-input py-1 px-2 text-body mb-0\"\n            placeholder=\"Date\"\n            ref={inputRef}\n            onChange={(ev) => this.watchNextBtn(ev)}\n            min={today}\n            max=\"9999-12-12\"\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(this.state.question.id, inputRef.current.value, true)}\n            className=\"px-3 py-1 font-medium mt-4 onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === \"Text\") {\n      let inputRefs = []\n      const inputRef = React.createRef()\n      inputRefs.push(inputRef)\n      options.push(\n        // TODO: Update this part if there is a Text type question\n        <div className=\"d-flex flex-column\">\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"Text\"\n            name=\"Answer\"\n            ref={inputRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(this.state.question.id, inputRef.current ? inputRef.current.value : \"\", false)}\n            className=\"mt-4 px-3 py-1 font-medium onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === this.LOGIN) {\n      let content = null;\n      if (this.state.login) {\n        staticQuestionTitle = this.LOGIN_TITLE\n        content = this.getSignInContent()\n      } else {\n        staticQuestionTitle = this.SIGNUP_TITLE\n        content = this.getSignUpContent()\n      }\n\n      options.push(content)\n    } else if (this.state.question.answerInputType === this.PARTNER) {\n      staticQuestionTitle = this.PARTNER_TITLE;\n      options.push(this.getPartnerContent())\n    }\n\n    return (\n      <>\n        <div className=\"baby-registry-onboarding container\">\n          <div className=\"row justify-content-center mt-24\">\n            <div className=\"col-12 col-md-6\">\n              <span\n                className=\"font-body onboading-question\">{[this.LOGIN, this.PARTNER].indexOf(this.state.question.answerInputType) !== -1 ? staticQuestionTitle : this.state.question.title}</span>\n            </div>\n          </div>\n          <div className=\"row justify-content-center mt-6\">\n            <div className=\"col-12 col-md-6\">\n              {options.map(option => option)}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          className=\"onboarding-toast-container\"\n          toastClassName=\"onboarding-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateOnboardingAnswers: state.onboarding.answers,\n    stateOnboardingRegistry: state.registry.onboardingRegistry,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Onboarding);","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from 'react';\nimport \"./PersonaliseHeader.scss\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\n\n\nconst PersonaliseHeader = (props) => {\n    const closePersonalise = (event) => {\n        event.preventDefault();\n        props.history.push(routes.REGISTRY.HOME)\n    }\n    \n    return (\n        <div className=\"personalise-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-between py-2\">\n                        <p className=\"text-body font-medium personalise-text\">My Registry Quiz</p>\n                        <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(PersonaliseHeader);","import React from 'react';\nimport \"./PersonaliseFooter.scss\";\n\n\nconst PersonaliseFooter = (props) => {\n  const closePersonalise = (event) => {\n    event.preventDefault();\n    // props.history.push(routes.REGISTRY.HOME)\n  }\n\n  return (\n    <div className=\"personalise-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4 justify-content-between pt-2 pb-4\">\n            <div className=\"mb-1\">\n              {props.percentage ? <p className=\"text-sm\">{props.percentage}% complete</p> : null}\n            </div>\n            <div className=\"personalise-progress-background\">\n              <div className=\"personalise-progress\" style={{ width: `${props.percentage}%` }} />\n            </div>\n          </div>\n          {/* <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} /> */}\n          <div className=\"col d-flex justify-content-end\">\n            <i className=\"icon-chevron-left align-self-center personalise-footer-icon p-2\" onClick={props.prevQuestion} />\n            <i className=\"icon-chevron-right align-self-center personalise-footer-icon p-2 ml-2\" onClick={props.nextQuestion} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonaliseFooter;","import React, { createRef } from \"react\";\n// import \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport PersonaliseHeader from \"./components/personalise-header/PersonaliseHeader\";\nimport { getPersonalizeQuestions } from \"utils/commonFunction\";\nimport { connect } from \"react-redux\";\nimport PersonaliseFooter from \"./components/personalise-footer/PersonaliseFooter\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport { updatePersonalizeQuestionAnswer, addPersonalizeQuestionAnswer, addPersonalizeQuestion } from \"./PersonaliseCheckListActions\";\nimport \"./PersonaliseChecklist.scss\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_SINGLE_QUESTION_RESPONSE } from 'api/mutations';\nimport { graphQL } from 'api/axios';\n\nclass PersonaliseChecklist extends React.Component {\n\n  state = {\n    parentId: null,\n    prevQuestionId: [],\n    question: {},\n    activeQuestionId: null,\n    toastMessage: \"\",\n    percentage: 0,\n    checkBoxSelected: []\n  }\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  CHECKBOX = \"Checkbox\"\n\n  componentDidMount() {\n    // getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    this.clearToastMessage()\n  }\n\n  calulatePercentage = (answerQuestionCount, totalQuestionCount) => {\n    let totalAnwer = 0;\n\n    const questions = [...this.props.statePersonaliseQuestions]\n    for (let question of questions) {\n      if (question.answers.length > 0) {\n        totalAnwer++;\n      }\n      if (questions.followUpQuestion) {\n        for (let subQuestion of question.followUpQuestions) {\n          if (subQuestion.answers.length > 0) {\n            totalAnwer++;\n          }\n        }\n      }\n    }\n    return this.props.statePersonaliseQuestions.length ? Math.ceil(totalAnwer * 100 / totalQuestionCount) : 0;\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    if (this.state.question.answerInputType === this.CHECKBOX) {\n      this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)\n    }\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.statePersonaliseQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null,\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        activeQuestionId: nextQuestionId\n      })\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.clearToastMessage();\n    }\n  }\n\n  gotoPrevQuestion = (prevQuestionId) => {\n    this.setQuestionBasedOnId(prevQuestionId);\n    if (this.state.prevQuestionId.length > 1) {\n      let popPrevQuestionId = [...this.state.prevQuestionId];\n      popPrevQuestionId.pop();\n      this.clearToastMessage();\n      this.setState({\n        prevQuestionId: popPrevQuestionId,\n        activeQuestionId: popPrevQuestionId.length > 0 ? popPrevQuestionId[popPrevQuestionId.length - 1] : this.state.activeQuestionId\n      })\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.statePersonaliseQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId,\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.statePersonaliseAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.statePersonaliseAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n        }\n        else {\n          newState.push(answer)\n        }\n      }\n      this.props.dispatch(updatePersonalizeQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addPersonalizeQuestionAnswer({ question: this.state.question.id, response: response }))\n    }\n  }\n\n  isActiveIdPresent = () => {\n    for (let prevQuestion of this.state.prevQuestionId) {\n      if (prevQuestion === this.state.activeQuestionId) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    this.addAnswerToState(option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    let finalAnswer = [{\n      option: option.id,\n      optionText: option.value\n    }]\n\n    this.submitQuestionAnswer(questionId, finalAnswer);\n  }\n\n  answerCheckBoxQuestion = (questionId, option) => {\n    this.addAnswerToState(option[0]);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    // let finalAnswer = [{\n    //   option: option.id,\n    //   optionText: option.value\n    // }]\n\n    let finalAnswer = []\n\n    for (let op of option) {\n      finalAnswer.push({option: op.id, optionText: op.value})\n    }\n\n    this.submitQuestionAnswer(questionId, finalAnswer);\n  }\n\n  selectCheckboxAnswer = (event, checkBoxRef, option) => {\n    checkBoxRef.current.classList.toggle(\"personalise-checkbox-selected\");\n    if (event.target.checked) {\n      this.setState({\n        // checkBoxSelected: selectedOption.push(option)\n        checkBoxSelected: [...this.state.checkBoxSelected, option]\n      })\n    }\n    else {\n      var removeIndex = this.state.checkBoxSelected.map(function (item) {return item.id;}).indexOf(option.id);\n      this.state.checkBoxSelected.splice(removeIndex, 1);\n    }\n  }\n\n  submitQuestionAnswer = (questionId, answer) => {\n    this.setToastMessage()\n    let questionOptionInput = {\n      question: questionId,\n      questionOptionInput: answer\n    }\n    let reqData = {\n      query: SAVE_SINGLE_QUESTION_RESPONSE,\n      variables: {\n        registryId: this.props.stateRegistryInfo.id,\n        registryQuestionOptionInput: questionOptionInput\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data) {\n        console.log('Answer Done')\n        this.setStateQuestionWithSelectedAnswer(questionId, answer)\n      }\n    }).catch(err => {\n      toast.error(\"Error occurred while fetching questions\");\n      console.error(err);\n    })\n  }\n\n  setStateQuestionWithSelectedAnswer = (questionId, answer) => {\n    let answerOpt = []\n    for (let ans of answer) {\n      answerOpt.push({ questionOption: { id: ans.option }, optionText: ans.optionText })\n    }\n\n    // Setting question state with selected answer\n    const questions = [...this.props.statePersonaliseQuestions].map(question => {\n\n      if (question.id === questionId) {\n        question.answers = answerOpt\n      }\n      question.options = question.options.map(opt => {\n        if (opt.followUpQuestions.length > 0) {\n          opt.followUpQuestions.map(followUpQuestion => {\n            if (opt.id === questionId) {\n              opt.answers = answerOpt\n            }\n          })\n        }\n        return opt;\n      })\n      question.isAnswered = false;\n      return question;\n    })\n    this.props.dispatch(addPersonalizeQuestion(questions))\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  selectedColorSchemes = (data) => {\n    if (this.state.checkBoxSelected.length <= 0) {\n      this.setState({\n        checkBoxSelected: [...data]\n      })\n    }\n  }\n\n  render() {\n\n    if (!this.state.question.id && this.props.statePersonaliseQuestions.length > 0) {\n      let prevQuestionID = []\n      let currentQuestion = null\n      for (let question of this.props.statePersonaliseQuestions){\n        if (!question.isPersonalize) {\n          prevQuestionID.push(question.id)\n        }\n        else {\n          currentQuestion = question\n          break\n        }\n      }\n      this.setState({\n        prevQuestionId: prevQuestionID,\n        activeQuestionId: currentQuestion.id,\n        question: currentQuestion\n      })\n\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      const selectedOptionID = this.state.question.answers?.length > 0 ? this.state.question.answers[0].questionOption.id : null\n      options = this.state.question.options.map(option => (\n        <Option className={[\"mb-2 mr-4\", selectedOptionID === option.id ? \"answer-selected\" : \"\"].join(\" \")} onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n            <div className=\"text-sm onboarding-option-help-text\">{option.helpText}</div> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === this.CHECKBOX) {\n      // TODO: If it is selected\n      const selectedOptionID = []\n      if (this.state.question.answers?.length > 0) {\n        for (let ans of this.state.question.answers) {\n          if (!selectedOptionID.includes(ans.questionOption.id)) {\n            selectedOptionID.push(ans.questionOption.id)\n          }\n        }\n        const selectOptions = []\n        for (let selectedOption of this.state.question.options) {\n          if (selectedOptionID.includes(selectedOption.id)) {\n            selectOptions.push(selectedOption)\n          }\n        }\n        this.selectedColorSchemes(selectOptions);\n      }\n      options = this.state.question.options.map(option => {\n        let checkBoxRef = createRef();\n        return (\n          <div\n            className={[\"personalise-checkbox mr-3 mb-3\", selectedOptionID.includes(option.id) ? \"personalise-checkbox-selected\" : \"\"].join(\" \")} ref={checkBoxRef}>\n            <label className=\"checkbox d-flex align-items-center pb-0 mb-0\">\n              <span className=\"checkbox__input p-2\">\n                <input\n                  type=\"checkbox\"\n                  name={option.id}\n                  value={option.id}\n                  onChange={(e) => this.selectCheckboxAnswer(e, checkBoxRef, option)}\n                  defaultChecked={selectedOptionID.includes(option.id)}\n                />\n                <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                  <i className=\"icon-check\"></i>\n                </span>\n              </span>\n              <h4 className=\"radio__label pr-2\">{option.value}</h4>\n            </label>\n          </div>\n        )\n      })\n      options.push(\n        // <div>\n        //   <Button\n        //     variant=\"primary\"\n        //     className=\"px-3 py-1 font-medium onboarding-next-button\"\n        //     onClick={() => this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)}\n        //   >Done</Button>\n        // </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"personalise\">\n          {/* Personalise Header */}\n          <PersonaliseHeader />\n\n          {/* Personalise Body */}\n          <div className=\"baby-registry-onboarding container mb-15\">\n            <div className=\"row justify-content-center mt-24\">\n              <div className=\"col-12 col-md-6\">\n                <span\n                  className=\"font-body onboading-question\">{this.state.question.title}</span>\n              </div>\n            </div>\n            <div className=\"row justify-content-center mt-6\">\n              <div className=\"col-12 col-md-6\">\n                {options.map(option => option)}\n              </div>\n            </div>\n          </div>\n\n          {/* Personalise Footer */}\n          <PersonaliseFooter\n            percentage={this.calulatePercentage(this.props.statePersonaliseAnswers.length, this.props.statePersonaliseQuestions.length)}\n            prevQuestion={() => { this.gotoPrevQuestion(this.state.prevQuestionId[this.state.prevQuestionId.length - 1]) }}\n            nextQuestion={() => { this.gotoNextQuestion(this.state.question, this.state.parentId) }}\n          />\n        </div>\n\n        <ToastContainer\n          position=\"top-center\"\n          className=\"personalise-toast-container\"\n          toastClassName=\"personalise-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n    statePersonaliseAnswers: state.personaliseCheckList.answers,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React, { useState } from \"react\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { setPersonaliseCheckListItems } from \"../../PersonaliseCheckListActions\";\nimport { connect } from \"react-redux\";\nimport './EditChecklist.scss';\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {\n  incrementCheckListQuantity,\n  setIsActiveCheckList,\n  decrementCheckListQuantity\n} from \"../../PersonaliseCheckListActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_UPDATED_CHECKLIST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport { getAllCategories } from 'utils/commonFunction';\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\n\n// import {setCheckListItems} from \"../../../my-registry/MyRegistryActions\";\n\nclass PersonaliseChecklist extends React.Component {\n  state = {\n\t  showOverrideModal: false\n\t};\n\n  componentDidMount() {\n    this.getAllCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n  getAllCategories = (registryId, dispatch) => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryId)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.errors || res.data.error) {\n        // TODO: Add toast\n        console.log('Something went wrong-->', res.data.errors)\n        return;\n      } else {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  if (subProductType.isExcluded) {\n                    subProductType.totalItemsCount = 1\n                    subProductType['isAdded'] = false\n                  } else {\n                    subProductType['isAdded'] = true\n                  }\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                if (subCategory.isExcluded) {\n                  subCategory.totalItemsCount = 1\n                  subCategory['isAdded'] = false\n                } else {\n                  subCategory['isAdded'] = true\n                }\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = { ...category }\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n\n        }\n        dispatch(setPersonaliseCheckListItems(finalCheckList))\n      }\n    }).catch(err => {\n      console.error('Something went wrong-->', err);\n    })\n  }\n\n  closeAndSavePersonaliseCheckList = (event) => {\n    event.preventDefault();\n    let finalCheckListData = []\n    let tempStateCheckList = [...this.props.stateCheckList]\n    for (let category of tempStateCheckList) {\n      for (let subCategory of category.subCategories) {\n        // let tempData = null\n        let tempData = {\n          registryCategoryId: subCategory.id,\n          itemsCount: subCategory.totalItemsCount,\n          isExcluded: !subCategory.isAdded\n        }\n        finalCheckListData.push(tempData)\n      }\n    }\n\n    let registryId = this.props.stateRegistryInfo.id\n    let data = {\n      query: SAVE_UPDATED_CHECKLIST,\n      variables: {\n        registryId: registryId,\n        itemCountData: finalCheckListData\n      },\n    }\n\n    graphQL(data).then(res => {\n      if (res.data) {\n        toast.success((\n          <p>Personalise Checklist Updated Successfully</p>\n        ))\n        this.props.history.push(routes.REGISTRY.HOME)\n      }\n\n    }).catch(err => {\n      console.error(err.message)\n      toast.error((\n        <p>Some error occurred.</p>\n      ))\n    })\n  }\n\n  gotoPersonaliseQuestions = (event) => {\n    event.preventDefault();\n    this.props.history.push(routes.PERSONALIZE.HOME)\n  }\n\n  removeConfirmFooter = (\n    <>\n\t  <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => {\n\t  this.props.history.push(routes.REGISTRY.HOME)\n\t  this.setState({showOverrideModal:false})\n\t  }}>Do Not Override</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={(e) => {\n\t\tthis.closeAndSavePersonaliseCheckList(e)\n\t\tthis.setState({showOverrideModal:false});\n      }}>Yes, Please Override</Button>\n    </>\n  )\n\n  render() {\n    return (\n\t  // TODO: API call\n\t  <>\n      <div className=\"personalise-checklist\">\n        {/* Header */}\n        <div className=\"py-2 personalise-checklist-header font-body font-medium\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col \">Edit Checklist</div>\n              <div className=\"col d-flex align-items-center justify-content-end\">\n                <a className=\"mr-6 personalise-header-link\" tabindex onClick={(e) => { this.gotoPersonaliseQuestions(e) }}>Take our quiz</a>\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1  font-medium done-btn\"\n                    onClick={()=>this.setState({showOverrideModal:true})}\n                  >Save & Close</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* All categries selection body */}\n        {this.props.stateCheckList.map((parentCategories, i) => (\n          <div className=\"mt-6 container\" key={parentCategories.categoryName + \"-\" + i}>\n            <div className=\"checklist-title pb-4 body-text\">\n              {parentCategories.categoryName}\n            </div>\n            <div className=\"row mt-4\">\n              {parentCategories.subCategories.map((subCategories, i) => (\n                <div className=\"col-3 mb-5\" key={subCategories.id}>\n                  <div className={[\"checklist-card pl-2 pr-3 py-3\",\n                    !subCategories.isAdded ? \"add-checklist-bg\" : \"\"].join(' ')\n                  }>\n                    <div className=\"d-flex mb-4 checklist-action-btn\">\n                      <div className=\"text-body font-medium align-self-center\">{subCategories.categoryName}</div>\n                      {subCategories.addedItemsCount <= 0 ?\n                        <div className=\"ml-auto\">\n                          <button className={[\"checklist-add-btn\",\n                            !subCategories.isAdded ? \"checklist-icon-plus\" : \"icon-close\"].join(' ')}\n                            onClick={() => this.props.dispatch(setIsActiveCheckList(subCategories.id, !subCategories.isAdded))} />\n                        </div>\n                        : null\n                      }\n                    </div>\n                    <div className=\"d-flex align-items-center\">\n                      <Counter\n                        counter={subCategories.totalItemsCount}\n                        incrementHandler={() => this.props.dispatch(incrementCheckListQuantity(subCategories.id, 1))}\n                        decrementHandler={() => this.props.dispatch(decrementCheckListQuantity(subCategories.id, 1))}\n                      />\n                      {subCategories.addedItemsCount > 0 ?\n                        <span className=\"ml-auto text-sm item-count-label\">{subCategories.addedItemsCount} added</span>\n                        : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        <Toast />\n      </div>\n\t  <Modal\n        show={this.state.showOverrideModal}\n        size=\"lg\"\n        footer={this.removeConfirmFooter}\n      >\n        <h2 className=\"mb-1\">This will override your personalizd suggestions that came from registry quiz.</h2>\n\t\t    <label className=\"text-sm\">If you do not want to override, click on ‘Do Not Override’, which will take you to your registry. The changes you made in edit checklist will be discarded.</label>\n      </Modal>\n\t  </>\n    );\n  }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport \"./GuestViewHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\n\n\nclass GuestViewHeader extends React.Component {\n\n  state = {\n    showEditRegistryDetail: false,\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateGuestViewRegistry.image.image + ')' }}>\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateGuestViewRegistry.displayName ? this.props.stateGuestViewRegistry.displayName : \"\"}</h2>\n                  </div>\n                  {this.props.stateGuestViewRegistry.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateGuestViewRegistry.greeting}</span>\n                    :\n                    null\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.guestView.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(GuestViewHeader);","import React from 'react';\nimport \"./GuestSortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeGuestSortFilter } from '../../GuestViewAction';\n\nconst GuestSortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.guestView.activeGuestSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeGuestSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GuestSortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport GuestSortFilter from \"../guest-sort-filter/GuestSortFilter\";\nimport './GuestSortSection.scss';\nimport { clearGuestViewFilter, setChildGuestViewFilter, setGuestViewProducts, clearViewGuestPaginationInfo } from \"../../GuestViewAction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass GuestSortSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = async (isParent, childId) => {\n    if (isParent) {\n      await this.props.dispatch(clearGuestViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      await this.props.dispatch(setChildGuestViewFilter(newChildArray))\n    }\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n    await this.props.dispatch(setGuestViewProducts([]))\n    await this.props.setFilterhandler()\n  }\n\n  //Clear filter state\n  clearFilterHandler = async (ev) => {\n    ev.preventDefault()\n    await this.props.dispatch(clearGuestViewFilter())\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n\t\tawait this.props.dispatch(setGuestViewProducts([]))\n    await this.props.setFilterhandler()\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <GuestSortFilter />\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.guestView.product,\n    stateActiveSortFilter: state.guestView.activeGuestSortFilter,\n    stateGuestViewRegistry: state.guestView.guestViewRegistry,\n    stateRegistryInfo: state.guestView.info,\n    stateFilterApplied: state.guestView.guestViewFilterApplied,\n    stateFilterCategory: state.guestView.guestFilterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestSortSection);\n","import React, { useState } from 'react'\nimport \"./GuestFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildGuestViewFilter, clearGuestViewFilter, setGuestViewFilterCategory, setGuestViewProducts, clearViewGuestPaginationInfo } from '../../GuestViewAction';\nimport { FILTERS } from \"utils/constants\";\n\nconst GuestFilter = (props) => {\n\n\tconst dispatch = useDispatch()\n\tlet tempParentFilterId = useSelector(state => state.guestView.guestViewFilterApplied.parentFilter)\n\tlet tempChildFilterIds = useSelector(state => state.guestView.guestViewFilterApplied.childFilter)\n\tlet stateAddedProducts = useSelector(state => state.guestView.product)\n\tconst stateCategoriesInfo = useSelector(state => state.guestView.checkList)\n\tlet stateFilterCategories = useSelector(state => state.guestView.guestFilterCategory)\n\tlet [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n\tconst childChangeHandler = async (childId, parentId) => {\n\n\t\tif (parentId !== tempParentFilterId) {\n\t\t\tif (tempChildFilterIds.length > 0) {\n\t\t\t\tawait dispatch(setChildGuestViewFilter([]))\n\t\t\t}\n\t\t}\n\n\t\tconst childIndex = tempChildFilterIds.indexOf(childId)\n\n\t\tif (childIndex === -1) {\n\t\t\tawait dispatch(setChildGuestViewFilter([...tempChildFilterIds, childId]))\n\t\t} else {\n\t\t\tlet newChildArray = [...tempChildFilterIds]\n\t\t\tnewChildArray.splice(childIndex, 1)\n\t\t\tawait dispatch(setChildGuestViewFilter(newChildArray))\n\t\t}\n\t\tawait dispatch(clearViewGuestPaginationInfo())\n\t\tawait dispatch(setGuestViewProducts([]))\n\t\tprops.setFilterhandler()\n\t}\n\n\tconst clearClickHandler = async () => {\n\t\tawait dispatch(clearGuestViewFilter())\n    await dispatch(clearViewGuestPaginationInfo())\n\t\tawait dispatch(setGuestViewProducts([]))\n    await props.setFilterhandler()\n\t}\n\n\tconst changeParentLimitHandler = (parentFilterID) => {\n\t\tlet limitLength = null\n\t\tlet filterCategory = [...stateFilterCategories].map(parentFilter => {\n\t\t\tif (parentFilter.id === parentFilterID) {\n\t\t\t\tparentFilter.limit = parentFilter.child.length\n\t\t\t\tlimitLength = parentFilter.child.length\n\t\t\t}\n\t\t\treturn parentFilter\n\t\t})\n\t\tdispatch(setGuestViewFilterCategory(filterCategory))\n\n\t\tlet isFound = false\n\t\tlet newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n\t\t\tif (categorylimit.id === parentFilterID) {\n\t\t\t\tcategorylimit.limit = limitLength\n\t\t\t\tisFound = true\n\t\t\t\treturn categorylimit\n\t\t\t}\n\t\t\treturn categorylimit\n\t\t})\n\n\t\tif (!isFound) {\n\t\t\tnewFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n\t\t}\n\t\tsetFilterCategoryLimit(newFilterCateoryLimit)\n\t}\n\n\treturn (\n\t\t<div className=\"view-filter\">\n\t\t\t<div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n\t\t\t\t<h4 className=\"font-weight-bold\">Filters</h4>\n\t\t\t\t{tempChildFilterIds.length !== 0 ?\n\t\t\t\t\t<a tabindex='0' className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t{console.log('filetrs: ',stateFilterCategories)}\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t{[...stateFilterCategories].map(parentFilter => (\n\t\t\t\t\t<div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n\t\t\t\t\t\t{/* Parent filter */}\n\t\t\t\t\t\t<div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n\t\t\t\t\t\t{/* Child filter */}\n\t\t\t\t\t\t{parentFilter.child ? (\n\t\t\t\t\t\t\t<div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n\t\t\t\t\t\t\t\t<div className=\"mt-3 fliter-checkbox-section\">\n\t\t\t\t\t\t\t\t\t{parentFilter.child.map((childFilter, index) => (\n\t\t\t\t\t\t\t\t\t\tchildFilter.count > 0 ?\n\t\t\t\t\t\t\t\t\t\t\tindex < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"checkbox__input mr-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={childFilter.display}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={childFilter.display}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-check\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"radio__label text-sm\">{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t: null\n\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GuestFilter;\n","import React from \"react\";\nimport \"./GuestView.scss\";\nimport { connect } from \"react-redux\";\nimport { updateGuestViewRegistry, getGuestCategories } from \"../../utils/commonFunction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport GuestViewHeader from \"./containers/guest-view-header/GuestViewHeader\";\nimport GuestSortSection from \"./containers/guest-sort/GuestSortSection\";\nimport GuestViewCard from \"./components/GuestViewCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { VIEW_GIFT_PRODUCTS_PER_REQUEST } from \"utils/constants\";\nimport { setGuestViewProducts, setViewGuestPaginationInfo, updateGuestViewInfo, setGuestViewFilterCategory } from './GuestViewAction';\nimport { GET_GUEST_REGISTRY_PRODUCT } from 'api/queries';\nimport { MEDIA_URL_PREFIX } from \"utils/constants\";\nimport { graphQL } from 'api/axios';\nimport GuestFilter from './containers/guest-filter/GuestFilter';\nimport { FILTERS } from \"utils/constants\";\n\n\nclass GuestView extends React.Component {\n\n  state = {\n    isFirstTime: true\n  }\n\n  BABY_GIFTS_URL = \"https://monicaandandy.com/collections/baby-gifts\"\n\n  // Constant variables for filters\n  AVAILABLE = \"available\"\n  RESERVED = \"reserved\"\n  PURCHASED = \"purchased\"\n  PRICE_1 = \"price-1\"\n  PRICE_2 = \"price-2\"\n  PRICE_3 = \"price-3\"\n  MONICA_AND_ANDY = \"monicaandandy\"\n  ELSEWHERE = \"elsewhere\"\n\n  // Updating product count in filter categories\n  updateFilterList = (registryItemsAnalysisCount, categoryData) => {\n\n    let newFilterList = [\n      {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: this.AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: registryItemsAnalysisCount.totalAvailable\n          },\n          {\n            id: this.RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: registryItemsAnalysisCount.totalReserved\n          },\n          {\n            id: this.PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: registryItemsAnalysisCount.totalPurchased\n          }\n        ]\n      },\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        // limit: this.getLimitOfFliter(\"categories\") ? this.getLimitOfFliter(\"categories\") : 6,\n        child: [...this.props.stateCategoriesInfo].filter(category => {\n          let id = category.category.id\n          let count = categoryData[id]\n          if (count > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          let id = category.category.id\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = categoryData[id]\n          return newCategory\n        })\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: this.PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: registryItemsAnalysisCount.under50\n          },\n          {\n            id: this.PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: registryItemsAnalysisCount.between50100\n          },\n          {\n            id: this.PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: registryItemsAnalysisCount.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: this.MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: registryItemsAnalysisCount.maStoreItems\n          },\n          {\n            id: this.ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: registryItemsAnalysisCount.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    this.props.dispatch(setGuestViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  getFiltersApplied = (stateFilterApplied, activeSortFilterState) => {\n    const childFilterArray = [...stateFilterApplied]\n    let filterApplied = {}\n    // For Gift Status\n    if (childFilterArray.includes(this.AVAILABLE)) {\n      filterApplied.isAvailable = true\n    }\n    if (childFilterArray.includes(this.RESERVED)) {\n      filterApplied.isReserved = true\n    }\n    if (childFilterArray.includes(this.PURCHASED)) {\n      filterApplied.isPurchased = true\n    }\n\n    // For Sort\n    if (activeSortFilterState.sortId === 2) {\n      filterApplied.sortBy = 'item__price'\n    } else if (activeSortFilterState.sortId === 3) {\n      filterApplied.sortBy = '-item__price'\n    }\n\n    // For Store\n    let store = []\n    if (childFilterArray.includes(this.MONICA_AND_ANDY)) {\n      store.push(this.MONICA_AND_ANDY)\n    }\n    if (childFilterArray.includes(this.ELSEWHERE)) {\n      store.push(this.ELSEWHERE)\n    }\n    if (store.length) {\n      filterApplied.store = store\n    }\n\n    let lessThanEqual = 0\n    let greaterThanEqual = 0\n    let hasPriceFilter = false\n    // For Price\n    if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_2) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 0\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_2)) {\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      lessThanEqual = 49\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_2) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 50\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1)) {\n      lessThanEqual = 49\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_2)) {\n      greaterThanEqual = 50\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    if (hasPriceFilter) {\n      filterApplied.price_Lte = lessThanEqual\n      filterApplied.price_Gte = greaterThanEqual\n    }\n\n    let categories = []\n    // For categories\n    for (let cat of [...this.props.stateCategoriesInfo]) {\n      if (childFilterArray.includes(cat.category.id)) {\n        categories.push(cat.category.id)\n      }\n    }\n    if (categories.length) {\n      filterApplied.categories = categories\n    }\n\n    return filterApplied\n  }\n\n  updateGuestViewRegistryProduct = (urlSlug) => {\n    let filtersApplied = this.getFiltersApplied(this.props.stateFilterApplied, this.props.activeSortFilterState)\n    let reqData = {\n      query: GET_GUEST_REGISTRY_PRODUCT,\n      variables: {\n        urlSlug: urlSlug,\n        after: this.props.stateGuestViewPagination.endCursor,\n        first: VIEW_GIFT_PRODUCTS_PER_REQUEST,\n        ...filtersApplied\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data.registryAsGuest) {\n\n        // Storing PagenationInfo\n        let pagenationInfo = { ...res.data.data.registryAsGuest.registryItems.pageInfo }\n        this.props.dispatch(setViewGuestPaginationInfo(pagenationInfo))\n\n        // Storing Product of GuestView\n        let responseData = [...res.data.data.registryAsGuest.registryItems.edges].map(item => {\n          let newItemObj = { ...item.node }\n          delete newItemObj.registryitemImage;\n          if (item.node.registryitemImage.length > 0) {\n            newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n          }\n          return newItemObj;\n        })\n        let finalData = responseData.filter(product => product.registryCategories.length > 0)\n        this.props.dispatch(setGuestViewProducts(finalData))\n        this.updateFilterList({ ...res.data.data.registryAsGuest.registryItemsAnalysisCount }, { ...res.data.data.registryAsGuest.categoryData })\n      }\n    }).catch(err => {\n      this.props.dispatch(updateGuestViewInfo({ notFound: true }))\n      if (err.response && err.response.data.errors) {\n        for (const error of err.response.data.errors) {\n          // TODO: Implement toast if necessary\n          console.log(error.message)\n        }\n      }\n    })\n  }\n\n  sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  getSortedFilteredProducts = (guestProducts, activeSortFilterState, filterApplied) => {\n    let sortedProducts = [];\n    if (activeSortFilterState.sortId === 1) {\n      sortedProducts = [...guestProducts]\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedProducts = this.sortByLowToHigh([...guestProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedProducts = this.sortByHighToLow([...guestProducts])\n    }\n\n    return sortedProducts;\n  }\n\n  getdataForFirstTime = async () => {\n    await getGuestCategories(this.props.match.params.registrySlug, this.props.dispatch)\n    await this.props.dispatch(setGuestViewProducts([]))\n    await this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)\n  }\n\n  render() {\n\n    if (this.props.stateGuestViewRegistry.urlSlug !== this.props.match.params.registrySlug) {\n      updateGuestViewRegistry(this.props.match.params.registrySlug, this.props.dispatch)\n    }\n\n    // When registry doesn't exists\n    if (this.props.stateGuestViewRegistry.notFound) {\n      return <h1>Registry not found</h1>;\n    }\n\n    if (this.props.stateGuestViewRegistry.id) {\n      // When registry exists and it is not public\n      if (this.props.stateGuestViewRegistry.isPublic === false) {\n        let registryUsers = [this.props.stateGuestViewRegistry.user.firstName]\n        if (this.props.stateGuestViewRegistry.user.partnerUser) {\n          registryUsers.push(this.props.stateGuestViewRegistry.user.partnerUser.firstName)\n        }\n        return (\n          <div className=\"container mt-17\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n                <h1>{this.props.stateGuestViewRegistry.displayName}</h1>\n                {/*TODO: Display partner name as well below*/}\n                {registryUsers.length === 1 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> is still curating their baby registry</h4> : null}\n                {registryUsers.length === 2 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> and <span className=\"text-capitalize\">{registryUsers[1]}</span> are still curating their baby registry</h4> : null}\n\n                <Button\n                  variant=\"primary\"\n                  className=\"py-1 px-2 mt-3 text-body font-medium\"\n                  onClick={() => window.location.href = this.BABY_GIFTS_URL}\n                >Shop baby Gifts</Button>\n              </div>\n            </div>\n          </div>\n        )\n      } else {\n\n        let filteredSortProducts = this.getSortedFilteredProducts(this.props.stateAddedProducts, this.props.activeSortFilterState, this.props.stateFilterApplied)\n\n        // Fetching product for first time \n        if (this.state.isFirstTime && this.props.stateAddedProducts.length <= 0 && this.props.stateGuestViewRegistry.urlSlug) {\n          this.setState({\n            isFirstTime: false\n          })\n          this.getdataForFirstTime()\n          // this.updateFilterList(this.props.stateAddedProducts)\n        }\n\n        // When registry exists and it is public\n        return (\n          <>\n            <GuestViewHeader />\n            <div className=\"container mt-7\">\n              <div className=\"row\">\n                <div className=\"col-2\">\n                  <GuestFilter setFilterhandler={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)} />\n                </div>\n                <div className=\"col\"></div>\n                <div className=\"col-9\">\n                  <GuestSortSection\n                    productCount={filteredSortProducts.length}\n                    setFilterhandler={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)}\n                  />\n\n                  <div className=\"mt-5\">\n                    <InfiniteScroll\n                      next={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)}\n                      hasMore={this.props.stateGuestViewPagination.hasNextPage}\n                      loader={<h4>Loading...</h4>}\n                      dataLength={this.props.stateAddedProducts.length}\n                      style={{ overflow: \"hidden\" }}\n                    >\n\n                      {filteredSortProducts.length > 0 ?\n                        filteredSortProducts.map((card, index) =>\n                          <GuestViewCard\n                            data={card} key={\"addedCard\" + index}\n                          />) : null}\n                    </InfiniteScroll>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )\n      }\n    }\n\n\n    // Default return\n    return <></>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stateGuestViewRegistry: state.guestView.info,\n    stateAddedProducts: state.guestView.product,\n    activeSortFilterState: state.guestView.activeGuestSortFilter,\n    stateFilterApplied: state.guestView.guestViewFilterApplied.childFilter,\n    stateGuestViewPagination: state.guestView.paginationInfo,\n    stateCategoriesInfo: state.guestView.checkList,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestView);","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport Onboarding from \"../onboarding/Onboarding\";\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {\n  updateRegistryDetail,\n  getOnboardingQuestions,\n  createRegistry,\n  getPersonalizeQuestions,\n  getCategories,\n  getProducts\n} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport {verifyAccessToken} from \"../../api/axios\";\nimport {setLoggingStatus, updateRegistryInfo} from \"../registry/RegistryActions\";\nimport PersonaliseChecklist from \"../personalise-checklist/PersonaliseChecklist\";\nimport EditChecklist from \"modules/personalise-checklist/components/edit-checklist/EditChecklist\";\nimport GuestView from \"../guest-view/GuestView\";\nimport MyRegistry from \"../my-registry/MyRegistry\";\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\n\nclass ViewsContainer extends React.Component {\n\n  state = {\n    displayContent: false,\n    foundRegistry: false\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    const access_token = cookies.get(\"access_token\")\n    if (access_token) {\n      verifyAccessToken({token: access_token}).then(res => {\n        if (res.data.data.customer) {\n          this.props.dispatch(setLoggingStatus(true))\n          if (res.data.data.registries.length > 0) {\n            this.setState({\n              foundRegistry: true\n            })\n            updateRegistryDetail(this.props.dispatch);\n            // TODO: Get products of active registry\n            getCategories(res.data.data.registries[res.data.data.registries.length - 1].id, this.props.dispatch);\n            // TODO: Get categories of active registry\n            getProducts(res.data.data.registries[res.data.data.registries.length - 1].id, this.props.dispatch);\n          } else {\n            this.props.dispatch(updateRegistryInfo({notFound: true}))\n\n            //  Creating New Registry\n            createRegistry(this.props.dispatch)\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n        this.props.dispatch(setLoggingStatus(false))\n        this.props.dispatch(updateRegistryInfo({notFound: true}))\n      }).finally(() => {\n        this.setState({\n          displayContent: true\n        })\n      })\n    } else {\n      this.setState({\n        displayContent: true\n      })\n      this.props.dispatch(updateRegistryInfo({notFound: true}))\n    }\n  }\n\n  render() {\n\n    // if (this.props.stateRouter.location.pathname.search(route.GUEST_VIEW.HOME) !== -1) {\n    //   console.log(route.GUEST_VIEW.HOME+\"/:registryName\")\n    //   return <Redirect to={this.props.stateRouter.location.pathname}/>\n    // }\n\n    // Redirecting user to onboarding is no registry found\n    // if (this.props.stateRouter.location.pathname.search(route.ONBOARDING.HOME) === -1 && !this.props.stateRegistryInfo.id && !this.state.foundRegistry && this.state.displayContent) {\n    //   console.log(this.props.stateRouter.location.pathname)\n    //   return <Redirect to={route.ONBOARDING.HOME}/>\n    // }\n\n    if (this.props.stateOnboardingQuestions.length <= 0) {\n      getOnboardingQuestions(this.props.dispatch)\n    }\n\n    if (this.props.stateRegistryInfo.id && this.props.statePersonaliseQuestions.length <= 0) {\n      getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    }\n\n    return (\n      <>\n        {this.state.displayContent ?\n          <Switch>\n            <Route exact path={route.PERSONALIZE.CHECKLIST} component={EditChecklist}/>\n            <Route exact path={route.PERSONALIZE.HOME} component={PersonaliseChecklist}/>\n            <Route exact path={route.ONBOARDING.HOME + \"/:questionId?\"} component={Onboarding}/>\n            <Route exact path={route.MY_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.VIEW_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.TRACK_GIFTS.HOME} component={RegistryHero}/>\n            <Route exact path={route.GUEST_VIEW.HOME + \"/:registrySlug\"} component={GuestView}/>\n            <Route path={route.REGISTRY.HOME} component={RegistryHero}/>\n            <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n            <Route render={() => <div>DEFAULT</div>}/>\n          </Switch>\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateRouter: state.router,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}