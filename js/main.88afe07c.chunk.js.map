{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","modules/personalise-checklist/PersonaliseCheckListActions.js","modules/personalise-checklist/PersonaliseCheckListReducer.js","modules/onboarding/OnboardingAction.js","modules/onboarding/OnboardingReducer.js","modules/guest-view/GuestViewAction.js","modules/guest-view/GuestViewReducer.js","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/modal-component/ModalComponent.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","api/queries.js","api/config.js","api/axios.js","utils/constants.js","api/mutations.js","utils/commonFunction.js","modules/commons/components/button-component/ButtonComponent.jsx","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/commons/components/circular-progress/CircularProgress.jsx","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/import-registry/category-pill/CategoryPill.jsx","modules/commons/components/add-gift/import-registry/ImportRegistry.jsx","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/commons/components/toast/Toast.jsx","modules/registry-hero/component/todo-widget/TodoWidget.jsx","modules/registry-hero/RegistryHero.jsx","modules/commons/components/questions/option/Option.jsx","modules/onboarding/Onboarding.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/personalise-checklist/components/personalise-header/PersonaliseHeader.jsx","modules/personalise-checklist/components/personalise-footer/PersonaliseFooter.jsx","modules/personalise-checklist/PersonaliseChecklist.jsx","modules/personalise-checklist/components/edit-checklist/EditChecklist.jsx","modules/guest-view/GuestView.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","SET_ANOTHER_STORE_REGISTRY_ITEMS","addRecommendedProduct","params","toggleMustHaveProduct","setRegistryProducts","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","setAnotherStoreRegistryItems","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","anotherStoreRegistry","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","setguestViewRegistry","viewRegistryProducts","activeSortFilter","sortId","sortTitle","featuredSortApplied","guestViewRegistry","REGISTRY_ACTION_TYPES","updateRegistryInfo","setLoggingStatus","info","loggedIn","todo","PERSONALISE_CHECKLIST_ACTION_TYPES","setPersonaliseCheckListItems","addPersonalizeQuestionAnswer","updatePersonalizeQuestionAnswer","newSubCategory","subCategories","subCategory","totalItemsCount","setIsAddedCheckList","isAdded","editedPersonaliseCheckList","questions","answers","ONBOARDING_ACTION_TYPES","addQuestionAnswer","updateQuestionAnswer","GUEST_VIEW_ACTION_TYPES","updateGuestViewInfo","updated","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","personaliseCheckList","PersonaliseCheckListReducer","onboarding","Onboarding","guestView","GuestViewReducer","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","trackGifts","shower","announcements","more","toDos","es","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","TRACK_GIFTS","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","ONBOARDING","PERSONALIZE","CHECKLIST","GUEST_VIEW","MoreOption","props","className","join","iconClass","buttonClass","data","map","option","index","key","onClick","name","ModalComponent","Modal","show","size","titleContent","Header","headerContent","closeModal","Body","children","footer","Footer","Counter","decrementHandler","counter","incrementHandler","CardItem","src","image","originalSrc","alt","href","productLink","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","gql","GET_CATEGORIES","GET_PRODUCTS","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","GET_REGISTRIES","GET_QUESTIONS","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","axiosInstanceNoToken","axiosInstanceNoHeader","graphQLNoToken","post","graphQLNoHeader","graphQL","getAnotherRegistryProducts","axiosInstanceMultipart","graphQLMultipart","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","BOOKMARKLET_SCRIPT","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","REGISTER_USER","SAVE_QUESTION_RESPONSE","LOGIN_USER","SAVE_UPDATED_CHECKLIST","getProducts","registryId","dispatch","query","variables","parseInt","then","res","responseData","registryItems","newItemObj","registryitemImage","imageUrl","catch","err","console","error","message","removeProductFromCartHandler","card","registryItemId","getCategories","toast","errors","log","finalCategories","categories","parentCategory","newSubCategories","cat","updateRegistryDetailState","registryData","currentRegistryInfo","notFound","updateRegistryDetail","registries","e","response","getOnboardingQuestions","isPersonalize","question","followUpQuestions","followUpQuestion","isAnswered","getPersonalizeQuestions","ButtonComponent","React","forwardRef","ref","btnVariantClass","variant","disabled","AddedCard","useDispatch","stateGuestViewRegistry","useSelector","stateRecommendedProducts","stateAddedProducts","stateRegistryInfo","useState","setRecommendedProducts","setShow","modalTitle","categoryName","showRemoveModel","setShowRemoveModel","moreOptionsData","categoryRecommended","Number","jsonObject","JSON","stringify","uniqueSet","Set","Array","from","parse","showRecommendation","removeConfirmFooter","DragHandle","sortableHandle","disabledDrag","draggable","cardId","newRecommended","incrementQuantity","decrementQuantity","existingProduct","sku","storeItemUrl","parseFloat","shopifyItemId","tags","success","CheckList","gotoPersonalize","event","preventDefault","this","t","style","width","percentage","Component","withTranslation","withRouter","CircularProgress","value","text","strokeWidth","styles","buildStyles","textSize","textColor","pathColor","trailColor","CheckListItems","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","addedItemsCount","handleToggleEvent","checkListIconEl","checkListHeader","current","firstChild","classList","toggle","createRef","subListItem","Accordion","Card","Toggle","as","eventKey","Collapse","connect","BookmarkletSection","updateModal","modalBody","modalTitleContent","modalFooterButtons","modalCloseHandler","setState","openAddBookmarkletModal","prevState","addItemToRegistry","TogglePills","activeClass","RadioButton","checked","onChange","changeHandler","textClass","display","count","SelectCategory","setCategories","searchedCategories","setSearchedCategories","currentCategory","selectedCategory","setSelectedCategory","newCategories","newParentCategory","childCategory","displayName","getCategoriesToDisplay","categorySelectBody","saveButton","changeCurrentCategory","searchInputRef","changeLinkRef","placeholder","target","searchMatched","toLowerCase","match","searchCategoryInputChangeHandler","onFocus","contains","add","searchInputFocusHandler","onBlur","remove","searchInputBlurHandler","focus","changeLinkClickHandler","showModal","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","hideProductDetails","setHideProductDetails","showLoading","setshowLoading","productInfo","productImage","productName","howToGift","note","mustHave","groupGift","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","ev","persist","changeProductName","noteChangeHandler","changeNote","selectFileHandler","files","file","includes","reader","FileReader","onload","changeProductImage","result","fileType","fileName","readAsDataURL","alert","submitStoreUrl","keyCode","URL","url","productUrl","changeProductUrl","reqData","item_url","resData","img","newPrice","char","isInteger","getRefinedPrice","onKeyUp","class","role","click","accept","rows","defaultValue","priceChangeHandler","addMyOwn","readOnly","openCategorySelect","toggleGroupGift","togglePurchased","changeHowToGift","ViewRecommend","cardRef","clearModalData","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","checkDataValidity","storeProduct","stateAnotherStoreProduct","storeUrl","storeName","hostname","split","formData","FormData","ADD_REGISTRY_ITEM_MUTATION","operationName","input","items","append","images","dataURItoBlob","status","commonGetProducts","commonGetCategories","anotherStoreItemViewDetail","open","addOnMyOwnClickHandler","newCategory","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","products","height","offsetHeight","CheckBox","Filter","filterData","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","childId","parentId","childIndex","indexOf","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ImportGiftCard","CategoryPill","removeCategory","ImportRegistry","registryUrl","errorMessage","loading","activeCategoryProductIndex","currentRegistryLink","inputHasFocus","inputRef","changeLoadingState","registryUrlChangeHandler","checkUrlAndGetRegistryItems","getAnotherRegistryProductsInfo","registryUrlKeyUpHandler","store_name","store_url","newProducts","finally","openSelectCategoryModal","productIndex","stateAnotherStoreRegistry","setProductCategories","newProductState","removeSelectedCategory","categoryId","changeRegistryUrl","bind","AddGift","categoryList","dataURI","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","openAddGiftModal","importGiftAnotherStoreHandler","importRegistry","validImportRegistryData","getCleanedRegistryItems","cleanedRegistryItems","itemStore","stores","find","newStore","importRegistryClickHandler","jsonGraphQL","addRegistryItems","FilterSection","deleteChipHandler","isParent","stateFilterApplied","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","productCount","stateFilteredProducts","Everything","updateFilterList","newFilterList","isPurchased","isReserved","productId","mustHaveValue","setAllRecommendation","a","recommendedCategory","parentCat","recommendedCat","productType","rData","getSortedProducts","stateCategories","allProducts","added","total","recommendations","childFilterArray","addedRecommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","stateProducts","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","useEffect","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","modalFooter","registryImages","defaultImages","fileChangeHandler","imageId","updateRegistry","closeCoverImagePicker","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","siteHostName","location","host","urlSlug","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","setRegistryUrl","registryError","setRegistryError","inputContainerRef","changeRegistryVisibility","newRegistry","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","handleGuestView","handleDisableViewGuest","COVER_PIC_OPTIONS","backgroundImage","activeOptionClass","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","stateViewRegistryProducts","stateActiveSortFilter","ViewRegistryHome","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","sortByMustHave","productList","sort","b","sortByFeatured","isFeatured","sortByLowToHigh","sortByHighToLow","productData","filteredSortProducts","sortedProducts","sortedData","viewRegistryProductsId","addProduct","getSortedFilteredProducts","onSortEnd","oldIndex","newIndex","itemsOldPosition","arrayMove","position","oldPosition","updateViewRegistryPosition","helperClass","axis","lockAxis","useDragHandle","ViewRegistry","Toast","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","closeButton","parentElement","dismiss","TodoWidget","performTodoAction","stateTodo","RegistryHero","useTranslation","RegistryHeroData","to","babyArrival","Option","LOGIN_TITLE","SIGNUP_TITLE","PARTNER_TITLE","RADIO","PARTNER","login","toastMessage","submitAllAnswers","stateOnboardingAnswers","answer","optionText","addRegistryQuestionOption","clearToastMessage","setToastMessage","gotoNextQuestion","nextQuestionId","returnNext","idToMatch","stateOnboardingQuestions","ques","stateLoggedIn","redirectionUrl","setQuestionBasedOnId","questionId","finalQuestion","foundQuestion","parentQuestion","addAnswerToState","answerRadioQuestion","watchNextBtn","nextBtnState","answerDataQuestion","textInputTypeChangeHandler","inputRefs","enableBtn","changeLoginState","signInClickHandler","emailRef","passwordRef","email","password","loginUser","set","token","registryRes","getSignInContent","signUpClickHandler","nameRef","registerUser","getSignUpContent","getPartnerContent","undefined","onpopstate","pathname","search","stateRouter","answerInputType","setTimeout","staticQuestionTitle","helpText","fields","field","content","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","customer","redirectVerifyToken","VerifyToken","verifyToken","PersonaliseFooter","prevQuestion","nextQuestion","PersonaliseChecklist","prevQuestionId","activeQuestionId","CHECKBOX","calulatePercentage","answerQuestionCount","totalQuestionCount","Math","ceil","statePersonaliseQuestions","isActiveIdPresent","gotoPrevQuestion","popPrevQuestionId","pop","statePersonaliseAnswers","submitQuestionAnswer","answerCheckboxQuestion","checkBoxRef","getAllCategories","finalCheckList","finalSubCategory","tempSubCategory","subProductTypes","subProductType","tempCategory","closeAndSavePersonaliseCheckList","finalCheckListData","tempStateCheckList","tempData","itemCountData","gotoPersonaliseQuestions","parentCategories","GuestView","BABY_GIFTS_URL","registrySlug","registryAsGuest","registryUsers","user","firstName","partnerUser","ViewsContainer","displayContent","access_token","EditChecklist","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.88afe07c.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\",\n\n  // ANOTHER STORE REGISTRY\n  SET_ANOTHER_STORE_REGISTRY_ITEMS: \"SET_ANOTHER_STORE_REGISTRY_ITEMS\"\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}\n\n//Another store Registry Items\nexport const setAnotherStoreRegistryItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS,\n\t\tpayload: params\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreRegistry = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct,\n  anotherStoreRegistry\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_FEATURED_SORT_APPLIED: \"IS_FEATURED_SORT_APPLIED\",\n  IS_GUEST_VIEW: \"IS_GUEST_VIEW\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setFeaturedSortApplied = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_FEATURED_SORT_APPLIED,\n    payload: params\n  }\n}\n\nexport const setguestViewRegistry = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW,\n    payload: params\n  }\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst featuredSortApplied = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_FEATURED_SORT_APPLIED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst guestViewRegistry = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    featuredSortApplied,\n    guestViewRegistry\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\",\n  SET_LOGGING_STATUS: \"SET_LOGGING_STATUS\",\n  SET_TODO : \"SET_TODO\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}\n\nexport const setLoggingStatus = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS,\n    payload: params\n  }\n}\n\nexport const setTodo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_TODO,\n    payload: params\n  }\n}\n","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst todo = (state = defaultData.todo, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_TODO:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo,\n  loggedIn,\n  todo\n});","export const PERSONALISE_CHECKLIST_ACTION_TYPES = {\n\n\tGET_ALL_CHECKLIST_ITEMS: \"GET_ALL_CHECKLIST_ITEMS\",\n\tINCREMENT_CHECKLIST_QUANTITY: \"INCREMENT_CHECKLIST_QUANTITY\",\n\tDECREMENT_CHECKLIST_QUANTITY: \"DECREMENT_CHECKLIST_QUANTITY\",\n\tCHECKLIST_ADDED: \"CHECKLIST_ADDED\",\n\n\tPERSONALISE_ADD_QUESTION: \"PERSONALISE_ADD_QUESTION\",\n    PERSONALISE_ADD_ANSWER: \"PERSONALISE_ADD_ANSWER\",\n    PERSONALISE_UPDATE_ANSWER: \"PERSONALISE_UPDATE_ANSWER\"\n}\n\nexport const incrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\n\nexport const setPersonaliseCheckListItems = params => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\nexport const setIsActiveCheckList = (id, isAdded) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED,\n\t\tpayload: { id, isAdded }\n\t}\n}\n\nexport const addPersonalizeQuestion = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION,\n\t  payload: params\n\t}\n  }\n  \n  export const addPersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER,\n\t  payload: params\n\t}\n  }\n  \n  export const updatePersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER,\n\t  payload: params\n\t}\n  }","import {PERSONALISE_CHECKLIST_ACTION_TYPES} from \"./PersonaliseCheckListActions\";\nimport {combineReducers} from \"redux\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.totalItemsCount += quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id && subCategory.totalItemsCount > 1) {\n        subCategory.totalItemsCount -= quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst setIsAddedCheckList = (state, payload) => {\n  let {\n    id,\n    isAdded\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.isAdded = isAdded;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\n// Reducers\nconst editedPersonaliseCheckList = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS:\n      return [...action.payload];\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n      case PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED:\n        return setIsAddedCheckList(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION:\n      return [...state, ...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER:\n      return [...state, action.payload]\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\n\n\nexport default combineReducers({\n  editedPersonaliseCheckList,\n  questions,\n  answers\n})","export const ONBOARDING_ACTION_TYPES = {\n  ADD_QUESTION: \"ADD_QUESTION\",\n  ADD_ANSWER: \"ADD_ANSWER\",\n  UPDATE_ANSWER: \"UPDATE_ANSWER\"\n}\n\nexport const addOnboardingQuestion = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_QUESTION,\n    payload: params\n  }\n}\n\nexport const addQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_ANSWER,\n    payload: params\n  }\n}\n\nexport const updateQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.UPDATE_ANSWER,\n    payload: params\n  }\n}","import {ONBOARDING_ACTION_TYPES} from \"./OnboardingAction\";\nimport {combineReducers} from \"redux\";\n\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_QUESTION:\n      return [...state, ...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_ANSWER:\n      return [...state, action.payload]\n    case ONBOARDING_ACTION_TYPES.UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  questions,\n  answers\n});","export const GUEST_VIEW_ACTION_TYPES = {\n  UPDATE_GUEST_VIEW_INFO: \"UPDATE_GUEST_VIEW_INFO\"\n}\n\nexport const updateGuestViewInfo = (params) => {\n  return {\n    type: GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO,\n    payload: params\n  }\n}\n","import {GUEST_VIEW_ACTION_TYPES} from \"./GuestViewAction\";\nimport {combineReducers} from \"redux\";\n\nconst guestViewRegistry = (state = {updated:false}, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: guestViewRegistry\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\nimport PersonaliseCheckListReducer from \"../modules/personalise-checklist/PersonaliseCheckListReducer\";\nimport Onboarding from \"../modules/onboarding/OnboardingReducer\";\nimport GuestViewReducer from \"../modules/guest-view/GuestViewReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  personaliseCheckList: PersonaliseCheckListReducer,\n  onboarding: Onboarding,\n  guestView: GuestViewReducer,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n  LOGIN: {\n    VERIFY_TOKEN: APP_HOME_ROUTE + \"/~/verify-token/:token\"\n  },\n  REGISTRY: {\n    HOME: APP_HOME_ROUTE\n  },\n\n  MY_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/~/home\",\n    GIFTS_ADDED: APP_HOME_ROUTE + \"/~/gifts-added\",\n    GIFT_TO_ADD: APP_HOME_ROUTE + \"/~/gifts-to-add\",\n    GIFT_VIEW: APP_HOME_ROUTE + \"/~/guest-view\",\n    TRACK_GIFTS: APP_HOME_ROUTE + \"/~/track_gifts\",\n    SHOWER: APP_HOME_ROUTE + \"/~/shower\",\n    ANNOUNCEMENTS: APP_HOME_ROUTE + \"/~/announcements\",\n    MORE: APP_HOME_ROUTE + \"/~/more\",\n    TO_DOS: APP_HOME_ROUTE + \"/~/to_dos\"\n  },\n\n  VIEW_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/~/view-registry\"\n  },\n\n  ONBOARDING: {\n    HOME: APP_HOME_ROUTE + \"/~/onboarding\"\n  },\n\n  PERSONALIZE:{\n    HOME: APP_HOME_ROUTE + \"/~/personalize/quiz\",\n    CHECKLIST: APP_HOME_ROUTE + \"/~/personalize/checklist\"\n  },\n\n  GUEST_VIEW: {\n    HOME: APP_HOME_ROUTE+\"\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")} />\n      <div className={[\"more-option-dropdown\"].join(\" \")}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;\n","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      {props.title || props.titleContent ?\n        <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n          <div>\n            <div className=\"d-flex justify-content-between\">\n              <h1>{props.title}</h1>\n              <div className=\"d-flex\">\n                {props.headerContent ? props.headerContent : null}\n                <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n              </div>\n            </div>\n          </div>\n\n          {/* OPTIONAL CONTENT IN TITLE PORTION */}\n          {props.titleContent ? props.titleContent : null}\n\n        </Modal.Header> : null}\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n        {/* MODAL CONTENT GOES HERE */}\n        {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image text-center\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image?.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink}>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import {gql} from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  categories(registryId:$registryId){\n    id,\n    categoryName,\n    isRoot\n    subCategories{\n      id,\n      categoryName,\n      addedItemsCount,\n      totalItemsCount,\n      isParent,\n      subProductTypes{\n        id,\n        categoryName,\n        addedItemsCount,\n        totalItemsCount\n      }\n    }\n    addedItemsCount,\n    totalItemsCount\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems($registryId:Int!){\n    registryItems(registryId:$registryId){\n      edges{\n        node{\n          id,\n          registryitemImage{\n            image\n          }\n          isGroupGift,\n          isReserved,\n          quantity,\n          mostWanted,\n          featuredOrder,\n          orderNo,\n          giftMessage,\n          isReserved,\n          isAmountReceived,\n          isPurchased,\n          item{\n            id,\n            title,\n            shopifyItemId,\n            note,\n            sku,\n            price,\n            imageUrl,\n            category {\n              id,\n              categoryName,\n              isRoot,\n\n            }\n          }\n        }\n      }\n    }\n  }\n\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:Int!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      category:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nconst GET_QUESTIONS = `\n  query getQuestions($isPersonalize: Boolean!){\n  questions(isPersonalize: $isPersonalize){\n    id,\n    title,\n    answerInputType,\n    fields,\n    toastMessage,\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          options{\n            id\n            value\n            toastMessage\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY = `\n  query getGuestRegistry($urlSlug: String!){\n    registryAsGuest(urlSlug: $urlSlug){\n      id,\n      name,\n      displayName,\n      isPublic,\n      urlSlug,\n      user {\n        firstName,\n        partnerUser {\n          firstName\n        }\n      },\n      registryItems{\n        edges{\n          node{\n            id\n          }\n        }\n      }\n    }\n  }\n`\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY\n};\n\n// Example to use queries added in home.jsx","const backendId = \"https://3.12.191.197\";\n// const backendId = \"http://localhost:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport { Cookies } from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: { \"Authorization\": cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\" }\n});\n\nconst axiosInstanceNoToken = axios.create({\n  baseURL: apiURL\n});\n\nconst axiosInstanceNoHeader = axios.create({\n  baseURL: apiURL\n});\n\nexport function graphQLNoToken(data) {\n  return axiosInstanceNoToken.post(\"/graphql\", data);\n}\n\nexport function graphQLNoHeader(data, options) {\n  return axiosInstanceNoHeader.post(\"/graphql\", data, options);\n}\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nexport function verifyAccessToken(data) {\n  return axiosInstanceNoToken.post(\"/user/verify/token\", data);\n}\n\nexport function getAnotherRegistryProducts(data) {\n  return axiosInstance.post(\"/registry/import\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n    VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL+\"/media/\"\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'http%3A%2F%2Flocalhost%3A5500%2Fbaby_registry_bookmarklet%2Fbookmarklet.html%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    }\n  }\n}\n`\n\nconst REGISTER_USER = `\nmutation register_user($name: String!, $email: String!, $password: String!){\n  registerUser(registerInput:{\n      firstName:$name,\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\nconst SAVE_QUESTION_RESPONSE = `\nmutation addRegistryQuestionOption($response: [RegistryQuestionOptionInput]!){\n  addRegistryQuestionOption(questionOptionInput: $response){\n    message\n  }\n}\n`\n\nconst SAVE_REGISTRY_DATA = `\nmutation saveRegistryData($registryData:RegistryInput!, $registryItems:[StoreInput]){\n  importRegistry(registryData: $registryData, registryItems: $registryItems) {\n    message\n  }\n}\n`\n\nconst LOGIN_USER = `\nmutation login_user($email: String!, $password: String!){\n  loginUser(loginInput:{\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\n\nconst SAVE_UPDATED_CHECKLIST = `\nmutation addDesiredChecklistItemCount($registryId:Int!, $itemCountData:[DesiredItemCountInput]!){\n  addDesiredChecklistItemCount(registryId: $registryId, itemCountData: $itemCountData){\n    message\n  }\n}\n`\n\nexport {\n  TOGGLE_MUST_HAVE,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY,\n  UPDATE_VIEW_REGISTRY_POISTION,\n  UPDATE_REGISTRY_URL,\n  SAVE_REGISTRY_DATA,\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  SAVE_UPDATED_CHECKLIST\n};\n","import React from \"react\";\nimport {\n  GET_PRODUCTS,\n  REMOVE_REGISTRY_ITEM,\n  GET_CATEGORIES,\n  GET_REGISTRIES,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY\n} from \"../api/queries\";\nimport {graphQL, graphQLNoToken} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX} from \"./constants\";\nimport {\n  setRegistryProducts,\n  setCheckListItems,\n  toggleMustHaveProduct as toggleMustHaveProductAction\n} from \"../modules/my-registry/MyRegistryActions\";\nimport {TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION} from \"../api/mutations\";\nimport {updateRegistryInfo} from \"../modules/registry/RegistryActions\";\nimport {setViewRegistryProducts} from \"../modules/view-registry/ViewRegistryActions\";\nimport {addOnboardingQuestion} from \"../modules/onboarding/OnboardingAction\";\nimport {addPersonalizeQuestion} from \"../modules/personalise-checklist/PersonaliseCheckListActions\";\nimport {updateGuestViewInfo} from \"../modules/guest-view/GuestViewAction\";\nimport {toast} from \"react-toastify\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    let responseData = res.data.data.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = {...item.node}\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n    dispatch(setRegistryProducts(responseData))\n\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch,) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n\n      toast.error((\n        <p><b>{card.item.title}</b> removed from your registry!</p>\n      ))\n\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n    toast.error((\n      <p>Some error occurred.</p>\n    ))\n  })\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n      let parentCategories = res.data.data.categories.filter(category => category.totalItemsCount > 0)\n      let finalCategories = []\n      finalCategories = parentCategories.map(parentCategory => {\n        let subCategory = parentCategory.subCategories\n        delete parentCategory.subCategories\n        let newSubCategories = subCategory.filter(cat => cat.totalItemsCount > 0)\n        parentCategory['subCategories'] = newSubCategories\n        return parentCategory\n      })\n      if (finalCategories.length === 0) {\n        dispatch(setCheckListItems(res.data.data.categories))\n      } else {\n        dispatch(setCheckListItems(finalCategories))\n      }\n    }\n  })\n}\n\nexport const updateRegistryDetailState = (dispatch, registryData) => {\n  let currentRegistryInfo = null;\n\n  currentRegistryInfo = registryData[0].node;\n  if (currentRegistryInfo.image) {\n    currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n  }\n\n  if (currentRegistryInfo) {\n    dispatch(updateRegistryInfo({...currentRegistryInfo}))\n  } else {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.log(\"No registry found!\");\n  }\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        updateRegistryDetailState(dispatch, res.data.data.registries.edges)\n      } else {\n        dispatch(updateRegistryInfo({notFound: true}))\n      }\n    } catch (e) {\n      dispatch(updateRegistryInfo({notFound: true}))\n      console.error(e)\n    }\n  }).catch(err => {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.error(err.response ? err.response.data : null)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, oldPosition, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      dispatch(setViewRegistryProducts(oldPosition))\n      toast.error(\"Somerhing went wrong while re-arranging Products\")\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    }\n\n  }).catch(err => {\n    dispatch(setViewRegistryProducts(oldPosition))\n    console.error(err.message)\n  })\n}\n\nexport const addProductHandler = (card, stateAddedProducts, stateRegistryInfo, dispatch) => {\n  let existingProduct = stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n  const registryId = parseInt(stateRegistryInfo.id)\n  if (existingProduct.length === 0) {\n    const title = card.title\n    const category = card.category.id\n    const storeItemUrl = card.onlineStoreUrl\n    const sku = card.variants.edges[0].node.sku\n    const price = parseFloat(card.variants.edges[0].node.price)\n    const quantity = parseInt(card.quantity)\n    const shopifyItemId = card.id\n    const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      variables: {\n        registryId: registryId,\n        title: title,\n        category: category,\n        tags: [],\n        storeItemUrl: storeItemUrl ? storeItemUrl : '',\n        sku: sku,\n        price: price,\n        quantity: quantity,\n        shopifyItemId: shopifyItemId,\n        imageUrl: imageUrl,\n      }\n    }\n    graphQL(data).then(_ => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  } else {\n    let data = {\n      query: UPDATE_REGISTRY_ITEM,\n      variables: {\n        registryItemId: existingProduct[0].id,\n        quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n      }\n    }\n    graphQL(data).then(res => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  }\n}\n\nexport const getOnboardingQuestions = (dispatch) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: false\n    }\n  }\n\n  graphQLNoToken(reqData).then(res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addOnboardingQuestion(questions))\n    }\n  }).catch(err => {\n    // toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\n\nexport const getPersonalizeQuestions = (dispatch) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: true\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addPersonalizeQuestion(questions))\n    }\n  }).catch(err => {\n    toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\nexport const updateGuestViewRegistry = (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_REGISTRY,\n    variables: {\n      urlSlug: urlSlug\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.registryAsGuest) {\n      dispatch(updateGuestViewInfo(res.data.data.registryAsGuest))\n    }\n  }).catch(err => {\n    dispatch(updateGuestViewInfo({notFound: true}))\n    if (err.response && err.response.data.errors) {\n      for (const error of err.response.data.errors) {\n        // TODO: Implement toast if necessary\n        console.log(error.message)\n      }\n    }\n  })\n}","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = React.forwardRef((props, ref) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n    ref={ref}\n    disabled={props.disabled ? props.disabled : false}\n  >{props.children}</button>\n})\n\nexport default ButtonComponent;","import React, { useState } from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport CardItem from \"../card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../button-component/ButtonComponent\";\n\nconst AddedCard = (props) => {\n\n  const dispatch = useDispatch();\n  let stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRecommendedProducts = useSelector(state => state.myRegistry.recommendedProducts)\n  const stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const [recommendedProducts, setRecommendedProducts] = useState([])\n  const [show, setShow] = useState(false);\n  const modalTitle = `Recommended ${props.data.item.category.categoryName}`\n  const [showRemoveModel, setShowRemoveModel] = useState(false);\n\n  const showRecommendation = (category) => {\n    // Fetching all recommendations for that particular product category\n    let categoryRecommended = [...stateRecommendedProducts.filter(product => Number(category.id) === Number(product.category.id))]\n\n    // Removing duplicate products if found any\n    let jsonObject = categoryRecommended.map(JSON.stringify);\n    let uniqueSet = new Set(jsonObject);\n    categoryRecommended = Array.from(uniqueSet).map(JSON.parse);\n\n    setRecommendedProducts(categoryRecommended.map(product => {\n      // Resetting recommended product quantity\n      product.quantity = 1;\n      return product;\n    }));\n\n    setShow(true);\n  }\n\n  const moreOptionsData = [\n    {\n      name: \"View Recommendations\",\n      action: () => showRecommendation(props.data.item.category)\n    },\n    {\n      name: \"Remove\",\n      action: () => setShowRemoveModel(true)\n    }\n  ]\n\n  const removeConfirmFooter = (\n    <>\n      <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => setShowRemoveModel(false)}>Do not remove</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={() => {props.removeProductFromCartHandler();setShowRemoveModel(false);}}>Remove</Button>\n    </>\n  )\n\n  // Incrementing quantity of local recommended product\n  const incrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        product.quantity += quantity;\n      }\n      newRecommended.push(product)\n    }\n    setRecommendedProducts(newRecommended)\n  }\n\n  // Decrementing quantity of local recommended product\n  const decrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    let updated = false;\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        if (product.quantity - quantity <= 0) {\n          break;\n        } else {\n          product.quantity -= quantity;\n          updated = true;\n        }\n      }\n      newRecommended.push(product)\n    }\n\n    if (updated) {\n      setRecommendedProducts(newRecommended)\n    }\n  }\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i className={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", props.disabledDrag ? \"disabled-drag\" : \"\"].join(\" \")}>\n    <div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n      <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n    </div>\n  </i>);\n\n  return (\n    <>\n      <div className=\"added-card py-5\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.item.title} />\n          </div>\n          <div className=\"col\">\n            <div className=\"text-sm category\">{props.data.item.category.categoryName}</div>\n            <h2 className=\"\">{props.data.item.title}</h2>\n            <div className=\"d-flex mt-2\">\n              <div className=\"\">${props.data.item.price}</div>\n              {/* TODO: Add Strikeout price dynamic */}\n              <div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>\n              {props.data.quantity > 1 ?\n                <div className=\"ml-4 text-body d-flex\">\n                  Qty:{props.data.quantity}\n                  <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n                </div> : <></>}\n            </div>\n          </div>\n          <div className={[\n            props.draggable ? \"col-3\" : \"col-2\",\n          ].join(\" \")}\n          >\n            <div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n              {!stateGuestViewRegistry ?\n                <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\" />\n                : <></>}\n              {!stateGuestViewRegistry ?\n                <button\n                  className={[\n                    \"icon\",\n                    \"ml-4\",\n                    props.data.mostWanted ? \"heart-fill\" : \"heart\",\n                  ].join(\" \")}\n                  onClick={props.toggleMustHave}\n                /> :\n                props.data.mostWanted ? <button className=\"icon ml-4 heart-fill\" /> : <></>\n              }\n              {/* TODO: Add icon/rearrange icon */}\n              {props.draggable && !stateGuestViewRegistry ?\n                <DragHandle /> : <></>}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal\n        show={show}\n        closeModal={() => setShow(false)}\n        title={modalTitle}\n        size=\"xl\"\n      >\n        <div className=\"position-relative added-card-recommended\">\n          <div className=\"row category-recommended-products\">\n            {recommendedProducts.map((card, index) => (\n              <div className=\"col-4 mb-5\" key={\"CardItem-\" + index}>\n                <CardItem\n                  data={card}\n                  incrementQuantityHandler={() => incrementQuantity(card.id, 1)}\n                  decrementQuantityHandler={() => decrementQuantity(card.id, 1)}\n                  addProductHandler={() => addProductHandler(card, stateAddedProducts, stateRegistryInfo, dispatch)}\n                />\n              </div>\n            ))}\n            {recommendedProducts.length <= 0 ? <div className=\"col text-center py-4\"><h4>No recommendation found</h4></div> : null}\n          </div>\n          {recommendedProducts.length>0 ?<div className=\"added-card-recommends-bottom-gradient\" /> : null}\n        </div>\n      </Modal>\n      <Modal\n        show={showRemoveModel}\n        size=\"md\"\n        footer={removeConfirmFooter}\n      >\n        <h2>Do you want to remove {props.data.item.title}? </h2>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddedCard","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\n\nclass CheckList extends React.Component {\n\n    gotoPersonalize = (event) => {\n        event.preventDefault();\n        //TODO: if condition\n        this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n    }\n\n    render() {\n        return (\n            <div className=\"mb-6\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <a href=\"#\" className=\"ml-2 text-sm checklist-personalize\" onClick={(e) => this.gotoPersonalize(e)}>{this.props.t(\"checkList.personalize\")}</a>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\">\n                          <div className=\"check-list-progress mw-100\" style={{width: `${this.props.percentage}%`}}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nexport default withTranslation()(withRouter(CheckList));","import React from \"react\";\nimport {buildStyles, CircularProgressbar} from \"react-circular-progressbar\";\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst CircularProgress = (props) => {\n  return (\n    <CircularProgressbar\n      value={props.percentage}\n      text={props.text}\n      strokeWidth={10}\n      className={props.className}\n      styles={buildStyles({\n        textSize: '40px',\n        textColor: '#000',\n        pathColor: '#afe3e4',\n        trailColor: '#ededee'\n      })}/>\n  )\n}\n\nexport default CircularProgress;","import React, {Component} from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport {connect} from 'react-redux';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({id, categoryName, addedItemsCount, totalItemsCount}) => {\n      return (\n        <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n             onClick={() => this.scrollToCategory(categoryName)}>\n          <p\n            className=\"mb-0 card-body-header text-sm\">{categoryName} {totalItemsCount > 1 ? `(${totalItemsCount})` : null}</p>\n          <div className='ml-auto mb-0 align-self-end card-progress'>\n            {(addedItemsCount >= totalItemsCount) && (totalItemsCount !== 0)?\n              <div className=\"icon-done\"/> :\n              (totalItemsCount > 1 && addedItemsCount > 0 ?\n                <CircularProgress\n                  percentage={(addedItemsCount / totalItemsCount) * 100}\n                  text={addedItemsCount}\n                  className=\"checklist-circular-progress\"\n                />\n                : null)}\n          </div>\n        </div>\n      )\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        <Card>\n          <Accordion.Toggle\n            onClick={this.handleToggleEvent}\n            as={Card.Header}\n            id={this.props.item.categoryName}\n            eventKey={this.props.item.categoryName}\n          >\n            <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n              <span className=\"mr-3 checklist-icon-arrow closed\"/>\n              <p className=\"mb-0 body-text\">{this.props.item.categoryName}</p>\n              <div className='ml-auto mb-auto align-self-end card-progress'>\n                {this.props.item.addedItemsCount}/{this.props.item.totalItemsCount}\n              </div>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n            <Card.Body>\n              {subListItem}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React, {useState} from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {GET_CATEGORIES} from \"../../../../api/queries\";\nimport {graphQL} from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {useSelector} from \"react-redux\";\n\n// TODO: Change this Component to handle multiple categories\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [searchedCategories, setSearchedCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(props.currentCategory ? props.currentCategory : {});\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.categories) {\n        let newCategories = res.data.data.categories.map(parentCategory => {\n          let newParentCategory = {...parentCategory}\n          newParentCategory['displayName'] = parentCategory.categoryName;\n          newParentCategory.subCategories = parentCategory.subCategories.map(childCategory => (\n            {\n              ...childCategory,\n              displayName: parentCategory.categoryName + \" : \" + childCategory.categoryName\n            }\n          ))\n          return newParentCategory;\n        })\n        setCategories(newCategories);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    if (selectedCategory && selectedCategory.id) {\n      props.changeCurrentCategory(selectedCategory)\n    }\n    props.closeModal(false);\n  }\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const getCategoriesToDisplay = (cat) => {\n    return (\n      <div className=\"col category-columns\">\n        {cat.map(category => {\n          return (\n            <div className=\"mb-6 category-column\" key={\"select-\" + category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              {category.subCategories ?\n                category.subCategories.map(subCategory =>\n                  <p\n                    key={\"select-child-\" + subCategory.categoryName}\n                    className={[\"px-2 py-1 child-category\", (selectedCategory && selectedCategory.id) && (selectedCategory.id === subCategory.id) ? \"selected-category\" : \"\"].join(\" \")}\n                    onClick={() => setSelectedCategory(subCategory)}\n                  >{subCategory.categoryName}</p>)\n                : null}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      {searchedCategories.length > 0 ? getCategoriesToDisplay(searchedCategories) : getCategoriesToDisplay(categories)}\n    </div>\n  )\n\n  const saveButton = (\n    <Button\n      variant=\"primary\"\n      className=\"font-medium p-1\"\n      onClick={saveSelectedCategory}\n    >Done</Button>\n  )\n\n  // Search Category Section\n  const searchInputRef = React.createRef()\n  const changeLinkRef = React.createRef()\n\n  const focusSearchCategoryInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }\n\n  const searchInputFocusHandler = (e) => {\n    if (!e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.add(\"search-category-input-focus\");\n    }\n  }\n\n  const searchInputBlurHandler = (e) => {\n    if (e.target.value.length > 0) {\n      return\n    }\n\n    if (e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.remove(\"search-category-input-focus\");\n    }\n  }\n\n  const searchCategoryInputChangeHandler = (e) => {\n    if (e.target.value.length > 0) {\n      changeLinkRef.current.style.display = \"block\";\n\n      //  Searching through the category\n      let finalCategories = []\n      for (const parentCategory of categories) {\n        let newParentCategory = {...parentCategory}\n        newParentCategory.subCategories = []\n        let searchMatched = false\n\n        for (const subCategory of parentCategory.subCategories) {\n          if (subCategory.categoryName.toLowerCase().match(e.target.value.toLowerCase())) {\n            searchMatched = true\n            newParentCategory.subCategories.push(subCategory)\n          }\n        }\n\n        if (searchMatched) {\n          finalCategories.push(newParentCategory)\n          searchMatched = false\n        }\n      }\n      setSearchedCategories(finalCategories)\n    } else {\n      changeLinkRef.current.style.display = \"none\";\n    }\n  }\n\n  const changeLinkClickHandler = (e) => {\n    e.preventDefault();\n    if (searchInputRef.current) {\n      if (searchInputRef.current.value.length > 0) {\n        searchInputRef.current.value = \"\"\n      }\n      changeLinkRef.current.style.display = \"none\";\n      searchInputRef.current.focus()\n      setSearchedCategories([])\n    }\n  }\n\n  const headerContent = (\n    <div className=\"align-self-center d-flex position-relative select-category-search-section mr-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Search category...\"\n        className=\"search-category-input pl-5 py-1 pr-1 text-body\"\n        ref={searchInputRef}\n        onChange={(e) => searchCategoryInputChangeHandler(e)}\n        onFocus={(e) => searchInputFocusHandler(e)}\n        onBlur={(e) => searchInputBlurHandler(e)}\n      />\n      <i className=\"icon-search search-category-icon\" onClick={focusSearchCategoryInput}/>\n      <a\n        className=\"search-category-clear-link text-sm font-medium\"\n        href=\"#\"\n        onClick={(e) => changeLinkClickHandler(e)}\n        ref={changeLinkRef}>Clear all</a>\n    </div>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={saveButton}\n      headerContent={headerContent}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React, {createRef, useState} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport {setAnotherStoreProductInfo} from \"modules/my-registry/MyRegistryActions\";\nimport {getScrapedProduct} from \"api/axios\";\nimport {toast} from 'react-toastify';\n\nconst AddGiftAnotherStore = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n  const [hideProductDetails, setHideProductDetails] = useState(true);\n  const [showLoading, setshowLoading] = useState(false);\n\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = {...productInfo};\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = {...productInfo};\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = {...productInfo};\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = {...productInfo};\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = {...productInfo};\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = {...productInfo};\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = {...productInfo};\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = {...productInfo};\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = {...productInfo};\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = {...productInfo};\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = {...productInfo};\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          alert(\"File size exceeds the limit\");\n        }\n      } else {\n        alert(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      try {\n        new URL(ev.target.value);\n      } catch {\n        toast.error(\"Invalid Store Url\")\n        return;\n      }\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      setshowLoading(true);\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = {...productInfo};\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n          setshowLoading(false);\n          setHideProductDetails(false);\n        }\n      }).catch(err => {\n        setshowLoading(false);\n        try {\n          new URL(productInfo.productUrl);\n        } catch {\n          toast.error(\"Invalid Store Url\")\n          return false;\n        }\n      })\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                     onKeyUp={(ev) => submitStoreUrl(ev)}\n                     placeholder=\"Paste a product link that you want to add in your Monica and Andy Registry\"/>\n              {/* <a className=\"text-sm\" href=\"#\">Change</a> */}\n            </div>\n          </div>\n\n          <div className={[\"row mt-4\", hideProductDetails ? \"\" : \"pt-6\"].join(\" \")}>\n            {hideProductDetails ? showLoading ?\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                  <h4 className=\"hide-product-details m-auto\">Please wait while we fetch the product details</h4>\n                </div>\n              </div>\n              :\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <h4 className=\"hide-product-details m-auto\">Please paste product link above to view details here</h4>\n                </div>\n              </div>\n              :\n              <>\n                <div className=\"col-5 add-gift-image-select\">\n                  <div className=\"mr-3\">\n                    {productImage.value ?\n                      <img\n                        src={productImage.value}\n                        alt=\"Product Image\"\n                      />\n                      : null}\n\n                    <i className=\"icon-preview p-1\" onClick={() => {\n                      imageInput.current.click()\n                    }}/>\n                    {/* TODO: Change above icon to camera icon */}\n\n                    <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                           onChange={(ev) => selectFileHandler(ev)}/>\n                  </div>\n                </div>\n                <div className=\"col-7\">\n                  <div className=\"ml-3\">\n                    <div className=\"row\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm add-gift-store-label\">Product Name</p>\n                        <textarea\n                          className=\"w-100 mt-1 h1 p-2\"\n                          rows=\"2\"\n                          defaultValue={productName}\n                          onChange={(ev) => productNameChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container mr-2\">\n                          <p className=\"text-sm add-gift-store-label\">Price</p>\n                          <div className=\"price-input mt-1\">\n                            <input\n                              type=\"text\"\n                              className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                              value={price}\n                              onChange={(ev) => priceChangeHandler(ev)}\n                            />\n                          </div>\n                          {/*<span className=\"price-input text-body\">$</span>*/}\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container\">\n                          <p className=\"text-sm add-gift-store-label\">Quantity</p>\n                          <Counter\n                            className=\"mt-2\"\n                            counter={quantity}\n                            incrementHandler={incrementQuantity}\n                            decrementHandler={decrementQuantity}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    {!props.addMyOwn ?\n                      <div className=\"row mt-5\">\n                        <div className=\"col m-a-input-container\">\n                          <p className=\"text-sm add-gift-store-label mb-1\">Category: Item</p>\n                          <div className=\"position-relative\">\n                            <input type=\"text\" value={category.displayName} readOnly={true}\n                                   className=\"w-100 pl-2 pr-12 py-1 text-body input-background change-link-input\"/>\n                            <a className=\"text-sm\" href=\"#\" onClick={(ev) => openCategorySelect(ev)}>Change</a>\n                          </div>\n                        </div>\n                      </div>\n                      : null}\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col d-flex\">\n                        <TogglePills\n                          iconClass=\"icon-heart\"\n                          activeClass={mustHave ? \"active-must-have\" : null}\n                          onClick={() => toggleMustHave(!mustHave)}\n                          text=\"Must Have\"\n                          className=\"mr-2\"/>\n                        <TogglePills\n                          iconClass=\"icon-guest\"\n                          activeClass={groupGift ? \"active-group-gift\" : null}\n                          onClick={() => toggleGroupGift(!groupGift)}\n                          text=\"Group Gift\"\n                          className=\"mr-2\"/>\n                        {/* TODO: Change above guest icon one added */}\n                        <TogglePills\n                          iconClass=\"icon-shopping-cart\"\n                          activeClass={purchased ? \"active-purchased\" : null}\n                          onClick={() => togglePurchased(!purchased)}\n                          text=\"Purchased\"\n                          className=\"mr-2\"/>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm add-gift-store-label\">How to gift?</p>\n                        {howToGiftOptions.map((option, index) => (\n                          <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                            <RadioButton\n                              name=\"how-to-gift\"\n                              textClass=\"text-sm\"\n                              display={option.text}\n                              checked={option.id === howToGift.id ? true : null}\n                              changeHandler={() => changeHowToGift(option)}/>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm add-gift-store-label\">Notes</p>\n                        <textarea className=\"w-100 mt-1 text-body p-1\"\n                                  rows=\"2\"\n                                  placeholder=\"Write a note for your friends and family\"\n                                  defaultValue={note}\n                                  onChange={(ev) => noteChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","import React, {Component} from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  setRegistryProducts,\n  setCheckListItems,\n  clearAnotherStoreProductInfo, setAnotherStoreProductInfo,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport {connect} from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {ADD_REGISTRY_ITEM, GET_PRODUCTS, GET_CATEGORIES, UPDATE_REGISTRY_ITEM} from 'api/queries';\nimport {graphQL} from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport {toast} from \"react-toastify\";\nimport {ADD_REGISTRY_ITEM as ADD_REGISTRY_ITEM_MUTATION} from 'api/mutations';\nimport BookmarkletSection from \"../add-gift/bookmarklet-section/BookmarkletSection\";\nimport AddGiftAnotherStore from \"../add-gift/add-gift-another-store/AddGiftAnotherStore\";\nimport Button from \"../button-component/ButtonComponent\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {getProducts as commonGetProducts, getCategories as commonGetCategories} from \"../../../../utils/commonFunction\";\n\nclass ViewRecommend extends Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n  cardRef = React.createRef()\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  getProducts = () => {\n    let data = {\n      query: GET_PRODUCTS,\n      variables: {\n        registryId: parseInt(this.props.stateRegistryInfo.id)\n      }\n    }\n    graphQL(data).then(res => {\n      let responseData = res.data.data.registryItems.edges.map(item => {\n        return {...item.node}\n      })\n      this.props.dispatch(setRegistryProducts(responseData))\n\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(this.props.stateRegistryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      let parentCategories = res.data.data.categories.filter(category => category.totalItemsCount > 0)\n      let finalCategories = []\n      finalCategories = parentCategories.map(parentCategory => {\n        let subCategory = parentCategory.subCategories\n        delete parentCategory.subCategories\n        let newSubCategories = subCategory.filter(cat => cat.totalItemsCount > 0)\n        parentCategory['subCategories'] = newSubCategories\n        return parentCategory\n      })\n      this.props.dispatch(setCheckListItems(finalCategories))\n\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const shopifyItemId = card.id\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          category: category,\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          imageUrl: imageUrl,\n        }\n      }\n      graphQL(data).then(res => {\n        this.getProducts()\n        this.getCategories()\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        this.getProducts()\n        this.getCategories()\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    }\n  }\n\n  // Checking if product data is valid or not\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // Valid Category\n    if (!storeProduct.category.id) {\n      alert(\"Invalid Category\");\n      return false;\n    }\n\n    return true;\n  }\n\n  // Adding Add on my own product to registry\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM_MUTATION,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"category\": storeProduct.category.id,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  // Popping up Add on my own modal\n  addOnMyOwnClickHandler = (category) => {\n    this.clearModalData()\n    let newCategory = {\n      ...category,\n      displayName: category.parentCategory + \" : \" + category.categoryName\n    }\n    let prodInfo = {...this.props.stateAnotherStoreProduct};\n    prodInfo.category = newCategory;\n    this.props.dispatch(setAnotherStoreProductInfo(prodInfo));\n\n    this.modalTitle = `Add my own ${category ? category.categoryName.toLowerCase() : \"\"}`\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore addMyOwn={true}/>\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      show: !prevState.show\n    }))\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\"/>\n      </button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\"/>\n      </button>\n    };\n    return (\n      <>\n        <div className=\"recommended-cart my-6\">\n          <div className=\"row\">\n            <div className=\"col title\"><h2>{this.props.title}\n              {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n            </h2>\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Slider {...settings}>\n              {this.props.products.map((card, index) =>\n                // <div><>{index}</></div>\n                <div className=\"cart-view\" ref={this.cardRef}>\n                  <CardItem\n                    className=\"mr-4\"\n                    data={card}\n                    key={\"CardItem-\" + index}\n                    incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                    decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                    addProductHandler={() => this.addProductHandler(card)}\n                  />\n                </div>\n              )}\n              <div>\n                <div className=\"add-my-own-card mr-4 d-flex flex-column align-items-center justify-content-center\"\n                     style={{height: this.cardRef.current ? this.cardRef.current.offsetHeight + 'px' : '200px'}}\n                     onClick={() => this.addOnMyOwnClickHandler(this.props.category)}\n                >\n                    <button className=\"add-my-own-button\"/>\n                    <p className=\"text-body font-medium mt-5\">Add my own</p>\n                </div>\n              </div>\n            </Slider>\n          </div>\n          <div className=\"mt-6 card-buttom d-flex\">\n            {/* TODO: Change text to dynamic */}\n            <div>\n              <img className=\"blog-img\"\n                   src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\"\n                   alt={this.props.title}/>\n            </div>\n            <div className=\"pl-4 my-auto\">\n              <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n              <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n            </div>\n            <div className=\"text-sm my-auto mr-6 ml-auto\">\n              <a href=\"\" className=\"read-more\">Read more</a>\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n      ;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info,\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className=\"checkbox d-flex align-items-center mb-4\">\n      <span className=\"checkbox__input mr-2\">\n        <input \n          type=\"checkbox\" \n          name={props.id} \n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n          />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n        <i className=\"icon-check\"></i>                          \n        </span>\n      </span>\n      <span className=\"radio__label text-sm\">{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {setParentFilter, setChildFilter, clearFilter} from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\"/>\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                  <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                    {parentFilter.child.map(childFilter => (\n                      <CheckBox\n                        {...childFilter}\n                        key={childFilter.id}\n                        checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                        changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                      />\n                    ))}\n                  </div>\n                )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n                  onClick={clearClickHandler}\n                  variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./CategoryPill.scss\";\n\nconst CategoryPill = (props) => {\n  return (\n    <span className={[\"import-registry-category-pill text-sm p-1\", props.className ? props.className : \"\"].join(\" \")}>\n      {props.name}\n      <i className=\"icon-close remove-category-pill-icon ml-2\" onClick={props.removeCategory}/>\n    </span>\n  );\n}\n\nexport default CategoryPill;\n","import React from \"react\";\nimport \"./ImportRegistry.scss\";\nimport {getAnotherRegistryProducts} from \"../../../../../api/axios\";\nimport {toast} from \"react-toastify\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport CategoryPill from \"./category-pill/CategoryPill\";\nimport {connect} from \"react-redux\";\nimport {setAnotherStoreRegistryItems} from \"../../../../my-registry/MyRegistryActions\";\n\nclass ImportRegistry extends React.Component {\n  state = {\n    registryUrl: \"\",\n    errorMessage: \"\",\n    loading: false,\n    categoryModalShow: false,\n    activeCategoryProductIndex: null,\n    currentRegistryLink: \"\",\n    inputHasFocus: false\n  }\n\n  inputRef = React.createRef()\n\n  setCategoryModalVisible = () => {\n    this.setState({categoryModalShow: false})\n  }\n\n  changeLoadingState = (value) => {\n    this.setState({\n      loading: value\n    })\n  }\n\n  registryUrlChangeHandler = (ev) => {\n    this.setState({\n      registryUrl: ev.target.value,\n      errorMessage: \"\"\n    })\n  }\n\n  checkUrlAndGetRegistryItems = () => {\n    // Checking for valid url\n    try {\n      new URL(this.state.registryUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return;\n    }\n\n    this.getAnotherRegistryProductsInfo();\n  }\n\n  registryUrlKeyUpHandler = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      this.checkUrlAndGetRegistryItems()\n    }\n  }\n\n  getAnotherRegistryProductsInfo = () => {\n\n    this.setState({\n      currentRegistryLink: this.state.registryUrl\n    })\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = true;\n    }\n\n    const registryUrl = new URL(this.state.registryUrl);\n    const storeName = registryUrl.hostname.split(\".\")[1]\n\n    const reqData = {\n      store_name: storeName,\n      store_url: this.state.registryUrl\n    }\n\n    this.changeLoadingState(true);\n\n    getAnotherRegistryProducts(reqData).then(res => {\n      try {\n        if (res.data) {\n          const products = res.data.products;\n          const registry = res.data.registry;\n\n          if (products && registry) {\n            let newProducts = products.filter(product => product.title)\n            newProducts = newProducts.map(product => {\n              product.categories = [];\n              return product;\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n            // this.setState({\n            //   products: newProducts\n            // })\n          } else {\n            this.setState({\n              errorMessage: \"No registry found. Please check url or make sure that registry is publicly accessible\"\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems([]))\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        toast.error(\"Some error occurred while reading registry products.\")\n      }\n\n    }).catch(err => {\n      toast.error(\"Some error occurred while fetching registry.\")\n      console.error(err);\n    }).finally(() => {\n      this.changeLoadingState(false)\n    })\n  }\n\n  openSelectCategoryModal = (ev, productIndex) => {\n    ev.preventDefault()\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      this.setState({\n        activeCategoryProductIndex: productIndex,\n        categoryModalShow: true\n      })\n    } else {\n      console.log(\"Invalid Product Index\");\n    }\n  }\n\n  setProductCategories = (categories) => {\n    // Saving categories passed from SelectCategory Modal\n    if (Number.isInteger(this.state.activeCategoryProductIndex) && this.props.stateAnotherStoreRegistry[this.state.activeCategoryProductIndex]) {\n      let newProductState = [...this.props.stateAnotherStoreRegistry];\n      // TODO: Change this to support multiple categories\n      newProductState[this.state.activeCategoryProductIndex].categories.push(categories);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProductState))\n      this.setState({\n        activeCategoryProductIndex: null\n      })\n    }\n  }\n\n  removeSelectedCategory = (productIndex, categoryId) => {\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      let newProducts = [...this.props.stateAnotherStoreRegistry]\n      newProducts[productIndex].categories = newProducts[productIndex].categories.filter(category => category.id !== categoryId);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n      // this.setState({\n      //   products: newProducts\n      // })\n    }\n  }\n\n  changeRegistryUrl = (e) => {\n    e.preventDefault();\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled=false;\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"baby-registry-import-registry\">\n          <div className=\"row mt-5\">\n            <div className=\"col d-flex flex-column\">\n              <span className=\"baby-registry-required-field text-sm font-medium\">Registry URL</span>\n              <div className=\"position-relative mt-1\">\n                <input type=\"text\"\n                       className={[\"import-registry-input-field w-100 mb-0 mw-100 text-body pl-2 py-1 pr-14\", this.state.errorMessage ? \"import-registry-error-field\" : \"\"].join(\" \")}\n                       placeholder=\"Paste your registry URL here to import.  Please ensure it's publicly accessible.\"\n                       value={this.state.registryUrl}\n                       ref={this.inputRef}\n                       onChange={this.registryUrlChangeHandler.bind(this)}\n                       onFocus={() => this.setState({inputHasFocus: true})}\n                       onBlur={() => this.setState({inputHasFocus: false})}\n                />\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink === this.state.registryUrl && !this.state.inputHasFocus ?\n                  <a className=\"import-registry-change-link text-sm font-medium import-registry-category-link\" href=\"#\"\n                     onClick={(e) => this.changeRegistryUrl(e, this.inputRef)}>Change</a> : null}\n\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink !== this.state.registryUrl ?\n                  <div className=\"import-registry-submit-url-section\">\n                    {/*TODO: Change icons once added to global icons*/}\n                    <button className=\"icon-close mr-3\"\n                            onClick={() => this.setState({registryUrl: \"\"})}/>\n                    <button className=\"icon-check\" onClick={this.checkUrlAndGetRegistryItems}/>\n                  </div>\n                  : null}\n              </div>\n              {this.state.errorMessage ?\n                <span className=\"import-registry-input-error-message text-body mt-1\">{this.state.errorMessage}</span>\n                : null}\n            </div>\n          </div>\n\n          <div className=\"row baby-registry-import-section mt-6\">\n            <div className=\"col\">\n              {this.props.stateAnotherStoreRegistry.length <= 0 || this.state.loading ?\n                // When no product exists\n                <div className=\"py-20 text-center import-registry-main-content\">\n                  {this.state.loading ?\n                    <>\n                      <div className=\"spinner-border import-registry-spinner\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                      <h4 className=\"mt-1 mx-auto import-registry-loading-text\">Please wait while we’re importing your\n                        registry</h4>\n                    </>\n                    :\n                    <h4 className=\"mx-auto import-registry-no-content-text\">\n                      Please paste your publicly accessible\n                      registry URL above to import items\n                      to M+A.\n                    </h4>\n                  }\n                </div>\n                :\n                // When products is filled\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"import-registry-main-content d-flex flex-column import-registry-products\">\n                      <div className=\"d-flex import-registry-products-column \">\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Items</p>\n                        </div>\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Category: Item</p>\n                        </div>\n                      </div>\n\n\n                      {this.props.stateAnotherStoreRegistry.map((product, index) => (\n                        <div className=\"d-flex import-registry-products-column\" key={\"Product-\" + index}>\n                          <div className=\"w-50 px-3\">\n                            <p className=\"py-3 text-body\">{product.title}</p>\n                          </div>\n                          <div className=\"w-50 px-3\">\n                            {product.categories.length <= 0 ?\n                              <div className=\"py-3\">\n                                <a href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                   onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Select category</a>\n                              </div>\n                              :\n                              <div className=\"pb-2\">\n                                {product.categories.map(category => (\n                                  <CategoryPill\n                                    key={category.id}\n                                    name={category.categoryName}\n                                    removeCategory={() => this.removeSelectedCategory(index, category.id)}\n                                    className=\"mt-2 mr-3\"\n                                  />\n                                ))}\n\n                                <a href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                   onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Add</a>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n        <SelectCategory\n          showModal={this.state.categoryModalShow}\n          closeModal={this.setCategoryModalVisible}\n          changeCurrentCategory={this.setProductCategories}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ImportRegistry);","import React from 'react';\nimport \"./AddGift.scss\";\nimport {connect} from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport ImportRegistry from \"./import-registry/ImportRegistry\";\nimport {clearAnotherStoreProductInfo, setAnotherStoreRegistryItems} from \"modules/my-registry/MyRegistryActions\";\nimport {ADD_REGISTRY_ITEM, SAVE_REGISTRY_DATA} from \"../../../../api/mutations\";\nimport {graphQLMultipart as graphQL, graphQL as jsonGraphQL} from \"../../../../api/axios\";\nimport {getProducts, getCategories} from \"utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n    this.props.dispatch(setAnotherStoreRegistryItems([]));\n  }\n\n  dataURItoBlob = (dataURI, fileType, fileName) => {\n    let byteString = atob(dataURI.split(',')[1]);\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    let blob = new Blob([ab], {type: fileType});\n    return new File([blob], fileName, {\n      type: fileType\n    })\n  }\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      toast.error(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      toast.error(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      toast.error(\"Invalid Quantity\");\n      return false;\n    }\n\n    // Valid Category\n    if (!storeProduct.category.id) {\n      toast.error(\"Invalid Category\");\n      return false;\n    }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"category\": storeProduct.category.id,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Cash Funds</h4></div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name}/>\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection/>\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n                onClick={this.importRegistry}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  validImportRegistryData = (registryItems) => {\n    if (registryItems.length <= 0) {\n      toast.error(\"No Item found\");\n      return false;\n    }\n    for (const item of registryItems) {\n      if (item.categories.length <= 0) {\n        toast.error(\"Please select category for all product\");\n        return false;\n      }\n    }\n    return true;\n  }\n\n  getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  getCleanedRegistryItems = (registryItems) => {\n    let cleanedRegistryItems = []\n    for (const item of registryItems) {\n      // TODO: Handle multiple store for single product\n      const itemStore = item.stores[0]\n      if (cleanedRegistryItems.find(el => el.storeName ? el.storeName === itemStore.name : false)) {\n        cleanedRegistryItems = cleanedRegistryItems.map(el => {\n          if (el.storeName === itemStore.name) {\n            if (el.items) {\n              el.items.push({\n                title: item.title,\n                // TODO: Change to multiple categories when backend is implemented\n                category: Number(item.categories[0].id),\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              })\n            } else {\n              el['items'] = [{\n                title: item.title,\n                // TODO: Change to multiple categories when backend is implemented\n                category: Number(item.categories[0].id),\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              }]\n            }\n            if (item.img) {\n              el.items[el.items.length - 1]['imageUrl'] = item.img\n            }\n          }\n          return el;\n        })\n      } else {\n        let newStore = {\n          storeName: itemStore.name,\n          items: [{\n            title: item.title,\n            // TODO: Change to multiple categories when backend is implemented\n            category: Number(item.categories[0].id),\n            quantity: 1,\n            tags: [],\n            price: this.getRefinedPrice(itemStore.price)\n          }]\n        }\n\n        if (item.img) {\n          newStore.items[newStore.items.length - 1]['imageUrl'] = item.img\n        }\n        cleanedRegistryItems.push(newStore)\n      }\n    }\n\n    return cleanedRegistryItems;\n  }\n\n  importRegistryClickHandler = () => {\n    if (!this.validImportRegistryData(this.props.stateAnotherStoreRegistry)) {\n      return;\n    }\n\n    const registryItems = this.getCleanedRegistryItems(this.props.stateAnotherStoreRegistry)\n    if (registryItems.length > 0) {\n      const reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          \"registryId\": this.props.stateRegistryInfo.id,\n          \"input\": registryItems\n        }\n      }\n      jsonGraphQL(reqData).then(res => {\n        if (res.data.data.addRegistryItems) {\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n          toast.success(\"Registry items imported successfully\");\n          this.clearModalData();\n          this.modalCloseHandler();\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore/>\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  importRegistry = () => {\n    this.clearModalData()\n    this.modalTitle = \"Import Registry\"\n    this.modalBody = <ImportRegistry/>\n\n    this.modalFooterButtons = (\n      <>\n        {/*TODO: change href of email us link*/}\n        <a href=\"#\" className=\"mr-auto import-registry-email-link text-sm font-medium\">Email Us For Help</a>\n        {/*TODO: Integrate API when multiple category is supported*/}\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.importRegistryClickHandler}\n        >Import</Button>\n      </>\n    )\n\n    this.setState((prevState, _) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n            <span className=\"font-medium text-sm\">What is Add Gift?</span>\n            <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save\n              in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\"\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport { graphQL, getRecommendation } from 'api/axios';\nimport { GET_RECOMMENDATIONS } from 'api/queries';\nimport { TOGGLE_MUST_HAVE } from 'api/mutations';\nimport { getProducts, removeProductFromCartHandler, getCategories } from \"utils/commonFunction\";\nimport { Cookies } from \"react-cookie\";\nimport config from \"api/config\";\nimport axios from \"axios\";\n\n\nclass Everything extends Component {\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n\n\n  setAllRecommendation = async (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          ...category,\n          parentCategory: parentCat.categoryName,\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      // for (let i = 0; i <= 5; i++) {\n      // let recommendedCat = recommendedCategory[i]\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.categoryName\n        }\n      }\n      const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\n      const cookies = new Cookies();\n\n      await axios.get(apiURL + 'items', {\n        params: data,\n        headers: { \"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\" }\n      })\n        .then(res => {\n          let rData = res.data.data.products.edges.map(item => {\n            let resData = { ...item.node }\n            resData['quantity'] = 1\n            resData['category'] = recommendedCat\n            return resData\n          })\n          // count = count + 1;\n          if (rData.length !== 0) {\n            this.props.dispatch(addRecommendedProduct(rData))\n          }\n        }).catch(err => {\n          console.error(err.message)\n        })\n\n\n      // getRecommendation({ params: data }).then(res => {\n      //   let rData = res.data.data.products.edges.map(item => {\n      //     let resData = { ...item.node }\n      //     resData['quantity'] = 1\n      //     resData['category'] = recommendedCat\n      //     return resData\n      //   })\n      //   // count = count + 1;\n      //   this.props.dispatch(addRecommendedProduct(rData))\n      // }).catch(err => {\n      //   console.error(err.message)\n      // })\n      //   )\n      // ))\n      // count = count + 1;\n      // }\n      // else {\n      //   break;\n      // }\n    }\n  }\n\n  getSortedProducts = (addedProducts, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    let allProducts = []\n    let productCount = 0;\n    let categories = []\n    for (let parentCat of stateCategories) {\n      for (let category of parentCat.subCategories) {\n        categories.push({\n          id: category.id,\n          name: category.categoryName,\n          added: category.addedItemsCount,\n          total: category.totalItemsCount\n        })\n      }\n    }\n\n\n    for (let category of categories) {\n      let products = []\n      let recommendations = []\n\n      // Getting filtered Products and recommendations\n      if (stateFilterApplied.parentFilter) {\n        if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n          if (stateFilterApplied.childFilter.length > 0) {\n            const childFilterArray = stateFilterApplied.childFilter\n\n            for (let product of addedProducts) {\n              if (\n                ((childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n                  (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n                  (childFilterArray.includes(\"reserved\") && product.isReserved)) && product.item.category.id === category.id\n              ) {\n                products.push(product)\n                // filteredProductsId.push(product.id)\n              }\n            }\n          } else {\n            products.push(...addedProducts.filter(el => el.item.category.id === category.id))\n          }\n        } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n          let addedRecommendations = []\n          recommendations = stateRecommendedProducts.filter(el => {\n            if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n              addedRecommendations.push(el.id)\n              return true;\n            }\n            return false;\n          })\n        }\n      } else {\n        products.push(...addedProducts.filter(el => el.item.category.id === category.id))\n        let addedRecommendations = []\n        recommendations = stateRecommendedProducts.filter(el => {\n          if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n            addedRecommendations.push(el.id)\n            return true;\n          }\n          return false;\n        })\n      }\n\n      productCount += products.length;\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: (category.added < category.total || category.total === 0) ? recommendations : []\n      })\n    }\n\n    return { allProducts, productCount };\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for (let category of checklistItems) {\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems / totalItems) * 100;\n  }\n\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let { allProducts, productCount } = this.getSortedProducts(this.props.stateAddedProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-6\">\n          {/* View CheckList */}\n          <div className=\"col-3\">\n            <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)} />\n            {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n              dispatch={this.props.dispatch} />)}\n          </div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <FilterSection productCount={productCount} />\n            <div className=\"mt-5\">\n              {allProducts.map((product, i) => (\n                <div id={product.category.name}>\n                  {product.products.map((card, index) => (\n                    <AddedCard\n                      data={card} key={\"addedCard\" + index}\n                      toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                      removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                    />\n                  ))}\n                  {product.recommendations.length > 0 ?\n                    <ViewRecommend\n                      title={product.recommendations[0].category.categoryName}\n                      category={product.recommendations[0].category}\n                      products={product.recommendations} />\n                    : null}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 7\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          console.log(defaultImages);\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      toast.error(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          toast.error(\"Some error occurred\");\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n\n  }\n\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={props.closeCoverImagePicker}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"utils/commonFunction\";\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      alert(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          alert(\"Successfully changed\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          alert(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        alert(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\"/>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\"/>\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n              onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport routes from \"../../../../utils/routes\";\n\nconst ShareRegistry = (props) => {\n\n  const siteHostName = window.location.host + routes.REGISTRY.HOME;\n  // const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      toast.error(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      if (err.response.status === 400) {\n        setRegistryError(`${registryUrl} is not available. Please try something else.`)\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n      console.error(err.response.data)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toast.success(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section d-flex text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram .svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter.svg\"/>\n              </>\n              :\n              <>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook_disabled.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram _disabled.svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter_disabled.svg\"/>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport { connect } from \"react-redux\";\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport { setguestViewRegistry } from \"modules/view-registry/ViewRegistryActions\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({ showCoverImagePicker: false })\n  }\n\n  closeShareRegistry = () => {\n    this.setState({ showShareRegistry: false })\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  handleGuestView = () => {\n    this.props.dispatch(setguestViewRegistry(true))\n  }\n\n  handleDisableViewGuest = () => {\n    this.props.dispatch(setguestViewRegistry(false))\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({ showCoverImagePicker: true })\n      }\n    }\n  ]\n  style = {\n    backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.stateGuestViewRegistry ?\n          <div className=\"view-guest-header text-body py-2\">\n            <div className=\"container d-flex justify-content-between\" onClick={this.handleDisableViewGuest}>\n              <div className=\"d-flex align-items-center view-guest-link\">\n                <i className=\"icon-chevron-left view-guest-text mr-2\" />\n                <a className=\"view-guest-text\">Back To View Registry</a>\n              </div>\n              <div className=\"view-guest-text\">This is how your guests will see your registry</div>\n              <a className=\"view-guest-text view-guest-link\">Share</a>\n            </div>\n          </div> : null\n        }\n        <div className=\"view-registry-header\" style={this.style}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          {!this.props.stateGuestViewRegistry ?\n            < div className=\"cover-pic-update-options\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-end\">\n                    <MoreOption\n                      data={this.COVER_PIC_OPTIONS}\n                      iconClass=\"icon-preview\"\n                      activeOptionClass=\"view-registry-cover-option-active\"\n                      buttonClass=\"update-cover-options p-1\" />\n                  </div>\n                </div>\n              </div>\n            </div> : null\n          }\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    {!this.props.stateGuestViewRegistry ?\n                      <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)} />\n                      : null\n                    }\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    !this.props.stateGuestViewRegistry ?\n                      <a className=\"add-greeting-link text-sm font-medium\" href=\"#\"\n                        onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a> : null\n                  }\n                </div>\n                {!this.props.stateGuestViewRegistry ?\n                  <div className=\"col-12 col-md-3 header-buttons\">\n                    <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\" onClick={this.handleGuestView}>View as Guest</Button>\n                    <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\" onClick={() => this.setState({ showShareRegistry: true })}>Share</Button>\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n        <EditViewRegistryDetail\n          show={this.state.showEditRegistryDetail}\n          closeEditRegistryDetail={this.closeEditRegistryDetail}\n          info={this.props.stateRegistryInfo}\n        />\n\n        <ShareRegistry\n          show={this.state.showShareRegistry}\n          closeShareRegistry={this.closeShareRegistry}\n          registryInfo={this.props.stateRegistryInfo}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.stateViewRegistryProducts.length} {this.props.stateViewRegistryProducts.length === 1 ? \"item\" : \"items\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              {this.props.stateGuestViewRegistry ?\n                <></> :\n                <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>}\n            </div>\n\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 && !this.props.stateGuestViewRegistry?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);\n","import React, { useEffect } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, setFeaturedSortApplied } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFeaturedSortApplied = useSelector(state => state.viewRegistry.featuredSortApplied)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let itemsOldPosition = arrayMove([...stateViewRegistryProducts], oldIndex, oldIndex)\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    dispatch(setViewRegistryProducts(items))\n    updateViewRegistryPosition(stateRegistryInfo.id, items, itemsOldPosition, dispatch)\n    // dispatch(setViewRegistryProducts(items))\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedFilteredProducts = (addedProducts, activeSortFilterState, viewRegistryProducts) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    // let sortedDataByMustHave = sortByMustHave([...stateAddedProducts])\n\n    if (activeSortFilterState.sortId === 1) {\n      if (stateRegistryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n        // sortedData = sortByFeatured([...addedProducts])\n      }\n      else {\n        sortedData = sortByMustHave([...addedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n          // dispatch(setViewRegistryProducts(viewRegistryProductsId))\n          // dispatch(setFeaturedSortApplied(true))\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...addedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...addedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n\n  }\n\n  const sortByLowToHigh = (productList) => {\n    // TODO\n    // let mustHaveProducts = [...productList]\n    // let index = -1;\n    // for (let product of mustHaveProducts) {\n    //   index++;\n    //   if (product.mostWanted === false) {\n    //     break\n    //   }\n    // }\n    // let nonMustHaveProducts = mustHaveProducts.splice(index);\n    // let tempMustHaveList = mustHaveProducts.sort((a, b) => { return a.item.price - b.item.price });\n    // let tempList = nonMustHaveProducts.sort((a, b) => { return a.item.price - b.item.price })\n    // let finalSortedProducts = tempMustHaveList.concat(tempList)\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    // TODO\n    // let mustHaveProducts = [...productList]\n    // let index = -1;\n    // for (let product of mustHaveProducts) {\n    //   index++;\n    //   if (product.mostWanted === false) {\n    //     break\n    //   }\n    // }\n    // let nonMustHaveProducts = mustHaveProducts.splice(index);\n    // let tempMustHaveList = mustHaveProducts.sort((a, b) => { return b.item.price - a.item.price });\n    // let tempList = nonMustHaveProducts.sort((a, b) => { return b.item.price - a.item.price })\n    // let finalSortedProducts = tempMustHaveList.concat(tempList)\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  useEffect(() => {\n    if (stateAddedProducts.length === 0) {\n      getProducts(stateRegistryInfo.id, dispatch);\n    }\n    if (stateAddedProducts.length > 0 && stateViewRegistryProducts.length === 0) {\n      let sortedData = sortByFeatured([...stateAddedProducts])\n      let viewRegistryProducts = sortedData.map((productData, index) => {\n        return { 'id': productData.id }\n      })\n      dispatch(setViewRegistryProducts(viewRegistryProducts))\n    }\n  })\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n          <div className=\"col-9\">\n            {/* Top Filter Section */}\n            <SortFilterSection />\n\n            {/* Added Products */}\n            <div className=\"mt-5\">\n              <SortableContainer onSortEnd={onSortEnd} helperClass=\"drag-add-card\" axis=\"y\" lockAxis=\"y\" useDragHandle>\n                {filteredSortProducts.map((card, index) =>\n                  <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1} />\n                )}\n              </SortableContainer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Toast.scss';\n\nconst Toast = () => {\n  const closeToastMessage = (parentId) => {\n    toast.dismiss(parentId);\n  }\n\n  return (\n    <ToastContainer\n      position=\"top-center\"\n      className=\"m-a-toast-container\"\n      toastClassName=\"m-a-toast\"\n      autoClose={4000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      draggable={false}\n      closeOnClick={false}\n      closeButton={<i className=\"icon-close m-a-toast-close\" onClick={(event) => closeToastMessage(event.target.parentElement.id)} />}\n    />\n  )\n}\n\nexport default Toast;","import React from \"react\";\nimport \"./TodoWidget.scss\";\nimport {connect} from \"react-redux\";\n\nclass TodoWidget extends React.Component {\n\n  performTodoAction = todo => {\n  //  Perform action related to to-do\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-todo-widget\">\n        {this.props.stateTodo.length > 0 ?\n          (\n            //  When there is To-do\n            <div className=\"baby-registry-todo-section\">\n              <button className=\"baby-steps-button d-flex align-items-center py-4 pl-5 pr-10\">\n                <i className=\"baby-steps-icon\"/>\n                <div className=\"ml-5\">\n                  <p className=\"text-body font-medium\">{this.props.stateTodo.length} Baby Steps</p>\n                  <p className=\"text-sm\">to take next!</p>\n                </div>\n              </button>\n\n              <div className=\"baby-steps-todo-content p-2\">\n                {this.props.stateTodo.map(todo => (\n                  <div className=\"baby-step-todo d-flex justify-content-between py-2 align-items-center\">\n                    <p className=\"text-body mr-9\">{todo.text}</p>\n                    {/*TODO: Update below icon once updated*/}\n                    <button className=\"baby-step-action-btn p-2 icon-chevron-right float-right\" onClick={() => this.performTodoAction(todo)}/>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n          :\n          (\n            //  When there is no To-do\n            <div className=\"baby-registry-no-todo-section d-flex align-items-center py-4\">\n              <i className=\"no-todo-icon\"/>\n              <div className=\"ml-2\">\n                <p className=\"text-body font-medium\">Great job!</p>\n                <p className=\"text-sm\">More to come, soon.</p>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTodo: state.registry.todo\n})\n\nexport default connect(\n  mapStateToProps\n)(TodoWidget);","import React from 'react';\nimport {NavLink, Switch, Route, Redirect} from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport {useTranslation} from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {useSelector} from 'react-redux';\nimport {toast} from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport TodoWidget from \"./component/todo-widget/TodoWidget\";\n\nconst RegistryHero = (props) => {\n\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const {t} = useTranslation();\n  const registryData = RegistryHeroData\n\n  if (!stateRegistryInfo.id && stateRegistryInfo.notFound) {\n    return <Redirect to={route.ONBOARDING.HOME}/>\n  }\n\n  return (\n    <>\n      {!stateGuestViewRegistry ?\n        <div className=\"registry-hero\">\n          <div className=\"container pt-6\">\n            <div className=\"row\">\n              <div className=\"col d-flex justify-content-between align-items-start\">\n                <div className=\"d-flex align-items-end\">\n                  <h1>{stateRegistryInfo.name}</h1>\n                  <span className=\"text-sm ml-1\">{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</span>\n                </div>\n                <div>\n                  <TodoWidget/>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-flex registry-hero-navigation-links\">\n                  <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.MY_REGISTRY.TRACK_GIFTS} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> : null}\n\n      {/* Registry Nav Routes */}\n      {stateRegistryInfo.id ?\n        <Switch>\n          <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME}/></Route>\n          <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry}/>\n          <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry}/>\n        </Switch>\n        : null}\n\n      <Toast />\n    </>\n  )\n}\n\nexport default RegistryHero;","import React from \"react\";\nimport \"./Option.scss\";\n\nconst Option = (props) => {\n  return (\n    <div\n      className={[\"px-4 py-3 baby-registry-question-option\", props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}>{props.children}</div>\n  );\n}\n\nexport default Option;","import React from \"react\";\nimport \"./Onboarding.scss\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport routes from \"utils/routes\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport {addQuestionAnswer, updateQuestionAnswer} from \"./OnboardingAction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {REGISTER_USER, SAVE_QUESTION_RESPONSE, LOGIN_USER} from \"../../api/mutations\";\nimport {graphQLNoToken, graphQLNoHeader} from \"../../api/axios\";\nimport {Cookies} from \"react-cookie\";\nimport {setLoggingStatus} from \"../registry/RegistryActions\";\nimport {updateRegistryDetailState} from \"../../utils/commonFunction\";\nimport {GET_REGISTRIES} from \"../../api/queries\";\n\n// TODO: Integrate Response AND Login API\nclass Onboarding extends React.Component {\n\n  // Static titles\n  LOGIN_TITLE = \"Sign in for free gifts, free shipping, and exclusive access to our limited edition prints\"\n  SIGNUP_TITLE = \"Let’s make it official. Time to create your account.\"\n  PARTNER_TITLE = \"Your partner’s details please\"\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  LOGIN = \"Login\"\n  PARTNER = \"Partner\"\n\n  state = {\n    parentId: null,\n    question: {},\n    login: false,\n    toastMessage: \"\"\n  }\n\n  componentDidMount() {\n    window.onpopstate = () => {\n      if (this.props.location.pathname.search(routes.ONBOARDING.HOME) >= 0) {\n        this.setQuestionBasedOnId(this.props.match.params['questionId'])\n        this.clearToastMessage()\n      }\n    }\n  }\n\n  submitAllAnswers = () => {\n    if (this.props.stateOnboardingAnswers.length > 0) {\n      const response = this.props.stateOnboardingAnswers.map(answer => {\n        return {\n          question: answer.question,\n          option: answer.response.option,\n          optionText: answer.response.optionText\n        }\n      })\n\n      const cookies = new Cookies();\n      let reqData = {\n        query: SAVE_QUESTION_RESPONSE,\n        operationName: \"addRegistryQuestionOption\",\n        variables: {\n          response: response\n        }\n      }\n      graphQLNoHeader(reqData, {\n        headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n      }).then(res => {\n        if (res.data.data.addRegistryQuestionOption) {\n          console.log(\"Saved\");\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.stateOnboardingQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      if (this.props.stateLoggedIn && this.state.redirectionUrl) {\n        window.open(this.state.redirectionUrl, \"_self\")\n      }\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null\n      })\n\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.setToastMessage()\n      this.props.history.push(routes.ONBOARDING.HOME + `/${nextQuestionId}`)\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.stateOnboardingQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.stateOnboardingAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.stateOnboardingAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n          break;\n        }\n        newState.push(answer)\n      }\n      this.props.dispatch(updateQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addQuestionAnswer({question: this.state.question.id, response: response}))\n    }\n\n    if (this.props.stateLoggedIn) {\n      this.submitAllAnswers()\n    }\n  }\n\n  answerRadioQuestion = (option) => {\n    this.addAnswerToState({option: option.id, optionText: option.value});\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n  }\n\n  watchNextBtn = (ev) => {\n    this.setState({\n      nextBtnState: ev.target.value.length <= 0\n    })\n  }\n\n  answerDataQuestion = (response) => {\n    this.addAnswerToState({option: 0, optionText: response})\n    this.gotoNextQuestion(this.state.question, this.state.parentId);\n  }\n\n  textInputTypeChangeHandler = (ev, inputRefs) => {\n    let enableBtn = false;\n\n    for (const inputRef of inputRefs) {\n      if (inputRef.current.value.length <= 0) {\n        enableBtn = true\n        break\n      }\n    }\n\n    this.setState({\n      nextBtnState: enableBtn\n    })\n  }\n\n  changeLoginState = (ev, value) => {\n    ev.preventDefault()\n    this.setState({\n      login: value\n    })\n  }\n\n  signInClickHandler = (emailRef, passwordRef) => {\n    if (emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      alert(\"Please enter all fields\")\n      return;\n    }\n\n    let reqData = {\n      query: LOGIN_USER,\n      operationName: \"login_user\",\n      variables: {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.loginUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.loginUser.token, {path: \"/\"})\n\n        // Checking if user has registry\n        let data = {\n          query: GET_REGISTRIES\n        }\n        graphQLNoHeader(data, {headers: {\"Authorization\": \"Token \" + res.data.data.loginUser.token}}).then(registryRes => {\n          if (registryRes.data.data.registries.edges) {\n            updateRegistryDetailState(this.props.dispatch, registryRes.data.data.registries.edges);\n          }\n        }).catch(err => {\n          console.error(err);\n        })\n\n        this.setState({\n          redirectionUrl: res.data.data.loginUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers()\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  getSignInContent = () => {\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"email\"\n            name=\"email\"\n            ref={emailRef}\n            placeholder=\"johndoe@email.com\"\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"password\"\n            name=\"password\"\n            ref={passwordRef}\n            placeholder=\"Password\"\n\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signInClickHandler(emailRef, passwordRef)}\n        >Sign In</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Don't have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                        onClick={(ev) => this.changeLoginState(ev, false)}\n        >Sign Up</a></h4>\n      </>\n    )\n  }\n\n  signUpClickHandler = (nameRef, emailRef, passwordRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      alert(\"Please enter all fields\")\n      return;\n    }\n\n    let reqData = {\n      query: REGISTER_USER,\n      operationName: \"register_user\",\n      variables: {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.registerUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.registerUser.token, {path: \"/\"})\n        this.setState({\n          redirectionUrl: res.data.data.registerUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers()\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  getSignUpContent = () => {\n    const nameRef = React.createRef()\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Doe\"\n            ref={nameRef}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"johndoe@email.com\"\n            ref={emailRef}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signUpClickHandler(nameRef, emailRef, passwordRef)}\n        >Sign Up</Button>\n        <h4 className=\"mt-11\">Already have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                          onClick={(ev) => this.changeLoginState(ev, true)}>Sign\n          In</a></h4>\n      </>\n    )\n  }\n\n  getPartnerContent = () => {\n    const inputRefs = [React.createRef(), React.createRef()]\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={inputRefs[0]}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={inputRefs[1]}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.gotoNextQuestion(this.state.question, this.state.parentId)}\n        >Next</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n      </>\n    )\n  }\n\n  render() {\n\n    // Redirecting user to registry home if registry found\n    if (this.props.stateRegistryInfo.id) {\n      return <Redirect to={routes.MY_REGISTRY.HOME}/>\n    }\n\n    // Redirecting to first question if not answered any\n    if (this.props.stateOnboardingQuestions.length > 0\n      && this.props.stateOnboardingAnswers.length <= 0\n      && this.props.location.pathname !== routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`) {\n      return <Redirect to={routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`}/>\n    }\n\n    if (!this.state.question.title && this.props.stateOnboardingQuestions.length > 0 && this.props.stateRouter.location.pathname !== routes.ONBOARDING.HOME + `/${this.state.question.id}`) {\n      this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    }\n\n    // Skipping Login Question if user is already logged in\n    if (this.props.stateLoggedIn && this.state.question.answerInputType === this.LOGIN) {\n      // If user already logged into M&A Store\n      this.setState((prevState, _) => ({\n        redirectionUrl: prevState.redirectionUrl ? prevState.redirectionUrl : routes.MY_REGISTRY.HOME\n      }))\n      this.gotoNextQuestion(this.state.question, null);\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n      setTimeout(() => this.setState({toastMessage: \"\"}), 4000)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      options = this.state.question.options.map(option => (\n        <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n          <span className=\"text-sm ml-1 onboarding-option-help-text\">{option.helpText}</span> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === \"Date\") {\n      let inputRef = React.createRef();\n      options.push(\n        <div className=\"d-flex flex-column\">\n          {/*TODO: Get placeholder from backend*/}\n          <input\n            type=\"date\"\n            className=\"onboarding-input py-1 px-2 text-body\"\n            placeholder=\"Date\"\n            ref={inputRef}\n            onChange={(ev) => this.watchNextBtn(ev)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(inputRef.current.value)}\n            className=\"px-3 py-1 font-medium mt-4 onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === \"Text\") {\n      let inputRefs = []\n      options.push(\n        // TODO: Update this part if there is a Text type question\n        <div className=\"d-flex flex-column\">\n          {JSON.parse(this.state.question.fields).map(field => {\n            const inputRef = React.createRef()\n            inputRefs.push(inputRef)\n            return (\n              <div className=\"d-flex flex-column mb-4\">\n                <span className=\"text-sm font-medium onboarding-required-field\">{field.title}</span>\n                <input\n                  className=\"onboarding-input py-1 px-2 text-body mt-1\"\n                  type={field.type}\n                  name={field.name}\n                  placeholder={field.title}\n                  ref={inputRef}\n                  onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n                />\n              </div>\n            )\n          })}\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            className=\"px-3 py-1 font-medium onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === this.LOGIN) {\n      let content = null;\n      if (this.state.login) {\n        staticQuestionTitle = this.LOGIN_TITLE\n        content = this.getSignInContent()\n      } else {\n        staticQuestionTitle = this.SIGNUP_TITLE\n        content = this.getSignUpContent()\n      }\n\n      options.push(content)\n    } else if (this.state.question.answerInputType === this.PARTNER) {\n      staticQuestionTitle = this.PARTNER_TITLE;\n      options.push(this.getPartnerContent())\n    }\n\n    return (\n      <>\n        <div className=\"baby-registry-onboarding container\">\n          <div className=\"row justify-content-center mt-24\">\n            <div className=\"col-12 col-md-6\">\n            <span\n              className=\"font-body onboading-question\">{[this.LOGIN, this.PARTNER].indexOf(this.state.question.answerInputType) !== -1 ? staticQuestionTitle : this.state.question.title}</span>\n            </div>\n          </div>\n          <div className=\"row justify-content-center mt-6\">\n            <div className=\"col-12 col-md-6\">\n              {options.map(option => option)}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          className=\"onboarding-toast-container\"\n          toastClassName=\"onboarding-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateOnboardingAnswers: state.onboarding.answers,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Onboarding);","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from 'react';\nimport \"./PersonaliseHeader.scss\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\n\n\nconst PersonaliseHeader = (props) => {\n    const closePersonalise = (event) => {\n        event.preventDefault();\n        props.history.push(routes.REGISTRY.HOME)\n    }\n    \n    return (\n        <div className=\"personalise-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-between py-2\">\n                        <p className=\"text-body font-medium personalise-text\">My Registry Quiz</p>\n                        <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(PersonaliseHeader);","import React from 'react';\nimport \"./PersonaliseFooter.scss\";\n\n\nconst PersonaliseFooter = (props) => {\n  const closePersonalise = (event) => {\n    event.preventDefault();\n    // props.history.push(routes.REGISTRY.HOME)\n  }\n\n  return (\n    <div className=\"personalise-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4 justify-content-between pt-2 pb-4\">\n            <div className=\"mb-1\">\n              <p className=\"text-sm\">{props.percentage}% complete</p>\n            </div>\n            <div className=\"personalise-progress-background\">\n              <div className=\"personalise-progress\" style={{ width: `${props.percentage}%` }} />\n            </div>\n          </div>\n          {/* <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} /> */}\n          <div className=\"col d-flex justify-content-end\">\n            <i className=\"icon-chevron-left align-self-center personalise-footer-icon p-2\" onClick={props.prevQuestion} />\n            <i className=\"icon-chevron-right align-self-center personalise-footer-icon p-2 ml-2\" onClick={props.nextQuestion} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonaliseFooter;","import React, { createRef } from \"react\";\n// import \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport PersonaliseHeader from \"./components/personalise-header/PersonaliseHeader\";\nimport { getPersonalizeQuestions } from \"utils/commonFunction\";\nimport { connect } from \"react-redux\";\nimport PersonaliseFooter from \"./components/personalise-footer/PersonaliseFooter\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport { updatePersonalizeQuestionAnswer, addPersonalizeQuestionAnswer } from \"./PersonaliseCheckListActions\";\nimport \"./PersonaliseChecklist.scss\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\n\nclass PersonaliseChecklist extends React.Component {\n\n  state = {\n    parentId: null,\n    prevQuestionId: [],\n    question: {},\n    activeQuestionId: null,\n    toastMessage: \"\",\n    percentage: 0,\n  }\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  CHECKBOX = \"Checkbox\"\n\n  componentDidMount() {\n    getPersonalizeQuestions(this.props.dispatch)\n    this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    this.clearToastMessage()\n  }\n\n  calulatePercentage = (answerQuestionCount, totalQuestionCount) => {\n    return Math.ceil(answerQuestionCount * 100 / totalQuestionCount);\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.statePersonaliseQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null,\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        activeQuestionId: nextQuestionId\n      })\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.setToastMessage()\n    }\n  }\n\n  gotoPrevQuestion = (prevQuestionId) => {\n    this.setQuestionBasedOnId(prevQuestionId);\n    if (this.state.prevQuestionId.length > 1) {\n      let popPrevQuestionId = [...this.state.prevQuestionId];\n      popPrevQuestionId.pop();\n      this.clearToastMessage();\n      this.setState({\n        prevQuestionId: popPrevQuestionId,\n        activeQuestionId: popPrevQuestionId.length > 0 ? popPrevQuestionId[popPrevQuestionId.length - 1] : this.state.activeQuestionId\n      })\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.statePersonaliseQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId,\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.statePersonaliseAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.statePersonaliseAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n        }\n        else {\n          newState.push(answer)\n        }\n      }\n      this.props.dispatch(updatePersonalizeQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addPersonalizeQuestionAnswer({ question: this.state.question.id, response: response }))\n    }\n  }\n\n  isActiveIdPresent = () => {\n    for (let prevQuestion of this.state.prevQuestionId) {\n      if (prevQuestion === this.state.activeQuestionId) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  answerRadioQuestion = (option) => {\n    this.addAnswerToState(option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n    this.submitQuestionAnswer();\n  }\n\n  answerCheckboxQuestion = (event, checkBoxRef, option) => {\n    checkBoxRef.current.classList.toggle(\"personalise-checkbox-selected\");\n  }\n\n  submitQuestionAnswer = () => {\n\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  render() {\n\n    if (!this.state.question.id && this.props.statePersonaliseQuestions.length > 0) {\n      this.setState({\n        prevQuestionId: [...this.state.prevQuestionId, this.props.statePersonaliseQuestions[0].id],\n        activeQuestionId: this.props.statePersonaliseQuestions[0].id,\n        question: this.props.statePersonaliseQuestions[0]\n      })\n\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      options = this.state.question.options.map(option => (\n        <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n            <div className=\"text-sm onboarding-option-help-text\">{option.helpText}</div> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === this.CHECKBOX) {\n      options = this.state.question.options.map(option => {\n        let checkBoxRef = createRef();\n        return (\n          <div\n            className=\"personalise-checkbox mr-3 mb-3\" ref={checkBoxRef}>\n            <label className=\"checkbox d-flex align-items-center pb-0 mb-0\">\n              <span className=\"checkbox__input p-2\">\n                <input\n                  type=\"checkbox\"\n                  name={option.id}\n                  value={option.id}\n                  onChange={(e) => this.answerCheckboxQuestion(e, checkBoxRef, option)}\n                />\n                <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                  <i className=\"icon-check\"></i>\n                </span>\n              </span>\n              <h4 className=\"radio__label pr-2\">{option.value}</h4>\n            </label>\n          </div>\n        )\n      })\n      options.push(\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"px-3 py-1 font-medium onboarding-next-button\"\n            onClick={() => this.gotoNextQuestion(this.state.question, this.state.parentId)}\n          >Done</Button>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"personalise\">\n          {/* Personalise Header */}\n          <PersonaliseHeader />\n\n          {/* Personalise Body */}\n          <div className=\"baby-registry-onboarding container mb-15\">\n            <div className=\"row justify-content-center mt-24\">\n              <div className=\"col-12 col-md-6\">\n                <span\n                  className=\"font-body onboading-question\">{this.state.question.title}</span>\n              </div>\n            </div>\n            <div className=\"row justify-content-center mt-6\">\n              <div className=\"col-12 col-md-6\">\n                {options.map(option => option)}\n              </div>\n            </div>\n          </div>\n\n          {/* Personalise Footer */}\n          <PersonaliseFooter\n            percentage={this.calulatePercentage(this.props.statePersonaliseAnswers.length, this.props.statePersonaliseQuestions.length)}\n            prevQuestion={() => { this.gotoPrevQuestion(this.state.prevQuestionId[this.state.prevQuestionId.length - 1]) }}\n            nextQuestion={() => { this.gotoNextQuestion(this.state.question, this.state.parentId) }}\n          />\n        </div>\n\n        <ToastContainer\n          position=\"top-center\"\n          className=\"personalise-toast-container\"\n          toastClassName=\"personalise-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n    statePersonaliseAnswers: state.personaliseCheckList.answers,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { setPersonaliseCheckListItems } from \"../../PersonaliseCheckListActions\";\nimport { connect } from \"react-redux\";\nimport './EditChecklist.scss';\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {\n  incrementCheckListQuantity,\n  setIsActiveCheckList,\n  decrementCheckListQuantity\n} from \"../../PersonaliseCheckListActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_UPDATED_CHECKLIST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\n\n// import {setCheckListItems} from \"../../../my-registry/MyRegistryActions\";\n\nclass PersonaliseChecklist extends React.Component {\n  componentDidMount() {\n    this.getAllCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n  getAllCategories = (registryId, dispatch) => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryId)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.errors || res.data.error) {\n        // TODO: Add toast\n        console.log('Something went wrong-->', res.data.errors)\n        return;\n      } else {\n        let resData = res.data.data.categories\n        let finalCheckList = []\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n\n          // For Sub-Categories\n          for (let subCategory of category.subCategories) {\n            let tempSubCategory = []\n            if (subCategory.isParent) {\n\n              // For subProductType\n              for (let subProductType of subCategory.subProductTypes) {\n                subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ' months)'\n                if (subProductType.totalItemsCount <= 0) {\n                  subProductType.totalItemsCount = 1\n                  subProductType['isAdded'] = false\n                } else {\n                  subProductType['isAdded'] = true\n                }\n                tempSubCategory.push(subProductType)\n              }\n            }\n            else {\n              if (subCategory.totalItemsCount <= 0) {\n                subCategory.totalItemsCount = 1\n                subCategory['isAdded'] = false\n              } else {\n                subCategory['isAdded'] = true\n              }\n              tempSubCategory.push(subCategory)\n            }\n            finalSubCategory.push(...tempSubCategory)\n          }\n          let tempCategory = { ...category }\n          tempCategory.subCategories = finalSubCategory\n          finalCheckList.push(tempCategory)\n\n        }\n        dispatch(setPersonaliseCheckListItems(finalCheckList))\n      }\n    }).catch(err => {\n      console.error('Something went wrong-->', err);\n    })\n  }\n\n  closeAndSavePersonaliseCheckList = (event) => {\n    event.preventDefault();\n    let finalCheckListData = []\n    let tempStateCheckList = [...this.props.stateCheckList]\n    for (let category of tempStateCheckList) {\n      for (let subCategory of category.subCategories) {\n        let tempData = null\n        if (subCategory.isAdded) {\n          tempData = {\n            'categoryId': subCategory.id,\n            'itemsCount': subCategory.totalItemsCount\n          }\n          finalCheckListData.push(tempData)\n        }\n      }\n    }\n\n    let registryId = this.props.stateRegistryInfo.id\n    let data = {\n      query: SAVE_UPDATED_CHECKLIST,\n      variables: {\n        registryId: registryId,\n        itemCountData: finalCheckListData\n      },\n    }\n    \n    graphQL(data).then(res => {\n      if (res.data) {\n        toast.success((\n          <p>Personalise Checklist Updated Successfully</p>\n        ))\n        this.props.history.push(routes.REGISTRY.HOME)\n      }\n\n    }).catch(err => {\n      console.error(err.message)\n      toast.error((\n        <p>Some error occurred.</p>\n      ))\n    })\n  }\n\n  gotoPersonaliseQuestions = (event) => {\n    event.preventDefault();\n    this.props.history.push(routes.PERSONALIZE.HOME)\n  }\n\n  render() {\n    return (\n      // TODO: API call\n      <div className=\"personalise-checklist\">\n        {/* Header */}\n        <div className=\"py-2 personalise-checklist-header font-body font-medium\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col \">Edit Checklist</div>\n              <div className=\"col d-flex align-items-center justify-content-end\">\n                <a className=\"mr-6 personalise-header-link\" onClick={(e) => { this.gotoPersonaliseQuestions(e) }}>Take our quiz</a>\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1  font-medium done-btn\"\n                    onClick={(e) => { this.closeAndSavePersonaliseCheckList(e) }}\n                  >I’m Done</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* All categries selection body */}\n        {this.props.stateCheckList.map((parentCategories, i) => (\n          <div className=\"mt-6 container\" key={parentCategories.categoryName + \"-\" + i}>\n            <div className=\"checklist-title pb-4 body-text\">\n              {parentCategories.categoryName}\n            </div>\n            <div className=\"row mt-4\">\n              {parentCategories.subCategories.map((subCategories, i) => (\n                <div className=\"col-3 mb-5\" key={subCategories.id}>\n                  <div className={[\"checklist-card pl-2 pr-3 py-3\",\n                    !subCategories.isAdded ? \"add-checklist-bg\" : \"\"].join(' ')\n                  }>\n                    <div className=\"d-flex mb-4 checklist-action-btn\">\n                      <div className=\"text-body font-medium align-self-center\">{subCategories.categoryName}</div>\n                      {subCategories.addedItemsCount <= 0 ?\n                        <div className=\"ml-auto\">\n                          <button className={[\"checklist-add-btn\",\n                            !subCategories.isAdded ? \"checklist-icon-plus\" : \"icon-close\"].join(' ')}\n                            onClick={() => this.props.dispatch(setIsActiveCheckList(subCategories.id, !subCategories.isAdded))} />\n                        </div>\n                        : null\n                      }\n                    </div>\n                    <div className=\"d-flex align-items-center\">\n                      <Counter\n                        counter={subCategories.totalItemsCount}\n                        incrementHandler={() => this.props.dispatch(incrementCheckListQuantity(subCategories.id, 1))}\n                        decrementHandler={() => this.props.dispatch(decrementCheckListQuantity(subCategories.id, 1))}\n                      />\n                      {subCategories.addedItemsCount > 0 ?\n                        <span className=\"ml-auto text-sm item-count-label\">{subCategories.addedItemsCount} added</span>\n                        : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        <Toast />\n      </div>\n    );\n  }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport \"./GuestView.scss\";\nimport {connect} from \"react-redux\";\nimport {updateGuestViewRegistry} from \"../../utils/commonFunction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\n\nclass GuestView extends React.Component {\n  BABY_GIFTS_URL = \"https://monicaandandy.com/collections/baby-gifts\"\n  render() {\n\n    if (this.props.stateGuestViewRegistry.urlSlug !== this.props.match.params.registrySlug) {\n      updateGuestViewRegistry(this.props.match.params.registrySlug, this.props.dispatch)\n    }\n\n    // When registry doesn't exists\n    if (this.props.stateGuestViewRegistry.notFound) {\n      return <h1>Registry not found</h1>;\n    }\n\n    if (this.props.stateGuestViewRegistry.id) {\n      // WHen registry exists and it is not public\n      if (this.props.stateGuestViewRegistry.isPublic === false) {\n        let registryUsers = [this.props.stateGuestViewRegistry.user.firstName]\n        if (this.props.stateGuestViewRegistry.user.partnerUser){\n          registryUsers.push(this.props.stateGuestViewRegistry.user.partnerUser.firstName)\n        }\n        return (\n          <div className=\"container mt-17\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n                <h1>{this.props.stateGuestViewRegistry.displayName}</h1>\n                {/*TODO: Display partner name as well below*/}\n                {registryUsers.length === 1 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> is still curating their baby registry</h4> : null}\n                {registryUsers.length === 2 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> and <span className=\"text-capitalize\">{registryUsers[1]}</span> are still curating their baby registry</h4> : null}\n\n                <Button\n                  variant=\"primary\"\n                  className=\"py-1 px-2 mt-3 text-body font-medium\"\n                  onClick={() => window.location.href = this.BABY_GIFTS_URL}\n                >Shop baby Gifts</Button>\n              </div>\n            </div>\n          </div>\n        )\n      } else {\n        // When registry exists and it is public\n        return <h1>Registry is public</h1>\n      }\n    }\n\n\n    // Default return\n    return <></>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stateGuestViewRegistry: state.guestView.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestView);","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport Onboarding from \"../onboarding/Onboarding\";\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {updateRegistryDetail, getOnboardingQuestions} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport {verifyAccessToken} from \"../../api/axios\";\nimport {setLoggingStatus, updateRegistryInfo} from \"../registry/RegistryActions\";\nimport PersonaliseChecklist from \"../personalise-checklist/PersonaliseChecklist\";\nimport EditChecklist from \"modules/personalise-checklist/components/edit-checklist/EditChecklist\";\nimport GuestView from \"../guest-view/GuestView\";\n\nclass ViewsContainer extends React.Component {\n\n  state = {\n    displayContent: false\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    const access_token = cookies.get(\"access_token\")\n    if (access_token) {\n      verifyAccessToken({token: access_token}).then(res => {\n        if (res.data.data.customer) {\n          this.props.dispatch(setLoggingStatus(true))\n          if (res.data.data.registries.length > 0) {\n            updateRegistryDetail(this.props.dispatch);\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n        this.props.dispatch(setLoggingStatus(false))\n        this.props.dispatch(updateRegistryInfo({notFound: true}))\n      }).finally(() => {\n        this.setState({\n          displayContent: true\n        })\n      })\n    } else {\n      this.setState({\n        displayContent: true\n      })\n      this.props.dispatch(updateRegistryInfo({notFound: true}))\n    }\n  }\n\n  render() {\n\n    // if (this.props.stateRouter.location.pathname.search(route.GUEST_VIEW.HOME) !== -1) {\n    //   console.log(route.GUEST_VIEW.HOME+\"/:registryName\")\n    //   return <Redirect to={this.props.stateRouter.location.pathname}/>\n    // }\n\n    // Redirecting user to onboarding is no registry found\n    // if (this.props.stateRouter.location.pathname.search(route.ONBOARDING.HOME) === -1 && !this.props.stateRegistryInfo.id && !this.state.foundRegistry && this.state.displayContent) {\n    //   console.log(this.props.stateRouter.location.pathname)\n    //   return <Redirect to={route.ONBOARDING.HOME}/>\n    // }\n\n    if (this.props.stateOnboardingQuestions.length <= 0) {\n      getOnboardingQuestions(this.props.dispatch)\n    }\n\n    console.log({...this.state})\n    return (\n      <>\n        {this.state.displayContent ?\n          <Switch>\n            <Route exact path={route.GUEST_VIEW.HOME+\"/:registrySlug\"} component={GuestView}/>\n            <Route exact path={route.PERSONALIZE.CHECKLIST} component={EditChecklist}/>\n            <Route exact path={route.PERSONALIZE.HOME} component={PersonaliseChecklist}/>\n            <Route exact path={route.ONBOARDING.HOME + \"/:questionId?\"} component={Onboarding}/>\n            <Route path={route.REGISTRY.HOME} component={RegistryHero}/>\n            <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n            <Route render={() => <div>DEFAULT</div>}/>\n          </Switch>\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}