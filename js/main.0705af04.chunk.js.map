{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","modules/personalise-checklist/PersonaliseCheckListActions.js","modules/personalise-checklist/PersonaliseCheckListReducer.js","modules/onboarding/OnboardingAction.js","modules/onboarding/OnboardingReducer.js","modules/guest-view/GuestViewAction.js","modules/guest-view/GuestViewReducer.js","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/modal-component/ModalComponent.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","api/queries.js","api/config.js","api/axios.js","utils/constants.js","api/mutations.js","utils/commonFunction.js","modules/commons/components/button-component/ButtonComponent.jsx","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/import-registry/category-pill/CategoryPill.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/import-registry/ImportRegistry.jsx","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/commons/components/cash-fund-card/cash-fund-card-not-added/CashFundCardNotAdded.jsx","modules/commons/components/cash-fund-card/CashFundCard.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/toggle-pills/TogglePills.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/components/view-filter/ViewFilter.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/commons/components/toast/Toast.jsx","modules/registry-hero/component/todo-widget/TodoWidget.jsx","modules/registry-hero/RegistryHero.jsx","modules/commons/components/questions/option/Option.jsx","modules/onboarding/Onboarding.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/personalise-checklist/components/personalise-header/PersonaliseHeader.jsx","modules/personalise-checklist/components/personalise-footer/PersonaliseFooter.jsx","modules/personalise-checklist/PersonaliseChecklist.jsx","modules/personalise-checklist/components/edit-checklist/EditChecklist.jsx","modules/guest-view/GuestView.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","SET_ANOTHER_STORE_REGISTRY_ITEMS","SET_CASH_FUND_CATEGORIES","addRecommendedProduct","params","toggleMustHaveProduct","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","setAnotherStoreRegistryItems","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","anotherStoreRegistry","cashFundCategories","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","setguestViewRegistry","setViewFilterCategory","setChildViewFilter","clearViewFilter","viewRegistryProducts","activeSortFilter","sortId","sortTitle","guestViewRegistry","viewFilterApplied","REGISTRY_ACTION_TYPES","updateRegistryInfo","setLoggingStatus","setOnboardingRegistry","info","loggedIn","todo","onboardingRegistry","PERSONALISE_CHECKLIST_ACTION_TYPES","setPersonaliseCheckListItems","addPersonalizeQuestion","addPersonalizeQuestionAnswer","updatePersonalizeQuestionAnswer","newSubCategory","subCategories","subCategory","totalItemsCount","setIsAddedCheckList","isAdded","editedPersonaliseCheckList","questions","answers","ONBOARDING_ACTION_TYPES","addQuestionAnswer","updateQuestionAnswer","GUEST_VIEW_ACTION_TYPES","updateGuestViewInfo","updated","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","personaliseCheckList","PersonaliseCheckListReducer","onboarding","Onboarding","guestView","GuestViewReducer","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","trackGifts","shower","announcements","more","toDos","es","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","TRACK_GIFTS","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","ONBOARDING","PERSONALIZE","CHECKLIST","GUEST_VIEW","MoreOption","props","className","join","iconClass","buttonClass","data","map","option","index","key","onClick","name","ModalComponent","Modal","show","size","titleContent","Header","headerContent","closeModal","Body","children","footer","Footer","Counter","decrementHandler","counter","incrementHandler","CardItem","src","image","originalSrc","alt","href","productLink","tabindex","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","gql","GET_CATEGORIES","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","GET_REGISTRIES","GET_PERSONALIZE_QUESTIONS","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","axiosInstanceNoToken","axiosInstanceNoHeader","graphQLNoToken","post","graphQLNoHeader","graphQL","getAnotherRegistryProducts","axiosInstanceMultipart","graphQLMultipart","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","FILTERS","BOOKMARKLET_SCRIPT","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","REGISTER_USER","SAVE_QUESTION_RESPONSE","LOGIN_USER","ADD_PARTNER_ACCOUNT","SAVE_UPDATED_CHECKLIST","SAVE_SINGLE_QUESTION_RESPONSE","CREATE_REGISTRY","getProducts","registryId","dispatch","query","variables","parseInt","then","res","responseData","registryItems","newItemObj","registryitemImage","imageUrl","console","log","finalData","registryCategories","catch","err","error","response","removeProductFromCartHandler","card","registryItemId","getCategories","toast","message","getRefinedCategory","categoryName","categoryType","isDesired","isExcluded","addedItemsCount","isParent","getAllCategories","getAll","subCategoriesIsExcluded","parentCategory","newParentCategory","registrySubCategories","newSubCategories","cat","refinedSubCate","subProductTypes","registrySubProductTypes","subProduct","operationName","errors","finalCategories","allCategories","updateRegistryDetail","registries","registryData","currentRegistryInfo","notFound","updateRegistryDetailState","e","getOnboardingQuestions","isPersonalize","question","followUpQuestions","followUpQuestion","isAnswered","dataURItoBlob","dataURI","fileType","fileName","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","ButtonComponent","React","forwardRef","ref","btnVariantClass","variant","disabled","AddedCard","useDispatch","stateGuestViewRegistry","useSelector","stateRecommendedProducts","stateFilterApplied","stateAddedProducts","stateRegistryInfo","useState","setRecommendedProducts","setShow","modalTitle","showRemoveModel","setShowRemoveModel","moreOptionsData","Number","unshift","categoryRecommended","jsonObject","JSON","stringify","uniqueSet","Set","Array","from","parse","showRecommendation","removeConfirmFooter","DragHandle","sortableHandle","disabledDrag","multipleCategories","draggable","isViewCard","cardId","newRecommended","incrementQuantity","decrementQuantity","existingProduct","sku","storeItemUrl","parseFloat","shopifyItemId","tags","success","CheckList","gotoPersonalize","event","preventDefault","isQuizPending","editablePersonalizeQuestions","this","t","style","width","percentage","Component","withTranslation","withRouter","CheckListItems","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","subProductType","handleToggleEvent","checkListIconEl","checkListHeader","current","firstChild","classList","toggle","createRef","subListItem","Accordion","Card","Toggle","as","eventKey","Collapse","connect","BookmarkletSection","updateModal","modalBody","modalTitleContent","modalFooterButtons","modalCloseHandler","setState","openAddBookmarkletModal","prevState","addItemToRegistry","TogglePills","activeClass","text","RadioButton","checked","onChange","changeHandler","textClass","display","count","CheckBox","value","SelectCategory","categories","setCategories","searchedCategories","setSearchedCategories","currentCategory","selectedCategory","setSelectedCategory","useEffect","resData","finalCheckList","finalSubCategory","tempSubCategory","tempCategory","getCategoriesToDisplay","find","allSelectedCategory","handleSelectionCategory","categorySelectBody","saveButton","changeCurrentCategory","searchInputRef","changeLinkRef","placeholder","target","searchMatched","toLowerCase","match","searchCategoryInputChangeHandler","onFocus","contains","add","searchInputFocusHandler","onBlur","remove","searchInputBlurHandler","focus","changeLinkClickHandler","showModal","CategoryPill","removeCategory","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","hideProductDetails","setHideProductDetails","showLoading","setshowLoading","productInfo","productImage","productName","howToGift","note","mustHave","groupGift","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","ev","persist","changeProductName","noteChangeHandler","changeNote","selectFileHandler","files","file","includes","reader","FileReader","onload","changeProductImage","result","readAsDataURL","submitStoreUrl","keyCode","URL","url","productUrl","changeProductUrl","reqData","item_url","ctgry","getScrapedProduct","img","newPrice","char","isInteger","getRefinedPrice","onKeyUp","class","role","click","accept","rows","priceChangeHandler","addMyOwn","openCategorySelect","categoryId","finalcategory","removeSelectedCategory","toggleGroupGift","togglePurchased","changeHowToGift","ViewRecommend","viewDetailsBtn","cardRef","clearModalData","alert","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","childCategory","commonGetProducts","commonGetCategories","checkDataValidity","storeProduct","stateAnotherStoreProduct","storeUrl","storeName","hostname","formData","FormData","ADD_REGISTRY_ITEM_MUTATION","input","items","append","images","status","anotherStoreItemViewDetail","open","addOnMyOwnClickHandler","newCategory","displayName","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","products","height","offsetHeight","Filter","filterData","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","childId","parentId","childIndex","indexOf","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ImportGiftCard","ImportRegistry","registryUrl","errorMessage","loading","activeCategoryProductIndex","currentRegistryLink","inputHasFocus","inputRef","changeLoadingState","registryUrlChangeHandler","checkUrlAndGetRegistryItems","getAnotherRegistryProductsInfo","registryUrlKeyUpHandler","store_name","store_url","newProducts","finally","openSelectCategoryModal","productIndex","stateAnotherStoreRegistry","setProductCategories","newProductState","changeRegistryUrl","bind","AddGift","categoryList","openAddGiftModal","importGiftAnotherStoreHandler","importRegistry","validImportRegistryData","getCleanedRegistryItems","cleanedRegistryItems","itemStore","stores","newStore","importRegistryClickHandler","jsonGraphQL","addRegistryItems","FilterSection","deleteChipHandler","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","productCount","stateFilteredProducts","CashFundCardNotAdded","addButtonClickHandler","CashFundCard","selectedClass","AddCashFundModal","MAX_IMAGE_SIZE","cashFundImage","cashFundName","cashFundAmount","hideTotal","cashFundType","cashFundNote","markCompleted","imageRef","validateCashFundData","addCashFundClickHandler","isGroupGift","markAsCompleted","isCashFund","modalFooterButton","newProductImage","cashFundNameChangeHandler","cashFundAmountChangeHandler","cashFundHideTotalChangeHandler","cashFundTypeChangeHandler","stateCashFundCategories","changedCategory","cashFundNoteChangeHandler","mustHaveClickHandler","markCompletedClickHandler","allCashFundCategories","foundCategory","categoryData","cashFundCategory","selected","Everything","showCashFundModal","cashFundProduct","openCashFundModal","setCashFundCategoryAndOpenModal","closeCashFundModal","updateFilterList","newFilterList","isPurchased","isReserved","productId","mustHaveValue","setAllRecommendation","a","recommendedCategory","parentCat","recommendedCat","productType","rData","getSortedProducts","stateCategories","productsToAppend","allProducts","added","total","recommendations","childFilterArray","categoryFound","addedRecommendations","groupedProducts","recommendationCount","totalProducts","totalRecommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","hasCashFund","stateProducts","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","modalFooter","registryImages","defaultImages","fileChangeHandler","imageId","updateRegistry","closeCoverImagePicker","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","siteHostName","location","host","urlSlug","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","setRegistryUrl","registryError","setRegistryError","inputContainerRef","changeRegistryVisibility","newRegistry","readOnly","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","handleGuestView","handleDisableViewGuest","COVER_PIC_OPTIONS","backgroundImage","activeOptionClass","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","filterCat","childCat","stateActiveSortFilter","stateViewRegistryProducts","ViewFilter","stateCategoriesInfo","filterCategoryLimit","setFilterCategoryLimit","getLimitOfFliter","limit","localFilterCategories","giftStatus","parentFilterID","limitLength","isFound","newFilterCateoryLimit","categorylimit","changeParentLimitHandler","ViewRegistryHome","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","getParentCategory","sortByMustHave","productList","sort","b","sortByLowToHigh","sortByHighToLow","isFeatured","productData","filteredSortProducts","sortedProducts","sortedData","newSortedProducts","appliedCategoryProduct","tempNewSortedProducts","temp","prod","getSortedProductsByFilters","viewRegistryProductsId","addProduct","getSortedFilteredProducts","onSortEnd","oldIndex","newIndex","itemsOldPosition","arrayMove","position","oldPosition","updateViewRegistryPosition","helperClass","axis","lockAxis","useDragHandle","ViewRegistry","Toast","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","closeButton","parentElement","dismiss","TodoWidget","performTodoAction","stateTodo","RegistryHero","useTranslation","RegistryHeroData","to","babyArrival","Option","MAIL_FORMAT","LOGIN_TITLE","SIGNUP_TITLE","PARTNER_TITLE","RADIO","PARTNER","login","toastMessage","signUpErrors","signInErrors","clearErrorState","createRegistry","submitAllAnswers","checkValidEmail","email","optionalRegistryId","stateOnboardingAnswers","stateOnboardingRegistry","returnToURL","answer","questionOptionInput","optionText","origin","addRegistryMultipleQuestionOption","redirectionUrl","clearToastMessage","setToastMessage","gotoNextQuestion","nextQuestionId","returnNext","idToMatch","stateOnboardingQuestions","ques","stateLoggedIn","setQuestionBasedOnId","questionId","finalQuestion","foundQuestion","parentQuestion","addAnswerToState","answerRadioQuestion","watchNextBtn","nextBtnState","answerDataQuestion","dateCheck","now","day","getDate","slice","month","getMonth","getFullYear","textInputTypeChangeHandler","inputRefs","enableBtn","changeLoginState","refs","setErrorBasedOnResponse","parentErrors","subErrors","newErrorState","signInClickHandler","emailRef","passwordRef","password","loginUser","set","token","registryRes","getSignInContent","signUpClickHandler","nameRef","registerUser","getSignUpContent","savePartnerDetail","partnerDetail","firstName","addPartnerAccount","getPartnerContent","undefined","onpopstate","pathname","search","stateRouter","answerInputType","setTimeout","staticQuestionTitle","helpText","min","content","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","customer","redirectVerifyToken","VerifyToken","verifyToken","PersonaliseFooter","prevQuestion","nextQuestion","PersonaliseChecklist","prevQuestionId","activeQuestionId","checkBoxSelected","CHECKBOX","calulatePercentage","answerQuestionCount","totalQuestionCount","totalAnwer","statePersonaliseQuestions","Math","ceil","isActiveIdPresent","gotoPrevQuestion","popPrevQuestionId","pop","statePersonaliseAnswers","finalAnswer","submitQuestionAnswer","answerCheckBoxQuestion","op","selectCheckboxAnswer","checkBoxRef","registryQuestionOptionInput","setStateQuestionWithSelectedAnswer","answerOpt","ans","questionOption","opt","prevQuestionID","currentQuestion","selectedOptionID","closeAndSavePersonaliseCheckList","finalCheckListData","tempStateCheckList","tempData","registryCategoryId","itemsCount","itemCountData","gotoPersonaliseQuestions","parentCategories","GuestView","BABY_GIFTS_URL","registrySlug","registryAsGuest","registryUsers","user","partnerUser","ViewsContainer","displayContent","foundRegistry","access_token","EditChecklist","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0705af04.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\",\n\n  // ANOTHER STORE REGISTRY\n  SET_ANOTHER_STORE_REGISTRY_ITEMS: \"SET_ANOTHER_STORE_REGISTRY_ITEMS\",\n\n  // SET CASH FUND CATEGORIES\n  SET_CASH_FUND_CATEGORIES: \"SET_CASH_FUND_CATEGORIES\"\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}\n\n//Another store Registry Items\nexport const setAnotherStoreRegistryItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n//Set Cash Fund Categories\nexport const setCashFundCategories = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES,\n\t\tpayload: params\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreRegistry = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nconst cashFundCategories = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct,\n  anotherStoreRegistry,\n  cashFundCategories\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_GUEST_VIEW: \"IS_GUEST_VIEW\",\n  SET_VIEW_FILTER_CATEGORY: \"SET_VIEW_FILTER_CATEGORY\",\n\n  // Filter\n\tSET_VIEW_PARENT_FILTER: \"SET_VIEW_PARENT_FILTER\",\n\tSET_VIEW_CHILD_FILTER: \"SET_VIEW_CHILD_FILTER\",\n\tCLEAR_VIEW_FILTER: \"CLEAR_VIEW_FILTER\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setguestViewRegistry = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW,\n    payload: params\n  }\n}\n\n// View Filter Category Section\nexport const setViewFilterCategory = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n\n// Filter Section\n\nexport const setParentViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewFilter = () => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER,\n\t}\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst guestViewRegistry = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst viewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    guestViewRegistry,\n    filterCategory,\n    viewFilterApplied\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\",\n  SET_LOGGING_STATUS: \"SET_LOGGING_STATUS\",\n  SET_TODO : \"SET_TODO\",\n  SET_ONBOARDING_REGISTRY: \"SET_ONBOARDING_REGISTRY\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}\n\nexport const setLoggingStatus = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS,\n    payload: params\n  }\n}\n\nexport const setTodo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_TODO,\n    payload: params\n  }\n}\n\nexport const setOnboardingRegistry = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY,\n    payload: params\n  }\n}\n","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst todo = (state = defaultData.todo, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_TODO:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst onboardingRegistry = (state = \"\", action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo,\n  loggedIn,\n  todo,\n  onboardingRegistry\n});","export const PERSONALISE_CHECKLIST_ACTION_TYPES = {\n\n\tGET_ALL_CHECKLIST_ITEMS: \"GET_ALL_CHECKLIST_ITEMS\",\n\tINCREMENT_CHECKLIST_QUANTITY: \"INCREMENT_CHECKLIST_QUANTITY\",\n\tDECREMENT_CHECKLIST_QUANTITY: \"DECREMENT_CHECKLIST_QUANTITY\",\n\tCHECKLIST_ADDED: \"CHECKLIST_ADDED\",\n\n\tPERSONALISE_ADD_QUESTION: \"PERSONALISE_ADD_QUESTION\",\n    PERSONALISE_ADD_ANSWER: \"PERSONALISE_ADD_ANSWER\",\n    PERSONALISE_UPDATE_ANSWER: \"PERSONALISE_UPDATE_ANSWER\"\n}\n\nexport const incrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\n\nexport const setPersonaliseCheckListItems = params => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\nexport const setIsActiveCheckList = (id, isAdded) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED,\n\t\tpayload: { id, isAdded }\n\t}\n}\n\nexport const addPersonalizeQuestion = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION,\n\t  payload: params\n\t}\n  }\n  \n  export const addPersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER,\n\t  payload: params\n\t}\n  }\n  \n  export const updatePersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER,\n\t  payload: params\n\t}\n  }","import {PERSONALISE_CHECKLIST_ACTION_TYPES} from \"./PersonaliseCheckListActions\";\nimport {combineReducers} from \"redux\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.totalItemsCount += quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id && subCategory.totalItemsCount > 1) {\n        subCategory.totalItemsCount -= quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst setIsAddedCheckList = (state, payload) => {\n  let {\n    id,\n    isAdded\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.isAdded = isAdded;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\n// Reducers\nconst editedPersonaliseCheckList = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS:\n      return [...action.payload];\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n      case PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED:\n        return setIsAddedCheckList(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER:\n      return [...state, action.payload]\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  editedPersonaliseCheckList,\n  questions,\n  answers\n})","export const ONBOARDING_ACTION_TYPES = {\n  ADD_QUESTION: \"ADD_QUESTION\",\n  ADD_ANSWER: \"ADD_ANSWER\",\n  UPDATE_ANSWER: \"UPDATE_ANSWER\"\n}\n\nexport const addOnboardingQuestion = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_QUESTION,\n    payload: params\n  }\n}\n\nexport const addQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_ANSWER,\n    payload: params\n  }\n}\n\nexport const updateQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.UPDATE_ANSWER,\n    payload: params\n  }\n}","import {ONBOARDING_ACTION_TYPES} from \"./OnboardingAction\";\nimport {combineReducers} from \"redux\";\n\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_QUESTION:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_ANSWER:\n      return [...state, action.payload]\n    case ONBOARDING_ACTION_TYPES.UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  questions,\n  answers\n});","export const GUEST_VIEW_ACTION_TYPES = {\n  UPDATE_GUEST_VIEW_INFO: \"UPDATE_GUEST_VIEW_INFO\"\n}\n\nexport const updateGuestViewInfo = (params) => {\n  return {\n    type: GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO,\n    payload: params\n  }\n}\n","import {GUEST_VIEW_ACTION_TYPES} from \"./GuestViewAction\";\nimport {combineReducers} from \"redux\";\n\nconst guestViewRegistry = (state = {updated:false}, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: guestViewRegistry\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\nimport PersonaliseCheckListReducer from \"../modules/personalise-checklist/PersonaliseCheckListReducer\";\nimport Onboarding from \"../modules/onboarding/OnboardingReducer\";\nimport GuestViewReducer from \"../modules/guest-view/GuestViewReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  personaliseCheckList: PersonaliseCheckListReducer,\n  onboarding: Onboarding,\n  guestView: GuestViewReducer,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n  LOGIN: {\n    VERIFY_TOKEN: APP_HOME_ROUTE + \"/verify-token/:token\"\n  },\n  REGISTRY: {\n    HOME: APP_HOME_ROUTE\n  },\n\n  MY_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/home\",\n    GIFTS_ADDED: APP_HOME_ROUTE + \"/~/gifts-added\",\n    GIFT_TO_ADD: APP_HOME_ROUTE + \"/~/gifts-to-add\",\n    GIFT_VIEW: APP_HOME_ROUTE + \"/guest-view\",\n    TRACK_GIFTS: APP_HOME_ROUTE + \"/track_gifts\",\n    SHOWER: APP_HOME_ROUTE + \"/~/shower\",\n    ANNOUNCEMENTS: APP_HOME_ROUTE + \"/~/announcements\",\n    MORE: APP_HOME_ROUTE + \"/~/more\",\n    TO_DOS: APP_HOME_ROUTE + \"/~/to_dos\"\n  },\n\n  VIEW_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/view-registry\"\n  },\n\n  ONBOARDING: {\n    HOME: APP_HOME_ROUTE + \"/onboarding\"\n  },\n\n  PERSONALIZE:{\n    HOME: APP_HOME_ROUTE + \"/personalize-quiz\",\n    CHECKLIST: APP_HOME_ROUTE + \"/personalize-checklist\"\n  },\n\n  GUEST_VIEW: {\n    HOME: APP_HOME_ROUTE+\"\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")} />\n      <div className={[\"more-option-dropdown\"].join(\" \")}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;\n","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      {props.title || props.titleContent ?\n        <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n          <div>\n            <div className=\"d-flex justify-content-between\">\n              <h1>{props.title}</h1>\n              <div className=\"d-flex\">\n                {props.headerContent ? props.headerContent : null}\n                <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n              </div>\n            </div>\n          </div>\n\n          {/* OPTIONAL CONTENT IN TITLE PORTION */}\n          {props.titleContent ? props.titleContent : null}\n\n        </Modal.Header> : null}\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n        {/* MODAL CONTENT GOES HERE */}\n        {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image text-center\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image?.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink} tabindex>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import { gql } from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  registryCategories(registryId:$registryId){\n    id,\n    isExcluded,\n    itemsCount,\n    addedItemsCount,\n    totalItemsCount,\n    subCategoriesIsExcluded,\n    category{\n      id,\n      categoryName,\n      description,\n      categoryType {\n        id,\n        name\n      }\n      isParent,\n    },\n    registrySubCategories{\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n      subCategoriesIsExcluded,\n      category{\n        id,\n        categoryName,\n        description,\n        categoryType {\n          id,\n          name\n        }\n        isParent,\n      },\n      registrySubProductTypes{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName,\n          description,\n          categoryType {\n            id,\n            name\n          }\n          isParent,\n        },\n      }\n    }\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems($registryId:Int!){\n    registryItems(registryId:$registryId){\n      edges{\n        node{\n          id,\n          registryitemImage{\n            image\n          }\n          isGroupGift,\n          isReserved,\n          quantity,\n          mostWanted,\n          featuredOrder,\n          orderNo,\n          giftMessage,\n          isReserved,\n          isAmountReceived,\n          isPurchased,\n          title,\n          registryCategories {\n            id,\n            category{\n              categoryName,\n              categoryType {\n                id,\n                name\n              }\n            }\n          }\n          note,\n          item{\n            store{\n              id,\n              storeName\n            }\n            id,\n            shopifyItemId,\n            sku,\n            price,\n            imageUrl,\n          }\n        }\n      }\n    }\n  }\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:[Int]!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      registryCategories:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nconst GET_QUESTIONS = `\n  query getQuestions($registryId: Int, $isPersonalize: Boolean!){\n  questions(registryId: $registryId, isPersonalize: $isPersonalize){\n    id,\n    title,\n    answerInputType,\n    fields,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      action,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          options{\n            id\n            value\n            toastMessage\n            action\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY = `\n  query getGuestRegistry($urlSlug: String!){\n    registryAsGuest(urlSlug: $urlSlug){\n      id,\n      name,\n      displayName,\n      isPublic,\n      urlSlug,\n      user {\n        firstName,\n        partnerUser {\n          firstName\n        }\n      },\n      registryItems{\n        edges{\n          node{\n            id\n          }\n        }\n      }\n    }\n  }\n`\n\nconst GET_PERSONALIZE_QUESTIONS = `\nquery editablePersonalizeQuestions($registryId: Int!){\n  editablePersonalizeQuestions(registryId: $registryId){\n    id,\n    title,\n    answerInputType,\n    fields,\n    isPersonalize,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          isPersonalize,\n          options{\n            id\n            value\n            toastMessage\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_CASH_FUND_CATEGORIES = `\nquery getCashFund($registryId: Int!){\n  cashFundCategories(registryId:$registryId){\n    id\n    category{\n      id\n      categoryName\n    }\n  }\n}\n`\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_CASH_FUND_CATEGORIES\n};\n\n// Example to use queries added in home.jsx","const backendId = \"https://3.12.191.197\";\n// const backendId = \"http://localhost:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport { Cookies } from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: { \"Authorization\": cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\" }\n});\n\nconst axiosInstanceNoToken = axios.create({\n  baseURL: apiURL\n});\n\nconst axiosInstanceNoHeader = axios.create({\n  baseURL: apiURL\n});\n\nexport function graphQLNoToken(data) {\n  return axiosInstanceNoToken.post(\"/graphql\", data);\n}\n\nexport function graphQLNoHeader(data, options) {\n  return axiosInstanceNoHeader.post(\"/graphql\", data, options);\n}\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nexport function verifyAccessToken(data) {\n  return axiosInstanceNoToken.post(\"/user/verify/token\", data);\n}\n\nexport function getAnotherRegistryProducts(data) {\n  return axiosInstance.post(\"/registry/import\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n    VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL+\"/media/\"\n}\n\nexport const FILTERS = {\n  CATEGORIES_DISPLAY : \"Categories\",\n  PRICE_DISPLAY: \"Price\",\n  PRICE_DISPLAY_1: \"Under $50\",\n  PRICE_DISPLAY_2: \"$50 - $100\",\n  PRICE_DISPLAY_3: \"more than $100\",\n  STORE_DISPLAY: \"Store\",\n  MONICA_AND_ANDY_DISPLAY: \"Monica + Andy\",\n  ELSEWHERE_DISPLAY: \"Elsewhere\",\n  AVAILABLE_DISPLAY: \"Available\",\n  RESERVED_DISPLAY: \"Reserved\",\n  PURCHASED_DISPLAY: \"Purchased\",\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'https%3A%2F%2Fmonicaandandy-watertower.myshopify.com%2Fpages%2Fma_bady_registry_bookmarklet%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"\n\nexport const IMPORT_REGISTRY_EMAIL = \"storks@monicaandandy.com\"\n\nexport const M_A_STORE_NAME= \"monicaandandy\"","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    }\n  }\n}\n`\n\nconst REGISTER_USER = `\nmutation register_user($name: String!, $email: String!, $password: String!){\n  registerUser(registerInput:{\n      firstName:$name,\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\nconst SAVE_QUESTION_RESPONSE = `\nmutation addRegistryQuestionOption($registryId: Int!, $answers: [RegistryQuestionOptionInput]!, $returnTo: String){\n  addRegistryMultipleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $answers, returnTo: $returnTo){\n    message,\n    redirectionUrl\n  }\n}\n`\n\nconst SAVE_REGISTRY_DATA = `\nmutation saveRegistryData($registryData:RegistryInput!, $registryItems:[StoreInput]){\n  importRegistry(registryData: $registryData, registryItems: $registryItems) {\n    message\n  }\n}\n`\n\nconst LOGIN_USER = `\nmutation login_user($email: String!, $password: String!){\n  loginUser(loginInput:{\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\n\nconst ADD_PARTNER_ACCOUNT = `\nmutation addPartner($partnerDetail: AddPartnerAccountInput!){\n  addPartnerAccount(addPartnerAccountInput:$partnerDetail){\n    message\n  }\n}\n`\n\nconst SAVE_UPDATED_CHECKLIST = `\nmutation addDesiredChecklistItemCount($registryId:Int!, $itemCountData:[DesiredItemCountInput]!){\n  addDesiredChecklistItemCount(registryId: $registryId, itemCountData: $itemCountData){\n    message\n  }\n}\n`\n\nconst SAVE_SINGLE_QUESTION_RESPONSE = `\nmutation updateOrCreateRegistrySingleQuestionOption($registryId:Int!, $registryQuestionOptionInput: RegistryQuestionOptionInput!){\n  updateOrCreateRegistrySingleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $registryQuestionOptionInput){\n    message\n  }\n}\n`\n\nconst CREATE_REGISTRY = `\nmutation{\n  createRegistry{\n    registry{\n      id\n    },\n    message,\n    status\n  }\n}\n`\n\nexport {\n  TOGGLE_MUST_HAVE,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY,\n  UPDATE_VIEW_REGISTRY_POISTION,\n  UPDATE_REGISTRY_URL,\n  SAVE_REGISTRY_DATA,\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  SAVE_UPDATED_CHECKLIST,\n  SAVE_SINGLE_QUESTION_RESPONSE,\n  CREATE_REGISTRY\n};\n","import React from \"react\";\nimport {\n  GET_PRODUCTS,\n  REMOVE_REGISTRY_ITEM,\n  GET_CATEGORIES,\n  GET_REGISTRIES,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS\n} from \"../api/queries\";\nimport {graphQL, graphQLNoToken} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX} from \"./constants\";\nimport {\n  setRegistryProducts,\n  setCheckListItems,\n  toggleMustHaveProduct as toggleMustHaveProductAction,\n  setCashFundCategories\n} from \"../modules/my-registry/MyRegistryActions\";\nimport {CREATE_REGISTRY, TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION} from \"../api/mutations\";\nimport {setOnboardingRegistry, updateRegistryInfo} from \"../modules/registry/RegistryActions\";\nimport {setViewRegistryProducts} from \"../modules/view-registry/ViewRegistryActions\";\nimport {addOnboardingQuestion} from \"../modules/onboarding/OnboardingAction\";\nimport {addPersonalizeQuestion} from \"../modules/personalise-checklist/PersonaliseCheckListActions\";\nimport {updateGuestViewInfo} from \"../modules/guest-view/GuestViewAction\";\nimport {toast} from \"react-toastify\";\nimport reducerDefaultData from \"data/ReducerDefaultData.json\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    let responseData = res.data.data.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = {...item.node}\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n\n    console.log(res.data, responseData)\n    // TODO: change category\n    let finalData = responseData.filter(product => product.registryCategories.length > 0)\n    dispatch(setRegistryProducts(finalData))\n\n  }).catch(err => {\n    console.error(err.response)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch,) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n\n      toast.error((\n        <p><b>{card.title}</b> removed from your registry!</p>\n      ))\n\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n    toast.error((\n      <p>Some error occurred.</p>\n    ))\n  })\n}\n\nexport const getRefinedCategory = (category) => {\n  return ({\n    id: category.id,\n    categoryName: category.category.categoryName,\n    description: category.category.description,\n    categoryType: category.category.categoryType,\n    isDesired: category.isDesired,\n    isExcluded: category.isExcluded,\n    addedItemsCount: category.addedItemsCount,\n    totalItemsCount: category.totalItemsCount,\n    isParent: category.category.isParent,\n  })\n}\n\n\n// Get all categories\nexport const getAllCategories = (registryCategories, getAll) => {\n  // let finalCondition = category.subCategoriesIsExcluded ? \n  let parentCategories = registryCategories.filter(category => getAll ? true : (category.subCategoriesIsExcluded ? !category.subCategoriesIsExcluded : !category.isExcluded))\n  let finalCategories = parentCategories.map(parentCategory => {\n    let newParentCategory = getRefinedCategory(parentCategory)\n    let subCategory = parentCategory.registrySubCategories;\n    delete parentCategory.registrySubCategories\n    let newSubCategories = subCategory.filter(cat => getAll ? true : (cat.subCategoriesIsExcluded ? !cat.subCategoriesIsExcluded : !cat.isExcluded))\n    newSubCategories = newSubCategories.map(cat => {\n      let refinedSubCate = getRefinedCategory(cat)\n      let subProductTypes = cat.registrySubProductTypes.map(subProduct => getRefinedCategory(subProduct))\n      refinedSubCate['subProductTypes'] = subProductTypes.filter(category => getAll ? true : !category.isExcluded)\n      return refinedSubCate\n    })\n    newParentCategory['subCategories'] = newSubCategories\n    return newParentCategory\n  })\n\n  return finalCategories\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    operationName: \"getCategories\",\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n\n      // let tempAllCategories = getAllCategories(res.data.data.registryCategories, true)\n      // let cashFundCategories = []\n      //\n      // for (const category of tempAllCategories) {\n      //   for (const subCategory of category.subCategories) {\n      //     if (Number(subCategory.categoryType.id) === 2) {\n      //       cashFundCategories.push(subCategory)\n      //     }\n      //   }\n      // }\n      // dispatch(setCashFundCategories(cashFundCategories))\n      let finalCategories = getAllCategories(res.data.data.registryCategories, false)\n      if (finalCategories.length === 0) {\n        let allCategories = getAllCategories(res.data.data.registryCategories, true)\n        dispatch(setCheckListItems(allCategories))\n      } else {\n        dispatch(setCheckListItems(finalCategories))\n      }\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}\n\nexport const updateRegistryDetailState = (dispatch, registryData) => {\n  let currentRegistryInfo = null;\n\n  currentRegistryInfo = registryData[0].node;\n  if (currentRegistryInfo.image) {\n    currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n  }\n\n  if (currentRegistryInfo) {\n    dispatch(updateRegistryInfo({...currentRegistryInfo}))\n  } else {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.log(\"No registry found!\");\n  }\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        updateRegistryDetailState(dispatch, res.data.data.registries.edges)\n      } else {\n        dispatch(updateRegistryInfo({notFound: true}))\n      }\n    } catch (e) {\n      dispatch(updateRegistryInfo({notFound: true}))\n      console.error(e)\n    }\n  }).catch(err => {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.error(err.response ? err.response.data : null)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, oldPosition, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      dispatch(setViewRegistryProducts(oldPosition))\n      toast.error(\"Somerhing went wrong while re-arranging Products\")\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    }\n\n  }).catch(err => {\n    dispatch(setViewRegistryProducts(oldPosition))\n    console.error(err.message)\n  })\n}\n\nexport const addProductHandler = (card, stateAddedProducts, stateRegistryInfo, dispatch) => {\n  let existingProduct = stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n  const registryId = parseInt(stateRegistryInfo.id)\n  if (existingProduct.length === 0) {\n    const title = card.title\n    const category = card.category.id\n    const storeItemUrl = card.onlineStoreUrl\n    const sku = card.variants.edges[0].node.sku\n    const price = parseFloat(card.variants.edges[0].node.price)\n    const quantity = parseInt(card.quantity)\n    const shopifyItemId = card.id\n    const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      variables: {\n        registryId: registryId,\n        title: title,\n        category: category,\n        tags: [],\n        storeItemUrl: storeItemUrl ? storeItemUrl : '',\n        sku: sku,\n        price: price,\n        quantity: quantity,\n        shopifyItemId: shopifyItemId,\n        imageUrl: imageUrl,\n      }\n    }\n    graphQL(data).then(_ => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  } else {\n    let data = {\n      query: UPDATE_REGISTRY_ITEM,\n      variables: {\n        registryItemId: existingProduct[0].id,\n        quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n      }\n    }\n    graphQL(data).then(res => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  }\n}\n\nexport const getOnboardingQuestions = (dispatch) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: false\n    }\n  }\n\n  graphQLNoToken(reqData).then(res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addOnboardingQuestion(questions))\n    }\n  }).catch(err => {\n    // toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\n\nexport const getPersonalizeQuestions = (registryId, dispatch) => {\n  let reqData = {\n    query: GET_PERSONALIZE_QUESTIONS,\n    variables: {\n      registryId: registryId,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.editablePersonalizeQuestions) {\n      const questions = res.data.data.editablePersonalizeQuestions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addPersonalizeQuestion(questions))\n    }\n  }).catch(err => {\n    toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\nexport const updateGuestViewRegistry = (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_REGISTRY,\n    variables: {\n      urlSlug: urlSlug\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.registryAsGuest) {\n      dispatch(updateGuestViewInfo(res.data.data.registryAsGuest))\n    }\n  }).catch(err => {\n    dispatch(updateGuestViewInfo({notFound: true}))\n    if (err.response && err.response.data.errors) {\n      for (const error of err.response.data.errors) {\n        // TODO: Implement toast if necessary\n        console.log(error.message)\n      }\n    }\n  })\n}\n\nexport const createRegistry = dispatch => {\n  graphQL({query: CREATE_REGISTRY}).then(res => {\n    if (res.data.data) {\n      let registryId = res.data.data.createRegistry.registry.id\n      if (registryId) {\n        dispatch(setOnboardingRegistry(registryId))\n      }\n    }\n  }).catch(err => {\n    console.log(err.response)\n  })\n}\n\nexport const dataURItoBlob = (dataURI, fileType, fileName) => {\n    let byteString = atob(dataURI.split(',')[1]);\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    let blob = new Blob([ab], { type: fileType });\n    return new File([blob], fileName, {\n      type: fileType\n    })\n  }","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = React.forwardRef((props, ref) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n    ref={ref}\n    disabled={props.disabled ? props.disabled : false}\n  >{props.children}</button>\n})\n\nexport default ButtonComponent;","import React, { useState } from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport CardItem from \"../card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../button-component/ButtonComponent\";\n\nconst AddedCard = (props) => {\n\n  const dispatch = useDispatch();\n  let stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRecommendedProducts = useSelector(state => state.myRegistry.recommendedProducts)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const [recommendedProducts, setRecommendedProducts] = useState([])\n  const [show, setShow] = useState(false);\n  const modalTitle = `Recommended ${props.data.registryCategories[0].category.categoryName}`\n  const [showRemoveModel, setShowRemoveModel] = useState(false);\n\n  const showRecommendation = (category) => {\n    // Fetching all recommendations for that particular product category\n    let categoryRecommended = [...stateRecommendedProducts.filter(product => Number(category.id) === Number(product.category.id))]\n\n    // Removing duplicate products if found any\n    let jsonObject = categoryRecommended.map(JSON.stringify);\n    let uniqueSet = new Set(jsonObject);\n    categoryRecommended = Array.from(uniqueSet).map(JSON.parse);\n\n    setRecommendedProducts(categoryRecommended.map(product => {\n      // Resetting recommended product quantity\n      product.quantity = 1;\n      return product;\n    }));\n\n    setShow(true);\n  }\n\n  let moreOptionsData = [\n    {\n      name: \"Remove\",\n      action: () => setShowRemoveModel(true)\n    }\n  ]\n\n  if (Number(props.data.registryCategories[0].category.categoryType.id) !== 2) {\n    moreOptionsData.unshift({\n      name: \"View Recommendations\",\n      action: () => showRecommendation(props.data.registryCategories[0])\n    })\n  }\n\n\n  const removeConfirmFooter = (\n    <>\n      <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => setShowRemoveModel(false)}>Do not\n        remove</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={() => {\n        props.removeProductFromCartHandler();\n        setShowRemoveModel(false);\n      }}>Remove</Button>\n    </>\n  )\n\n  // Incrementing quantity of local recommended product\n  const incrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        product.quantity += quantity;\n      }\n      newRecommended.push(product)\n    }\n    setRecommendedProducts(newRecommended)\n  }\n\n  // Decrementing quantity of local recommended product\n  const decrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    let updated = false;\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        if (product.quantity - quantity <= 0) {\n          break;\n        } else {\n          product.quantity -= quantity;\n          updated = true;\n        }\n      }\n      newRecommended.push(product)\n    }\n\n    if (updated) {\n      setRecommendedProducts(newRecommended)\n    }\n  }\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i\n    className={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n    <div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n      <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n    </div>\n  </i>);\n\n  return (\n    <>\n      {!props.multipleCategories ?\n        <>\n          <div className=\"added-card py-5 pr-2\">\n            <div className=\"row\">\n              <div className=\"col-2\">\n              <div className=\"pl-2\">\n              {props.data?.item.imageUrl ?\n                <img\n                  className={[\"product-img d-block mx-auto\", Number(props.data.registryCategories[0].category.categoryType.id) === 2 ? \"added-card-product-image-radius\" : \"\"].join(\" \")}\n                  src={props.data?.item.imageUrl}\n                  alt={props.data?.item.title}/>\n                :\n                <div className=\"added-card-no-product-image\"/>\n              }\n\n            </div>\n\n              </div>\n              <div className=\"col\">\n                {/* TODO: change category */}\n                <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div>\n                <h2>{props.data.title}</h2>\n                <div className=\"d-flex mt-2\">\n                  <div className=\"\">${props.data.item.price}</div>\n                  {/*/!* TODO: Add Strikeout price dynamic *!/*/}\n                  {/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n                  {props.data.quantity > 1 ?\n                    <div className=\"ml-4 text-body d-flex\">\n                      Qty:{props.data.quantity}\n                      <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n                    </div> : <></>}\n                </div>\n              </div>\n              <div className={[\n                props.draggable ? \"col-4\" : \"col-3\",\n              ].join(\" \")}\n              >\n                <div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n                  {!stateGuestViewRegistry ?\n                    <button\n                      className={[\n                        \"mr-4 d-flex align-items-center added-gift-must-have-btn px-2\",\n                        props.data.mostWanted ? \"added-gift-must-have-active\" : \"added-gift-must-have-not-active\"\n                      ].join(\" \")}\n                      onClick={props.toggleMustHave}\n                    >\n                      <i className={[\"icon mr-1 d-block\", props.data.mostWanted ? \"heart-fill\" : \"heart\"].join(\" \")} />\n                      <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                    </button> :\n                    props.data.mostWanted ?\n                      <button\n                        className=\"mr-4 d-flex align-items-center added-gift-must-have-btn px-2 added-gift-must-have-active\">\n                        <i className=\"icon mr-1 d-block heart-fill\" />\n                        <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                      </button>\n                      : <></>\n                  }\n                  {!stateGuestViewRegistry ?\n                    <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\" />\n                    : <></>}\n                  {/* TODO: Add icon/rearrange icon */}\n                  {props.draggable && !stateGuestViewRegistry ?\n                    <DragHandle /> : <></>}\n                </div>\n              </div>\n            </div>\n          </div>\n          {props.isViewCard ?\n            <div className=\"row\">\n              <div className=\"col\">\n                {props.data.registryCategories.length > 1 ?\n                  props.data.registryCategories.map(category =>\n                    props.data.registryCategories[0].id !== category.id ?\n                      <div className=\"text-body font-medium p-6 added-card-other-category\">\n                        You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n                      </div>\n                      : null\n                  )\n                  : null}\n              </div>\n            </div> : null}\n        </>\n        :\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"text-body font-medium p-6 added-card-other-category\">\n              You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {props.multipleCategories.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n            </div>\n          </div>\n        </div>\n      }\n      <Modal\n        show={show}\n        closeModal={() => setShow(false)}\n        title={modalTitle}\n        size=\"xl\"\n      >\n        <div className=\"position-relative added-card-recommended\">\n          <div className=\"row category-recommended-products\">\n            {recommendedProducts.map((card, index) => (\n              <div className=\"col-4 mb-5\" key={\"CardItem-\" + index}>\n                <CardItem\n                  data={card}\n                  incrementQuantityHandler={() => incrementQuantity(card.id, 1)}\n                  decrementQuantityHandler={() => decrementQuantity(card.id, 1)}\n                  addProductHandler={() => addProductHandler(card, stateAddedProducts, stateRegistryInfo, dispatch)}\n                />\n              </div>\n            ))}\n            {recommendedProducts.length <= 0 ?\n              <div className=\"col text-center py-4\"><h4>No recommendation found</h4></div> : null}\n          </div>\n          {recommendedProducts.length > 0 ? <div className=\"added-card-recommends-bottom-gradient\" /> : null}\n        </div>\n      </Modal>\n      <Modal\n        show={showRemoveModel}\n        size=\"md\"\n        footer={removeConfirmFooter}\n      >\n        <h2>Do you want to remove {props.data.title}? </h2>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddedCard\n","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\nimport { GET_PERSONALIZE_QUESTIONS } from \"api/queries\";\nimport { graphQL } from \"api/axios\";\nimport { toast } from \"react-toastify\";\n\nclass CheckList extends React.Component {\n\n    gotoPersonalize = (event) => {\n        event.preventDefault();\n        // this.props.history.push(routes.PERSONALIZE.HOME)\n        \n        // If user has given answer or not\n        let isQuizPending = false\n        let reqData = {\n            query: GET_PERSONALIZE_QUESTIONS,\n            variables: {\n                registryId: 1,\n            }\n        }\n        // To route to edit-checklist or Quiz\n        graphQL(reqData).then(res => {\n            if (res.data.data.editablePersonalizeQuestions) {\n                const questions = res.data.data.editablePersonalizeQuestions\n                for (let question of questions) {\n                    if (question.answers.length > 0) {\n                        isQuizPending = false\n                        break;\n                    } \n                }\n                if(isQuizPending){\n                    this.props.history.push(routes.PERSONALIZE.HOME)\n                } else {\n                    this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n                }\n                \n            }\n        }).catch(err => {\n            toast.error(\"Error occurred while fetching questions\");\n            console.error(err);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"mb-2\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <a href=\"#\" className=\"ml-2 text-sm checklist-personalize\" tabindex onClick={(e) => this.gotoPersonalize(e)}>{this.props.t(\"checkList.personalize\")}</a>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\">\n                          <div className=\"check-list-progress mw-100\" style={{width: `${this.props.percentage}%`}}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nexport default withTranslation()(withRouter(CheckList));","import React, { Component } from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport { connect } from 'react-redux';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({ id, categoryName, addedItemsCount, totalItemsCount, subProductTypes }) => {\n      return (\n        <>\n          {subProductTypes.length === 0 ?\n            <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n              onClick={() => this.scrollToCategory(categoryName)}>\n              <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n\n              <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                {addedItemsCount >= totalItemsCount ?\n                  <div className=\"icon-done\" /> :\n                  (totalItemsCount > 0 ?\n                    <div className='ml-auto mb-auto align-self-end card-progress'>\n                      {addedItemsCount}/{totalItemsCount}\n                    </div>\n                    : null)}\n              </div>\n            </div> :\n            // Todo handle scroll\n            <>\n              <div className=\"card-body-contain align-items-center py-2\" key={categoryName + id}\n                onClick={() => this.scrollToCategory(categoryName)}>\n                <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n              </div>\n              <div className=\"text-sm\">\n                {subProductTypes.map((subProductType, index) => (\n                  <div className=\"sub-product-list d-flex py-2 ml-3 align-items-center\" key={subProductType.categoryName + subProductType.id}>\n                    <div>{subProductType.categoryName}</div>\n                    <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                      {subProductType.addedItemsCount >= subProductType.totalItemsCount ?\n                        <div className=\"icon-done\" /> :\n                        (totalItemsCount > 0 ?\n                          <div className='ml-auto mb-auto align-self-end card-progress'>\n                            {subProductType.addedItemsCount}/{subProductType.totalItemsCount}\n                          </div>\n                          : null)}\n\n                    </div>\n                  </div>\n                ))}\n\n              </div>\n            </>}\n        </>\n      )\n\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        {this.props.item.categoryName && this.props.item.isParent ?\n          <Card>\n            <Accordion.Toggle\n              onClick={this.handleToggleEvent}\n              as={Card.Header}\n              id={this.props.item.categoryName}\n              eventKey={this.props.item.categoryName}\n            >\n              <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n                <span className=\"checklist-icon-arrow\" />\n                <div className=\"ml-3 mb-0 w-100\">\n                  <div className=\"text-body\">{this.props.item.categoryName}</div>\n                  <div className=\"d-flex\">\n                    <div className=\"check-list-hearder-background\">\n                      <div className=\"check-list-hearder-progress mw-100\" style={{ width: `${(this.props.item.addedItemsCount / this.props.item.totalItemsCount) * 100}%` }} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Accordion.Toggle>\n            <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n              <Card.Body>\n                {subListItem}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          :\n          <p className=\"pl-6 mr-3 text-body others-cat\" onClick={() => this.scrollToCategory(this.props.item.categoryName)}>{this.props.item.categoryName}</p>\n        }\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              tabindex\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" tabindex className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a tabindex className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className={[\"checkbox d-flex align-items-center\", props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"checkbox__input mr-2\">\n        <input\n          type=\"checkbox\"\n          name={props.id}\n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n        />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n          <i className=\"icon-check\"></i>\n        </span>\n      </span>\n      <span className=\"radio__label text-sm\">{props.display} {props.count ? \"(\" + props.count + \")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React, { useState, useEffect } from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport { useSelector } from \"react-redux\";\nimport { getAllCategories } from \"../../../../utils/commonFunction\";\nimport CheckBox from \"../check-box/CheckBox\";\n\n// TODO: Change this Component to handle multiple categories\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [searchedCategories, setSearchedCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(props.currentCategory ? props.currentCategory : []);\n  // const [selectedCategory, setSelectedCategory] = useState([]);\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.registryCategories) {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = { ...category }\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n        }\n        setCategories(finalCheckList);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    props.changeCurrentCategory(selectedCategory)\n    props.closeModal(false);\n  }\n\n  const handleSelectionCategory = (subCategory) => {\n    let sameCatagory = [...selectedCategory].find(category => subCategory.id === category.id)\n    if (sameCatagory) {\n      let allSelectedCategory = selectedCategory.filter(category => subCategory.id !== category.id)\n      setSelectedCategory(allSelectedCategory)\n    }\n    else {\n      let allSelectedCategory = [...selectedCategory, subCategory]\n      setSelectedCategory(allSelectedCategory)\n    }\n  }\n\n  useEffect(() => {\n    if (props.currentCategory) {\n      setSelectedCategory(props.currentCategory)\n    } else {\n      setSelectedCategory([])\n    }\n  }, [props.currentCategory])\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const getCategoriesToDisplay = (cat) => {\n    return (\n      <div className=\"col\">\n        {cat.map(category => {\n          return (\n            <div className=\"mb-6\" key={\"select-\" + category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              <div className=\"category-columns\">\n                {category.subCategories ?\n                  category.subCategories.map(subCategory =>\n                    <div className=\"w-100 category-column\">\n                      <label className=\"checkbox d-flex align-items-center py-1 px-2 m-0\">\n                        <span className=\"checkbox__input mr-2\">\n                          <input\n                            type=\"checkbox\"\n                            name={subCategory.id}\n                            value={subCategory.id}\n                            checked={selectedCategory.find(category => category.id === subCategory.id) ? \"checked\" : \"\"}\n                            onChange={() => handleSelectionCategory(subCategory)}\n                          />\n                          <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                            <i className=\"icon-check\"></i>\n                          </span>\n                        </span>\n                        <span className=\"select_category_radio__label text-body\">{subCategory.categoryName}</span>\n                      </label>\n                    </div>\n                  )\n                  : null}\n              </div>\n\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      {searchedCategories.length > 0 ? getCategoriesToDisplay(searchedCategories) : getCategoriesToDisplay(categories)}\n    </div>\n  )\n\n  const saveButton = (\n    <Button\n      variant=\"primary\"\n      className=\"font-medium p-1\"\n      onClick={saveSelectedCategory}\n    >Done</Button>\n  )\n\n  // Search Category Section\n  const searchInputRef = React.createRef()\n  const changeLinkRef = React.createRef()\n\n  const focusSearchCategoryInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }\n\n  const searchInputFocusHandler = (e) => {\n    if (!e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.add(\"search-category-input-focus\");\n    }\n  }\n\n  const searchInputBlurHandler = (e) => {\n    if (e.target.value.length > 0) {\n      return\n    }\n\n    if (e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.remove(\"search-category-input-focus\");\n    }\n  }\n\n  const searchCategoryInputChangeHandler = (e) => {\n    if (e.target.value.length > 0) {\n      changeLinkRef.current.style.display = \"block\";\n\n      //  Searching through the category\n      let finalCategories = []\n      for (const parentCategory of categories) {\n        let newParentCategory = { ...parentCategory }\n        newParentCategory.subCategories = []\n        let searchMatched = false\n\n        for (const subCategory of parentCategory.subCategories) {\n          if (subCategory.categoryName.toLowerCase().match(e.target.value.toLowerCase())) {\n            searchMatched = true\n            newParentCategory.subCategories.push(subCategory)\n          }\n        }\n\n        if (searchMatched) {\n          finalCategories.push(newParentCategory)\n          searchMatched = false\n        }\n      }\n      setSearchedCategories(finalCategories)\n    } else {\n      changeLinkRef.current.style.display = \"none\";\n    }\n  }\n\n  const changeLinkClickHandler = (e) => {\n    e.preventDefault();\n    if (searchInputRef.current) {\n      if (searchInputRef.current.value.length > 0) {\n        searchInputRef.current.value = \"\"\n      }\n      changeLinkRef.current.style.display = \"none\";\n      searchInputRef.current.focus()\n      setSearchedCategories([])\n    }\n  }\n\n  const headerContent = (\n    <div className=\"align-self-center d-flex position-relative select-category-search-section mr-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Search category...\"\n        className=\"search-category-input pl-5 py-1 pr-1 text-body m-0\"\n        ref={searchInputRef}\n        onChange={(e) => searchCategoryInputChangeHandler(e)}\n        onFocus={(e) => searchInputFocusHandler(e)}\n        onBlur={(e) => searchInputBlurHandler(e)}\n      />\n      <i className=\"icon-search search-category-icon\" onClick={focusSearchCategoryInput} />\n      <a\n        tabindex\n        className=\"search-category-clear-link text-sm font-medium\"\n        href=\"#\"\n        onClick={(e) => changeLinkClickHandler(e)}\n        ref={changeLinkRef}>Clear all</a>\n    </div>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={saveButton}\n      headerContent={headerContent}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React from \"react\";\nimport \"./CategoryPill.scss\";\n\nconst CategoryPill = (props) => {\n  return (\n    <span className={[\"import-registry-category-pill text-sm p-1\", props.className ? props.className : \"\"].join(\" \")}>\n      {props.name}\n      <i className=\"icon-close remove-category-pill-icon ml-2\" onClick={props.removeCategory}/>\n    </span>\n  );\n}\n\nexport default CategoryPill;\n","import React, { createRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport { setAnotherStoreProductInfo } from \"modules/my-registry/MyRegistryActions\";\nimport { getScrapedProduct } from \"api/axios\";\nimport { toast } from 'react-toastify';\nimport CategoryPill from \"../import-registry/category-pill/CategoryPill\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst AddGiftAnotherStore = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n  const [hideProductDetails, setHideProductDetails] = useState(true);\n  const [showLoading, setshowLoading] = useState(false);\n\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      try {\n        new URL(ev.target.value);\n      } catch {\n        toast.error(\"Invalid Store Url\")\n        return;\n      }\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      let ctgry = category;\n      let data = defaultData.myRegistry.defaultAnotherStoreProductInfo;\n      data.category = ctgry\n      dispatch(setAnotherStoreProductInfo(data))\n      setshowLoading(true);\n      setHideProductDetails(true);\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = { ...productInfo };\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n          setshowLoading(false);\n          setHideProductDetails(false);\n        }\n      }).catch(err => {\n        setshowLoading(false);\n        toast.error(\"Invalid Store Url\")\n        return false;\n      })\n    }\n  }\n\n  const removeSelectedCategory = (categoryId) => {\n    if (productInfo.category.length) {\n      let finalcategory = productInfo.category.filter(category => category.id !== categoryId);\n      let prodInfo = { ...productInfo };\n      prodInfo.category = finalcategory;\n      dispatch(setAnotherStoreProductInfo(prodInfo));\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm font-medium add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                onKeyUp={(ev) => submitStoreUrl(ev)}\n                placeholder=\"Paste a product link that you want to add in your Monica and Andy Registry\" />\n              {/* <a className=\"text-sm\" href=\"#\">Change</a> */}\n            </div>\n          </div>\n\n          <div className={[\"row mt-4\", hideProductDetails ? \"\" : \"pt-6\"].join(\" \")}>\n            {hideProductDetails ? showLoading ?\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                  <h4 className=\"hide-product-details m-auto\">Please wait while we fetch the product details</h4>\n                </div>\n              </div>\n              :\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <h4 className=\"hide-product-details m-auto\">Please paste product link above to view details here</h4>\n                </div>\n              </div>\n              :\n              <>\n                <div className=\"col-5 add-gift-image-select\">\n                  <div className=\"mr-3\">\n                    {productImage?.value ?\n                      <img\n                        src={productImage.value}\n                        alt=\"Product Image\"\n                      />\n                      : null}\n\n                    <i className=\"icon-preview p-1\" onClick={() => {\n                      imageInput.current.click()\n                    }} />\n                    {/* TODO: Change above icon to camera icon */}\n\n                    <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                      onChange={(ev) => selectFileHandler(ev)} />\n                  </div>\n                </div>\n                <div className=\"col-7\">\n                  <div className=\"ml-3\">\n                    <div className=\"row\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Product Name</p>\n                        <textarea\n                          className=\"w-100 mt-1 h1 p-2\"\n                          rows=\"2\"\n                          value={productInfo.productName}\n                          onChange={(ev) => productNameChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container mr-2\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Price</p>\n                          <div className=\"price-input mt-1\">\n                            <input\n                              type=\"text\"\n                              className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                              value={price}\n                              onChange={(ev) => priceChangeHandler(ev)}\n                            />\n                          </div>\n                          {/*<span className=\"price-input text-body\">$</span>*/}\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                          <Counter\n                            className=\"mt-2\"\n                            counter={quantity}\n                            incrementHandler={incrementQuantity}\n                            decrementHandler={decrementQuantity}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    {!props.addMyOwn ?\n                      <>\n                        <div className=\"row mt-5\">\n                          <div className=\"col d-flex\">\n                            <p className=\"text-sm add-gift-store-label font-medium mb-1\">Category</p>\n                            <a className=\"text-sm ml-2 add-gift-link font-medium\" href=\"#\" tabindex onClick={(ev) => openCategorySelect(ev)}>Add</a>\n                            {/* <div className=\"position-relative\">\n                            <input type=\"text\" value={category.displayName} readOnly={true}\n                                   className=\"w-100 pl-2 pr-12 py-1 text-body input-background change-link-input\"/>\n                          </div> */}\n                          </div>\n                        </div>\n                        <div className=\"row mt-2\">\n                          <div className=\"col\">\n                            {category.map(cat => (\n                              <CategoryPill\n                                key={cat.id}\n                                name={cat.categoryName}\n                                removeCategory={() => removeSelectedCategory(cat.id)}\n                                className=\"mt-2 mr-3\"\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      </>\n                      : null}\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col d-flex\">\n                        <TogglePills\n                          iconClass=\"icon-heart\"\n                          activeClass={mustHave ? \"active-must-have\" : null}\n                          onClick={() => toggleMustHave(!mustHave)}\n                          text=\"Must Have\"\n                          className=\"mr-2\" />\n                        <TogglePills\n                          iconClass=\"icon-guest\"\n                          activeClass={groupGift ? \"active-group-gift\" : null}\n                          onClick={() => toggleGroupGift(!groupGift)}\n                          text=\"Group Gift\"\n                          className=\"mr-2\" />\n                        {/* TODO: Change above guest icon one added */}\n                        <TogglePills\n                          iconClass=\"icon-shopping-cart\"\n                          activeClass={purchased ? \"active-purchased\" : null}\n                          onClick={() => togglePurchased(!purchased)}\n                          text=\"Purchased\"\n                          className=\"mr-2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">How to gift?</p>\n                        {howToGiftOptions.map((option, index) => (\n                          <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                            <RadioButton\n                              name=\"how-to-gift\"\n                              textClass=\"text-sm\"\n                              display={option.text}\n                              checked={option.id === howToGift.id ? true : null}\n                              changeHandler={() => changeHowToGift(option)} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Notes</p>\n                        <textarea className=\"w-100 mt-1 text-body p-1\"\n                          rows=\"2\"\n                          placeholder=\"Write a note for your friends and family\"\n                          value={note}\n                          onChange={(ev) => noteChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","import React, { Component } from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  clearAnotherStoreProductInfo, setAnotherStoreProductInfo,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport { connect } from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport { ADD_REGISTRY_ITEM, UPDATE_REGISTRY_ITEM } from 'api/queries';\nimport { graphQL } from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { toast } from \"react-toastify\";\nimport { ADD_REGISTRY_ITEM as ADD_REGISTRY_ITEM_MUTATION } from 'api/mutations';\nimport BookmarkletSection from \"../add-gift/bookmarklet-section/BookmarkletSection\";\nimport AddGiftAnotherStore from \"../add-gift/add-gift-another-store/AddGiftAnotherStore\";\nimport Button from \"../button-component/ButtonComponent\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport { getProducts as commonGetProducts, getCategories as commonGetCategories } from \"../../../../utils/commonFunction\";\n\nclass ViewRecommend extends Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n    viewDetailsBtn: true,\n  }\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  cardRef = React.createRef()\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const shopifyItemId = card.id\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          // TODO: change category\n          category: [Number(category)],\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          imageUrl: imageUrl,\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    }\n  }\n\n  // Checking if product data is valid or not\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // // Valid Category\n    // if (!storeProduct.category.id) {\n    //   alert(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  // Adding Add on my own product to registry\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM_MUTATION,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            // TODO: change category\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  // Popping up Add on my own modal\n  addOnMyOwnClickHandler = (category) => {\n    this.clearModalData()\n    let newCategory = [{\n      ...category,\n      displayName: category.parentCategory + \" : \" + category.categoryName\n    }]\n    let prodInfo = { ...this.props.stateAnotherStoreProduct };\n    prodInfo.category = newCategory;\n    this.props.dispatch(setAnotherStoreProductInfo(prodInfo));\n\n    this.modalTitle = `Add my own ${category ? category.categoryName.toLowerCase() : \"\"}`\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection />\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore addMyOwn={true} />\n\n    this.setState((prevState, props) => ({\n      show: !prevState.show\n    }))\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\" />\n      </button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\" />\n      </button>\n    };\n\n    let modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >Save & Close</Button>\n      </>\n    )\n    return (\n      <>\n        <div className=\"recommended-cart my-6\">\n          <div className=\"row\">\n            <div className=\"col title\"><h2>{this.props.title}\n              {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n            </h2>\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Slider {...settings}>\n              {this.props.products.map((card, index) =>\n                // <div><>{index}</></div>\n                <div className=\"cart-view\" ref={this.cardRef}>\n                  <CardItem\n                    className=\"mr-4\"\n                    data={card}\n                    key={\"CardItem-\" + index}\n                    incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                    decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                    addProductHandler={() => this.addProductHandler(card)}\n                  />\n                </div>\n              )}\n              <div>\n                <div className=\"add-my-own-card mr-4 d-flex flex-column align-items-center justify-content-center\"\n                  style={{ height: this.cardRef.current ? this.cardRef.current.offsetHeight + 'px' : '200px' }}\n                  onClick={() => this.addOnMyOwnClickHandler(this.props.category)}\n                >\n                  <button className=\"add-my-own-button\" />\n                  <p className=\"text-body font-medium mt-5\">Add my own</p>\n                </div>\n              </div>\n            </Slider>\n          </div>\n          <div className=\"mt-6 card-buttom d-flex\">\n            {/* TODO: Change text to dynamic */}\n            <div>\n              <img className=\"blog-img\"\n                src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\"\n                alt={this.props.title} />\n            </div>\n            <div className=\"pl-4 my-auto\">\n              <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n              <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n            </div>\n            <div className=\"text-sm my-auto mr-6 ml-auto\">\n              <a href=\"\" className=\"read-more\" tabindex>Read more</a>\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n      ;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info,\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setParentFilter, setChildFilter, clearFilter } from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\" />\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                  {parentFilter.child.map(childFilter => (\n                    <CheckBox\n                      {...childFilter}\n                      key={childFilter.id}\n                      className=\"mb-4\"\n                      checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                      changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                    />\n                  ))}\n                </div>\n              )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n            onClick={clearClickHandler}\n            variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./ImportRegistry.scss\";\nimport { getAnotherRegistryProducts } from \"../../../../../api/axios\";\nimport { toast } from \"react-toastify\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport CategoryPill from \"./category-pill/CategoryPill\";\nimport { connect } from \"react-redux\";\nimport { setAnotherStoreRegistryItems } from \"../../../../my-registry/MyRegistryActions\";\n\nclass ImportRegistry extends React.Component {\n  state = {\n    registryUrl: \"\",\n    errorMessage: \"\",\n    loading: false,\n    categoryModalShow: false,\n    activeCategoryProductIndex: null,\n    currentRegistryLink: \"\",\n    inputHasFocus: false,\n    currentCategory: [],\n  }\n\n  inputRef = React.createRef()\n\n  setCategoryModalVisible = () => {\n    this.setState({ categoryModalShow: false, currentCategory:[] })\n  }\n\n  changeLoadingState = (value) => {\n    this.setState({\n      loading: value\n    })\n  }\n\n  registryUrlChangeHandler = (ev) => {\n    this.setState({\n      registryUrl: ev.target.value,\n      errorMessage: \"\"\n    })\n  }\n\n  checkUrlAndGetRegistryItems = () => {\n    // Checking for valid url\n    try {\n      new URL(this.state.registryUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return;\n    }\n\n    this.getAnotherRegistryProductsInfo();\n  }\n\n  registryUrlKeyUpHandler = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      this.checkUrlAndGetRegistryItems()\n    }\n  }\n\n  getAnotherRegistryProductsInfo = () => {\n\n    this.setState({\n      currentRegistryLink: this.state.registryUrl\n    })\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = true;\n    }\n\n    const registryUrl = new URL(this.state.registryUrl);\n    const storeName = registryUrl.hostname.split(\".\")[1]\n\n    const reqData = {\n      store_name: storeName,\n      store_url: this.state.registryUrl\n    }\n\n    this.changeLoadingState(true);\n\n    getAnotherRegistryProducts(reqData).then(res => {\n      try {\n        if (res.data) {\n          const products = res.data.products;\n          const registry = res.data.registry;\n\n          if (products && registry) {\n            let newProducts = products.filter(product => product.title)\n            newProducts = newProducts.map(product => {\n              product.categories = [];\n              return product;\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n            // this.setState({\n            //   products: newProducts\n            // })\n          } else {\n            this.setState({\n              errorMessage: \"No registry found. Please check url or make sure that registry is publicly accessible\"\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems([]))\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        toast.error(\"Some error occurred while reading registry products.\")\n      }\n\n    }).catch(err => {\n      toast.error(\"Some error occurred while fetching registry.\")\n      console.error(err);\n    }).finally(() => {\n      this.changeLoadingState(false)\n    })\n  }\n\n  openSelectCategoryModal = (ev, productIndex) => {\n    ev.preventDefault()\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      this.setState({\n        activeCategoryProductIndex: productIndex,\n        categoryModalShow: true,\n        currentCategory: this.props.stateAnotherStoreRegistry[productIndex].categories\n      })\n    } else {\n      console.log(\"Invalid Product Index\");\n    }\n  }\n\n  setProductCategories = (categories) => {\n    // Saving categories passed from SelectCategory Modal\n    if (Number.isInteger(this.state.activeCategoryProductIndex) && this.props.stateAnotherStoreRegistry[this.state.activeCategoryProductIndex]) {\n      let newProductState = [...this.props.stateAnotherStoreRegistry];\n      // TODO: Change this to support multiple categories\n      newProductState[this.state.activeCategoryProductIndex].categories = categories;\n      this.props.dispatch(setAnotherStoreRegistryItems(newProductState))\n      this.setState({\n        activeCategoryProductIndex: null\n      })\n    }\n  }\n\n  removeSelectedCategory = (productIndex, categoryId) => {\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      let newProducts = [...this.props.stateAnotherStoreRegistry]\n      newProducts[productIndex].categories = newProducts[productIndex].categories.filter(category => category.id !== categoryId);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n      // this.setState({\n      //   products: newProducts\n      // })\n    }\n  }\n\n  changeRegistryUrl = (e) => {\n    e.preventDefault();\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = false;\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"baby-registry-import-registry\">\n          <div className=\"row mt-5\">\n            <div className=\"col d-flex flex-column\">\n              <span className=\"baby-registry-required-field text-sm font-medium\">Registry URL</span>\n              <div className=\"position-relative mt-1\">\n                <input type=\"text\"\n                  className={[\"import-registry-input-field w-100 mb-0 mw-100 text-body pl-2 py-1 pr-14\", this.state.errorMessage ? \"import-registry-error-field\" : \"\"].join(\" \")}\n                  placeholder=\"Paste your registry URL here to import.  Please ensure it's publicly accessible.\"\n                  value={this.state.registryUrl}\n                  ref={this.inputRef}\n                  onChange={this.registryUrlChangeHandler.bind(this)}\n                  onFocus={() => this.setState({ inputHasFocus: true })}\n                  onBlur={() => this.setState({ inputHasFocus: false })}\n                />\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink === this.state.registryUrl && !this.state.inputHasFocus ?\n                  <a tabindex className=\"import-registry-change-link text-sm font-medium import-registry-category-link\" href=\"#\"\n                    onClick={(e) => this.changeRegistryUrl(e, this.inputRef)}>Change</a> : null}\n\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink !== this.state.registryUrl ?\n                  <div className=\"import-registry-submit-url-section\">\n                    {/*TODO: Change icons once added to global icons*/}\n                    <button className=\"icon-close mr-3\"\n                      onClick={() => this.setState({ registryUrl: \"\" })} />\n                    <button className=\"icon-check\" onClick={this.checkUrlAndGetRegistryItems} />\n                  </div>\n                  : null}\n              </div>\n              {this.state.errorMessage ?\n                <span className=\"import-registry-input-error-message text-body mt-1\">{this.state.errorMessage}</span>\n                : null}\n            </div>\n          </div>\n\n          <div className=\"row baby-registry-import-section mt-6\">\n            <div className=\"col\">\n              {this.props.stateAnotherStoreRegistry.length <= 0 || this.state.loading ?\n                // When no product exists\n                <div className=\"py-20 text-center import-registry-main-content\">\n                  {this.state.loading ?\n                    <>\n                      <div className=\"spinner-border import-registry-spinner\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                      <h4 className=\"mt-1 mx-auto import-registry-loading-text\">Please wait while we’re importing your\n                        registry</h4>\n                    </>\n                    :\n                    <h4 className=\"mx-auto import-registry-no-content-text\">\n                      Please paste your publicly accessible\n                      registry URL above to import items\n                      to M+A.\n                    </h4>\n                  }\n                </div>\n                :\n                // When products is filled\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"import-registry-main-content d-flex flex-column import-registry-products\">\n                      <div className=\"d-flex import-registry-products-column \">\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Items</p>\n                        </div>\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Category: Item</p>\n                        </div>\n                      </div>\n\n\n                      {this.props.stateAnotherStoreRegistry.map((product, index) => (\n                        <div className=\"d-flex import-registry-products-column\" key={\"Product-\" + index}>\n                          <div className=\"w-50 px-3\">\n                            <p className=\"py-3 text-body\">{product.title}</p>\n                          </div>\n                          <div className=\"w-50 px-3\">\n                            {product.categories.length <= 0 ?\n                              <div className=\"py-3\">\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Select category</a>\n                              </div>\n                              :\n                              <div className=\"pb-2\">\n                                {product.categories.map(category => (\n                                  <CategoryPill\n                                    key={category.id}\n                                    name={category.categoryName}\n                                    removeCategory={() => this.removeSelectedCategory(index, category.id)}\n                                    className=\"mt-2 mr-3\"\n                                  />\n                                ))}\n\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Add</a>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n          <SelectCategory\n            showModal={this.state.categoryModalShow}\n            closeModal={this.setCategoryModalVisible}\n            changeCurrentCategory={this.setProductCategories}\n            currentCategory={this.state.currentCategory}\n          />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ImportRegistry);","import React from 'react';\nimport \"./AddGift.scss\";\nimport { connect } from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport ImportRegistry from \"./import-registry/ImportRegistry\";\nimport { clearAnotherStoreProductInfo, setAnotherStoreRegistryItems } from \"modules/my-registry/MyRegistryActions\";\nimport { ADD_REGISTRY_ITEM, SAVE_REGISTRY_DATA } from \"../../../../api/mutations\";\nimport { graphQLMultipart as graphQL, graphQL as jsonGraphQL } from \"../../../../api/axios\";\nimport { getProducts, getCategories } from \"utils/commonFunction\";\nimport { toast } from \"react-toastify\";\nimport {IMPORT_REGISTRY_EMAIL} from \"../../../../utils/constants\";\nimport {dataURItoBlob} from \"../../../../utils/commonFunction\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n    this.props.dispatch(setAnotherStoreRegistryItems([]));\n  }\n\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      toast.error(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      toast.error(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      toast.error(\"Invalid Quantity\");\n      return false;\n    }\n\n    // TODO: if necessary Valid Category\n    // if (!storeProduct.category.id) {\n    //   toast.error(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Cash Funds</h4></div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name} />\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection />\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n                onClick={this.importRegistry}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  validImportRegistryData = (registryItems) => {\n    if (registryItems.length <= 0) {\n      toast.error(\"No Item found\");\n      return false;\n    }\n    // TODO: if necessary Valid Category\n    // for (const item of registryItems) {\n    //   if (item.categories.length <= 0) {\n    //     toast.error(\"Please select category for all product\");\n    //     return false;\n    //   }\n    // }\n    return true;\n  }\n\n  getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  getCleanedRegistryItems = (registryItems) => {\n    let cleanedRegistryItems = []\n    for (const item of registryItems) {\n      // TODO: Handle multiple store for single product\n      const itemStore = item.stores[0]\n      if (cleanedRegistryItems.find(el => el.storeName ? el.storeName === itemStore.name : false)) {\n        cleanedRegistryItems = cleanedRegistryItems.map(el => {\n          if (el.storeName === itemStore.name) {\n            if (el.items) {\n              el.items.push({\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              })\n            } else {\n              el['items'] = [{\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              }]\n            }\n            if (item.img) {\n              el.items[el.items.length - 1]['imageUrl'] = item.img\n            }\n          }\n          return el;\n        })\n      } else {\n        let newStore = {\n          storeName: itemStore.name,\n          items: [{\n            title: item.title,\n            // TODO: change category\n            registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n            quantity: 1,\n            tags: [],\n            price: this.getRefinedPrice(itemStore.price)\n          }]\n        }\n\n        if (item.img) {\n          newStore.items[newStore.items.length - 1]['imageUrl'] = item.img\n        }\n        cleanedRegistryItems.push(newStore)\n      }\n    }\n\n    return cleanedRegistryItems;\n  }\n\n  importRegistryClickHandler = () => {\n    if (!this.validImportRegistryData(this.props.stateAnotherStoreRegistry)) {\n      return;\n    }\n\n    const registryItems = this.getCleanedRegistryItems(this.props.stateAnotherStoreRegistry)\n    if (registryItems.length > 0) {\n      const reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          \"registryId\": this.props.stateRegistryInfo.id,\n          \"input\": registryItems\n        }\n      }\n      jsonGraphQL(reqData).then(res => {\n        if (res.data.data.addRegistryItems) {\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n          toast.success(\"Registry items imported successfully\");\n          this.clearModalData();\n          this.modalCloseHandler();\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection />\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore />\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  importRegistry = () => {\n    this.clearModalData()\n    this.modalTitle = \"Import Registry\"\n    this.modalBody = <ImportRegistry />\n\n    this.modalFooterButtons = (\n      <>\n        {/*TODO: change href of email us link*/}\n        <a href={\"mailto:\"+IMPORT_REGISTRY_EMAIL} tabindex target='_blank' className=\"mr-auto import-registry-email-link text-sm font-medium\">Email Us For Help</a>\n        {/*TODO: Integrate API when multiple category is supported*/}\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.importRegistryClickHandler}\n        >Import</Button>\n      </>\n    )\n\n    this.setState((prevState, _) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n            <span className=\"font-medium text-sm\">What is Add Gift?</span>\n            <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save\n              in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);\n","import React from \"react\";\nimport \"./CashFundCardNotAdded.scss\";\n\nclass CashFundCardNotAdded extends React.Component {\n  render() {\n    return (\n      <div\n        className={[\"baby-registry-cash-fund-card py-3 mb-2\", this.props.className ? this.props.className : \"\"].join(\" \")}>\n        <div className=\"row\">\n          <div className=\"col-2\">\n\n            <div className=\"pl-3\">\n              {this.props.data.item.imageUrl ?\n                <img className=\"cash-fund-image d-block mx-auto\" src={this.props.data.item.imageUrl}/>\n                :\n                <div className=\"baby-registry-cash-fund-no-image\" />\n              }\n            </div>\n\n          </div>\n          <div className=\"col\">\n            <div className=\"float-left\">\n              <p className=\"text-body font-medium\">{this.props.data.registryCategories[0].category.categoryName}</p>\n              <p\n                className=\"text-sm cash-fund-description\">{this.props.data.registryCategories[0].category.description}</p>\n            </div>\n            <button className=\"cash-fund-add-btn float-right mr-6\" onClick={this.props.addButtonClickHandler}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CashFundCardNotAdded;","import React from \"react\";\nimport CashFundCardNotAdded from \"./cash-fund-card-not-added/CashFundCardNotAdded\";\n\nclass CashFundCard extends React.Component {\n  render() {\n    return <CashFundCardNotAdded data={this.props.data} addButtonClickHandler={this.props.addButtonClickHandler}/>\n  }\n}\n\nexport default CashFundCard;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n    return (\n        <div\n          onClick={props.onClick}\n          className={[\"cash-fund-toggle-pills px-2 py-1\", props.className ? props.className : \"\", props.selectedClass ? props.selectedClass : \"\"].join(\" \")}>\n            <i className={[\"cash-fund-toggle-icon float-left\", props.iconClass ? props.iconClass : null].join(\" \")} />\n            <span className=\"text-sm ml-2\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default TogglePills;","import React from \"react\";\nimport \"./AddCashFundModal.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from \"../../button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport TogglePills from \"./toggle-pills/TogglePills\";\nimport {connect} from \"react-redux\";\nimport {graphQL, graphQLMultipart} from \"../../../../../api/axios\";\nimport {GET_CASH_FUND_CATEGORIES} from \"../../../../../api/queries\";\nimport {ADD_REGISTRY_ITEM} from \"../../../../../api/mutations\";\nimport {setCashFundCategories} from \"../../../../my-registry/MyRegistryActions\";\nimport {M_A_STORE_NAME} from \"../../../../../utils/constants\";\nimport {dataURItoBlob, getCategories, getProducts} from \"../../../../../utils/commonFunction\";\n\nclass AddCashFundModal extends React.Component {\n\n  // Accepted Image input types for Cash fund image\n  ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  MAX_IMAGE_SIZE = 5000000; // 5MB\n\n  // Cash Fund data\n  state = {\n    cashFundImage: {},\n    cashFundName: \"\",\n    cashFundAmount: \"\",\n    hideTotal: false,\n    cashFundType: {},\n    cashFundNote: \"\",\n    mustHave: false,\n    markCompleted: false\n  }\n\n  imageRef = React.createRef()\n\n  modalCloseHandler = () => {\n    this.props.closeModal();\n  }\n\n  validateCashFundData = () => {\n    if (this.state.cashFundName.length <= 0) {\n      toast.error(\"Please enter Cash Fund Name.\")\n      return false;\n    }\n\n    if (this.state.cashFundAmount.length <= 0) {\n      toast.error(\"Please enter Cash Fund Amount\")\n      return false;\n    }\n\n    if (!Number(this.state.cashFundAmount)) {\n      toast.error(\"Please enter valid amount\")\n      return false;\n    }\n\n    if (!this.state.cashFundType.id) {\n      toast.error(\"Please select Cash Fund Type.\")\n      return false;\n    }\n\n    return true;\n  }\n\n  // Adding Cash Fund\n  addCashFundClickHandler = () => {\n    if (this.validateCashFundData()) {\n      let formData = new FormData()\n\n      let reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id,\n          input: [{\n            storeName: M_A_STORE_NAME,\n            items: [{\n              title: this.state.cashFundName,\n              price: this.state.cashFundAmount,\n              mostWanted: this.state.mustHave,\n              tags: [],\n              quantity: 1,\n              isGroupGift: true,\n              hideTotal: this.state.hideTotal,\n              markAsCompleted: this.state.markCompleted,\n              note: this.state.cashFundNote,\n              registryCategories: [Number(this.state.cashFundType.id)],\n              isCashFund: true\n            }]\n          }]\n        }\n      }\n\n      if (this.state.cashFundImage.type === \"custom\") {\n        let map = {\n          images: [\"variables.input.0.items.0.images\"]\n        }\n        reqData.variables.input[0].items[0]['images'] = null;\n        console.log(dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n        formData.append(\"map\", JSON.stringify(map))\n        formData.append(\"images\", dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n      } else {\n        reqData.variables.input[0].items[0]['imageUrl'] = this.state.cashFundImage.value;\n      }\n\n      formData.append(\"operations\", JSON.stringify(reqData))\n\n      graphQLMultipart(formData).then(res => {\n        if (res.data.data && res.data.data.addRegistryItems) {\n          // Successfully added product\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n          toast.success((\n            <p><b>{this.state.cashFundName}</b> added to your registry!</p>\n          ))\n          this.modalCloseHandler()\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n  }\n\n  // Modal Data\n  modalTitle = \"Add Cash Fund\";\n  modalFooterButton = (\n    <Button\n      variant=\"primary\"\n      className=\"px-5 py-1 font-medium text-body\"\n      onClick={this.addCashFundClickHandler}\n    >Add & Close</Button>\n  )\n\n  // Handling custom image selection\n  selectFileHandler = (ev) => {\n    if (ev.target && ev.target.files.length > 0) {\n      const file = ev.target.files[0]\n\n      // Verifying file is image\n      if (this.ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= this.MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = (e) => {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              fileType: file.type,\n              fileName: file.name\n            }\n            this.setState({\n              cashFundImage: newProductImage\n            })\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n\n  // Input change handlers\n  cashFundNameChangeHandler = (ev) => {\n    this.setState({\n      cashFundName: ev.target.value\n    })\n  }\n\n  cashFundAmountChangeHandler = (ev) => {\n    this.setState({\n      cashFundAmount: ev.target.value\n    })\n  }\n\n  cashFundHideTotalChangeHandler = (_) => {\n    this.setState((prevState, _) => ({\n      hideTotal: !prevState.hideTotal\n    }))\n  }\n\n  cashFundTypeChangeHandler = (ev) => {\n    if (this.props.stateCashFundCategories.length > 0) {\n      const changedCategory = this.props.stateCashFundCategories.find(category => Number(category.id) === Number(ev.target.value))\n      if (changedCategory.id) {\n        this.setState({\n          cashFundType: changedCategory\n        })\n      }\n    }\n  }\n\n  cashFundNoteChangeHandler = (ev) => {\n    this.setState({\n      cashFundNote: ev.target.value\n    })\n  }\n\n  mustHaveClickHandler = () => {\n    this.setState((prevState, _) => ({\n      mustHave: !prevState.mustHave\n    }))\n  }\n\n  markCompletedClickHandler = () => {\n    this.setState((prevState, _) => ({\n      markCompleted: !prevState.markCompleted\n    }))\n  }\n\n\n  render() {\n    if (this.props.imageUrl && !this.state.cashFundImage.value && this.state.cashFundImage.value !== this.props.imageUrl) {\n      this.setState({\n        cashFundImage: {\n          type: \"url\",\n          value: this.props.imageUrl\n        }\n      })\n    }\n\n    if (this.props.stateCashFundCategories.length <= 0) {\n      // Fetching all cash fund categories\n      const reqData = {\n        query: GET_CASH_FUND_CATEGORIES,\n        operationName: \"getCashFund\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id\n        }\n      }\n\n      graphQL(reqData).then(res => {\n        console.log(res.data.data)\n        if (res.data.data && res.data.data.cashFundCategories) {\n          let allCashFundCategories = res.data.data.cashFundCategories.map(cat => {\n            cat.category.id = cat.id\n            return cat.category\n          })\n          this.props.dispatch(setCashFundCategories(allCashFundCategories))\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n\n\n    if (!this.state.cashFundType.id && this.props.stateCashFundCategories.length > 0) {\n      let foundCategory = false\n      if (this.props.categoryData?.registryCategories && this.props.categoryData.registryCategories.length > 0) {\n        for (let cashFundCategory of this.props.stateCashFundCategories) {\n          if (Number(this.props.categoryData.registryCategories[0].category.id) === Number(cashFundCategory.id)) {\n            foundCategory = true\n            this.setState({\n              cashFundType: cashFundCategory\n            })\n            break\n          }\n        }\n      }\n      if (!foundCategory) {\n        this.setState({\n          cashFundType: this.props.stateCashFundCategories[0]\n        })\n      }\n    }\n\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          title={this.modalTitle}\n          footer={this.modalFooterButton}\n          closeModal={this.modalCloseHandler}>\n\n          <div className=\"row cash-fund-modal-content\">\n            <div className=\"col-5\">\n              <div className=\"cash-fund-modal-image-section mr-1\">\n                {this.state.cashFundImage.type ?\n                  <img src={this.state.cashFundImage.value} alt=\"Cash Fund\" className=\"cash-fund-modal-image\"/>\n                  :\n                  <div className=\"cash-fund-modal-no-image\"/>\n                }\n                <i\n                  className=\"icon-preview change-cash-fund-image-icon p-1\"\n                  onClick={() => {\n                    this.imageRef.current.click()\n                  }}\n                />\n                <input\n                  type=\"file\"\n                  className=\"d-none\"\n                  ref={this.imageRef}\n                  accept={this.ACCEPTED_IMAGE_TYPE.join(\",\")}\n                  onChange={(ev) => this.selectFileHandler(ev)}\n                />\n              </div>\n            </div>\n            <div className=\"col-7 cash-fund-input-section\">\n              <div className=\"ml-3 mr-6\">\n\n                {/* Cash Fund name */}\n                <div className=\"row\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Cash Fund Name</p>\n                    <input\n                      className=\"cash-fund-input h2 mt-1 w-100 mw-100 p-2\"\n                      type=\"text\"\n                      value={this.state.cashFundName}\n                      onChange={(ev) => this.cashFundNameChangeHandler(ev)}\n                    />\n                  </div>\n                </div>\n\n                {/* Cash Fund type */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Type</p>\n                    <select\n                      className=\"cash-fund-select w-100 mw-100 px-2 py-1 mt-1 text-body\"\n                      onChange={(ev) => this.cashFundTypeChangeHandler(ev)}\n                    >{console.log(this.props.categoryData?.registryCategories[0].category.id)}\n                      {this.props.stateCashFundCategories.map(category => (\n                        <option\n                          value={category.id}\n                          selected={this.props.categoryData?.registryCategories[0].category.id === category.id}\n                        >{category.categoryName}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n\n                <div className=\"row mt-5\">\n\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium mb-1\">Total Amount</p>\n                    <div className=\"row\">\n\n                      {/* Cash fund amount */}\n                      <div className=\"col\">\n                        <div className=\"position-relative\">\n                          <input\n                            className=\"cash-fund-input w-100 mw-100 p-1 pl-5 text-body\"\n                            type=\"number\"\n                            value={this.state.cashFundAmount}\n                            onChange={(ev) => this.cashFundAmountChangeHandler(ev)}\n                          />\n                          <span className=\"cash-fund-price-input-currency text-body\">$</span>\n                        </div>\n                      </div>\n\n                      {/* Cash fund hidden option */}\n                      <div className=\"col align-self-center\">\n                        <label\n                          className=\"checkbox d-flex align-items-center\">\n                          <span className=\"checkbox__input mr-2\">\n                            <input\n                              type=\"checkbox\"\n                              onChange={(ev) => this.cashFundHideTotalChangeHandler(ev)}\n                            />\n                            <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i className=\"icon-check\"/>\n                            </span>\n                          </span>\n                          <span\n                            className=\"radio__label text-sm\">Hide total from guests</span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col\">\n                    <TogglePills\n                      text=\"Must Have\"\n                      iconClass=\"icon-heart\"\n                      selectedClass={this.state.mustHave ? \"cash-fund-must-have-selected\" : null}\n                      onClick={this.mustHaveClickHandler}\n                    />\n                    {/* TODO: Change below icon to rounded correct when added */}\n                    <TogglePills\n                      text=\"Mark As Completed\"\n                      iconClass=\"icon-check\"\n                      className=\"ml-2\"\n                      selectedClass={this.state.markCompleted ? \"cash-fund-completed-selected\" : null}\n                      onClick={this.markCompletedClickHandler}\n                    />\n                  </div>\n                </div>\n\n\n                {/* Cash fund note */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Notes</p>\n                    <textarea\n                      placeholder=\"Write a note for your friends and family\"\n                      className=\"cash-fund-textarea w-100 mw-100 mt-1 w-100 mw-100 p-1 text-body\"\n                      value={this.state.cashFundNote}\n                      onChange={(ev) => this.cashFundNoteChangeHandler(ev)}\n                      rows={2}/>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateCashFundCategories: state.myRegistry.cashFundCategories,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddCashFundModal);","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport {graphQL, getRecommendation} from 'api/axios';\nimport {GET_RECOMMENDATIONS} from 'api/queries';\nimport {TOGGLE_MUST_HAVE} from 'api/mutations';\nimport {getProducts, removeProductFromCartHandler, getCategories} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport config from \"api/config\";\nimport axios from \"axios\";\nimport CashFundCard from \"../../../commons/components/cash-fund-card/CashFundCard\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport AddCashFundModal from \"../../../commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal\";\n\nclass Everything extends Component {\n\n  state = {\n    showCashFundModal: false,\n    cashFundProduct: null\n  }\n\n  openCashFundModal = () => {\n    this.setState({\n      showCashFundModal: true\n    })\n  }\n\n  setCashFundCategoryAndOpenModal = (product) => {\n    this.setState({\n      cashFundProduct: {...product}\n    })\n    this.openCashFundModal()\n  }\n\n  closeCashFundModal = () => {\n    this.setState({\n      showCashFundModal: false,\n      cashFundProduct: null\n    })\n  }\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n\n  setAllRecommendation = async (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          ...category,\n          parentCategory: parentCat.categoryName,\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      // for (let i = 0; i <= 5; i++) {\n      // let recommendedCat = recommendedCategory[i]\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.categoryName\n        }\n      }\n      const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\n      const cookies = new Cookies();\n\n      await axios.get(apiURL + 'items', {\n        params: data,\n        headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n      })\n        .then(res => {\n          let rData = res.data.data.products.edges.map(item => {\n            let resData = {...item.node}\n            resData['quantity'] = 1\n            resData['category'] = recommendedCat\n            return resData\n          })\n          // count = count + 1;\n          if (rData.length !== 0) {\n            this.props.dispatch(addRecommendedProduct(rData))\n          }\n        }).catch(err => {\n          console.error(err.message)\n        })\n\n\n      // getRecommendation({ params: data }).then(res => {\n      //   let rData = res.data.data.products.edges.map(item => {\n      //     let resData = { ...item.node }\n      //     resData['quantity'] = 1\n      //     resData['category'] = recommendedCat\n      //     return resData\n      //   })\n      //   // count = count + 1;\n      //   this.props.dispatch(addRecommendedProduct(rData))\n      // }).catch(err => {\n      //   console.error(err.message)\n      // })\n      //   )\n      // ))\n      // count = count + 1;\n      // }\n      // else {\n      //   break;\n      // }\n    }\n  }\n\n  getSortedProducts = (addedProducts, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    const cashFundCategory = stateCategories.find(category => category.categoryType && Number(category.categoryType.id) === 2)\n\n    if (cashFundCategory) {\n      let productsToAppend = []\n      for (let subCategory of cashFundCategory.subCategories) {\n        if (Number(subCategory.addedItemsCount) === 0) {\n          productsToAppend.push({\n            item: {\n              imageUrl: \"\"\n            },\n            registryCategories: [{\n              id: subCategory.id,\n              category: {\n                ...subCategory\n              }\n            }]\n          })\n        }\n      }\n      addedProducts = [...addedProducts, ...productsToAppend]\n    }\n\n    let allProducts = []\n    let productCount = 0;\n    let categories = []\n    for (let parentCat of stateCategories) {\n      if (!parentCat.isParent) {\n        categories.push({\n          id: parentCat.id,\n          name: parentCat.categoryName,\n          added: parentCat.addedItemsCount,\n          total: parentCat.totalItemsCount,\n          parentCategory: {\n            id: parentCat.id,\n            name: parentCat.categoryName\n          },\n          categoryType: parentCat.categoryType,\n        })\n      } else {\n        for (let category of parentCat.subCategories) {\n          if (category.subProductTypes.length) {\n            for (let subProduct of category.subProductTypes) {\n              categories.push({\n                id: subProduct.id,\n                name: subProduct.categoryName,\n                added: subProduct.addedItemsCount,\n                total: subProduct.totalItemsCount,\n                parentCategory: {\n                  id: parentCat.id,\n                  name: parentCat.categoryName\n                },\n                categoryType: category.categoryType,\n              })\n            }\n          } else {\n            categories.push({\n              id: category.id,\n              name: category.categoryName,\n              added: category.addedItemsCount,\n              total: category.totalItemsCount,\n              parentCategory: {\n                id: parentCat.id,\n                name: parentCat.categoryName\n              },\n              categoryType: category.categoryType,\n            })\n          }\n        }\n      }\n    }\n\n\n    for (let category of categories) {\n      let products = []\n      let recommendations = []\n\n      // Getting filtered Products and recommendations\n      if (stateFilterApplied.parentFilter) {\n        if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n          if (stateFilterApplied.childFilter.length > 0) {\n            const childFilterArray = stateFilterApplied.childFilter\n\n            for (let product of addedProducts) {\n              let categoryFound = false\n              for (let cat of product.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              if (\n                ((childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n                  (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n                  // TODO: change category\n                  (childFilterArray.includes(\"reserved\") && product.isReserved)) && categoryFound\n              ) {\n                products.push(product)\n                // filteredProductsId.push(product.id)\n              }\n            }\n          } else {\n            // TODO: change category\n            products.push(...addedProducts.filter(el => {\n              let categoryFound = false\n              for (let cat of el.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              return categoryFound;\n            }))\n          }\n        } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n          let addedRecommendations = []\n          recommendations = stateRecommendedProducts.filter(el => {\n            if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n              addedRecommendations.push(el.id)\n              return true;\n            }\n            return false;\n          })\n        }\n      } else {\n        // TODO: Change this condition(el.item.category.length)\n        // TODO: change category\n        products.push(...addedProducts.filter(el => {\n          let categoryFound = false\n          for (let cat of el.registryCategories) {\n            if (cat.id === category.id) {\n              categoryFound = true\n              break\n            }\n          }\n          return categoryFound && el.registryCategories.length\n        }))\n        let addedRecommendations = []\n        recommendations = stateRecommendedProducts.filter(el => {\n          if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n            addedRecommendations.push(el.id)\n            return true;\n          }\n          return false;\n        })\n      }\n      productCount += products.length;\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: (category.added < category.total || category.total === 0) ? recommendations : []\n      })\n    }\n\n    // Grouping products based on parent category\n    let groupedProducts = []\n    for (const product of allProducts) {\n      let foundCategory = false;\n      groupedProducts = groupedProducts.map(el => {\n        if (el.id === product.category.parentCategory.id) {\n          foundCategory = true;\n          el.allProducts.push(product);\n        }\n        return el;\n      })\n\n      if (!foundCategory) {\n        groupedProducts.push({\n          ...product.category.parentCategory,\n          allProducts: [product]\n        })\n      }\n    }\n\n    // Adding total products and recommendations\n    groupedProducts = groupedProducts.map(el => {\n      let productCount = 0;\n      let recommendationCount = 0;\n\n      for (let product of el.allProducts) {\n        productCount += product.products.length;\n        recommendationCount += product.recommendations.length;\n      }\n\n      el['totalProducts'] = productCount;\n      el['totalRecommendations'] = recommendationCount;\n      return el;\n    })\n\n    // Removing items that does not have products or recommendations based on filters\n    if (stateFilterApplied.parentFilter) {\n      if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n        groupedProducts = groupedProducts.filter(product => product.totalProducts > 0)\n      } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n        groupedProducts = groupedProducts.filter(product => product.totalRecommendations > 0)\n      }\n    } else {\n      groupedProducts = groupedProducts.filter(product => (product.totalProducts > 0 || product.totalRecommendations > 0))\n    }\n\n    return {groupedProducts, productCount};\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for (let category of checklistItems) {\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems / totalItems) * 100;\n  }\n\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let {groupedProducts, productCount} = this.getSortedProducts(this.props.stateAddedProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"row mt-6\">\n            {/* View CheckList */}\n            <div className=\"col-3\">\n              <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)}/>\n              {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n                                                                     dispatch={this.props.dispatch}/>)}\n            </div>\n            <div className=\"col-9\">\n\n              {/* Top Filter Section */}\n              <FilterSection productCount={productCount}/>\n              <div className=\"mt-5\">\n                {groupedProducts.map(el => {\n                  let hasCashFund = false;\n                  return (<>\n                      <h4 className=\"text-uppercase my-4\">{el.name}</h4>\n                      {el.allProducts.map((product, i) => (\n                        <div id={product.category.name}>\n                          {product.products.map((card, index) => {\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2) {\n                              hasCashFund = true\n                            }\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2 && Number(card.registryCategories[0].category.addedItemsCount) === 0) {\n                              return (\n                                <CashFundCard\n                                  data={card}\n                                  key={\"cashFund\" + index}\n                                  className=\"mt-2\"\n                                  addButtonClickHandler={() => this.setCashFundCategoryAndOpenModal(card)}\n                                />\n                              )\n                            } else {\n                              return (\n                                <AddedCard\n                                  data={card} key={\"addedCard\" + index}\n                                  multipleCategories = {card.registryCategories.length > 1 ? card.registryCategories.find((cat, index) => Number(cat.id) === Number(product.category.id) && index != 0) : null}\n                                  toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                                  removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                                />\n                              )\n                            }\n                          })}\n                          {product.recommendations.length > 0 ?\n                            <ViewRecommend\n                              title={product.recommendations[0].category.categoryName}\n                              category={product.recommendations[0].category}\n                              products={product.recommendations}/>\n                            : null}\n                        </div>\n                      ))}\n                      {hasCashFund ?\n                        <div className=\"my-2\">\n                          <Button\n                            variant=\"secondary\"\n                            className=\" w-100 py-1 text-body font-medium\"\n                            onClick={this.openCashFundModal}\n                          >Add my own</Button>\n                        </div>\n                        : null}\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showCashFundModal ?\n          <AddCashFundModal\n            show={this.state.showCashFundModal}\n            closeModal={this.closeCashFundModal}\n            categoryData={this.state.cashFundProduct}\n          />\n          : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 7\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          console.log(defaultImages);\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      toast.error(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          toast.error(\"Some error occurred\");\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n\n  }\n\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={props.closeCoverImagePicker}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport { UPDATE_REGISTRY } from \"../../../../api/mutations\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport { toast } from 'react-toastify';\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      toast.error(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\" />\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\" />\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n        onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport routes from \"../../../../utils/routes\";\n\nconst ShareRegistry = (props) => {\n\n  const siteHostName = window.location.host + routes.REGISTRY.HOME;\n  // const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      toast.error(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      if (err.response.status === 400) {\n        setRegistryError(`${registryUrl} is not available. Please try something else.`)\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n      console.error(err.response.data)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toast.success(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section d-flex text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2 d-flex\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram .svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter.svg\"/>\n              </>\n              :\n              <>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook_disabled.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram _disabled.svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter_disabled.svg\"/>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport { setguestViewRegistry } from \"modules/view-registry/ViewRegistryActions\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({ showCoverImagePicker: false })\n  }\n\n  closeShareRegistry = () => {\n    this.setState({ showShareRegistry: false })\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  handleGuestView = () => {\n    toast.success(\"Viewing registry as guest\")\n    this.props.dispatch(setguestViewRegistry(true))\n  }\n\n  handleDisableViewGuest = () => {\n    this.props.dispatch(setguestViewRegistry(false))\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({ showCoverImagePicker: true })\n      }\n    }\n  ]\n\n\n  render() {\n    // const style = {\n    //   backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'\n    // }\n    return (\n      <>\n        {this.props.stateGuestViewRegistry ?\n          <div className=\"view-guest-header text-body py-2\">\n            <div className=\"container d-flex justify-content-between\" onClick={this.handleDisableViewGuest}>\n              <div className=\"d-flex align-items-center view-guest-link\">\n                <i className=\"icon-chevron-left view-guest-text mr-2\" />\n                <a className=\"view-guest-text\" tabindex>Back To View Registry</a>\n              </div>\n              <div className=\"view-guest-text\">This is how your guests will see your registry</div>\n              <a className=\"view-guest-text view-guest-link\">Share</a>\n            </div>\n          </div> : null\n        }\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')' }}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          {!this.props.stateGuestViewRegistry ?\n            <div className=\"cover-pic-update-options\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-end\">\n                    <MoreOption\n                      data={this.COVER_PIC_OPTIONS}\n                      iconClass=\"icon-preview\"\n                      activeOptionClass=\"view-registry-cover-option-active\"\n                      buttonClass=\"update-cover-options p-1\" />\n                  </div>\n                </div>\n              </div>\n            </div> : null\n          }\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    {!this.props.stateGuestViewRegistry ?\n                      <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)} />\n                      : null\n                    }\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    !this.props.stateGuestViewRegistry ?\n                      <a className=\"add-greeting-link text-sm font-medium\" href=\"#\" tabindex\n                        onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a> : null\n                  }\n                </div>\n                {!this.props.stateGuestViewRegistry ?\n                  <div className=\"col-12 col-md-3 header-buttons\">\n                    <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\"\n                      onClick={this.handleGuestView}>View as Guest</Button>\n                    <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\"\n                      onClick={() => this.setState({ showShareRegistry: true })}>Share</Button>\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n        <EditViewRegistryDetail\n          show={this.state.showEditRegistryDetail}\n          closeEditRegistryDetail={this.closeEditRegistryDetail}\n          info={this.props.stateRegistryInfo}\n        />\n\n        <ShareRegistry\n          show={this.state.showShareRegistry}\n          closeShareRegistry={this.closeShareRegistry}\n          registryInfo={this.props.stateRegistryInfo}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt, clearViewFilter, setChildViewFilter } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearViewFilter())\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              {this.props.stateGuestViewRegistry ?\n                <></> :\n                <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>}\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 && !this.props.stateGuestViewRegistry ?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    stateRegistryInfo: state.registry.info,\n    stateFilterApplied: state.viewRegistry.viewFilterApplied,\n    stateFilterCategory: state.viewRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);\n","import React, { useState } from 'react'\nimport \"./ViewFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildViewFilter, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport { FILTERS } from \"utils/constants\"\n\nconst ViewFilter = () => {\n\n  const dispatch = useDispatch()\n  let tempParentFilterId = useSelector(state => state.viewRegistry.viewFilterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  let [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  const getLimitOfFliter = (parentId) => {\n    let limit = null\n    const filterCategory = [...filterCategoryLimit]\n    for (let category of filterCategory) {\n      if (parentId === category.id && category.limit) {\n        limit = category.limit\n      }\n    }\n    return limit\n  }\n\n  // Updating product count in filter categories\n  const updateFilterList = (addedProducts) => {\n\n    let newFilterList = [\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          if (category.addedItemsCount > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = newCategory.addedItemsCount\n          return newCategory\n        })\n        // count: 0\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: addedProducts.filter((product) => product.item.price < 50).length\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: addedProducts.filter(product => (product.item.price >= 50 && product.item.price <= 100)).length\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: addedProducts.filter(product => (product.item.price > 100)).length\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName === MONICA_AND_ANDY).length\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName !== MONICA_AND_ANDY).length\n          },\n        ]\n      },\n\n    ]\n    if (!stateGuestViewRegistry) {\n      const giftStatus = {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: addedProducts.filter(product => !product.isReserved || !product.isPurchased).length\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: addedProducts.filter(product => product.isPurchased).length\n          }\n        ]\n      }\n      newFilterList.splice(0, 0, giftStatus)\n    }\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  let localFilterCategories = updateFilterList(stateAddedProducts)\n\n\n  // Change event handlers\n\n  // TDOD: Add this if needed\n  // const parentChangeHandler = (parent) => {\n  //   dispatch(setParentViewFilter(parent.id))\n  //   if (parent.child) {\n  //     dispatch(setChildViewFilter(parent.child.map(child => child.id)))\n  //   } else {\n  //     dispatch(setChildViewFilter([]))\n  //   }\n  // }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildViewFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildViewFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearViewFilter())\n  }\n\n  const changeParentLimitHandler = (parentFilterID) => {\n    let limitLength = null\n    let filterCategory = [...localFilterCategories].map(parentFilter => {\n      if (parentFilter.id === parentFilterID) {\n        parentFilter.limit = parentFilter.child.length\n        limitLength = parentFilter.child.length\n      }\n      return parentFilter\n    })\n    dispatch(setViewFilterCategory(filterCategory))\n\n    let isFound = false\n    let newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n      if (categorylimit.id === parentFilterID) {\n        categorylimit.limit = limitLength\n        isFound = true\n        return categorylimit\n      }\n      return categorylimit\n    })\n\n    if (!isFound) {\n      newFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n    }\n    setFilterCategoryLimit(newFilterCateoryLimit)\n  }\n\n  return (\n    <div className=\"view-filter\">\n      <div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n        <h4 className=\"font-weight-bold\">Filters</h4>\n        {tempChildFilterIds.length !== 0 ?\n          <a tabindex className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n        }\n      </div>\n      <div className=\"d-flex flex-column\">\n        {localFilterCategories.map(parentFilter => (\n          <div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n            {/* Parent filter */}\n            <div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n            {/* Child filter */}\n            {parentFilter.child ? (\n              <div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n                <div className=\"mt-3 fliter-checkbox-section\">\n                  {parentFilter.child.map((childFilter, index) => (\n                    childFilter.count > 0 ?\n                      index < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n                        <label class=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n                          <span class=\"checkbox__input mr-2\">\n                            <input type=\"checkbox\"\n                              name={childFilter.display}\n                              value={childFilter.display}\n                              checked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n                              onChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n                            <span class=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i class=\"icon-check\"></i>\n                            </span>\n                          </span>\n                          <p class=\"radio__label text-sm\"><div>{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</div></p>\n                        </label>\n                        : null\n                      : null\n\n                  ))}\n                  {(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n                    <div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n                    : null\n                  }\n                </div>\n              </div>\n            )\n              : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewFilter;\n","import React, { useEffect } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition, getCategories } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, clearViewFilter } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\nimport ViewFilter from \"modules/view-registry/components/view-filter/ViewFilter\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        isViewCard={true}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let itemsOldPosition = arrayMove([...stateViewRegistryProducts], oldIndex, oldIndex)\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    dispatch(setViewRegistryProducts(items))\n    updateViewRegistryPosition(stateRegistryInfo.id, items, itemsOldPosition, dispatch)\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedProductsByFilters = (addedProducts, filterApplied) => {\n    let newSortedProducts = [...addedProducts]\n    const childFilterArray = [...filterApplied]\n\n    // For Gift Status\n    if ((childFilterArray.includes(AVAILABLE)) ||\n      (childFilterArray.includes(PURCHASED)) ||\n      (childFilterArray.includes(RESERVED))) {\n      newSortedProducts = newSortedProducts.filter(product => {\n        // (!product.isReserved || !product.isPurchased) || product.isPurchased || product.isReserved)\n        if ((childFilterArray.includes(AVAILABLE) && (!product.isReserved || !product.isPurchased))) {\n          return true\n        }\n        if ((childFilterArray.includes(PURCHASED) && product.isPurchased)) {\n          return true\n        }\n        if ((childFilterArray.includes(RESERVED) && product.isReserved)) {\n          return true\n        }\n      })\n    }\n\n    // For Store name\n    if ((childFilterArray.includes(MONICA_AND_ANDY) ||\n      (childFilterArray.includes(ELSEWHERE)))) {\n\n      newSortedProducts = newSortedProducts.filter(product => {\n        if ((childFilterArray.includes(MONICA_AND_ANDY) && product.item.store.storeName === MONICA_AND_ANDY)) {\n          return true\n        }\n        if ((childFilterArray.includes(ELSEWHERE) && product.item.store.storeName !== MONICA_AND_ANDY)) {\n          return true\n        }\n      })\n    }\n\n    // For Price\n    if ((childFilterArray.includes(PRICE_1) ||\n      (childFilterArray.includes(PRICE_2)) ||\n      (childFilterArray.includes(PRICE_3)))) {\n\n      newSortedProducts = newSortedProducts.filter(product => {\n        if ((childFilterArray.includes(PRICE_1) && product.item.price < 50)) {\n          return true\n        }\n        if ((childFilterArray.includes(PRICE_2) && (product.item.price >= 50 && product.item.price <= 100))) {\n          return true\n        }\n        if ((childFilterArray.includes(PRICE_3) && product.item.price > 100)) {\n          return true\n        }\n      })\n    }\n\n    // For Checklist category\n    let appliedCategoryProduct = []\n    for (let product of newSortedProducts) {\n      // TODO: change category\n      let parentCat = getParentCategory(product.registryCategories[0].id)\n      if (childFilterArray.includes(parentCat ? parentCat.id : '')) {\n        appliedCategoryProduct.push(product)\n        // appliedCategory.push(getParentCategory(product.item.category.id).id)\n      }\n    }\n    if (appliedCategoryProduct.length) {\n      let tempNewSortedProducts = []\n      for (let product of appliedCategoryProduct) {\n        let temp = newSortedProducts.filter(prod => prod.id === product.id)\n        if (temp.length) {\n          tempNewSortedProducts.push(...temp)\n        }\n      }\n      if (tempNewSortedProducts.length) {\n        newSortedProducts = tempNewSortedProducts\n      }\n    }\n\n    // Return Filtered Product list\n    return newSortedProducts\n  }\n\n  const getParentCategory = (id) => {\n    return [...stateCategoriesInfo].find((parentCategory) => parentCategory.subCategories.find((subCategory) => subCategory.id === id))\n  }\n\n  const getSortedFilteredProducts = (addedProducts, activeSortFilterState, viewRegistryProducts, filterApplied, registryInfo) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    let newSortedProducts = null\n\n    if (filterApplied.length > 0) {\n      newSortedProducts = getSortedProductsByFilters(addedProducts, filterApplied)\n    }\n    else {\n      newSortedProducts = [...addedProducts]\n    }\n\n    if (activeSortFilterState.sortId === 1) {\n      if (filterApplied.length > 0) {\n        sortedData = newSortedProducts\n      }\n      else if (registryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n      }\n      else {\n        sortedData = sortByMustHave([...newSortedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...newSortedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...newSortedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n  }\n\n  const sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  //Clear filter state\n  const clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    dispatch(clearViewFilter())\n  }\n\n  useEffect(() => {\n    if(stateCategoriesInfo.length === 0){\n      getCategories(stateRegistryInfo.id, dispatch);\n    }\n    if (stateAddedProducts.length === 0) {\n      getProducts(stateRegistryInfo.id, dispatch);\n    }\n    // if (stateAddedProducts.length > 0 && stateViewRegistryProducts.length === 0) {\n    //   let sortedData = sortByFeatured([...stateAddedProducts])\n    //   let viewRegistryProducts = sortedData.map((productData, index) => {\n    //     return { 'id': productData.id }\n    //   })\n    //   dispatch(setViewRegistryProducts(viewRegistryProducts))\n    // }\n  })\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  // updateFilterList(stateAddedProducts)\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <ViewFilter />\n          </div>\n          <div className=\"col\"></div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <SortFilterSection productCount={filteredSortProducts.length} />\n\n            {/* Added Products */}\n            {filteredSortProducts.length > 0 ?\n              <div className=\"mt-5\">\n                <SortableContainer onSortEnd={onSortEnd} helperClass=\"drag-add-card\" axis=\"y\" lockAxis=\"y\" useDragHandle>\n                  {filteredSortProducts.map((card, index) =>\n                    <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1 || stateFilterApplied.length !== 0} />\n                  )}\n                </SortableContainer>\n              </div> :\n              <div className=\"d-flex flex-column empty-filter mt-6\">\n                <div className=\"font-body empty-filter-title text-center mx-auto mt-10\">\n                  <p>We couldn’t find any gifts that matches your filters...</p>\n                  <p>Please try clearing ‘Filters’ to view gifts.</p>\n                </div>\n                <div className=\"mx-auto mt-3\">\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1 font-medium empty-filter-title text-body\"\n                    onClick={(ev) => clearFilterHandler(ev)}\n                  >\n                    Clear Filters\n                  </Button>\n                </div>\n              </div>}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Toast.scss';\n\nconst Toast = () => {\n  const closeToastMessage = (parentId) => {\n    toast.dismiss(parentId);\n  }\n\n  return (\n    <ToastContainer\n      position=\"top-center\"\n      className=\"m-a-toast-container\"\n      toastClassName=\"m-a-toast\"\n      autoClose={4000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      draggable={false}\n      closeOnClick={false}\n      closeButton={<i className=\"icon-close m-a-toast-close\" onClick={(event) => closeToastMessage(event.target.parentElement.id)} />}\n    />\n  )\n}\n\nexport default Toast;","import React from \"react\";\nimport \"./TodoWidget.scss\";\nimport {connect} from \"react-redux\";\n\nclass TodoWidget extends React.Component {\n\n  performTodoAction = todo => {\n  //  Perform action related to to-do\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-todo-widget\">\n        {this.props.stateTodo.length > 0 ?\n          (\n            //  When there is To-do\n            <div className=\"baby-registry-todo-section\">\n              <button className=\"baby-steps-button d-flex align-items-center py-3 pl-4 pr-8\">\n                <i className=\"baby-steps-icon\"/>\n                <div className=\"ml-5\">\n                  <p className=\"text-body font-medium\">{this.props.stateTodo.length} Baby Steps</p>\n                  <p className=\"text-sm text-left\">to take next!</p>\n                </div>\n              </button>\n\n              <div className=\"baby-steps-todo-content p-2\">\n                {this.props.stateTodo.map(todo => (\n                  <div className=\"baby-step-todo d-flex justify-content-between py-2 align-items-center\">\n                    <p className=\"text-body mr-9\">{todo.text}</p>\n                    {/*TODO: Update below icon once updated*/}\n                    <button className=\"baby-step-action-btn p-2 icon-chevron-right float-right\" onClick={() => this.performTodoAction(todo)}/>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n          :\n          (\n            //  When there is no To-do\n            <div className=\"baby-registry-no-todo-section d-flex align-items-center py-4\">\n              <i className=\"no-todo-icon\"/>\n              <div className=\"ml-2\">\n                <p className=\"text-body font-medium\">Great job!</p>\n                <p className=\"text-sm\">More to come, soon.</p>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTodo: state.registry.todo\n})\n\nexport default connect(\n  mapStateToProps\n)(TodoWidget);","import React from 'react';\nimport {NavLink, Switch, Route, Redirect} from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport {useTranslation} from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {useSelector} from 'react-redux';\nimport {toast} from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport TodoWidget from \"./component/todo-widget/TodoWidget\";\n\nconst RegistryHero = (props) => {\n\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const {t} = useTranslation();\n  const registryData = RegistryHeroData\n\n  if (!stateRegistryInfo.id && stateRegistryInfo.notFound) {\n    return <Redirect to={route.ONBOARDING.HOME}/>\n  }\n\n  return (\n    <>\n      {!stateGuestViewRegistry ?\n        <div className=\"registry-hero\">\n          <div className=\"container pt-6\">\n            <div className=\"row\">\n              <div className=\"col d-flex justify-content-between align-items-start\">\n                <div className=\"d-flex align-items-end\">\n                  <h1>{stateRegistryInfo.name}</h1>\n                  <span className=\"text-sm ml-1\">{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</span>\n                </div>\n                <div>\n                  <TodoWidget/>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-flex registry-hero-navigation-links\">\n                  <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.MY_REGISTRY.TRACK_GIFTS} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> : null}\n\n      {/* Registry Nav Routes */}\n      {stateRegistryInfo.id ?\n        <Switch>\n          <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME}/></Route>\n          <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry}/>\n          <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry}/>\n        </Switch>\n        : null}\n\n      <Toast />\n    </>\n  )\n}\n\nexport default RegistryHero;","import React from \"react\";\nimport \"./Option.scss\";\n\nconst Option = (props) => {\n  return (\n    <div\n      className={[\"px-4 py-3 baby-registry-question-option\", props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}>{props.children}</div>\n  );\n}\n\nexport default Option;","import React from \"react\";\nimport \"./Onboarding.scss\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport routes from \"utils/routes\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport {addQuestionAnswer, updateQuestionAnswer} from \"./OnboardingAction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  CREATE_REGISTRY\n} from \"../../api/mutations\";\nimport {graphQLNoToken, graphQLNoHeader} from \"../../api/axios\";\nimport {Cookies} from \"react-cookie\";\nimport {setLoggingStatus, setOnboardingRegistry} from \"../registry/RegistryActions\";\nimport {updateRegistryDetailState} from \"../../utils/commonFunction\";\nimport {GET_REGISTRIES} from \"../../api/queries\";\n\nclass Onboarding extends React.Component {\n\n  //EMAIL PATTERN\n  MAIL_FORMAT = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  // Static titles\n  LOGIN_TITLE = \"Sign in for free gifts, free shipping, and exclusive access to our limited edition prints\"\n  SIGNUP_TITLE = \"Let’s make it official. Time to create your account.\"\n  PARTNER_TITLE = \"Your partner’s details please\"\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  LOGIN = \"Login\"\n  PARTNER = \"Partner\"\n\n  state = {\n    parentId: null,\n    question: {},\n    login: false,\n    toastMessage: \"\",\n    signUpErrors: {},\n    signInErrors: {}\n  }\n\n  componentDidMount() {\n    window.onpopstate = () => {\n      if (this.props.location.pathname.search(routes.ONBOARDING.HOME) >= 0) {\n        this.setQuestionBasedOnId(this.props.match.params['questionId'])\n        this.clearToastMessage()\n      }\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      signUpErrors: {},\n      signInErrors: {}\n    })\n  }\n\n  createRegistry = () => {\n    let cookies = new Cookies();\n    graphQLNoHeader({query: CREATE_REGISTRY}, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data) {\n        let registryId = res.data.data.createRegistry.registry.id\n        if (registryId) {\n          this.props.dispatch(setOnboardingRegistry(registryId))\n          this.submitAllAnswers(registryId)\n        }\n      }\n    }).catch(err => {\n      console.error(err.response)\n    })\n  }\n\n  checkValidEmail = (email) => {\n    return email.match(this.MAIL_FORMAT)\n  }\n\n  submitAllAnswers = (optionalRegistryId = null) => {\n    if (this.props.stateOnboardingAnswers.length > 0 && (this.props.stateOnboardingRegistry || optionalRegistryId)) {\n      const registryId = optionalRegistryId ? optionalRegistryId : this.props.stateOnboardingRegistry;\n      let action = null;\n      let returnToURL = null;\n\n      const response = this.props.stateOnboardingAnswers.map(answer => {\n        action = answer.response.action ? answer.response.action : null;\n        return {\n          question: answer.question,\n          questionOptionInput: [\n            {\n              option: answer.response.option,\n              optionText: answer.response.optionText\n            }\n          ]\n        }\n      })\n\n      if (action) {\n        switch (action) {\n          case \"build-registry\":\n            returnToURL = window.location.origin + routes.MY_REGISTRY.HOME\n            break\n          case \"registry-quiz\":\n            returnToURL = window.location.origin + routes.PERSONALIZE.HOME\n            break\n          default:\n            returnToURL = window.location.origin + routes.REGISTRY.HOME\n            break\n        }\n      }\n\n      const cookies = new Cookies();\n      let reqData = {\n        query: SAVE_QUESTION_RESPONSE,\n        operationName: \"addRegistryQuestionOption\",\n        variables: {\n          registryId: registryId,\n          answers: response\n        }\n      }\n\n      if (action && returnToURL) {\n        reqData.variables['returnTo'] = returnToURL\n      }\n      graphQLNoHeader(reqData, {\n        headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n      }).then(res => {\n        if (res.data.data.addRegistryMultipleQuestionOption) {\n          if (res.data.data.addRegistryMultipleQuestionOption.redirectionUrl) {\n            window.open(res.data.data.addRegistryMultipleQuestionOption.redirectionUrl, \"_self\")\n          }\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.stateOnboardingQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      if (this.props.stateLoggedIn && this.state.redirectionUrl) {\n        // window.open(this.state.redirectionUrl, \"_self\")\n      }\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null\n      })\n\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.setToastMessage()\n      this.props.history.push(routes.ONBOARDING.HOME + `/${nextQuestionId}`)\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.stateOnboardingQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.stateOnboardingAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.stateOnboardingAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n          break;\n        }\n        newState.push(answer)\n      }\n      this.props.dispatch(updateQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addQuestionAnswer({question: this.state.question.id, response: response}))\n    }\n\n    // this.submitAllAnswers()\n  }\n\n  answerRadioQuestion = (option) => {\n    this.addAnswerToState({option: option.id, optionText: option.value, action: option.action});\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n  }\n\n  watchNextBtn = (ev) => {\n    this.setState({\n      nextBtnState: ev.target.value.length <= 0\n    })\n  }\n\n  answerDataQuestion = (response, dateCheck) => {\n    if (dateCheck) {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var currentDate = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n      if (currentDate <= response) {\n        this.addAnswerToState({option: 0, optionText: response})\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      }\n      else {\n        toast.error(\"Invalid date\")\n      }\n    }\n    else {\n      this.addAnswerToState({option: 0, optionText: response})\n      this.gotoNextQuestion(this.state.question, this.state.parentId);\n    }\n  }\n\n  textInputTypeChangeHandler = (ev, inputRefs) => {\n    let enableBtn = false;\n\n    for (const inputRef of inputRefs) {\n      if (inputRef.current.value.length <= 0) {\n        enableBtn = true\n        break\n      }\n    }\n\n    this.setState({\n      nextBtnState: enableBtn\n    })\n  }\n\n  changeLoginState = (ev, value, refs) => {\n    ev.preventDefault()\n    for (let ref of refs) {\n      if (ref.current) {\n        ref.current.value = \"\"\n      }\n    }\n    this.setState({\n      login: value\n    })\n  }\n\n  setErrorBasedOnResponse = (err, type) => {\n    if (err.response.data && err.response.data.errors) {\n      for (let error of err.response.data.errors) {\n        let parentErrors = err.response.data.errors\n\n        if (parentErrors.length > 0) {\n          for (const subErrors of parentErrors) {\n            if (subErrors.errors && (subErrors.errors instanceof Array ? subErrors.errors.length > 0 : true)) {\n              let newErrorState = {}\n              for (const error in subErrors.errors) {\n                newErrorState[error] = subErrors.errors[error].length > 0 ? subErrors.errors[error][0] : \"\"\n              }\n              switch (type) {\n                case \"signUp\":\n                  this.setState({\n                    signUpErrors: newErrorState\n                  })\n                  break\n                case \"signIn\":\n                  this.setState({\n                    signInErrors: newErrorState\n                  })\n                  break\n              }\n            } else {\n              toast.error(error.message)\n            }\n          }\n        }\n      }\n    }\n    console.error(err.response)\n  }\n\n  signInClickHandler = (emailRef, passwordRef) => {\n    if (emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      toast.error(\"Invalid email address\");\n      return;\n    }\n\n    let reqData = {\n      query: LOGIN_USER,\n      operationName: \"login_user\",\n      variables: {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.loginUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.loginUser.token, {path: \"/\"})\n\n        // Checking if user has registry\n        let data = {\n          query: GET_REGISTRIES\n        }\n        graphQLNoHeader(data, {headers: {\"Authorization\": \"Token \" + res.data.data.loginUser.token}}).then(registryRes => {\n          if (registryRes.data.data.registries.edges.length > 0) {\n            window.open(routes.MY_REGISTRY.HOME, \"_self\")\n            // updateRegistryDetailState(this.props.dispatch, registryRes.data.data.registries.edges);\n          } else {\n\n            // Creating Registry\n            this.createRegistry()\n          }\n\n        }).catch(err => {\n          console.error(err);\n        })\n        this.setState({\n          redirectionUrl: res.data.data.loginUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers()\n      }\n    }).catch(err => {\n      if (err.response.status === 401) {\n        toast.error(\"Invalid email or password\");\n        return;\n      }\n      this.setErrorBasedOnResponse(err, \"signIn\")\n    })\n  }\n\n  getSignInContent = () => {\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"signIn-email\"\n            ref={emailRef}\n            placeholder=\"johndoe@email.com\"\n          />\n          {this.state.signInErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"signIn-password\"\n            ref={passwordRef}\n            placeholder=\"Password\"\n          />\n          {this.state.signInErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.password}</p>\n            : null}\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signInClickHandler(emailRef, passwordRef)}\n        >Sign In</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Don't have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n          onClick={(ev) => this.changeLoginState(ev, false, [emailRef, passwordRef])}\n        >Sign Up</a></h4>\n      </>\n    )\n  }\n\n  signUpClickHandler = (nameRef, emailRef, passwordRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signUpErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    // Clearing all error messages\n    this.clearErrorState()\n\n    let reqData = {\n      query: REGISTER_USER,\n      operationName: \"register_user\",\n      variables: {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.registerUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.registerUser.token, {path: \"/\"})\n        this.setState({\n          redirectionUrl: res.data.data.registerUser.redirectionUrl\n        })\n        this.createRegistry()\n        this.submitAllAnswers()\n        this.props.dispatch(setLoggingStatus(true))\n      }\n    }).catch(err => {\n      this.setErrorBasedOnResponse(err, \"signUp\")\n    })\n  }\n\n  getSignUpContent = () => {\n    let nameRef = React.createRef()\n    let emailRef = React.createRef()\n    let passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.name ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Doe\"\n            ref={nameRef}\n          />\n          {this.state.signUpErrors.name ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.name}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"johndoe@email.com\"\n            ref={emailRef}\n          />\n          {this.state.signUpErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n          />\n          {this.state.signUpErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.password}</p>\n            : null}\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signUpClickHandler(nameRef, emailRef, passwordRef)}\n        >Sign Up</Button>\n        <h4 className=\"mt-11\">Already have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\" tabindex\n          onClick={(ev) => this.changeLoginState(ev, true, [nameRef, emailRef, passwordRef])}>Sign\n          In</a></h4>\n      </>\n    )\n  }\n\n  savePartnerDetail = (nameRef, emailRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      toast.error(\"Invalid email address\");\n      return;\n    }\n\n    const cookies = new Cookies();\n    let reqData = {\n      query: ADD_PARTNER_ACCOUNT,\n      operationName: \"addPartner\",\n      variables: {\n        partnerDetail: {\n          email: emailRef.current.value,\n          firstName: nameRef.current.value\n        }\n      }\n    }\n    graphQLNoHeader(reqData, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data.addPartnerAccount) {\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.response.data);\n    })\n  }\n\n  getPartnerContent = () => {\n    const nameRef = React.createRef()\n    const emailRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={nameRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1 mb-0\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={emailRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.savePartnerDetail(nameRef, emailRef)}\n        >Next</Button>\n      </>\n    )\n  }\n\n  render() {\n    if (this.props.stateOnboardingAnswers) {\n      this.submitAllAnswers()\n    }\n\n    // Redirecting user to registry home if registry found\n    if (this.props.stateRegistryInfo.id) {\n      return <Redirect to={routes.MY_REGISTRY.HOME} />\n    }\n\n    // Redirecting to first question if not answered any\n    if (this.props.stateOnboardingQuestions.length > 0\n      && this.props.stateOnboardingAnswers.length <= 0\n      && this.props.location.pathname !== routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`) {\n      return <Redirect to={routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`} />\n    }\n\n    if (!this.state.question.title && this.props.stateOnboardingQuestions.length > 0 && this.props.stateRouter.location.pathname !== routes.ONBOARDING.HOME + `/${this.state.question.id}`) {\n      this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    }\n\n    // Skipping Login Question if user is already logged in\n    if (this.props.stateLoggedIn && this.state.question.answerInputType === this.LOGIN) {\n      // If user already logged into M&A Store\n      this.setState((prevState, _) => ({\n        redirectionUrl: prevState.redirectionUrl ? prevState.redirectionUrl : routes.MY_REGISTRY.HOME\n      }))\n      this.gotoNextQuestion(this.state.question, null);\n    }\n\n    if (this.state.toastMessage) {\n      if (this.props.history.action === \"PUSH\") {\n        toast.dismiss()\n        toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n        setTimeout(() => this.setState({toastMessage: \"\"}), 4000)\n      }\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n    var now = new Date();\n    var day = (\"0\" + now.getDate()).slice(-2);\n    var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    var today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      options = this.state.question.options.map(option => (\n        <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n            <span className=\"text-sm ml-1 onboarding-option-help-text\">{option.helpText}</span> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === \"Date\") {\n      let inputRef = React.createRef();\n      options.push(\n        <div className=\"d-flex flex-column\">\n          {/*TODO: Get placeholder from backend*/}\n          <input\n            type=\"date\"\n            className=\"onboarding-input py-1 px-2 text-body mb-0\"\n            placeholder=\"Date\"\n            ref={inputRef}\n            onChange={(ev) => this.watchNextBtn(ev)}\n            min={today}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(inputRef.current.value, true)}\n            className=\"px-3 py-1 font-medium mt-4 onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === \"Text\") {\n      let inputRefs = []\n      const inputRef = React.createRef()\n      inputRefs.push(inputRef)\n      options.push(\n        // TODO: Update this part if there is a Text type question\n        <div className=\"d-flex flex-column\">\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"Text\"\n            name=\"Answer\"\n            ref={inputRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(inputRef.current ? inputRef.current.value : \"\", false)}\n            className=\"mt-4 px-3 py-1 font-medium onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === this.LOGIN) {\n      let content = null;\n      if (this.state.login) {\n        staticQuestionTitle = this.LOGIN_TITLE\n        content = this.getSignInContent()\n      } else {\n        staticQuestionTitle = this.SIGNUP_TITLE\n        content = this.getSignUpContent()\n      }\n\n      options.push(content)\n    } else if (this.state.question.answerInputType === this.PARTNER) {\n      staticQuestionTitle = this.PARTNER_TITLE;\n      options.push(this.getPartnerContent())\n    }\n\n    return (\n      <>\n        <div className=\"baby-registry-onboarding container\">\n          <div className=\"row justify-content-center mt-24\">\n            <div className=\"col-12 col-md-6\">\n              <span\n                className=\"font-body onboading-question\">{[this.LOGIN, this.PARTNER].indexOf(this.state.question.answerInputType) !== -1 ? staticQuestionTitle : this.state.question.title}</span>\n            </div>\n          </div>\n          <div className=\"row justify-content-center mt-6\">\n            <div className=\"col-12 col-md-6\">\n              {options.map(option => option)}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          className=\"onboarding-toast-container\"\n          toastClassName=\"onboarding-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateOnboardingAnswers: state.onboarding.answers,\n    stateOnboardingRegistry: state.registry.onboardingRegistry,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Onboarding);","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from 'react';\nimport \"./PersonaliseHeader.scss\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\n\n\nconst PersonaliseHeader = (props) => {\n    const closePersonalise = (event) => {\n        event.preventDefault();\n        props.history.push(routes.REGISTRY.HOME)\n    }\n    \n    return (\n        <div className=\"personalise-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-between py-2\">\n                        <p className=\"text-body font-medium personalise-text\">My Registry Quiz</p>\n                        <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(PersonaliseHeader);","import React from 'react';\nimport \"./PersonaliseFooter.scss\";\n\n\nconst PersonaliseFooter = (props) => {\n  const closePersonalise = (event) => {\n    event.preventDefault();\n    // props.history.push(routes.REGISTRY.HOME)\n  }\n\n  return (\n    <div className=\"personalise-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4 justify-content-between pt-2 pb-4\">\n            <div className=\"mb-1\">\n              {props.percentage ? <p className=\"text-sm\">{props.percentage}% complete</p> : null}\n            </div>\n            <div className=\"personalise-progress-background\">\n              <div className=\"personalise-progress\" style={{ width: `${props.percentage}%` }} />\n            </div>\n          </div>\n          {/* <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} /> */}\n          <div className=\"col d-flex justify-content-end\">\n            <i className=\"icon-chevron-left align-self-center personalise-footer-icon p-2\" onClick={props.prevQuestion} />\n            <i className=\"icon-chevron-right align-self-center personalise-footer-icon p-2 ml-2\" onClick={props.nextQuestion} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonaliseFooter;","import React, { createRef } from \"react\";\n// import \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport PersonaliseHeader from \"./components/personalise-header/PersonaliseHeader\";\nimport { getPersonalizeQuestions } from \"utils/commonFunction\";\nimport { connect } from \"react-redux\";\nimport PersonaliseFooter from \"./components/personalise-footer/PersonaliseFooter\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport { updatePersonalizeQuestionAnswer, addPersonalizeQuestionAnswer, addPersonalizeQuestion } from \"./PersonaliseCheckListActions\";\nimport \"./PersonaliseChecklist.scss\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_SINGLE_QUESTION_RESPONSE } from 'api/mutations';\nimport { graphQL } from 'api/axios';\n\nclass PersonaliseChecklist extends React.Component {\n\n  state = {\n    parentId: null,\n    prevQuestionId: [],\n    question: {},\n    activeQuestionId: null,\n    toastMessage: \"\",\n    percentage: 0,\n    checkBoxSelected: []\n  }\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  CHECKBOX = \"Checkbox\"\n\n  componentDidMount() {\n    this.setState({\n      prevQuestionId: [],\n      activeQuestionId: null\n    })\n    // getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    this.clearToastMessage()\n  }\n\n  calulatePercentage = (answerQuestionCount, totalQuestionCount) => {\n    let totalAnwer = 0;\n\n    const questions = [...this.props.statePersonaliseQuestions]\n    for (let question of questions) {\n      if (question.answers.length > 0) {\n        totalAnwer++;\n      }\n      if (questions.followUpQuestion) {\n        for (let subQuestion of question.followUpQuestions) {\n          if (subQuestion.answers.length > 0) {\n            totalAnwer++;\n          }\n        }\n      }\n    }\n    return this.props.statePersonaliseQuestions.length ? Math.ceil(totalAnwer * 100 / totalQuestionCount) : 0;\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.statePersonaliseQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null,\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        activeQuestionId: nextQuestionId\n      })\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.clearToastMessage();\n    }\n  }\n\n  gotoPrevQuestion = (prevQuestionId) => {\n    this.setQuestionBasedOnId(prevQuestionId);\n    if (this.state.prevQuestionId.length > 1) {\n      let popPrevQuestionId = [...this.state.prevQuestionId];\n      popPrevQuestionId.pop();\n      this.clearToastMessage();\n      this.setState({\n        prevQuestionId: popPrevQuestionId,\n        activeQuestionId: popPrevQuestionId.length > 0 ? popPrevQuestionId[popPrevQuestionId.length - 1] : this.state.activeQuestionId\n      })\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.statePersonaliseQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId,\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.statePersonaliseAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.statePersonaliseAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n        }\n        else {\n          newState.push(answer)\n        }\n      }\n      this.props.dispatch(updatePersonalizeQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addPersonalizeQuestionAnswer({ question: this.state.question.id, response: response }))\n    }\n  }\n\n  isActiveIdPresent = () => {\n    for (let prevQuestion of this.state.prevQuestionId) {\n      if (prevQuestion === this.state.activeQuestionId) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    this.addAnswerToState(option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    let finalAnswer = [{\n      option: option.id,\n      optionText: option.value\n    }]\n\n    this.submitQuestionAnswer(questionId, finalAnswer);\n  }\n\n  answerCheckBoxQuestion = (questionId, option) => {\n    if (option.length) {\n      this.addAnswerToState(option[0]);\n      this.gotoNextQuestion(this.state.question, this.state.parentId, option[0]);\n      // this.calulatePercentage();\n      if (this.isActiveIdPresent) {\n        this.setState({\n          prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        })\n      }\n\n      // let finalAnswer = [{\n      //   option: option.id,\n      //   optionText: option.value\n      // }]\n      let finalAnswer = []\n\n      for (let op of option) {\n        finalAnswer.push({ option: op.id, optionText: op.value })\n      }\n\n      this.submitQuestionAnswer(questionId, finalAnswer);\n    } else {\n      toast.error(\"Please select one option\");\n    }\n  }\n\n  selectCheckboxAnswer = (event, checkBoxRef, option) => {\n    checkBoxRef.current.classList.toggle(\"personalise-checkbox-selected\");\n    this.setState({\n      // checkBoxSelected: selectedOption.push(option)\n      checkBoxSelected: [...this.state.checkBoxSelected, option]\n\n    })\n  }\n\n  submitQuestionAnswer = (questionId, answer) => {\n    this.setToastMessage()\n    let questionOptionInput = {\n      question: questionId,\n      questionOptionInput: answer\n    }\n    let reqData = {\n      query: SAVE_SINGLE_QUESTION_RESPONSE,\n      variables: {\n        registryId: this.props.stateRegistryInfo.id,\n        registryQuestionOptionInput: questionOptionInput\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data) {\n        console.log('Answer Done')\n        this.setStateQuestionWithSelectedAnswer(questionId, answer)\n      }\n    }).catch(err => {\n      toast.error(\"Error occurred while fetching questions\");\n      console.error(err);\n    })\n  }\n\n  setStateQuestionWithSelectedAnswer = (questionId, answer) => {\n    let answerOpt = []\n    for (let ans of answer) {\n      answerOpt.push({ questionOption: { id: ans.option }, optionText: ans.optionText })\n    }\n\n    // Setting question state with selected answer\n    const questions = [...this.props.statePersonaliseQuestions].map(question => {\n\n      if (question.id === questionId) {\n        question.answers = answerOpt\n      }\n      question.options = question.options.map(opt => {\n        if (opt.followUpQuestions.length > 0) {\n          opt.followUpQuestions.map(followUpQuestion => {\n            if (opt.id === questionId) {\n              opt.answers = answerOpt\n            }\n          })\n        }\n        return opt;\n      })\n      question.isAnswered = false;\n      return question;\n    })\n    this.props.dispatch(addPersonalizeQuestion(questions))\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  render() {\n\n    if (!this.state.question.id && this.props.statePersonaliseQuestions.length > 0) {\n      let prevQuestionID = []\n      let currentQuestion = null\n      for (let question of this.props.statePersonaliseQuestions){\n        if (!question.isPersonalize) {\n          prevQuestionID.push(question.id)\n        }\n        else {\n          currentQuestion = question\n          break\n        }\n      }\n      this.setState({\n        prevQuestionId: prevQuestionID,\n        activeQuestionId: currentQuestion.id,\n        question: currentQuestion\n      })\n\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      const selectedOptionID = this.state.question.answers?.length > 0 ? this.state.question.answers[0].questionOption.id : null\n      options = this.state.question.options.map(option => (\n        <Option className={[\"mb-2 mr-4\", selectedOptionID === option.id ? \"answer-selected\" : \"\"].join(\" \")} onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n            <div className=\"text-sm onboarding-option-help-text\">{option.helpText}</div> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === this.CHECKBOX) {\n      // TODO: If it is selected\n      // const selectedOptionID = []\n      // if(this.state.question.answers?.length > 0){\n      //   for (let ans of this.state.question.answers){\n      //     selectedOptionID.push(ans.questionOption.id)\n      //   }\n      // }\n      options = this.state.question.options.map(option => {\n        let checkBoxRef = createRef();\n        return (\n          <div\n            className=\"personalise-checkbox mr-3 mb-3\" ref={checkBoxRef}>\n            <label className=\"checkbox d-flex align-items-center pb-0 mb-0\">\n              <span className=\"checkbox__input p-2\">\n                <input\n                  type=\"checkbox\"\n                  name={option.id}\n                  value={option.id}\n                  onChange={(e) => this.selectCheckboxAnswer(e, checkBoxRef, option)}\n                />\n                <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                  <i className=\"icon-check\"></i>\n                </span>\n              </span>\n              <h4 className=\"radio__label pr-2\">{option.value}</h4>\n            </label>\n          </div>\n        )\n      })\n      options.push(\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"px-3 py-1 font-medium onboarding-next-button\"\n            onClick={() => this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)}\n          >Done</Button>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"personalise\">\n          {/* Personalise Header */}\n          <PersonaliseHeader />\n\n          {/* Personalise Body */}\n          <div className=\"baby-registry-onboarding container mb-15\">\n            <div className=\"row justify-content-center mt-24\">\n              <div className=\"col-12 col-md-6\">\n                <span\n                  className=\"font-body onboading-question\">{this.state.question.title}</span>\n              </div>\n            </div>\n            <div className=\"row justify-content-center mt-6\">\n              <div className=\"col-12 col-md-6\">\n                {options.map(option => option)}\n              </div>\n            </div>\n          </div>\n\n          {/* Personalise Footer */}\n          <PersonaliseFooter\n            percentage={this.calulatePercentage(this.props.statePersonaliseAnswers.length, this.props.statePersonaliseQuestions.length)}\n            prevQuestion={() => { this.gotoPrevQuestion(this.state.prevQuestionId[this.state.prevQuestionId.length - 1]) }}\n            nextQuestion={() => { this.gotoNextQuestion(this.state.question, this.state.parentId) }}\n          />\n        </div>\n\n        <ToastContainer\n          position=\"top-center\"\n          className=\"personalise-toast-container\"\n          toastClassName=\"personalise-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n    statePersonaliseAnswers: state.personaliseCheckList.answers,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { setPersonaliseCheckListItems } from \"../../PersonaliseCheckListActions\";\nimport { connect } from \"react-redux\";\nimport './EditChecklist.scss';\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {\n  incrementCheckListQuantity,\n  setIsActiveCheckList,\n  decrementCheckListQuantity\n} from \"../../PersonaliseCheckListActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_UPDATED_CHECKLIST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport { getAllCategories } from 'utils/commonFunction';\n\n// import {setCheckListItems} from \"../../../my-registry/MyRegistryActions\";\n\nclass PersonaliseChecklist extends React.Component {\n  componentDidMount() {\n    this.getAllCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n  getAllCategories = (registryId, dispatch) => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryId)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.errors || res.data.error) {\n        // TODO: Add toast\n        console.log('Something went wrong-->', res.data.errors)\n        return;\n      } else {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  if (subProductType.isExcluded) {\n                    subProductType.totalItemsCount = 1\n                    subProductType['isAdded'] = false\n                  } else {\n                    subProductType['isAdded'] = true\n                  }\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                if (subCategory.isExcluded) {\n                  subCategory.totalItemsCount = 1\n                  subCategory['isAdded'] = false\n                } else {\n                  subCategory['isAdded'] = true\n                }\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = { ...category }\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n\n        }\n        dispatch(setPersonaliseCheckListItems(finalCheckList))\n      }\n    }).catch(err => {\n      console.error('Something went wrong-->', err);\n    })\n  }\n\n  closeAndSavePersonaliseCheckList = (event) => {\n    event.preventDefault();\n    let finalCheckListData = []\n    let tempStateCheckList = [...this.props.stateCheckList]\n    for (let category of tempStateCheckList) {\n      for (let subCategory of category.subCategories) {\n        // let tempData = null\n        let tempData = {\n          registryCategoryId: subCategory.id,\n          itemsCount: subCategory.totalItemsCount,\n          isExcluded: !subCategory.isAdded\n        }\n        finalCheckListData.push(tempData)\n      }\n    }\n\n    let registryId = this.props.stateRegistryInfo.id\n    let data = {\n      query: SAVE_UPDATED_CHECKLIST,\n      variables: {\n        registryId: registryId,\n        itemCountData: finalCheckListData\n      },\n    }\n\n    graphQL(data).then(res => {\n      if (res.data) {\n        toast.success((\n          <p>Personalise Checklist Updated Successfully</p>\n        ))\n        this.props.history.push(routes.REGISTRY.HOME)\n      }\n\n    }).catch(err => {\n      console.error(err.message)\n      toast.error((\n        <p>Some error occurred.</p>\n      ))\n    })\n  }\n\n  gotoPersonaliseQuestions = (event) => {\n    event.preventDefault();\n    this.props.history.push(routes.PERSONALIZE.HOME)\n  }\n\n  render() {\n    return (\n      // TODO: API call\n      <div className=\"personalise-checklist\">\n        {/* Header */}\n        <div className=\"py-2 personalise-checklist-header font-body font-medium\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col \">Edit Checklist</div>\n              <div className=\"col d-flex align-items-center justify-content-end\">\n                <a className=\"mr-6 personalise-header-link\" tabindex onClick={(e) => { this.gotoPersonaliseQuestions(e) }}>Take our quiz</a>\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1  font-medium done-btn\"\n                    onClick={(e) => { this.closeAndSavePersonaliseCheckList(e) }}\n                  >I’m Done</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* All categries selection body */}\n        {this.props.stateCheckList.map((parentCategories, i) => (\n          <div className=\"mt-6 container\" key={parentCategories.categoryName + \"-\" + i}>\n            <div className=\"checklist-title pb-4 body-text\">\n              {parentCategories.categoryName}\n            </div>\n            <div className=\"row mt-4\">\n              {parentCategories.subCategories.map((subCategories, i) => (\n                <div className=\"col-3 mb-5\" key={subCategories.id}>\n                  <div className={[\"checklist-card pl-2 pr-3 py-3\",\n                    !subCategories.isAdded ? \"add-checklist-bg\" : \"\"].join(' ')\n                  }>\n                    <div className=\"d-flex mb-4 checklist-action-btn\">\n                      <div className=\"text-body font-medium align-self-center\">{subCategories.categoryName}</div>\n                      {subCategories.addedItemsCount <= 0 ?\n                        <div className=\"ml-auto\">\n                          <button className={[\"checklist-add-btn\",\n                            !subCategories.isAdded ? \"checklist-icon-plus\" : \"icon-close\"].join(' ')}\n                            onClick={() => this.props.dispatch(setIsActiveCheckList(subCategories.id, !subCategories.isAdded))} />\n                        </div>\n                        : null\n                      }\n                    </div>\n                    <div className=\"d-flex align-items-center\">\n                      <Counter\n                        counter={subCategories.totalItemsCount}\n                        incrementHandler={() => this.props.dispatch(incrementCheckListQuantity(subCategories.id, 1))}\n                        decrementHandler={() => this.props.dispatch(decrementCheckListQuantity(subCategories.id, 1))}\n                      />\n                      {subCategories.addedItemsCount > 0 ?\n                        <span className=\"ml-auto text-sm item-count-label\">{subCategories.addedItemsCount} added</span>\n                        : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        <Toast />\n      </div>\n    );\n  }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport \"./GuestView.scss\";\nimport {connect} from \"react-redux\";\nimport {updateGuestViewRegistry} from \"../../utils/commonFunction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\n\nclass GuestView extends React.Component {\n  BABY_GIFTS_URL = \"https://monicaandandy.com/collections/baby-gifts\"\n  render() {\n\n    if (this.props.stateGuestViewRegistry.urlSlug !== this.props.match.params.registrySlug) {\n      updateGuestViewRegistry(this.props.match.params.registrySlug, this.props.dispatch)\n    }\n\n    // When registry doesn't exists\n    if (this.props.stateGuestViewRegistry.notFound) {\n      return <h1>Registry not found</h1>;\n    }\n\n    if (this.props.stateGuestViewRegistry.id) {\n      // WHen registry exists and it is not public\n      if (this.props.stateGuestViewRegistry.isPublic === false) {\n        let registryUsers = [this.props.stateGuestViewRegistry.user.firstName]\n        if (this.props.stateGuestViewRegistry.user.partnerUser){\n          registryUsers.push(this.props.stateGuestViewRegistry.user.partnerUser.firstName)\n        }\n        return (\n          <div className=\"container mt-17\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n                <h1>{this.props.stateGuestViewRegistry.displayName}</h1>\n                {/*TODO: Display partner name as well below*/}\n                {registryUsers.length === 1 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> is still curating their baby registry</h4> : null}\n                {registryUsers.length === 2 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> and <span className=\"text-capitalize\">{registryUsers[1]}</span> are still curating their baby registry</h4> : null}\n\n                <Button\n                  variant=\"primary\"\n                  className=\"py-1 px-2 mt-3 text-body font-medium\"\n                  onClick={() => window.location.href = this.BABY_GIFTS_URL}\n                >Shop baby Gifts</Button>\n              </div>\n            </div>\n          </div>\n        )\n      } else {\n        // When registry exists and it is public\n        return <h1>Registry is public</h1>\n      }\n    }\n\n\n    // Default return\n    return <></>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stateGuestViewRegistry: state.guestView.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestView);","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport Onboarding from \"../onboarding/Onboarding\";\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {updateRegistryDetail, getOnboardingQuestions, createRegistry, getPersonalizeQuestions} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport {verifyAccessToken} from \"../../api/axios\";\nimport {setLoggingStatus, updateRegistryInfo} from \"../registry/RegistryActions\";\nimport PersonaliseChecklist from \"../personalise-checklist/PersonaliseChecklist\";\nimport EditChecklist from \"modules/personalise-checklist/components/edit-checklist/EditChecklist\";\nimport GuestView from \"../guest-view/GuestView\";\nimport MyRegistry from \"../my-registry/MyRegistry\";\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\n\nclass ViewsContainer extends React.Component {\n\n  state = {\n    displayContent: false,\n    foundRegistry: false\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    const access_token = cookies.get(\"access_token\")\n    if (access_token) {\n      verifyAccessToken({token: access_token}).then(res => {\n        if (res.data.data.customer) {\n          this.props.dispatch(setLoggingStatus(true))\n          if (res.data.data.registries.length > 0) {\n            this.setState({\n              foundRegistry: true\n            })\n            updateRegistryDetail(this.props.dispatch);\n          } else {\n            this.props.dispatch(updateRegistryInfo({notFound: true}))\n\n            //  Creating New Registry\n            createRegistry(this.props.dispatch)\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n        this.props.dispatch(setLoggingStatus(false))\n        this.props.dispatch(updateRegistryInfo({notFound: true}))\n      }).finally(() => {\n        this.setState({\n          displayContent: true\n        })\n      })\n    } else {\n      this.setState({\n        displayContent: true\n      })\n      this.props.dispatch(updateRegistryInfo({notFound: true}))\n    }\n  }\n\n  render() {\n\n    // if (this.props.stateRouter.location.pathname.search(route.GUEST_VIEW.HOME) !== -1) {\n    //   console.log(route.GUEST_VIEW.HOME+\"/:registryName\")\n    //   return <Redirect to={this.props.stateRouter.location.pathname}/>\n    // }\n\n    // Redirecting user to onboarding is no registry found\n    // if (this.props.stateRouter.location.pathname.search(route.ONBOARDING.HOME) === -1 && !this.props.stateRegistryInfo.id && !this.state.foundRegistry && this.state.displayContent) {\n    //   console.log(this.props.stateRouter.location.pathname)\n    //   return <Redirect to={route.ONBOARDING.HOME}/>\n    // }\n\n    if (this.props.stateOnboardingQuestions.length <= 0) {\n      getOnboardingQuestions(this.props.dispatch)\n    }\n\n    if(this.props.stateRegistryInfo.id && this.props.statePersonaliseQuestions.length <= 0){\n      getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    }\n\n    return (\n      <>\n        {this.state.displayContent ?\n          <Switch>\n            <Route exact path={route.PERSONALIZE.CHECKLIST} component={EditChecklist}/>\n            <Route exact path={route.PERSONALIZE.HOME} component={PersonaliseChecklist}/>\n            <Route exact path={route.ONBOARDING.HOME + \"/:questionId?\"} component={Onboarding}/>\n            <Route exact path={route.MY_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.VIEW_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.GUEST_VIEW.HOME + \"/:registrySlug\"} component={GuestView}/>\n            <Route path={route.REGISTRY.HOME} component={RegistryHero}/>\n            <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n            <Route render={() => <div>DEFAULT</div>}/>\n          </Switch>\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateRouter: state.router,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}