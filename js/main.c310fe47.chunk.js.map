{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","modules/personalise-checklist/PersonaliseCheckListActions.js","modules/personalise-checklist/PersonaliseCheckListReducer.js","modules/onboarding/OnboardingAction.js","modules/onboarding/OnboardingReducer.js","modules/guest-view/GuestViewAction.js","modules/guest-view/GuestViewReducer.js","modules/track-gifts/TrackGiftsAction.jsx","modules/track-gifts/components/view-by/ViewBy.jsx","modules/track-gifts/TrackGiftsReducer.jsx","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/modal-component/ModalComponent.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","api/queries.js","api/config.js","api/axios.js","utils/constants.js","api/mutations.js","modules/track-gifts/components/gift-card-pill/GiftCardPill.jsx","modules/commons/components/button-component/ButtonComponent.jsx","modules/commons/components/gift-status-pill/GiftStatusPill.jsx","modules/commons/components/product-details-model/ProductDetailsModel.jsx","modules/track-gifts/components/buy-now/BuyNow.jsx","modules/commons/components/mark-as-purchased/MarkAsPurchased.jsx","modules/track-gifts/components/mark-purchased/MarkPurchased.jsx","modules/track-gifts/components/gift-card/GiftCard.jsx","modules/track-gifts/containers/track-gifts-content/TrackGiftsContent.jsx","utils/commonFunction.js","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/import-registry/category-pill/CategoryPill.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/import-registry/ImportRegistry.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/toggle-pills/TogglePills.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal.jsx","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/commons/components/cash-fund-card/cash-fund-card-not-added/CashFundCardNotAdded.jsx","modules/commons/components/cash-fund-card/CashFundCard.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/components/view-filter/ViewFilter.jsx","modules/commons/components/already-bought-product/AlreadyBoughtProduct.jsx","modules/commons/components/purchased-modal/PurchasedModal.jsx","modules/commons/components/give-MA-gift-model/GiveMAGiftModel.jsx","modules/guest-view/components/GuestViewCard.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/commons/components/toast/Toast.jsx","modules/registry-hero/component/todo-widget/TodoWidget.jsx","modules/track-gifts/components/filters/Filters.jsx","modules/track-gifts/components/thank-you-list/ThankYouList.jsx","modules/track-gifts/containers/track-gifts-sidebar/TrackGiftsSidebar.jsx","modules/track-gifts/components/search/Search.jsx","modules/track-gifts/components/add-gift/AddGift.jsx","modules/track-gifts/TrackGifts.jsx","modules/track-gifts/components/redirection-screen/RedirectionScreen.jsx","modules/registry-hero/RegistryHero.jsx","modules/commons/components/questions/option/Option.jsx","modules/onboarding/Onboarding.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/personalise-checklist/components/personalise-header/PersonaliseHeader.jsx","modules/personalise-checklist/components/personalise-footer/PersonaliseFooter.jsx","modules/personalise-checklist/PersonaliseChecklist.jsx","modules/personalise-checklist/components/edit-checklist/EditChecklist.jsx","modules/guest-view/containers/guest-view-header/GuestViewHeader.jsx","modules/guest-view/containers/guest-sort-filter/GuestSortFilter.jsx","modules/guest-view/containers/guest-sort/GuestSortSection.jsx","modules/guest-view/containers/guest-filter/GuestFilter.jsx","modules/guest-view/GuestView.jsx","modules/find-registry/FindRegistry.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","SET_ANOTHER_STORE_REGISTRY_ITEMS","SET_CASH_FUND_CATEGORIES","SET_FILTER_PRODUCT_COUNT","addRecommendedProduct","params","toggleMustHaveProduct","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","setAnotherStoreRegistryItems","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","anotherStoreRegistry","cashFundCategories","filterCount","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","setguestViewRegistry","setViewFilterCategory","setChildViewFilter","clearViewFilter","viewRegistryProducts","activeSortFilter","sortId","sortTitle","guestViewRegistry","viewFilterApplied","REGISTRY_ACTION_TYPES","updateRegistryInfo","setLoggingStatus","setOnboardingRegistry","info","loggedIn","todo","onboardingRegistry","PERSONALISE_CHECKLIST_ACTION_TYPES","setPersonaliseCheckListItems","addPersonalizeQuestion","addPersonalizeQuestionAnswer","updatePersonalizeQuestionAnswer","newSubCategory","subCategories","subCategory","totalItemsCount","setIsAddedCheckList","isAdded","editedPersonaliseCheckList","questions","answers","ONBOARDING_ACTION_TYPES","addOnboardingQuestion","addQuestionAnswer","updateQuestionAnswer","GUEST_VIEW_ACTION_TYPES","updateGuestViewInfo","setGuestViewProducts","setChildGuestViewFilter","clearGuestViewFilter","setGuestViewFilterCategory","setViewGuestPaginationInfo","clearViewGuestPaginationInfo","setAlreadyBoughtProductInfo","updated","activeGuestSortFilter","guestViewFilterApplied","guestFilterCategory","paginationInfo","trackGifts","pagination","alreadyBoughtProduct","defaultAlreadyBoughtProductInfo","TRACK_GIFTS_ACTION_TYPES","setTrackGiftsProduct","setTrackGiftsPaginationInfo","setTrackGiftsFilters","setTrackGiftsSearch","setTrackGiftsRedirectionInfo","TRACK_GIFTS_VIEWS","ViewBy","activeView","useSelector","dispatch","useDispatch","changeTrackGiftView","view","className","join","onClick","products","filters","search","redirectionInfo","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","personaliseCheckList","PersonaliseCheckListReducer","onboarding","Onboarding","TrackGiftsReducer","guestView","GuestViewReducer","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","shower","announcements","more","toDos","es","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","TRACK_GIFTS","ONBOARDING","PERSONALIZE","CHECKLIST","GUEST_VIEW","FIND_REGISTRY","MoreOption","props","iconClass","buttonClass","data","map","option","index","key","name","ModalComponent","Modal","show","size","titleContent","Header","headerContent","closeModal","Body","children","footer","Footer","Counter","decrementHandler","counter","incrementHandler","CardItem","src","image","originalSrc","alt","href","productLink","tabindex","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","gql","GET_CATEGORIES","GET_PRODUCTS","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","GET_REGISTRIES","GET_QUESTIONS","GET_PERSONALIZE_QUESTIONS","GET_TRACK_GIFTS","GET_GUEST_REGISTRY_PRODUCT","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","axiosInstanceNoToken","axiosInstanceNoHeader","graphQLNoToken","post","graphQLNoHeader","graphQL","getAnotherRegistryProducts","axiosInstanceMultipart","graphQLMultipart","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","FILTERS","BOOKMARKLET_SCRIPT","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","REGISTER_USER","SAVE_QUESTION_RESPONSE","LOGIN_USER","ADD_PARTNER_ACCOUNT","SAVE_UPDATED_CHECKLIST","SAVE_SINGLE_QUESTION_RESPONSE","CREATE_REGISTRY","TRACK_GIFTS_ADD_GIFT","MARK_AS_PURCHASED_BY_GUEST","GIVE_GROUP_GIFT_GUEST","CASH_FUND_GIFT_GUEST","MARK_AS_PURCHASED","GiftCardPill","text","variant","amount","ButtonComponent","React","forwardRef","ref","btnVariantClass","disabled","GiftStatusPill","pillVariantClass","ProductDetailsModel","imageUrl","storeItemUrl","target","isGroupGift","note","quantityStatus","purchased_quantity","reserved_quantity","still_needed","EMAIL_RE","BuyNow","storeName","orderNumber","guestName","guestEmail","errors","modalCloseHandler","setState","incrementQuantity","prevState","decrementQuantity","storeNameChangeHandler","ev","value","orderNumberChangeHandler","guestNameChangeHandler","errorState","guestEmailChangeHandler","validData","valid","match","saveClickHandler","buyNowClickHandler","createNewRecord","updateProduct","openModal","jsonVisitedItems","JSON","parse","localStorage","getItem","Number","rId","stateRegistryInfo","pId","productData","productTimestamp","timestamp","currentDate","setHours","newVisitedItemsData","foundProduct","newData","setItem","stringify","open","this","onChange","placeholder","Component","connect","MarkAsPurchased","email","contributionAmount","closeModalHandler","nameChangeHandler","emailChangeHandler","noteChangeHandler","contributionAmountChangeHandler","persist","reqData","query","variables","registryId","registryItemId","purchasedRegistryItemInput","isPurchased","orderNo","giftMessage","guestUserInput","then","res","markAsPurchased","toast","success","getTrackGiftsProduct","stateTrackGiftsFilters","stateTrackGiftsProducts","stateTrackGiftsPagination","stateTrackGiftsView","stateTrackGiftsSearch","catch","err","error","console","response","rows","MarkPurchased","openPurchasedModal","preventDefault","GiftCard","friendsDetailRef","createRef","toggleFriendsDetail","e","current","classList","toggle","purchasedRegistryItem","guestUser","firstName","lastName","isCashFund","groupGift","amountReceived","style","width","isReserved","isCashAcceptedOnly","isAmountReceived","createdTs","moment","format","otherUsers","user","LOCAL_2_API_FILTERS_MAPPING","4","1","3","2","5","NoRecordFound","TrackGiftsContent","currentView","checkProductAvailability","getProductsBasedOnView","stateProducts","availableProducts","guestUsersEmails","refinedProducts","skipCashFund","userProducts","currentProduct","newUsers","groupUser","log","indexOf","groupProduct","hasNextPage","overflow","next","hasMore","loader","dataLength","groupedProduct","getProducts","parseInt","registryItems","registryItemsAnalysisCount","finalData","newItemObj","registryitemImage","registryCategories","setRegistryProducts","removeProductFromCartHandler","card","getCategories","message","getRefinedCategory","categoryName","categoryType","isDesired","isExcluded","addedItemsCount","isParent","getAllCategories","getAll","subCategoriesIsExcluded","parentCategory","newParentCategory","registrySubCategories","newSubCategories","cat","refinedSubCate","subProductTypes","registrySubProductTypes","subProduct","operationName","finalCategories","allCategories","updateRegistryDetail","registries","registryData","currentRegistryInfo","notFound","updateRegistryDetailState","getOnboardingQuestions","a","token","isPersonalize","question","followUpQuestions","followUpQuestion","isAnswered","updateGuestViewRegistry","urlSlug","registryAsGuest","guestViewInfo","dataURItoBlob","dataURI","fileType","fileName","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","getGuestCategories","registryCategoriesAsGuest","getTrackGiftsFilterStatus","filterString","trackGiftsFilter","returnStatus","selected","clearProducts","trackGiftsFilters","trackGiftsProduct","trackGiftsPagination","trackGiftsView","trackGiftsSearch","first","giftGivers","after","endCursor","searchKeyword","searchText","isAvailable","isFundsReceived","isReturned","registryGifts","registryGiftItemsCount","allFilterCounts","newFilters","count","gifts","pageInfo","addProductToCartAPI","status","AddedCard","stateGuestViewRegistry","stateRecommendedProducts","stateFilterApplied","stateAddedProducts","useState","setRecommendedProducts","setShow","modalTitle","showRemoveModel","setShowRemoveModel","moreOptionsData","unshift","categoryRecommended","jsonObject","uniqueSet","Set","Array","from","showRecommendation","removeConfirmFooter","DragHandle","sortableHandle","disabledDrag","multipleCategories","draggable","isViewCard","cardId","newRecommended","existingProduct","sku","parseFloat","shopifyItemId","tags","CheckList","gotoPersonalize","event","isQuizPending","editablePersonalizeQuestions","t","percentage","withTranslation","withRouter","CheckListItems","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","subProductType","handleToggleEvent","checkListIconEl","checkListHeader","firstChild","subListItem","Accordion","Card","Toggle","as","eventKey","Collapse","BookmarkletSection","updateModal","modalBody","modalTitleContent","modalFooterButtons","openAddBookmarkletModal","addItemToRegistry","TogglePills","activeClass","RadioButton","checked","changeHandler","textClass","display","CheckBox","SelectCategory","categories","setCategories","searched","setSearched","searchedCategories","setSearchedCategories","currentCategory","selectedCategory","setSelectedCategory","useEffect","resData","finalCheckList","finalSubCategory","tempSubCategory","tempCategory","getCategoriesToDisplay","find","allSelectedCategory","handleSelectionCategory","categorySelectBody","modalFooter","changeCurrentCategory","searchInputRef","changeLinkRef","searchMatched","toLowerCase","searchCategoryInputChangeHandler","onFocus","contains","add","searchInputFocusHandler","onBlur","remove","searchInputBlurHandler","focus","changeLinkClickHandler","showModal","CategoryPill","mainCategory","removeCategory","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","hideProductDetails","setHideProductDetails","showLoading","setshowLoading","productInfo","productImage","productName","howToGift","mustHave","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","changeProductName","changeNote","selectFileHandler","files","file","includes","reader","FileReader","onload","changeProductImage","result","readAsDataURL","submitStoreUrl","keyCode","URL","url","productUrl","changeProductUrl","item_url","ctgry","getScrapedProduct","img","newPrice","char","isInteger","getRefinedPrice","onKeyUp","class","role","click","accept","priceChangeHandler","addMyOwn","openCategorySelect","categoryId","finalcategory","removeSelectedCategory","toggleGroupGift","togglePurchased","changeHowToGift","ViewRecommend","viewDetailsBtn","cardRef","clearModalData","alert","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","childCategory","variantid","shopifyVariantId","shopifyItemVariantId","commonGetProducts","commonGetCategories","checkDataValidity","storeProduct","stateAnotherStoreProduct","storeUrl","hostname","formData","FormData","ADD_REGISTRY_ITEM_MUTATION","input","items","append","images","anotherStoreItemViewDetail","addOnMyOwnClickHandler","newCategory","displayName","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","height","offsetHeight","Filter","filterData","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","childId","parentId","childIndex","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ImportGiftCard","ImportRegistry","registryUrl","errorMessage","loading","activeCategoryProductIndex","currentRegistryLink","inputHasFocus","inputRef","changeLoadingState","registryUrlChangeHandler","checkUrlAndGetRegistryItems","getAnotherRegistryProductsInfo","registryUrlKeyUpHandler","store_name","store_url","newProducts","finally","openSelectCategoryModal","productIndex","stateAnotherStoreRegistry","setProductCategories","newProductState","changeRegistryUrl","bind","selectedClass","AddCashFundModal","MAX_IMAGE_SIZE","cashFundImage","cashFundName","categoryData","cashFundAmount","hideTotal","cashFundType","cashFundNote","markCompleted","imageRef","validateCashFundData","selectedCat","addCashFundClickHandler","markAsCompleted","addRegistryItems","presentCategories","resetThenSet","newErrorState","modalFooterButton","newProductImage","cashFundNameChangeHandler","cashFundAmountChangeHandler","cashFundHideTotalChangeHandler","cashFundTypeChangeHandler","stateCashFundCategories","changedCategory","cashFundNoteChangeHandler","mustHaveClickHandler","markCompletedClickHandler","allCashFundCategories","foundCategory","cashFundCategory","list","AddGift","showCashFundModal","cashFundProduct","currentContent","categoryList","openCashFundModal","closeCashFundModal","openAddGiftModal","importGiftAnotherStoreHandler","importRegistry","validImportRegistryData","getCleanedRegistryItems","cleanedRegistryItems","itemStore","stores","newStore","importRegistryClickHandler","jsonGraphQL","FilterSection","deleteChipHandler","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","productCount","stateFilteredProducts","CashFundCardNotAdded","addButtonClickHandler","CashFundCard","Everything","setCashFundCategoryAndOpenModal","updateFilterList","newFilterList","productId","mustHaveValue","setAllRecommendation","recommendedCategory","parentCat","recommendedCat","productType","rData","getSortedProducts","stateCategories","cashFundCount","productsToAppend","allProducts","added","total","recommendations","childFilterArray","categoryFound","addedRecommendations","groupedProducts","recommendationCount","totalProducts","totalRecommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","hasCashFund","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","getDefaultCoverImages","registryImages","defaultImages","closeCoverImagePicker","fileChangeHandler","imageId","updateRegistry","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","siteHostName","location","host","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","setRegistryUrl","registryError","setRegistryError","inputContainerRef","changeRegistryVisibility","newRegistry","readOnly","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","handleGuestView","handleDisableViewGuest","COVER_PIC_OPTIONS","guestViewRegistryState","backgroundImage","activeOptionClass","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","filterCat","childCat","stateActiveSortFilter","stateViewRegistryProducts","ViewFilter","stateCategoriesInfo","stateFilterCategories","filterCountState","filterCategoryLimit","setFilterCategoryLimit","getLimitOfFliter","limit","under50","between50100","moreThan100","maStoreItems","otherStoreItems","giftStatus","totalAvailable","totalReserved","totalPurchased","parentFilterID","limitLength","isFound","newFilterCateoryLimit","categorylimit","changeParentLimitHandler","AlreadyBoughtProduct","partnerUser","fieldErrors","onFocusHandler","giftMessageChangeHandler","GiveMAGiftModel","isBoughtThisAlready","componentDidMount","setModalData","iBoughtThisAlready","amountChangeHandler","onFocusCashFundHandler","hasDecimal","validBoughtThisAlreadyData","productBoughtAlreadyInfo","onFocusBoughtThisAlreadyHandler","fieldName","validCashFundData","close","addProductToCartHandler","submitDataHandler","registryUrlSlug","purchasedQuantity","updateGuestViewProduct","registrySlug","giveGroupGiftMa","variantId","cashFundGift","contributeRestHandler","contributeAmount","GuestViewCard","showMAGiftmodel","setMAGiftModel","setIsGroupGift","setIsCashAcceptedOnly","modelTitle","setModelTitle","tabIndex","ViewRegistryHome","localAddedProductState","handleFilterProductChange","getFiltersApplied","sortBy","lessThanEqual","greaterThanEqual","hasPriceFilter","price_Lte","price_Gte","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","getSortedProductsByFilters","finalFilterProduct","filtersApplied","getSortedFilteredProducts","sortedProducts","sortedData","newSortedProducts","isFeatured","sortByMustHave","sortByLowToHigh","sortByHighToLow","viewRegistryProductsId","addProduct","productList","sort","b","onSortEnd","oldIndex","newIndex","itemsOldPosition","arrayMove","position","oldPosition","updateViewRegistryPosition","helperClass","axis","lockAxis","useDragHandle","ViewRegistry","Toast","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","closeButton","parentElement","dismiss","TodoWidget","performTodoAction","stateTodo","Filters","filterChangeHandler","filterId","allUnselected","stateFilters","newFilter","ThankYouList","TrackGiftsSidebar","Search","inputContainer","applySearch","searchState","searchInputChangeHandler","searchInput","clearClickHandler","searchClickHandler","giftName","userName","userEmail","addGiftClickHandler","addGift","giftNameChangeHandler","userNameChangeHandler","userEmailChangeHandler","TrackGifts","RedirectionScreen","RegistryHero","stateTrackGiftsRedirectionInfo","useTranslation","RegistryHeroData","to","babyArrival","Option","MAIL_FORMAT","LOGIN_TITLE","SIGNUP_TITLE","PARTNER_TITLE","RADIO","PARTNER","LITTLE_ONCE_ID","questionId","optionId","BOTH_OPTION_ID","SKIP_BOTH_OPTION","login","toastMessage","signUpErrors","signInErrors","submitAnswer","bulkSaved","clearErrorState","createRegistry","submitAllAnswers","checkValidEmail","optionalRegistryId","submitBulk","stateOnboardingAnswers","stateOnboardingRegistry","returnToURL","answer","questionOptionInput","optionText","addRegistryMultipleQuestionOption","origin","registryQuestionOptionInput","updateOrCreateRegistrySingleQuestionOption","redirectionUrl","clearToastMessage","setToastMessage","gotoNextQuestion","nextQuestionId","returnNext","nextFullQuestion","idToMatch","stateOnboardingQuestions","ques","stateLoggedIn","setQuestionBasedOnId","finalQuestion","foundQuestion","parentQuestion","addAnswerToState","answerRadioQuestion","watchNextBtn","nextBtnState","answerDataQuestion","dateCheck","now","day","getDate","slice","month","getMonth","getFullYear","textInputTypeChangeHandler","inputRefs","enableBtn","changeLoginState","refs","setErrorBasedOnResponse","parentErrors","subErrors","signInClickHandler","emailRef","passwordRef","password","loginUser","set","registryRes","activeRegistry","getSignInContent","signUpClickHandler","nameRef","registerUser","getSignUpContent","savePartnerDetail","partnerDetail","addPartnerAccount","getPartnerContent","undefined","onpopstate","pathname","stateRouter","answerInputType","setTimeout","staticQuestionTitle","helpText","min","max","content","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","customer","redirectVerifyToken","VerifyToken","verifyToken","PersonaliseFooter","prevQuestion","nextQuestion","PersonaliseChecklist","prevQuestionId","activeQuestionId","checkBoxSelected","CHECKBOX","calulatePercentage","answerQuestionCount","totalQuestionCount","totalAnwer","statePersonaliseQuestions","Math","ceil","answerCheckBoxQuestion","isActiveIdPresent","gotoPrevQuestion","popPrevQuestionId","pop","statePersonaliseAnswers","finalAnswer","submitQuestionAnswer","op","selectCheckboxAnswer","checkBoxRef","removeIndex","setStateQuestionWithSelectedAnswer","answerOpt","ans","questionOption","opt","selectedColorSchemes","prevQuestionID","currentQuestion","selectedOptionID","selectOptions","selectedOption","defaultChecked","showOverrideModal","closeAndSavePersonaliseCheckList","finalCheckListData","tempStateCheckList","tempData","registryCategoryId","itemsCount","itemCountData","gotoPersonaliseQuestions","parentCategories","GuestViewHeader","GuestSortFilter","GuestSortSection","setFilterhandler","GuestFilter","categoryFilterLimit","GuestView","isFirstTime","BABY_GIFTS_URL","AVAILABLE","RESERVED","PURCHASED","PRICE_1","PRICE_2","PRICE_3","MONICA_AND_ANDY","ELSEWHERE","updateGuestViewRegistryProduct","emptyAllProduct","stateGuestViewPagination","responseData","pagenationInfo","filterCategoryLimitHandler","limitData","guestProducts","getdataForFirstTime","registryUsers","filteredSortProducts","FindRegistry","searchName","setSearchName","allRegistry","setAllRegistry","hasRegistry","setHasRegistry","handleClearSearch","findRegistryHandler","findRegistry","defaultAddress","city","province","ViewsContainer","displayContent","foundRegistry","access_token","EditChecklist","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c310fe47.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\",\n\n  // ANOTHER STORE REGISTRY\n  SET_ANOTHER_STORE_REGISTRY_ITEMS: \"SET_ANOTHER_STORE_REGISTRY_ITEMS\",\n\n  // SET CASH FUND CATEGORIES\n\tSET_CASH_FUND_CATEGORIES: \"SET_CASH_FUND_CATEGORIES\",\n\t\n\t// SET FILTER COUNT\n\tSET_FILTER_PRODUCT_COUNT: \"SET_FILTER_PRODUCT_COUNT\",\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}\n\n//Another store Registry Items\nexport const setAnotherStoreRegistryItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n//Set Cash Fund Categories\nexport const setCashFundCategories = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES,\n\t\tpayload: params\n\t}\n}\n\n//Set filter count\nexport const setFilterProductCount = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_PRODUCT_COUNT,\n\t\tpayload: params\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreRegistry = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nconst cashFundCategories = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nconst filterCount = (state = {}, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_PRODUCT_COUNT:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct,\n  anotherStoreRegistry,\n  cashFundCategories,\n  filterCount,\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_GUEST_VIEW: \"IS_GUEST_VIEW\",\n  SET_VIEW_FILTER_CATEGORY: \"SET_VIEW_FILTER_CATEGORY\",\n\n  // Filter\n\tSET_VIEW_PARENT_FILTER: \"SET_VIEW_PARENT_FILTER\",\n\tSET_VIEW_CHILD_FILTER: \"SET_VIEW_CHILD_FILTER\",\n\tCLEAR_VIEW_FILTER: \"CLEAR_VIEW_FILTER\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setguestViewRegistry = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW,\n    payload: params\n  }\n}\n\n// View Filter Category Section\nexport const setViewFilterCategory = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n\n// Filter Section\n\nexport const setParentViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewFilter = () => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER,\n\t}\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst guestViewRegistry = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst viewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    guestViewRegistry,\n    filterCategory,\n    viewFilterApplied\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\",\n  SET_LOGGING_STATUS: \"SET_LOGGING_STATUS\",\n  SET_TODO : \"SET_TODO\",\n  SET_ONBOARDING_REGISTRY: \"SET_ONBOARDING_REGISTRY\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}\n\nexport const setLoggingStatus = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS,\n    payload: params\n  }\n}\n\nexport const setTodo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_TODO,\n    payload: params\n  }\n}\n\nexport const setOnboardingRegistry = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY,\n    payload: params\n  }\n}\n","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst todo = (state = defaultData.todo, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_TODO:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst onboardingRegistry = (state = \"\", action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo,\n  loggedIn,\n  todo,\n  onboardingRegistry\n});","export const PERSONALISE_CHECKLIST_ACTION_TYPES = {\n\n\tGET_ALL_CHECKLIST_ITEMS: \"GET_ALL_CHECKLIST_ITEMS\",\n\tINCREMENT_CHECKLIST_QUANTITY: \"INCREMENT_CHECKLIST_QUANTITY\",\n\tDECREMENT_CHECKLIST_QUANTITY: \"DECREMENT_CHECKLIST_QUANTITY\",\n\tCHECKLIST_ADDED: \"CHECKLIST_ADDED\",\n\n\tPERSONALISE_ADD_QUESTION: \"PERSONALISE_ADD_QUESTION\",\n    PERSONALISE_ADD_ANSWER: \"PERSONALISE_ADD_ANSWER\",\n    PERSONALISE_UPDATE_ANSWER: \"PERSONALISE_UPDATE_ANSWER\"\n}\n\nexport const incrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\n\nexport const setPersonaliseCheckListItems = params => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\nexport const setIsActiveCheckList = (id, isAdded) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED,\n\t\tpayload: { id, isAdded }\n\t}\n}\n\nexport const addPersonalizeQuestion = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION,\n\t  payload: params\n\t}\n  }\n  \n  export const addPersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER,\n\t  payload: params\n\t}\n  }\n  \n  export const updatePersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER,\n\t  payload: params\n\t}\n  }","import {PERSONALISE_CHECKLIST_ACTION_TYPES} from \"./PersonaliseCheckListActions\";\nimport {combineReducers} from \"redux\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.totalItemsCount += quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id && subCategory.totalItemsCount > 1) {\n        subCategory.totalItemsCount -= quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst setIsAddedCheckList = (state, payload) => {\n  let {\n    id,\n    isAdded\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.isAdded = isAdded;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\n// Reducers\nconst editedPersonaliseCheckList = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS:\n      return [...action.payload];\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n      case PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED:\n        return setIsAddedCheckList(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER:\n      return [...state, action.payload]\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  editedPersonaliseCheckList,\n  questions,\n  answers\n})","export const ONBOARDING_ACTION_TYPES = {\n  ADD_QUESTION: \"ADD_QUESTION\",\n  ADD_ANSWER: \"ADD_ANSWER\",\n  UPDATE_ANSWER: \"UPDATE_ANSWER\"\n}\n\nexport const addOnboardingQuestion = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_QUESTION,\n    payload: params\n  }\n}\n\nexport const addQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_ANSWER,\n    payload: params\n  }\n}\n\nexport const updateQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.UPDATE_ANSWER,\n    payload: params\n  }\n}","import {ONBOARDING_ACTION_TYPES} from \"./OnboardingAction\";\nimport {combineReducers} from \"redux\";\n\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_QUESTION:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_ANSWER:\n      return [...state, action.payload]\n    case ONBOARDING_ACTION_TYPES.UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  questions,\n  answers\n});","export const GUEST_VIEW_ACTION_TYPES = {\n\tUPDATE_GUEST_VIEW_INFO: \"UPDATE_GUEST_VIEW_INFO\",\n\tSET_GUEST_VIEW_PRODUCT: \"SET_GUEST_VIEW_PRODUCT\",\n\tGUEST_ACTIVE_SORT_FILTER: \"GUEST_ACTIVE_SORT_FILTER\",\n\n\t// Filter\n\tSET_GUEST_VIEW_PARENT_FILTER: \"SET_GUEST_VIEW_PARENT_FILTER\",\n\tSET_GUEST_VIEW_CHILD_FILTER: \"SET_GUEST_VIEW_CHILD_FILTER\",\n\tCLEAR_GUEST_VIEW_FILTER: \"CLEAR_GUEST_VIEW_FILTER\",\n\n\tSET_GUEST_VIEW_FILTER_CATEGORY: \"SET_GUEST_VIEW_FILTER_CATEGORY\",\n\tGUEST_VIEW_SET_PAGINATION_INFO: \"GUEST_VIEW_SET_PAGINATION_INFO\",\n\tCLEAR_GUEST_PAGINATION_INFO: \"CLEAR_GUEST_PAGINATION_INFO\",\n\n\tGET_GUEST_CHECKLIST_ITEMS: \"GET_GUEST_CHECKLIST_ITEMS\",\n\n\t//I BOUGHT THIS ALREADY STORE PRODUCT\n  SET_ALREADY_BOUGHT_PRODUCT_INFO : \"SET_ALREADY_BOUGHT_PRODUCT_INFO\",\n  CLEAR_ALREADY_BOUGHT_PRODUCT_INFO : \"CLEAR_ALREADY_BOUGHT_PRODUCT_INFO\",\n}\n\nexport const updateGuestViewInfo = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const setGuestViewProducts = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const activeGuestSortFilter = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_ACTIVE_SORT_FILTER,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\nexport const setParentGuestViewFilter = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildGuestViewFilter = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearGuestViewFilter = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_VIEW_FILTER,\n\t}\n}\n\n// View Filter Category Section\nexport const setGuestViewFilterCategory = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\nexport const setViewGuestPaginationInfo = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewGuestPaginationInfo = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_PAGINATION_INFO,\n\t}\n}\n\nexport const setGuestCheckListItems = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GET_GUEST_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// I BOUGHT THIS ALREADY STORE PRODUCT\nexport const setAlreadyBoughtProductInfo = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_ALREADY_BOUGHT_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAlreadyBoughtProductInfo = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.CLEAR_ALREADY_BOUGHT_PRODUCT_INFO,\n\t}\n}\n\n","import { GUEST_VIEW_ACTION_TYPES } from \"./GuestViewAction\";\nimport { combineReducers } from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst guestViewRegistry = (state = { updated: false }, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO:\n      return { ...action.payload }\n    default:\n      return state\n  }\n}\n\nconst addedGuestProducts = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PRODUCT:\n      return action.payload.length ? [...state, ...action.payload] : [];\n    default:\n      return state;\n  }\n}\n\nconst activeGuestSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GUEST_ACTIVE_SORT_FILTER:\n      return {...action.payload};\n    default:\n      return state;\n  }\n}\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst guestViewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst guestFilterCategory = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst paginationInfo = (state = defaultData.trackGifts.pagination, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO:\n      return {...action.payload}\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_PAGINATION_INFO:\n      return defaultData.trackGifts.pagination\n    default:\n      return state\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GET_GUEST_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst alreadyBoughtProduct = (state = defaultData.defaultAlreadyBoughtProductInfo, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_ALREADY_BOUGHT_PRODUCT_INFO:\n      return {...action.payload};\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_ALREADY_BOUGHT_PRODUCT_INFO:\n      return defaultData.defaultAlreadyBoughtProductInfo;\n    default:\n      return state;\n  }\n}\n\n\nexport default combineReducers({\n  info: guestViewRegistry,\n  product: addedGuestProducts,\n  activeGuestSortFilter,\n  guestViewFilterApplied,\n  guestFilterCategory,\n  paginationInfo,\n  checkList,\n  alreadyBoughtProduct,\n});","export const TRACK_GIFTS_ACTION_TYPES = {\n  TRACK_GIFTS_ACTIVE_VIEW: \"TRACK_GIFTS_ACTIVE_VIEW\",\n\n  TRACK_GIFTS_SET_PRODUCT: \"TRACK_GIFTS_SET_PRODUCT\",\n\n  TRACK_GIFTS_SET_PAGINATION_INFO: \"TRACK_GIFTS_SET_PAGINATION_INFO\",\n\n  TRACK_GIFTS_SET_FILTERS: \"TRACK_GIFTS_SET_FILTERS\",\n\n  TRACK_GIFTS_SET_SEARCH: \"TRACK_GIFTS_SET_SEARCH\",\n\n  TRACK_GIFTS_SET_REDIRECTING_INFO: \"TRACK_GIFTS_SET_REDIRECTING_INFO\"\n}\n\nexport const setActiveView = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_ACTIVE_VIEW,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsProduct = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PRODUCT,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsPaginationInfo = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PAGINATION_INFO,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsFilters = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_FILTERS,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsSearch = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_SEARCH,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsRedirectionInfo = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_REDIRECTING_INFO,\n    payload: params\n  }\n}\n","import React from \"react\";\nimport \"./ViewBy.scss\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setActiveView} from \"../../TrackGiftsAction\";\n\nexport const TRACK_GIFTS_VIEWS = [\n  {\n    \"id\": 1,\n    \"text\": \"Gifts\"\n  },\n  {\n    \"id\": 2,\n    \"text\": \"Gift Givers\"\n  }\n]\n\nconst ViewBy = () => {\n  const activeView = useSelector(state => state.trackGifts.activeView);\n  const dispatch = useDispatch()\n\n  const changeTrackGiftView = view => {\n    dispatch(setActiveView(view))\n  }\n\n  return (\n    <div className=\"track-gift-view-by\">\n      <p className=\"text-sm\">View By</p>\n      <div className=\"view-by-toggle-section mt-1\">\n        <div\n          className={[\"view-by-toggle text-sm p-2\", activeView.id === TRACK_GIFTS_VIEWS[0].id ? \"active-view-toggle\" : \"\"].join(\" \")}\n          onClick={() => changeTrackGiftView(TRACK_GIFTS_VIEWS[0])}\n        >Gifts\n        </div>\n        <div\n          className={[\"view-by-toggle text-sm p-2\", activeView.id === TRACK_GIFTS_VIEWS[1].id ? \"active-view-toggle\" : \"\"].join(\" \")}\n          onClick={() => changeTrackGiftView(TRACK_GIFTS_VIEWS[1])}\n        >Gift\n          Givers\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewBy;","import {TRACK_GIFTS_ACTION_TYPES} from \"./TrackGiftsAction\";\nimport {combineReducers} from \"redux\";\nimport {TRACK_GIFTS_VIEWS} from \"./components/view-by/ViewBy\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// By default \"Gifts\" are selected\nconst activeView = (state = TRACK_GIFTS_VIEWS[0], action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_ACTIVE_VIEW:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst products = (state = [], action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PRODUCT:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst paginationInfo = (state = defaultData.trackGifts.pagination, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PAGINATION_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst filters = (state = defaultData.trackGifts.filters, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_FILTERS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst search = (state = defaultData.trackGifts.search, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_SEARCH:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst redirectionInfo = (state = {}, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_REDIRECTING_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\n\nexport default combineReducers({\n  activeView,\n  products,\n  paginationInfo,\n  filters,\n  search,\n  redirectionInfo\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\nimport PersonaliseCheckListReducer from \"../modules/personalise-checklist/PersonaliseCheckListReducer\";\nimport Onboarding from \"../modules/onboarding/OnboardingReducer\";\nimport GuestViewReducer from \"../modules/guest-view/GuestViewReducer\";\nimport TrackGiftsReducer from \"../modules/track-gifts/TrackGiftsReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  personaliseCheckList: PersonaliseCheckListReducer,\n  onboarding: Onboarding,\n  trackGifts: TrackGiftsReducer,\n  guestView: GuestViewReducer,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n  LOGIN: {\n    VERIFY_TOKEN: APP_HOME_ROUTE + \"/verify-token/:token\"\n  },\n  REGISTRY: {\n    HOME: APP_HOME_ROUTE\n  },\n\n  MY_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/home\",\n    GIFTS_ADDED: APP_HOME_ROUTE + \"/~/gifts-added\",\n    GIFT_TO_ADD: APP_HOME_ROUTE + \"/~/gifts-to-add\",\n    GIFT_VIEW: APP_HOME_ROUTE + \"/guest-view\",\n    SHOWER: APP_HOME_ROUTE + \"/~/shower\",\n    ANNOUNCEMENTS: APP_HOME_ROUTE + \"/~/announcements\",\n    MORE: APP_HOME_ROUTE + \"/~/more\",\n    TO_DOS: APP_HOME_ROUTE + \"/~/to_dos\"\n  },\n\n  VIEW_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/view-registry\"\n  },\n\n  TRACK_GIFTS: {\n    HOME: APP_HOME_ROUTE + \"/track_gifts\"\n  },\n\n  ONBOARDING: {\n    HOME: APP_HOME_ROUTE + \"/onboarding\"\n  },\n\n  PERSONALIZE:{\n    HOME: APP_HOME_ROUTE + \"/personalize-quiz\",\n    CHECKLIST: APP_HOME_ROUTE + \"/personalize-checklist\"\n  },\n\n  GUEST_VIEW: {\n    HOME: APP_HOME_ROUTE+\"\"\n  },\n\n  FIND_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/find\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")} />\n      <div className={[\"more-option-dropdown\"].join(\" \")}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;\n","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      {props.title || props.titleContent ?\n        <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n          <div>\n            <div className=\"d-flex justify-content-between\">\n              <h1>{props.title}</h1>\n              <div className=\"d-flex\">\n                {props.headerContent ? props.headerContent : null}\n                <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n              </div>\n            </div>\n          </div>\n\n          {/* OPTIONAL CONTENT IN TITLE PORTION */}\n          {props.titleContent ? props.titleContent : null}\n\n        </Modal.Header> : null}\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n        {/* MODAL CONTENT GOES HERE */}\n        {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image text-center\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image?.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink} tabindex>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import { gql } from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  registryCategories(registryId:$registryId){\n    id,\n    isExcluded,\n    itemsCount,\n    addedItemsCount,\n    totalItemsCount,\n    subCategoriesIsExcluded,\n    category{\n      id,\n      categoryName,\n      description,\n      categoryType {\n        id,\n        name\n      }\n      isParent,\n    },\n    registrySubCategories{\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n      subCategoriesIsExcluded,\n      category{\n        id,\n        categoryName,\n        description,\n        categoryType {\n          id,\n          name\n        }\n        isParent,\n      },\n      registrySubProductTypes{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName,\n          description,\n          categoryType {\n            id,\n            name\n          }\n          isParent,\n        },\n      }\n    }\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems(\n  $registryId:Int!\n  $after: String,\n  $first: Int,\n  $isReserved: Boolean,\n  $isPurchased: Boolean,\n  $isAvailable: Boolean,\n  $sortBy: String,\n  $categories:[Int],\n  $price_Lte: Float,\n  $price_Gte: Float,\n  $store: [String],\n  ){\n    registryItems(\n      registryId:$registryId\n      isReserved: $isReserved,\n      isPurchased: $isPurchased,\n      isAvailable: $isAvailable,\n      sortBy: $sortBy,\n      categories: $categories,\n      price_Lte: $price_Lte,\n      price_Gte: $price_Gte,\n      store: $store,\n      ){\n      registryItems(after: $after, first: $first) {\n        edges {\n          node {\n            id\n            registryitemImage {\n              image\n            }\n            isGroupGift\n            isReserved\n            quantity\n            mostWanted\n            featuredOrder\n            isReserved\n            isAmountReceived\n            isPurchased\n            title\n            isCashAcceptedOnly\n            quantityStatus\n            purchasedRegistryItem{\n              id,\n              purchasedQuantity,\n              isPurchased,\n              giftMessage,\n              orderNo,\n              storeName,\n              createdTs,\n              contributionAmount\n              groupGift{\n                amountReceived\n              }\n              guestUser{\n                email,\n                firstName,\n                lastName,\n              }\n            }\n            registryCategories {\n              id\n              category {\n                categoryName\n                categoryType {\n                  id\n                  name\n                }\n              }\n            }\n            note\n            item {\n              store {\n                id\n                storeName\n              }\n              id\n              shopifyItemId\n              storeItemUrl\n              sku\n              price\n              imageUrl\n              hideTotal\n            }\n          }\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n      registryItemsAnalysisCount{\n        totalAvailable,\n        totalReserved,\n        totalPurchased,\n        maStoreItems,\n        otherStoreItems,\n        under50,\n        moreThan100,\n        between50100,\n        totalFundsReceived\n      }\n      categoryData\n    }\n  }\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                id\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:[Int]!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $shopifyItemVariantId: String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      registryCategories:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl,\n      shopifyItemVariantId: $shopifyItemVariantId\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nconst GET_QUESTIONS = `\n  query getQuestions($registryId: Int, $isPersonalize: Boolean!){\n  questions(registryId: $registryId, isPersonalize: $isPersonalize){\n    id,\n    title,\n    answerInputType,\n    fields,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      action,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          options{\n            id\n            value\n            toastMessage\n            action\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY = `\n  query getGuestRegistry($urlSlug: String!, $after: String, $first: Int){\n    registryAsGuest(urlSlug: $urlSlug){\n      id,\n      name,\n      displayName,\n      greeting,\n      isPublic,\n      urlSlug,\n      image {\n        id\n        image\n      },\n      user {\n        firstName,\n        partnerUser {\n          firstName\n        }\n      },\n      registryItems(after: $after, first: $first) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            isReserved,\n            isCashAcceptedOnly,\n            isAmountReceived,\n            isPurchased,\n            title,\n            quantityStatus\n            purchasedRegistryItem{\n              id,\n              purchasedQuantity,\n              isPurchased,\n              giftMessage,\n              orderNo,\n              storeName,\n              createdTs,\n              contributionAmount\n              groupGift{\n                amountReceived\n              }\n              guestUser{\n                email,\n                firstName,\n                lastName,\n              }\n            }\n            registryCategories {\n              id,\n              category{\n                categoryName,\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              storeItemUrl,\n              sku,\n              price,\n              imageUrl,\n              isCashFund,\n              hideTotal,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n    }\n  }\n`\n\nconst GET_PERSONALIZE_QUESTIONS = `\nquery editablePersonalizeQuestions($registryId: Int!){\n  editablePersonalizeQuestions(registryId: $registryId){\n    id,\n    title,\n    answerInputType,\n    fields,\n    isPersonalize,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          isPersonalize,\n          options{\n            id\n            value\n            toastMessage\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_TRACK_GIFTS = `\nquery registryGifts($registryId: Int!, $giftGivers: Boolean!, $after: String, $first: Int, $isReserved: Boolean, $isAvailable: Boolean, $isPurchased: Boolean, $isFundsReceived: Boolean, $isReturned: Boolean, $searchKeyword: String) {\n  registryGifts(registryId: $registryId, giftGivers: $giftGivers, isReserved: $isReserved, isAvailable: $isAvailable, isPurchased: $isPurchased, isFundsReceived: $isFundsReceived, isReturned: $isReturned, searchKeyword: $searchKeyword) {\n    registryGiftItemsCount {\n      totalAvailable\n      totalPurchased\n      totalReserved\n      totalFundsReceived\n      totalReturned\n    }\n    gifts(after: $after, first: $first) {\n      edges {\n        node {\n          id\n          isGroupGift\n          featuredOrder\n          isReserved\n          isPurchased\n          quantity\n          isCashAcceptedOnly\n          isAmountReceived\n          item {\n            store {\n              id\n              storeName\n            }\n            storeItemUrl\n            price\n            imageUrl\n            isCashFund\n          }\n          quantityStatus\n          purchasedRegistryItem {\n            id\n            purchasedQuantity\n            isPurchased\n            giftMessage\n            orderNo\n            storeName\n            createdTs\n            contributionAmount\n            groupGift {\n              id\n              amountReceived\n              guestUser {\n                email\n                firstName\n                lastName\n                id\n              }\n            }\n            guestUser {\n              email\n              firstName\n              lastName\n              id\n            }\n          }\n          title\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n`\n\nconst GET_CASH_FUND_CATEGORIES = `\nquery getCashFund($registryId: Int!){\n  cashFundCategories(registryId:$registryId){\n    id\n    category{\n      id\n      categoryName\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY_PRODUCT = `\n  query getGuestRegistry(\n    $urlSlug: String!,\n    $after: String,\n    $first: Int,\n    $isReserved: Boolean,\n    $isPurchased: Boolean,\n    $isAvailable: Boolean,\n    $sortBy: String,\n    $categories:[Int],\n    $price_Lte: Float,\n    $price_Gte: Float,\n    $store: [String],\n    ){\n    registryAsGuest(\n      urlSlug: $urlSlug,\n      isReserved: $isReserved,\n      isPurchased: $isPurchased,\n      isAvailable: $isAvailable,\n      sortBy: $sortBy,\n      categories: $categories,\n      price_Lte: $price_Lte,\n      price_Gte: $price_Gte,\n      store: $store,\n      ){\n      registryItems(\n        after: $after,\n        first: $first,\n        ) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            isReserved,\n            isCashAcceptedOnly,\n            isAmountReceived,\n            isPurchased,\n            title,\n            quantityStatus\n            purchasedRegistryItem{\n              id,\n              purchasedQuantity,\n              isPurchased,\n              giftMessage,\n              orderNo,\n              storeName,\n              createdTs,\n              contributionAmount\n              groupGift{\n                amountReceived\n              }\n              guestUser{\n                email,\n                firstName,\n                lastName,\n              }\n            }\n            registryCategories {\n              id,\n              category{\n                categoryName,\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              storeItemUrl,\n              shopifyItemVariantId,\n              sku,\n              price,\n              imageUrl,\n              isCashFund,\n              hideTotal,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n      registryItemsAnalysisCount{\n        totalAvailable,\n        totalReserved,\n        totalPurchased,\n        maStoreItems,\n        otherStoreItems,\n        under50,\n        moreThan100,\n        between50100,\n        totalFundsReceived\n      }\n      categoryData\n    }\n  }\n`;\n\nconst GET_GUEST_CHECKLIST = `\n  query registryCategoriesAsGuest($urlSlug: String!){\n    registryCategoriesAsGuest(urlSlug: $urlSlug){\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n       category{\n        id,\n        categoryName,\n        categoryType{\n          id,\n          name\n        }\n      },\n      registrySubCategories{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName\n        },\n        registrySubProductTypes{\n          id,\n          isExcluded,\n          itemsCount,\n          addedItemsCount,\n          totalItemsCount,\n          category{\n            id,\n            categoryName\n          },\n        }\n      }\n    }\n  }\n`;\n\nconst FIND_REGISTRY = `\n  query findRegistry($registryName: String!){\n    findRegistry(registryName: $registryName){\n      edges{\n        node{\n          id,\n          name,\n          displayName,\n          urlSlug,\n          createdTs,\n          dueDate,\n          user{\n            id,\n            defaultAddress{\n              city,\n              province\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_TRACK_GIFTS,\n  GET_CASH_FUND_CATEGORIES,\n  GET_GUEST_REGISTRY_PRODUCT,\n  GET_GUEST_CHECKLIST,\n  FIND_REGISTRY\n};\n\n// Example to use queries added in home.jsx","const backendId = \"https://3.12.191.197\";\n// const backendId = \"http://localhost:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport {Cookies} from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: {\"Authorization\": cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"}\n});\n\nconst axiosInstanceNoToken = axios.create({\n  baseURL: apiURL\n});\n\nconst axiosInstanceNoHeader = axios.create({\n  baseURL: apiURL\n});\n\nexport function graphQLNoToken(data) {\n  return axiosInstanceNoToken.post(\"/graphql\", data);\n}\n\nexport function graphQLNoHeader(data, options) {\n  return axiosInstanceNoHeader.post(\"/graphql\", data, options);\n}\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nexport function verifyAccessToken(token) {\n  return axiosInstanceNoToken.post(\"/user/verify/token\", {}, {\n    headers: {\n      'Authorization': `Token ${token}`\n    }\n  });\n}\n\nexport function getAnotherRegistryProducts(data) {\n  return axiosInstance.post(\"/registry/import\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}\n\nexport function addProductToCart(data) {\n  return axios.post(\"/cart/add.js\", data);\n}","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n  VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL + \"/media/\"\n}\n\nexport const FILTERS = {\n  CATEGORIES_DISPLAY: \"Categories\",\n  PRICE_DISPLAY: \"Price\",\n  PRICE_DISPLAY_1: \"Under $50\",\n  PRICE_DISPLAY_2: \"$50 - $100\",\n  PRICE_DISPLAY_3: \"more than $100\",\n  STORE_DISPLAY: \"Store\",\n  MONICA_AND_ANDY_DISPLAY: \"Monica + Andy\",\n  ELSEWHERE_DISPLAY: \"Elsewhere\",\n  AVAILABLE_DISPLAY: \"Available\",\n  RESERVED_DISPLAY: \"Reserved\",\n  PURCHASED_DISPLAY: \"Purchased\",\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'https%3A%2F%2Fmonicaandandy-watertower.myshopify.com%2Fpages%2Fma_bady_registry_bookmarklet%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"\n\nexport const IMPORT_REGISTRY_EMAIL = \"storks@monicaandandy.com\"\n\nexport const TRACK_GIFTS_PRODUCTS_PER_REQUEST = 20\nexport const M_A_STORE_NAME = \"monicaandandy\"\n\nexport const M_A_FORGOT_PASSWORD_LINK = \"https://monicaandandy-watertower.myshopify.com/account/login#recover\"\nexport const VIEW_GIFT_PRODUCTS_PER_REQUEST = 20\n\nexport const CURRENCY = \"$\"\n\nexport const LOCAL_STORAGE_TRACK_GIFT_BUY_KEY = \"babyRegistryVisitedItems\"\n","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    }\n  }\n}\n`\n\nconst REGISTER_USER = `\nmutation register_user($name: String!, $email: String!, $password: String!){\n  registerUser(registerInput:{\n      name:$name,\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\nconst SAVE_QUESTION_RESPONSE = `\nmutation addRegistryQuestionOption($registryId: Int!, $answers: [RegistryQuestionOptionInput]!){\n  addRegistryMultipleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $answers){\n    message\n  }\n}\n`\n\nconst SAVE_REGISTRY_DATA = `\nmutation saveRegistryData($registryData:RegistryInput!, $registryItems:[StoreInput]){\n  importRegistry(registryData: $registryData, registryItems: $registryItems) {\n    message\n  }\n}\n`\n\nconst LOGIN_USER = `\nmutation login_user($email: String!, $password: String!){\n  loginUser(loginInput:{\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\n\nconst ADD_PARTNER_ACCOUNT = `\nmutation addPartner($partnerDetail: AddPartnerAccountInput!){\n  addPartnerAccount(addPartnerAccountInput:$partnerDetail){\n    message\n  }\n}\n`\n\nconst SAVE_UPDATED_CHECKLIST = `\nmutation addDesiredChecklistItemCount($registryId:Int!, $itemCountData:[DesiredItemCountInput]!){\n  addDesiredChecklistItemCount(registryId: $registryId, itemCountData: $itemCountData){\n    message\n  }\n}\n`\n\nconst SAVE_SINGLE_QUESTION_RESPONSE = `\nmutation updateOrCreateRegistrySingleQuestionOption($registryId:Int!, $registryQuestionOptionInput: RegistryQuestionOptionInput!, $returnTo: String){\n  updateOrCreateRegistrySingleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $registryQuestionOptionInput, returnTo: $returnTo){\n    message,\n    redirectionUrl\n  }\n}\n`\n\nconst CREATE_REGISTRY = `\nmutation{\n  createRegistry{\n    registry{\n      id\n    },\n    message,\n    status\n  }\n}\n`\n\nconst TRACK_GIFTS_ADD_GIFT = `\nmutation addGift($registryId: Int!, $gifts: [GiftInput]){\n  addGift(registryId: $registryId, gifts: $gifts){\n   message,\n   status\n  }\n}\n`\n\nconst MARK_AS_PURCHASED_BY_GUEST = `\nmutation markAsPurchasedByGuest(\n  $registryUrlSlug: String!,\n  $registryItemId: Int!,\n  $isPurchased: Boolean!,\n  $storeName: String!,\n  $purchasedQuantity: Int,\n  $contributionAmount: Float,\n  $name: String!,\n  $email: String!,\n  $giftMessage: String,\n  $orderNumber: String,\n  ){\n  markAsPurchasedByGuest(registryUrlSlug: $registryUrlSlug,registryItemId: $registryItemId ,purchasedRegistryItemInput:{\n    isPurchased: $isPurchased,\n    storeName: $storeName,\n    purchasedQuantity: $purchasedQuantity,\n    contributionAmount: $contributionAmount,\n    giftMessage: $giftMessage,\n    orderNo: $orderNumber,\n  },guestUserInput:{\n    name: $name,\n    email: $email\n  }){\n    message,\n    status\n  }\n}\n`;\n\nconst GIVE_GROUP_GIFT_GUEST = `\nmutation giveGroupGiftMa(\n  $registryId: Int!,\n  $registryItemId: Int!,\n  $contributionAmount: Float!\n  ){\n  giveGroupGiftMa(\n    registryId: $registryId,\n    registryItemId: $registryItemId,\n    contributionAmount: $contributionAmount\n    ){\n    message,\n    status,\n    variantId\n  }\n}\n`;\n\nconst CASH_FUND_GIFT_GUEST = `\nmutation cashFundGift(\n  $registryId: Int!,\n  $registryItemId: Int!,\n  $contributionAmount: Float!\n  ){\n    cashFundGift(\n    registryId: $registryId,\n    registryItemId: $registryItemId,\n    contributionAmount: $contributionAmount\n    ){\n    message,\n    status,\n    variantId\n  }\n}\n`;\n\nconst MARK_AS_PURCHASED = `\nmutation markAsPurchased($registryId: Int!, $registryItemId: Int!, $purchasedRegistryItemInput: PurchasedRegistryItemInput!, $guestUserInput: GuestUserInput!){\n  markAsPurchased(registryId:$registryId,registryItemId:$registryItemId,purchasedRegistryItemInput:$purchasedRegistryItemInput,guestUserInput:$guestUserInput){\n    message,\n    status\n  }\n}`\n\n\nexport {\n  TOGGLE_MUST_HAVE,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY,\n  UPDATE_VIEW_REGISTRY_POISTION,\n  UPDATE_REGISTRY_URL,\n  SAVE_REGISTRY_DATA,\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  SAVE_UPDATED_CHECKLIST,\n  SAVE_SINGLE_QUESTION_RESPONSE,\n  CREATE_REGISTRY,\n  TRACK_GIFTS_ADD_GIFT,\n  MARK_AS_PURCHASED_BY_GUEST,\n  GIVE_GROUP_GIFT_GUEST,\n  CASH_FUND_GIFT_GUEST,\n  MARK_AS_PURCHASED\n};\n","import React from \"react\";\nimport \"./GiftCardPill.scss\";\n\nconst GiftCardPill = (props) => {\n  let className = \"\"\n  let text = \"\"\n  switch (props.variant) {\n    case \"purchased\":\n      className = \"track-gifts-purchased-pill\"\n      text = \"Purchased\"\n      break\n    case \"reserved\":\n      className = \"track-gifts-reserved-pill\"\n      text = \"Reserved\"\n      break\n    case \"received\":\n      className = \"track-gifts-received-pill\"\n      text = \"Received\"\n      break\n    default:\n      className = \"\"\n      break\n  }\n\n  return (\n    <div className={[\"track-gifts-pills px-2 d-inline-block\", className, props.className ? props.className : ''].join(\" \")}>\n      <span className=\"text-sm font-medium\">{props.amount != null || undefined ? `$${props.amount}` : null} {text}</span>\n    </div>\n  )\n}\n\nexport default GiftCardPill","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = React.forwardRef((props, ref) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n    ref={ref}\n    disabled={props.disabled ? props.disabled : false}\n  >{props.children}</button>\n})\n\nexport default ButtonComponent;","import React from \"react\";\nimport \"./GiftStatusPill.scss\";\n\nconst GiftStatusPill = (props) => {\n  let pillVariantClass = \"\"\n\n  if (props.variant === 'purchased') {\n    pillVariantClass = \"purchased-pill\";\n  } else if (props.variant === 'reserved') {\n    pillVariantClass = \"reserved-pill\";\n  } else if (props.variant === 'default') {\n    pillVariantClass = \"default-pill\";\n  } else {\n    pillVariantClass = \"default-pill\";\n  }\n\n  return (\n    <div\n      className={[\"gift-status-pill px-3\", pillVariantClass, props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"text-sm font-medium\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default GiftStatusPill;","import React from \"react\";\nimport './ProductDetailsModel.scss';\nimport GiftStatusPill from '../gift-status-pill/GiftStatusPill'\n\nconst ProductDetailsModel = (props) => {\n  return (\n    <div className=\"row product-details-model\">\n      <div className=\"col-12 product-details-image\">\n        {props.data?.item.imageUrl ?\n          <img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.title} />\n          :\n          <div className=\"added-card-no-product-image\" />\n        }\n        {props.data.mostWanted ?\n          <div\n            className=\"d-flex align-items-center product-details-have product-details-must-have-btn px-1 added-gift-must-have-active\">\n            <i className=\"icon mr-1 d-block heart-fill\" />\n            <p className=\"text-sm product-details-must-have-text\">Must Have</p>\n          </div>\n          : <></>}\n        <div className=\"px-3 mt-2\">\n          <p className=\"font-medium\">{props.data.title}</p>\n          <a className=\"product-detail-link text-sm font-medium mt-1\" href={props.data.item.storeItemUrl} target=\"_blank\">View Details</a>\n          <div className=\"d-flex align-items-baseline\">\n            {props.data.isGroupGift ?\n              <div className=\"guest-toggle-pills px-1 mr-1 d-flex align-items-center\">\n                <i className=\"guest-icon-active mr-1\" />\n                <span className=\"text-sm guest-icon-text\">Group Gift</span>\n              </div> : null}\n            <p className=\"mt-2\">${props.data.item.price}</p>\n          </div>\n          {props.data.note ?\n            <>\n              <p className=\"mt-2 text-sm product-note font-medium\">Note:</p>\n              <p className=\"text-sm product-note\">{props.data.note}</p>\n            </>\n            : null}\n          <div className=\"d-flex mt-2 mb-3\">\n            {props.data.quantityStatus.purchased_quantity ?\n              <GiftStatusPill className=\"mr-1\" variant=\"purchased\" text={props.data.quantityStatus.purchased_quantity + \" Purchased\"} />\n              : null}\n            {props.data.quantityStatus.reserved_quantity ?\n              <GiftStatusPill className=\"mr-1\" variant=\"reserved\" text={props.data.quantityStatus.reserved_quantity + \"Reserved\"} />\n              : null}\n            {props.data.quantityStatus.still_needed ?\n              <GiftStatusPill className=\"mr-1\" variant=\"default\" text={`${props.data.quantityStatus.still_needed} ${props.data.quantityStatus.purchased_quantity === 0 ? \" Requested\" : \" Still Needed\"}`} />\n              : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductDetailsModel;","import React from \"react\";\nimport \"./BuyNow.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {LOCAL_STORAGE_TRACK_GIFT_BUY_KEY} from \"../../../../utils/constants\";\nimport {connect} from \"react-redux\";\nimport {setTrackGiftsRedirectionInfo} from \"../../TrackGiftsAction\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport ProductDetailsModel from \"../../../commons/components/product-details-model/ProductDetailsModel\";\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {toast} from \"react-toastify\";\n\nconst EMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\nclass BuyNow extends React.Component {\n\n  state = {\n    show: false,\n    quantity: 1,\n    storeName: \"\",\n    orderNumber: \"\",\n    guestName: \"\",\n    guestEmail: \"\",\n    errors: {}\n  }\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  incrementQuantity = () => {\n    this.setState((prevState, _) => ({\n      quantity: prevState.quantity + 1\n    }))\n  }\n\n  decrementQuantity = () => {\n    this.setState((prevState, _) => ({\n      quantity: prevState.quantity - 1 > 0 ? prevState.quantity - 1 : 1\n    }))\n  }\n\n  storeNameChangeHandler = ev => {\n    this.setState({\n      storeName: ev.target.value\n    })\n  }\n\n  orderNumberChangeHandler = ev => {\n    this.setState({\n      orderNumber: ev.target.value\n    })\n  }\n\n  guestNameChangeHandler = ev => {\n    let errorState = {...this.state.errors}\n    if (this.state.errors.guestName){\n      delete errorState.guestName\n    }\n\n    this.setState({\n      guestName: ev.target.value,\n      errors: errorState\n    })\n  }\n\n  guestEmailChangeHandler = ev => {\n    let errorState = {...this.state.errors}\n    if (this.state.errors.guestEmail){\n      delete errorState.guestEmail\n    }\n    this.setState({\n      guestEmail: ev.target.value,\n      errors: errorState\n    })\n  }\n\n  validData = () => {\n    let errors = {}\n    let valid = true\n    if (this.state.guestName.length <= 0){\n      errors['guestName'] = \"This field is mandatory\"\n      valid = false\n    }\n\n    if (this.state.guestEmail.length <= 0){\n      errors['guestEmail'] = \"This field is mandatory\"\n      valid = false\n    } else if (!this.state.guestEmail.match(EMAIL_RE)){\n        errors['guestEmail'] = \"Invalid Email address\"\n        valid = false\n    }\n\n    this.setState({\n      errors: errors\n    })\n    return valid\n  }\n\n  saveClickHandler = () => {\n    if (this.validData()) {\n      return false\n    }\n\n    //  TODO: Integrate Buy Now API\n  }\n\n  buyNowClickHandler = () => {\n    let createNewRecord = false\n    let updateProduct = false\n    let openModal = false\n    let jsonVisitedItems = JSON.parse(localStorage.getItem(LOCAL_STORAGE_TRACK_GIFT_BUY_KEY))\n\n    if (jsonVisitedItems) {\n      for (let item of jsonVisitedItems) {\n\n        // If registry doesn't match then delete old and create new record\n        if (Number(item.rId) === Number(this.props.stateRegistryInfo.id)) {\n          if (Number(item.pId) === Number(this.props.productData.id)) {\n\n            let productTimestamp = new Date(item.timestamp)\n            let currentDate = new Date()\n\n            // Resetting hours because only checking the dates\n            productTimestamp.setHours(0, 0, 0, 0)\n            currentDate.setHours(0, 0, 0, 0)\n\n            // Checking if current date is same as product time stamp\n            // After 1 day, this product entry will be invalid\n            if (currentDate - productTimestamp === 0) {\n              openModal = true\n            } else {\n              updateProduct = true;\n              createNewRecord = true;\n            }\n            break;\n          } else {\n            updateProduct = true;\n            createNewRecord = true;\n          }\n        } else {\n          createNewRecord = true;\n          break;\n        }\n      }\n    } else {\n      createNewRecord = true;\n    }\n\n    if (createNewRecord && !openModal) {\n      const newVisitedItemsData = {\n        rId: this.props.stateRegistryInfo.id,\n        pId: this.props.productData.id,\n        timestamp: new Date()\n      }\n\n      let foundProduct = false\n      let newData = null\n      if (jsonVisitedItems) {\n        newData = jsonVisitedItems.map(item => {\n          if (Number(item.rId) === Number(this.props.stateRegistryInfo.id) && Number(item.pId) === Number(this.props.productData.id)) {\n            foundProduct = true\n            return newVisitedItemsData\n          }\n          return item\n        })\n        if (!foundProduct) {\n          newData.push(newVisitedItemsData)\n        }\n      }\n\n      // Updating localStorage\n      localStorage.setItem(LOCAL_STORAGE_TRACK_GIFT_BUY_KEY, JSON.stringify(updateProduct ? newData : [newVisitedItemsData]))\n\n      //Setting Redirection Store\n      this.props.dispatch(setTrackGiftsRedirectionInfo({store: this.props.productData.item?.store?.storeName}))\n\n      window.open(this.props.productData.item.storeItemUrl, \"_blank\")\n\n    } else {\n      this.setState({\n        show: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className={[\"track-gifts-buy-now\", this.props.className ? this.props.className : \"\"].join(\" \")}>\n          <Button\n            variant=\"primary\"\n            onClick={this.buyNowClickHandler}\n            className=\"px-3 py-1 font-medium text-body track-gifts-buy-now-button\"\n          >Buy Now</Button>\n        </div>\n        {this.state.show ?\n          <Modal\n            show={this.state.show}\n            title=\"Buy Now\"\n            footer={\n              <Button\n                variant=\"primary\"\n                onClick={this.saveClickHandler}\n                className=\"text-body font-medium py-1 px-3 track-gifts-buy-now-modal-button\"\n              >Save & Close</Button>\n            }\n            closeModal={this.modalCloseHandler}>\n            <div className=\"track-gifts-buy-now-modal\">\n              <div className=\"row\">\n\n                <div className=\"col-5 track-gifts-buy-now-product-detail\">\n                  <div className=\"mr-3\">\n                    <ProductDetailsModel data={this.props.productData}/>\n                  </div>\n                </div>\n\n                <div className=\"col-7\">\n                  <div className=\"ml-3 mr-5 pt-4\">\n\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <p className=\"text-body font-medium\">Give us some more details please</p>\n                        <p className=\"text-sm\">This info will help keep track of all their gifts.</p>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm track-gifts-buy-now-required\">Name</label>\n                          <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={this.state.guestName}\n                            onChange={(ev) => this.guestNameChangeHandler(ev)}\n                            className={[\"px-2 py-1 text-body track-gifts-buy-now-input w-100 mw-100\", this.state.errors.guestName ? 'track-gifts-buy-now-input-error' : ''].join(\" \")}\n                            placeholder=\"John Doe\"/>\n                          {this.state.errors.guestName ?\n                            <label\n                              className=\"text-sm track-gifts-buy-now-input-error-text\">{this.state.errors.guestName}</label>\n                            : null}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm track-gifts-buy-now-required\">Email\n                            Address</label>\n                          <input\n                            type=\"text\"\n                            name=\"user-email\"\n                            value={this.state.guestEmail}\n                            onChange={(ev) => this.guestEmailChangeHandler(ev)}\n                            className={[\"px-2 py-1 text-body track-gifts-buy-now-input w-100 mw-100\", this.state.errors.guestEmail ? 'track-gifts-buy-now-input-error' : ''].join(\" \")}\n                            placeholder=\"johndoe@email.com\"/>\n                            {this.state.errors.guestEmail ?\n                            <label\n                              className=\"text-sm track-gifts-buy-now-input-error-text\">{this.state.errors.guestEmail}</label>\n                            : null}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm\">Quantity</label>\n                          <Counter\n                            className=\"mt-1\"\n                            counter={this.state.quantity}\n                            incrementHandler={this.incrementQuantity}\n                            decrementHandler={this.decrementQuantity}/>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col-6\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm\">Store Name</label>\n                          <input\n                            type=\"text\"\n                            name=\"storeName\"\n                            value={this.state.storeName}\n                            onChange={(ev) => this.storeNameChangeHandler(ev)}\n                            className=\"px-2 py-1 text-body track-gifts-buy-now-input w-100 mw-100\"\n                            placeholder=\"Eg. Target\"/>\n                        </div>\n                      </div>\n                      <div className=\"col-6\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm\">Order Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"orderNumber\"\n                            value={this.state.orderNumber}\n                            onChange={(ev) => this.orderNumberChangeHandler(ev)}\n                            className=\"px-2 py-1 text-body track-gifts-buy-now-input w-100 mw-100\"\n                            placeholder=\"0012345\"/>\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </Modal>\n          : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateRegistryInfo: state.registry.info\n})\n\nexport default connect(\n  mapStateToProps\n)(BuyNow);","import React from \"react\";\nimport \"./MarkAsPurchased.scss\";\nimport {connect} from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport ProductDetailsModel from \"../product-details-model/ProductDetailsModel\";\nimport Counter from \"../counter/Counter\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {MARK_AS_PURCHASED} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {toast} from \"react-toastify\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\n\nconst EMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\nclass MarkAsPurchased extends React.Component {\n  state = {\n    quantity: 1,\n    name: \"\",\n    email: \"\",\n    storeName: \"\",\n    orderNumber: \"\",\n    note: \"\",\n    errors: {},\n    contributionAmount: 0.00\n  }\n\n  closeModalHandler = () => {\n    this.setState({\n      quantity: 1,\n      name: \"\",\n      email: \"\",\n      storeName: \"\",\n      orderNumber: \"\",\n      note: \"\",\n      errors: {},\n      contributionAmount: 0.00\n    })\n    this.props.closeModal()\n  }\n\n  incrementQuantity = () => {\n    this.setState((prevState, _) => ({\n      quantity: prevState.quantity + 1\n    }))\n  }\n\n  decrementQuantity = () => {\n    this.setState((prevState, _) => ({\n      quantity: prevState.quantity - 1 > 0 ? prevState.quantity - 1 : 1\n    }))\n  }\n\n  validData = () => {\n    let errors = {}\n    let valid = true\n    if (this.state.name.length <= 0) {\n      errors['name'] = \"This field is mandatory\"\n      valid = false\n    }\n\n    if (this.state.email.length <= 0) {\n      errors['email'] = \"This field is mandatory\"\n      valid = false\n    } else if (!this.state.email.match(EMAIL_RE)) {\n      errors['email'] = \"Invalid Email address\"\n      valid = false\n    }\n\n    if (this.props.data.isGroupGift) {\n      if (this.state.contributionAmount.length <= 0) {\n        errors['contributionAmount'] = \"This field is mandatory\"\n        valid = false\n      } else if (Number(this.state.contributionAmount) <= 0) {\n        errors['contributionAmount'] = \"Please enter valid amount\"\n        valid = false\n      }\n    }\n\n    this.setState({\n      errors: errors\n    })\n    return valid\n  }\n\n  // Event Handlers\n  nameChangeHandler = (ev) => {\n    let errors = {...this.state.errors}\n    if (errors.name) {\n      delete errors.name\n    }\n\n    this.setState({\n      name: ev.target.value,\n      errors: errors\n    })\n  }\n\n  emailChangeHandler = (ev) => {\n    let errors = {...this.state.errors}\n    if (errors.email) {\n      delete errors.email\n    }\n\n    this.setState({\n      email: ev.target.value,\n      errors: errors\n    })\n  }\n\n  storeNameChangeHandler = (ev) => {\n    this.setState({\n      storeName: ev.target.value\n    })\n  }\n\n  orderNumberChangeHandler = (ev) => {\n    this.setState({\n      orderNumber: ev.target.value\n    })\n  }\n\n  noteChangeHandler = (ev) => {\n    this.setState({\n      note: ev.target.value\n    })\n  }\n\n  contributionAmountChangeHandler = (ev) => {\n    ev.persist();\n    let errors = {...this.state.errors}\n    if (errors.contributionAmount) {\n      delete errors.contributionAmount\n    }\n\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice >= 0) {\n        this.setState({\n          contributionAmount: ev.target.value,\n          errors: errors\n        })\n      }\n    } else {\n      this.setState({\n        contributionAmount: \"\",\n        errors: errors\n      })\n    }\n  }\n\n  saveClickHandler = () => {\n    if (!this.validData()) {\n      return false\n    }\n\n    let reqData = {\n      query: MARK_AS_PURCHASED,\n      variables: {\n        registryId: this.props.stateRegistryInfo.id,\n        registryItemId: this.props.data.id,\n        purchasedRegistryItemInput: {\n          isPurchased: true,\n          storeName: this.state.storeName,\n          orderNo: this.state.orderNumber,\n          giftMessage: this.state.note\n        },\n        guestUserInput: {\n          name: this.state.name,\n          email: this.state.email\n        }\n      }\n    }\n\n    if (this.props.data.isGroupGift) {\n      reqData.variables.purchasedRegistryItemInput['contributionAmount'] = this.state.contributionAmount\n    } else {\n      reqData.variables.purchasedRegistryItemInput['purchasedQuantity'] = this.state.quantity\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data && res.data.data.markAsPurchased) {\n        toast.success(<p><b>{this.props.data.title}</b> updated successfully.</p>)\n\n        //Fetching all current products\n        getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch, this.props.stateTrackGiftsProducts.length)\n        this.closeModalHandler()\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred while updating product.\")\n      console.error(err.response);\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          title={this.props.data.isGroupGift ? \"Record a contribution\" : \"Record a purchase\"}\n          footer={(\n            <Button\n              variant=\"primary\"\n              disabled={this.state.name.length <= 0 || this.state.email.length <= 0}\n              onClick={this.saveClickHandler}\n              className=\"font-medium px-3 py-1\">Save & Close</Button>\n          )}\n          closeModal={this.closeModalHandler}>\n\n          <div className=\"row add-gift-another-store mark-as-purchased-modal\">\n            <div className=\"col-5 mt-4 add-gift-image-select\">\n              <div className=\"mr-3\">\n                <ProductDetailsModel data={this.props.data}/>\n              </div>\n            </div>\n            <div className=\"col-7 mt-4\">\n              <div className=\"mx-3\">\n\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <p className=\"text-body font-medium\">Already got it?</p>\n                    <p className=\"text-sm\">Let guests know, so you don’t get another.</p>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col mt-4 m-a-input-container\">\n                    <p className=\"text-sm font-medium add-gift-store-label\">Name</p>\n                    <input\n                      className={[\"w-100 mt-1 px-2 py-1\", this.state.errors.name ? \"mark-as-purchased-error\" : \"\"].join(\" \")}\n                      type='text'\n                      placeholder='John Doe'\n                      value={this.state.name}\n                      onChange={(ev) => this.nameChangeHandler(ev)}\n                    />\n                    {this.state.errors.name ?\n                      <label className=\"text-sm mark-as-purchased-error-text\">{this.state.errors.name}</label>\n                      : null}\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col mt-4 m-a-input-container\">\n                    <p className=\"text-sm font-medium add-gift-store-label\">Email Address</p>\n                    <input\n                      className={[\"w-100 mt-1 px-2 py-1\", this.state.errors.email ? \"mark-as-purchased-error\" : \"\"].join(\" \")}\n                      type='text'\n                      placeholder='johndoe@email.com'\n                      value={this.state.email}\n                      onChange={(ev) => this.emailChangeHandler(ev)}\n                    />\n                    {this.state.errors.email ?\n                      <label className=\"text-sm mark-as-purchased-error-text\">{this.state.errors.email}</label>\n                      : null}\n                  </div>\n                </div>\n\n                {this.props.data.isGroupGift ?\n                  <div className=\"row\">\n                    <div className=\"col mt-4 m-a-input-container\">\n                      <p className=\"text-sm font-medium add-gift-store-label\">Amount</p>\n                      <div className=\"price-input mt-1\">\n                        <input\n                          type=\"text\"\n                          className={[\"w-100 pr-2 py-1 text-body pl-5\", this.state.errors.contributionAmount ? \"mark-as-purchased-error\" : \"\"].join(\" \")}\n                          value={this.state.contributionAmount}\n                          onChange={(ev) => this.contributionAmountChangeHandler(ev)}\n                        />\n                      </div>\n                      {this.state.errors.contributionAmount ?\n                        <label\n                          className=\"text-sm mark-as-purchased-error-text\">{this.state.errors.contributionAmount}</label>\n                        : null}\n                    </div>\n                  </div>\n                  :\n                  <>\n                    <div className=\"row\">\n                      <div className=\"col mt-4 m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                        <Counter\n                          className=\"mt-2\"\n                          counter={this.state.quantity}\n                          incrementHandler={this.incrementQuantity}\n                          decrementHandler={this.decrementQuantity}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-6 mt-4 m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Store Name</p>\n                        <input\n                          className=\"w-100 mt-1 px-2 py-1\"\n                          type='text'\n                          placeholder='Eg. Target'\n                          value={this.state.storeName}\n                          onChange={(ev) => this.storeNameChangeHandler(ev)}\n                        />\n                      </div>\n                      <div className=\"col-6 mt-4 m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Order Number</p>\n                        <input\n                          className=\"w-100 mt-1 px-2 py-1\"\n                          type='text'\n                          placeholder='0012345'\n                          value={this.state.orderNumber}\n                          onChange={(ev) => this.orderNumberChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </>\n                }\n\n\n                <div className=\"row\">\n                  <div className=\"col mt-4 m-a-input-container\">\n                    <p className=\"text-sm font-medium add-gift-store-label\">Gift Message</p>\n                    <textarea className=\"w-100 mt-1 text-body p-1 mb-2\"\n                              rows=\"2\"\n                              placeholder=\"Write a message for gift receiver\"\n                              value={this.state.note}\n                              onChange={(ev) => this.noteChangeHandler(ev)}\n                    />\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsSearch: state.trackGifts.search\n})\n\nexport default connect(\n  mapStateToProps\n)(MarkAsPurchased);","import React from \"react\";\nimport \"./MarkPurchased.scss\";\nimport MarkAsPurchased from \"../../../commons/components/mark-as-purchased/MarkAsPurchased\";\n\nclass MarkPurchased extends React.Component{\n  state = {\n    show: false\n  }\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openPurchasedModal = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      show: true\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <a\n          href=\"#\"\n          className=\"mark-purchased-link font-medium text-sm\"\n          onClick={(ev) => this.openPurchasedModal(ev)}>Record A Purchase</a>\n        <MarkAsPurchased\n          show={this.state.show}\n          closeModal={this.modalCloseHandler}\n          data={this.props.data}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MarkPurchased;","import React from \"react\";\nimport \"./GiftCard.scss\";\nimport GiftCardPill from \"../gift-card-pill/GiftCardPill\";\nimport {CURRENCY} from \"../../../../utils/constants\";\nimport BuyNow from \"../buy-now/BuyNow\";\nimport MarkPurchased from \"../mark-purchased/MarkPurchased\";\nimport moment from 'moment';\n\nclass GiftCard extends React.Component {\n  friendsDetailRef = React.createRef()\n\n  toggleFriendsDetail = e => {\n    e.preventDefault()\n    if (this.friendsDetailRef.current) {\n      this.friendsDetailRef.current.classList.toggle(\"track-gifts-show-friends-detail\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-track-gifts-card pt-3 pb-4\">\n        <div className=\"row\">\n\n          <div className=\"col-1\">\n            {this.props.data.item.imageUrl ?\n              <img src={this.props.data.item.imageUrl} className=\"track-gifts-card-image\"/>\n              :\n              <div className=\"track-gifts-no-product-image\"/>\n            }\n          </div>\n\n          <div className=\"col-5\">\n            <div className=\"track-gifts-product-description pl-1\">\n              <div className=\"d-flex\">\n                <h4\n                  className={[\"font-medium track-gifts-product-title\", !this.props.data.isGroupGift && this.props.data.purchasedRegistryItem.length > 0 && this.props.data.purchasedRegistryItem[0].giftMessage && this.props.data.purchasedRegistryItem[0].guestUser ? \"mr-5\" : \"mr-9\"].join(\" \")}>\n                  {this.props.data.title}\n                </h4>\n                {!this.props.data.isGroupGift && this.props.data.purchasedRegistryItem.length > 0 && this.props.data.purchasedRegistryItem[0].giftMessage && this.props.data.purchasedRegistryItem[0].guestUser ?\n                  <button className=\"ml-auto track-gifts-gift-message-container text-left\">\n                    <div className=\"track-gifts-gift-message-content p-5\">\n                      <h3>Gift Message</h3>\n                      <p\n                        className=\"text-body mt-5 track-gifts-gift-message\">{this.props.data.purchasedRegistryItem[0].giftMessage}</p>\n                      <p\n                        className=\"mt-3 text-sm font-medium\">{`${this.props.data.purchasedRegistryItem[0].guestUser.firstName} ${this.props.data.purchasedRegistryItem[0].guestUser.lastName ? `${this.props.data.purchasedRegistryItem[0].guestUser.lastName[0]}.` : ''}`}</p>\n                    </div>\n                  </button>\n                  : null}\n\n              </div>\n              {this.props.data.purchasedRegistryItem.length > 0 && (this.props.data.purchasedRegistryItem[0].storeName || this.props.data.purchasedRegistryItem[0].orderNo) ?\n                <p\n                  className=\"text-body\">{this.props.data.purchasedRegistryItem[0].storeName ? this.props.data.purchasedRegistryItem[0].storeName : ''} {this.props.data.purchasedRegistryItem[0].orderNo ? '| #' + this.props.data.purchasedRegistryItem[0].orderNo : ''}</p>\n                : null}\n\n\n              {this.props.data.item.isCashFund ?\n                <div className=\"mt-2\">\n                  {this.props.data.purchasedRegistryItem.length > 0 ?\n                    <div>\n                      <span\n                        className=\"text-sm font-medium\">{`${CURRENCY}${this.props.data.purchasedRegistryItem[0].groupGift.amountReceived}`}</span>\n                      <span className=\"text-sm\">{` of ${CURRENCY}${this.props.data.item.price} received`}</span>\n                      <div className=\"track-gifts-cash-fund-progress-bar\">\n                        <div className=\"track-gifts-cash-fund-progress mw-100\"\n                             style={{width: `${(this.props.data.purchasedRegistryItem[0].groupGift.amountReceived / this.props.data.item.price) * 100}%`}}/>\n                      </div>\n                    </div>\n                    : null}\n\n                </div>\n                :\n                <div className=\"mt-2\">\n                  {this.props.data.purchasedRegistryItem.length > 0 && this.props.data.purchasedRegistryItem[0].isPurchased ? <GiftCardPill variant=\"purchased\" className=\"mr-1\"/> : null}\n                  {this.props.data.isReserved ? <GiftCardPill variant=\"reserved\" className=\"mr-1\"/> : null}\n                  {this.props.data.isCashAcceptedOnly && this.props.data.isAmountReceived ?\n                    <GiftCardPill variant=\"received\" amount={this.props.data.item.price}/> : null}\n                  {/* TODO: Add date of purchased */}\n                  {this.props.data.purchasedRegistryItem.length > 0 && this.props.data.purchasedRegistryItem[0].createdTs ?\n                    <span\n                      className=\"text-sm track-gifts-purchased-time\">{moment(this.props.data.purchasedRegistryItem[0].createdTs).format('MMM DD, YYYY')}</span>\n                    : null}\n                </div>\n              }\n\n\n            </div>\n          </div>\n\n          <div className=\"col-6 d-flex\">\n            {this.props.data.isGroupGift ?\n              // Group Gift\n\n              (this.props.data.purchasedRegistryItem.length > 0 ?\n                <div className=\"track-gifts-group-users-details\">\n                  <p\n                    className=\"text-sm font-medium\">{`${this.props.data.purchasedRegistryItem[0].otherUsers.length} friends`}</p>\n                  <a href=\"#\" className=\"track-gifts-view-friends-link text-sm font-medium\"\n                     onClick={(e) => this.toggleFriendsDetail(e)}>View</a>\n                  <div ref={this.friendsDetailRef} className=\"track-gifts-friends-detail pt-3 pb-1\">\n                    <div className=\"friends-detail-header d-flex pb-2 px-3\">\n                      <p\n                        className=\"text-sm font-medium\">{`${this.props.data.purchasedRegistryItem[0].otherUsers.length} friends`}</p>\n                      <i className=\"icon-close close-friends-detail-icon ml-auto\"\n                         onClick={(e) => this.toggleFriendsDetail(e)}/>\n                    </div>\n                    <div className=\"px-3\">\n                      <table className=\"m-a-revert-all friends-detail-container\">\n                        {this.props.data.purchasedRegistryItem[0].otherUsers.map(user => (\n\n                          <tr className=\"friend-detail m-a-revert-all\">\n                            <td className=\"m-a-revert-all p-0\">\n                              <div className=\"py-2 mr-8\">\n                                <p\n                                  className=\"text-sm font-medium\">{`${user.guestUser.firstName ? user.guestUser.firstName : ''} ${user.guestUser.lastName ? user.guestUser.lastName : ''}`}</p>\n                                <p className=\"text-sm friend-user-email\">{user.guestUser.email}</p>\n                              </div>\n                            </td>\n                            <td className=\"text-right m-a-revert-all p-0\">\n                              <p\n                                className=\"text-sm font-medium friend-contribution-amount mr-1\">{`${CURRENCY}${user.contributionAmount}`}</p>\n                            </td>\n                            <td className=\"m-a-revert-all p-0\">\n                              {user.createdTs ?\n                                <p\n                                  className=\"text-sm track-gifts-purchased-time\">{moment(user.createdTs).format('MMM DD, YYYY')}</p>\n                                : null}\n                            </td>\n                          </tr>\n                        ))}\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                : null)\n              :\n              // Single guest User\n              (this.props.data.purchasedRegistryItem.length > 0 ?\n                <div className=\"track-gifts-user-detail\">\n                  <p\n                    className=\"text-sm font-medium\">{`${this.props.data.purchasedRegistryItem[0].guestUser.firstName ? this.props.data.purchasedRegistryItem[0].guestUser.firstName : ''} ${this.props.data.purchasedRegistryItem[0].guestUser.lastName ? this.props.data.purchasedRegistryItem[0].guestUser.lastName : ''}`}</p>\n                  <p\n                    className=\"text-sm track-gifts-user-email\">{this.props.data.purchasedRegistryItem[0].guestUser.email}</p>\n                </div>\n                : null)\n            }\n            <div className=\"ml-auto d-flex align-items-baseline\">\n\n              {!this.props.data.isPurchased ?\n                <MarkPurchased data={this.props.data}/>\n                : null}\n\n              {this.props.data.isCashAcceptedOnly && this.props.data.isAmountReceived ?\n                <BuyNow productData={this.props.data} className=\"ml-2\"/> : null}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GiftCard;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {TRACK_GIFTS_VIEWS} from \"../../components/view-by/ViewBy\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport GiftCard from \"../../components/gift-card/GiftCard\";\nimport \"./TrackGiftContent.scss\";\n\nexport const LOCAL_2_API_FILTERS_MAPPING = {\n  4: \"totalAvailable\",\n  1: \"totalPurchased\",\n  3: \"totalReserved\",\n  2: \"totalFundsReceived\",\n  5: \"totalReturned\"\n}\n\n// Component for No registry Gifts Found\nconst NoRecordFound = () => {\n  return (\n    <h2>No Gifts Found...</h2>\n  )\n}\n\nclass TrackGiftsContent extends React.Component {\n\n  state = {\n    currentView: null\n  }\n\n  checkProductAvailability = product => {\n    // Checking if product has any guestUser or not (Availability)\n    if (!product.isGroupGift) {\n      return !(product.isReserved || product.isPurchased || (product.isCashAcceptedOnly && product.isAmountReceived))\n    } else {\n        return product.purchasedRegistryItem.length <= 0\n    }\n  }\n\n  getProductsBasedOnView = (view, stateProducts) => {\n    let products = []\n    let availableProducts = []\n    let guestUsersEmails = []\n    let refinedProducts = []\n    let skipCashFund = false;\n    for (const product of [...stateProducts]){\n      if (product.purchasedRegistryItem.length <= 0) {\n        refinedProducts.push(product)\n      }else {\n        let userProducts = []\n        let currentProduct = {...product}\n        for (let user of product.purchasedRegistryItem) {\n          if (skipCashFund){\n            skipCashFund = false\n            break\n          }\n          let newUsers = {...user}\n          let otherUsers = product.purchasedRegistryItem\n          newUsers['otherUsers'] = otherUsers\n          currentProduct.purchasedRegistryItem = [newUsers]\n          userProducts.push({...currentProduct})\n          currentProduct = {...product}\n          if (product.isGroupGift && view?.id === TRACK_GIFTS_VIEWS[0].id){\n            skipCashFund = true\n          }\n        }\n        refinedProducts.push(...userProducts)\n      }\n    }\n\n\n    if (view?.id === TRACK_GIFTS_VIEWS[0].id) { // [0] index is Gifts\n      //  Gifts View\n      for (const product of refinedProducts) {\n        if (this.checkProductAvailability(product)) {\n          availableProducts.push({...product})\n        } else {\n          products.push({...product})\n        }\n      }\n\n      // Show Available products in Gifts View only if Available Filter is applied\n      if (availableProducts.length > 0) {\n        products.push(...availableProducts)\n      }\n    } else {\n\n      //  Gift Giver View\n\n      for (const product of refinedProducts) {\n        if (this.checkProductAvailability(product)) {\n          availableProducts.push({...product})\n        } else {\n          if (product.purchasedRegistryItem.length > 0) {\n            // Grouping Product\n            if (product.isGroupGift) {\n              // Looping through each groupGift User\n              for (const groupUser of product.purchasedRegistryItem) {\n                console.log(groupUser)\n                if (guestUsersEmails.indexOf(groupUser.guestUser.email) !== -1) {\n                  // User already have product\n                  products = products.map(groupProduct => {\n                    if (groupProduct.user.email === groupUser.guestUser.email) {\n                      groupProduct.products.push(product)\n                    }\n                    return groupProduct\n                  })\n                } else {\n                  // User doesn't have product\n                  products.push({\n                    user: {...groupUser},\n                    products: [{...product}]\n                  })\n                  guestUsersEmails.push(groupUser.email)\n                }\n              }\n            } else {\n              //  Not a group Gift\n              try {\n                if (guestUsersEmails.indexOf(product.purchasedRegistryItem[0].guestUser.email) !== -1) {\n                  // User already have product\n                  products = products.map(groupProduct => {\n                    if (groupProduct.user.guestUser.email === product.purchasedRegistryItem[0].guestUser.email) {\n                      groupProduct.products.push(product)\n                    }\n                    return groupProduct\n                  })\n                } else {\n                  // User doesn't have product\n                  products.push({\n                    user: {...product.purchasedRegistryItem[0]},\n                    products: [{...product}]\n                  })\n                  guestUsersEmails.push(product.purchasedRegistryItem[0].guestUser.email)\n                }\n              } catch {\n                availableProducts.push({...product})\n              }\n            }\n\n          }\n        }\n      }\n\n      if (availableProducts.length > 0) {\n        products.push({\n          availableProducts: true,\n          products: [...availableProducts]\n        })\n      }\n    }\n\n    return products\n  }\n\n  render() {\n\n    if (this.props.stateTrackGiftsProducts.length <= 0 && this.state.currentView && this.props.stateTrackGiftsPagination.hasNextPage) {\n      getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n    }\n\n    // Getting new products when new views are switched\n    if (this.state.currentView?.id !== this.props.stateTrackGiftsView?.id) {\n      this.setState({\n        currentView: {...this.props.stateTrackGiftsView}\n      })\n      getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n    }\n\n    const products = this.getProductsBasedOnView(this.props.stateTrackGiftsView, this.props.stateTrackGiftsProducts)\n\n    if (this.props.stateTrackGiftsProducts.length <= 0 && !this.props.stateTrackGiftsPagination.hasNextPage) {\n      return <NoRecordFound/>\n    } else if (this.props.stateTrackGiftsView?.id === TRACK_GIFTS_VIEWS[0].id) {\n\n      // For Gifts\n\n      return (\n        <div>\n          <div className=\"row mb-2\">\n            <div className=\"col-6\">\n              <p className=\"text-sm font-medium\">Gift details</p>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"text-sm font-medium\">Gifted by</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <InfiniteScroll\n                style={{overflow: \"unset\"}}\n                next={() => getTrackGiftsProduct(false, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)}\n                hasMore={this.props.stateTrackGiftsPagination.hasNextPage}\n                loader={<h4>Loading...</h4>}\n                dataLength={this.props.stateTrackGiftsProducts.length}\n              >\n                {products.map(product => {\n                  // return <p className=\"my-5\">{product.title}</p>\n                  return <GiftCard data={product}/>\n                })}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n\n      // For Gift Giver\n\n      return (\n        <div>\n          <InfiniteScroll\n            next={() => getTrackGiftsProduct(false, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)}\n            hasMore={this.props.stateTrackGiftsPagination.hasNextPage}\n            loader={<h4>Loading...</h4>}\n            dataLength={this.props.stateTrackGiftsProducts.length}\n            style={{overflow: \"unset\"}}\n          >\n            {products.map(groupedProduct => {\n              return (\n                <div className=\"mb-4 track-gifts-gift-giver-view\">\n                  <div className=\"mb-2\">\n                    <span\n                      className=\"text-body font-medium\">{groupedProduct.availableProducts ? \"Available\" : `${groupedProduct.user.guestUser.firstName ? groupedProduct.user.guestUser.firstName : \"\"} ${groupedProduct.user.guestUser.lastName ? groupedProduct.user.guestUser.lastName : \"\"}`}\n                    </span>\n                    {!groupedProduct.availableProducts ?\n                      <span className=\"ml-1 text-body\">{groupedProduct.user.guestUser.email}</span> : null}\n                    <span\n                      className=\"ml-1 text-body font-medium gift-givers-user-gift-count px-2\">{groupedProduct.products.length} gifts</span>\n                  </div>\n                  <div>\n                    {groupedProduct.products.map(product => (\n                      <GiftCard data={product}/>\n                    ))}\n                  </div>\n                </div>\n              )\n            })}\n          </InfiniteScroll>\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsSearch: state.trackGifts.search\n})\n\nexport default connect(\n  mapStateToProps\n)(TrackGiftsContent);","import React from \"react\";\nimport {\n  GET_PRODUCTS,\n  REMOVE_REGISTRY_ITEM,\n  GET_CATEGORIES,\n  GET_REGISTRIES,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_GUEST_CHECKLIST, GET_TRACK_GIFTS\n} from \"../api/queries\";\nimport {graphQL, graphQLNoHeader, graphQLNoToken, addProductToCart as addProductToCartAPI} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX, TRACK_GIFTS_PRODUCTS_PER_REQUEST} from \"./constants\";\nimport {\n  setRegistryProducts,\n  setCheckListItems,\n  toggleMustHaveProduct as toggleMustHaveProductAction,\n  setCashFundCategories,\n  setFilterProductCount\n} from \"../modules/my-registry/MyRegistryActions\";\nimport {CREATE_REGISTRY, TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION} from \"../api/mutations\";\nimport {setOnboardingRegistry, updateRegistryInfo} from \"../modules/registry/RegistryActions\";\nimport {setViewRegistryProducts} from \"../modules/view-registry/ViewRegistryActions\";\nimport {addOnboardingQuestion} from \"../modules/onboarding/OnboardingAction\";\nimport {addPersonalizeQuestion} from \"../modules/personalise-checklist/PersonaliseCheckListActions\";\nimport {updateGuestViewInfo, setGuestCheckListItems} from \"../modules/guest-view/GuestViewAction\";\nimport {toast} from \"react-toastify\";\nimport reducerDefaultData from \"data/ReducerDefaultData.json\";\nimport {TRACK_GIFTS_VIEWS} from \"../modules/track-gifts/components/view-by/ViewBy\";\nimport {\n  setTrackGiftsFilters,\n  setTrackGiftsPaginationInfo,\n  setTrackGiftsProduct\n} from \"../modules/track-gifts/TrackGiftsAction\";\nimport {LOCAL_2_API_FILTERS_MAPPING} from \"../modules/track-gifts/containers/track-gifts-content/TrackGiftsContent\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    // Filter Count\n    dispatch(setFilterProductCount({...res.data.data.registryItems.registryItemsAnalysisCount}))\n\n    let responseData = res.data.data.registryItems.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = {...item.node}\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n\n    // TODO: change category\n    let finalData = responseData.filter(product => product.registryCategories.length > 0)\n    dispatch(setRegistryProducts(finalData))\n\n  }).catch(err => {\n    console.error(err.response)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch,) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n\n      toast.error((\n        <p><b>{card.title}</b> removed from your registry!</p>\n      ))\n\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n    toast.error((\n      <p>Some error occurred.</p>\n    ))\n  })\n}\n\nexport const getRefinedCategory = (category) => {\n  return ({\n    id: category.id,\n    category: category.category,\n    categoryName: category.category.categoryName,\n    description: category.category.description,\n    categoryType: category.category.categoryType,\n    isDesired: category.isDesired,\n    isExcluded: category.isExcluded,\n    addedItemsCount: category.addedItemsCount,\n    totalItemsCount: category.totalItemsCount,\n    isParent: category.category.isParent,\n  })\n}\n\n\n// Get all categories\nexport const getAllCategories = (registryCategories, getAll) => {\n  // let finalCondition = category.subCategoriesIsExcluded ?\n  let parentCategories = registryCategories.filter(category => getAll ? true : (category.subCategoriesIsExcluded ? !category.subCategoriesIsExcluded : !category.isExcluded))\n  let finalCategories = parentCategories.map(parentCategory => {\n    let newParentCategory = getRefinedCategory(parentCategory)\n    let subCategory = parentCategory.registrySubCategories;\n    delete parentCategory.registrySubCategories\n    let newSubCategories = subCategory.filter(cat => getAll ? true : (cat.subCategoriesIsExcluded ? !cat.subCategoriesIsExcluded : !cat.isExcluded))\n    newSubCategories = newSubCategories.map(cat => {\n      let refinedSubCate = getRefinedCategory(cat)\n      let subProductTypes = cat.registrySubProductTypes.map(subProduct => getRefinedCategory(subProduct))\n      refinedSubCate['subProductTypes'] = subProductTypes.filter(category => getAll ? true : !category.isExcluded)\n      return refinedSubCate\n    })\n    newParentCategory['subCategories'] = newSubCategories\n    return newParentCategory\n  })\n\n  return finalCategories\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    operationName: \"getCategories\",\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n\n      // let tempAllCategories = getAllCategories(res.data.data.registryCategories, true)\n      // let cashFundCategories = []\n      //\n      // for (const category of tempAllCategories) {\n      //   for (const subCategory of category.subCategories) {\n      //     if (Number(subCategory.categoryType.id) === 2) {\n      //       cashFundCategories.push(subCategory)\n      //     }\n      //   }\n      // }\n      // dispatch(setCashFundCategories(cashFundCategories))\n      let finalCategories = getAllCategories(res.data.data.registryCategories, false)\n      if (finalCategories.length === 0) {\n        let allCategories = getAllCategories(res.data.data.registryCategories, true)\n        dispatch(setCheckListItems(allCategories))\n      } else {\n        dispatch(setCheckListItems(finalCategories))\n      }\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}\n\nexport const updateRegistryDetailState = (dispatch, registryData) => {\n  let currentRegistryInfo = null;\n\n  currentRegistryInfo = registryData[0].node;\n  if (currentRegistryInfo.image) {\n    currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n  }\n\n  if (currentRegistryInfo) {\n    dispatch(updateRegistryInfo({...currentRegistryInfo}))\n  } else {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.log(\"No registry found!\");\n  }\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        updateRegistryDetailState(dispatch, res.data.data.registries.edges)\n      } else {\n        dispatch(updateRegistryInfo({notFound: true}))\n      }\n    } catch (e) {\n      dispatch(updateRegistryInfo({notFound: true}))\n      console.error(e)\n    }\n  }).catch(err => {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.error(err.response ? err.response.data : null)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, oldPosition, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      dispatch(setViewRegistryProducts(oldPosition))\n      toast.error(\"Somerhing went wrong while re-arranging Products\")\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    }\n\n  }).catch(err => {\n    dispatch(setViewRegistryProducts(oldPosition))\n    console.error(err.message)\n  })\n}\n\nexport const addProductHandler = (card, stateAddedProducts, stateRegistryInfo, dispatch) => {\n  let existingProduct = stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n  const registryId = parseInt(stateRegistryInfo.id)\n  if (existingProduct.length === 0) {\n    const title = card.title\n    const category = card.category.id\n    const storeItemUrl = card.onlineStoreUrl\n    const sku = card.variants.edges[0].node.sku\n    const price = parseFloat(card.variants.edges[0].node.price)\n    const quantity = parseInt(card.quantity)\n    const shopifyItemId = card.id\n    const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      variables: {\n        registryId: registryId,\n        title: title,\n        category: category,\n        tags: [],\n        storeItemUrl: storeItemUrl ? storeItemUrl : '',\n        sku: sku,\n        price: price,\n        quantity: quantity,\n        shopifyItemId: shopifyItemId,\n        imageUrl: imageUrl,\n      }\n    }\n    graphQL(data).then(_ => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  } else {\n    let data = {\n      query: UPDATE_REGISTRY_ITEM,\n      variables: {\n        registryItemId: existingProduct[0].id,\n        quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n      }\n    }\n    graphQL(data).then(res => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  }\n}\n\nexport const getOnboardingQuestions = async (dispatch, registryId = null, token = null) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: false,\n      registryId: registryId ? Number(registryId) : null\n    }\n  }\n  let options = {}\n  if (token) {\n    options = {headers: {\"Authorization\": \"Token \" + token}}\n  }\n\n  await graphQLNoHeader(reqData, options).then(async res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      await dispatch(addOnboardingQuestion(questions))\n    }\n  }).catch(err => {\n    // toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\n\nexport const getPersonalizeQuestions = (registryId, dispatch) => {\n  let reqData = {\n    query: GET_PERSONALIZE_QUESTIONS,\n    variables: {\n      registryId: registryId,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.editablePersonalizeQuestions) {\n      const questions = res.data.data.editablePersonalizeQuestions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addPersonalizeQuestion(questions))\n    }\n  }).catch(err => {\n    toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\nexport const updateGuestViewRegistry = (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_REGISTRY,\n    variables: {\n      urlSlug: urlSlug,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.registryAsGuest) {\n      let guestViewInfo = {...res.data.data.registryAsGuest}\n      if (guestViewInfo.image) {\n        guestViewInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + guestViewInfo.image.image;\n      }\n      delete guestViewInfo.registryItems\n      dispatch(updateGuestViewInfo(guestViewInfo))\n    }\n  }).catch(err => {\n    dispatch(updateGuestViewInfo({notFound: true}))\n    if (err.response && err.response.data.errors) {\n      for (const error of err.response.data.errors) {\n        // TODO: Implement toast if necessary\n        console.log(error.message)\n      }\n    }\n  })\n}\n\nexport const createRegistry = dispatch => {\n  graphQL({query: CREATE_REGISTRY}).then(res => {\n    if (res.data.data) {\n      let registryId = res.data.data.createRegistry.registry.id\n      if (registryId) {\n        dispatch(setOnboardingRegistry(registryId))\n      }\n    }\n  }).catch(err => {\n    console.log(err.response)\n  })\n}\n\nexport const dataURItoBlob = (dataURI, fileType, fileName) => {\n  let byteString = atob(dataURI.split(',')[1]);\n  let ab = new ArrayBuffer(byteString.length);\n  let ia = new Uint8Array(ab);\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  let blob = new Blob([ab], {type: fileType});\n  return new File([blob], fileName, {\n    type: fileType\n  })\n}\n\nexport const getGuestCategories = async (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_CHECKLIST,\n    variables: {\n      urlSlug: urlSlug,\n    }\n  }\n  await graphQL(reqData).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n      let finalCategories = getAllCategories(res.data.data.registryCategoriesAsGuest, true)\n      dispatch(setGuestCheckListItems(finalCategories))\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}\n\nconst getTrackGiftsFilterStatus = (filterString, trackGiftsFilter) => {\n  let returnStatus = false\n  switch (filterString) {\n    case \"available\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 4) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"purchased\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 1) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"reserved\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 3) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"fundsReceived\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 2) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"returned\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 5) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    default:\n      returnStatus = false\n      break\n  }\n  return returnStatus;\n}\n\nexport const getTrackGiftsProduct = (clearProducts = false, trackGiftsFilters, trackGiftsProduct, trackGiftsPagination, trackGiftsView, registryInfo, trackGiftsSearch, dispatch, first = TRACK_GIFTS_PRODUCTS_PER_REQUEST) => {\n  // TODO: Change this Function when Search API in implemented\n  let reqData = {\n    query: GET_TRACK_GIFTS,\n    operationName: \"registryGifts\",\n    variables: {\n      registryId: registryInfo?.id,\n      giftGivers: trackGiftsView?.id === TRACK_GIFTS_VIEWS[1].id,  // [1] index is Gift Giver\n      after: clearProducts ? null : trackGiftsPagination.endCursor,\n      first: first,\n      searchKeyword: trackGiftsSearch.searchText,\n      isReserved: getTrackGiftsFilterStatus(\"reserved\", trackGiftsFilters),\n      isAvailable: getTrackGiftsFilterStatus(\"available\", trackGiftsFilters),\n      isPurchased: getTrackGiftsFilterStatus(\"purchased\", trackGiftsFilters),\n      isFundsReceived: getTrackGiftsFilterStatus(\"fundsReceived\", trackGiftsFilters),\n      isReturned: getTrackGiftsFilterStatus(\"returned\", trackGiftsFilters),\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    // Updating Track Gifts Filters\n    if (res.data.data.registryGifts && res.data.data.registryGifts.registryGiftItemsCount) {\n      const allFilterCounts = res.data.data.registryGifts.registryGiftItemsCount;\n      const newFilters = trackGiftsFilters.map(filter => {\n        filter.count = allFilterCounts[LOCAL_2_API_FILTERS_MAPPING[filter.id]] ? allFilterCounts[LOCAL_2_API_FILTERS_MAPPING[filter.id]] : 0\n        return filter\n      })\n\n      dispatch(setTrackGiftsFilters(newFilters))\n    }\n\n    // Updating Track Gifts Products\n    if (res.data.data.registryGifts && res.data.data.registryGifts.gifts) {\n      let registryGifts = res.data.data.registryGifts.gifts\n      let products = registryGifts.edges.map(item => ({...item.node}))\n      let pagination = null\n      if (registryGifts.pageInfo) {\n        pagination = {\n          hasNextPage: registryGifts.pageInfo.hasNextPage,\n          endCursor: registryGifts.pageInfo.endCursor,\n        }\n      }\n      if (pagination) {\n        dispatch(setTrackGiftsPaginationInfo({...pagination}))\n      }\n      if (clearProducts) {\n        dispatch(setTrackGiftsProduct([...products]))\n      } else {\n        dispatch(setTrackGiftsProduct([...trackGiftsProduct, ...products]))\n      }\n\n    } else {\n      dispatch(setTrackGiftsPaginationInfo({\n        hasNextPage: false,\n        endCursor: null\n      }))\n    }\n  }).catch(err => {\n    dispatch(setTrackGiftsPaginationInfo({\n      hasNextPage: false,\n      endCursor: null\n    }))\n    console.error(err.response)\n  })\n}\n\nexport const addProductToCart = async (data) => {\n  let res = {}\n  await addProductToCartAPI(data).then(res => {\n      res['status'] = 200\n      console.log('Added to cart ')\n  }).catch(err => {\n    res = err.response.data\n    if (typeof res !== 'object') {\n      res = {status: 401}\n    }\n    console.error(err.response.data)\n  })\n  return res\n}","import React, { useState } from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport CardItem from \"../card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../button-component/ButtonComponent\";\n\nconst AddedCard = (props) => {\n\n  const dispatch = useDispatch();\n  let stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRecommendedProducts = useSelector(state => state.myRegistry.recommendedProducts)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const [recommendedProducts, setRecommendedProducts] = useState([])\n  const [show, setShow] = useState(false);\n  const modalTitle = `Recommended ${props.data.registryCategories[0].category.categoryName}`\n  const [showRemoveModel, setShowRemoveModel] = useState(false);\n\n  const showRecommendation = (category) => {\n    // Fetching all recommendations for that particular product category\n    let categoryRecommended = [...stateRecommendedProducts.filter(product => Number(category.id) === Number(product.category.id))]\n\n    // Removing duplicate products if found any\n    let jsonObject = categoryRecommended.map(JSON.stringify);\n    let uniqueSet = new Set(jsonObject);\n    categoryRecommended = Array.from(uniqueSet).map(JSON.parse);\n\n    setRecommendedProducts(categoryRecommended.map(product => {\n      // Resetting recommended product quantity\n      product.quantity = 1;\n      return product;\n    }));\n\n    setShow(true);\n  }\n\n  let moreOptionsData = [\n    {\n      name: \"Remove\",\n      action: () => setShowRemoveModel(true)\n    }\n  ]\n\n  if (Number(props.data.registryCategories[0].category.categoryType.id) !== 2) {\n    moreOptionsData.unshift({\n      name: \"View Recommendations\",\n      action: () => showRecommendation(props.data.registryCategories[0])\n    })\n  }\n\n\n  const removeConfirmFooter = (\n    <>\n      <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => setShowRemoveModel(false)}>Do not\n        remove</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={() => {\n        props.removeProductFromCartHandler();\n        setShowRemoveModel(false);\n      }}>Remove</Button>\n    </>\n  )\n\n  // Incrementing quantity of local recommended product\n  const incrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        product.quantity += quantity;\n      }\n      newRecommended.push(product)\n    }\n    setRecommendedProducts(newRecommended)\n  }\n\n  // Decrementing quantity of local recommended product\n  const decrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    let updated = false;\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        if (product.quantity - quantity <= 0) {\n          break;\n        } else {\n          product.quantity -= quantity;\n          updated = true;\n        }\n      }\n      newRecommended.push(product)\n    }\n\n    if (updated) {\n      setRecommendedProducts(newRecommended)\n    }\n  }\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i\n    className={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n    <div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n      <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n    </div>\n  </i>);\n\n  return (\n    <>\n      {!props.multipleCategories ?\n        <>\n          <div className=\"added-card py-5 pr-2\">\n            <div className=\"row\">\n              <div className=\"col-2\">\n              <div className=\"pl-2\">\n              {props.data?.item.imageUrl ?\n                <img\n                  className={[\"product-img d-block mx-auto\", Number(props.data.registryCategories[0].category.categoryType.id) === 2 ? \"added-card-product-image-radius\" : \"\"].join(\" \")}\n                  src={props.data?.item.imageUrl}\n                  alt={props.data?.item.title}/>\n                :\n                <div className=\"added-card-no-product-image\"/>\n              }\n\n            </div>\n\n              </div>\n              <div className=\"col\">\n                {/* TODO: change category */}\n                <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div>\n                <h2>{props.data.title}</h2>\n                <div className=\"d-flex mt-2\">\n                  <div className=\"\">${props.data.item.price}</div>\n                  {/*/!* TODO: Add Strikeout price dynamic *!/*/}\n                  {/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n                  {props.data.quantity > 1 ?\n                    <div className=\"ml-4 text-body d-flex\">\n                      Qty:{props.data.quantity}\n                      <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n                    </div> : <></>}\n                </div>\n              </div>\n              <div className={[\n                props.draggable ? \"col-4\" : \"col-3\",\n              ].join(\" \")}\n              >\n                <div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n                  {!stateGuestViewRegistry ?\n                    <button\n                      className={[\n                        \"mr-4 d-flex align-items-center added-gift-must-have-btn px-2\",\n                        props.data.mostWanted ? \"added-gift-must-have-active\" : \"added-gift-must-have-not-active\"\n                      ].join(\" \")}\n                      onClick={props.toggleMustHave}\n                    >\n                      <i className={[\"icon mr-1 d-block\", props.data.mostWanted ? \"heart-fill\" : \"heart\"].join(\" \")} />\n                      <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                    </button> :\n                    props.data.mostWanted ?\n                      <button\n                        className=\"mr-4 d-flex align-items-center added-gift-must-have-btn px-2 added-gift-must-have-active\">\n                        <i className=\"icon mr-1 d-block heart-fill\" />\n                        <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                      </button>\n                      : <></>\n                  }\n                  {!stateGuestViewRegistry ?\n                    <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\" />\n                    : <></>}\n                  {/* TODO: Add icon/rearrange icon */}\n                  {props.draggable && !stateGuestViewRegistry ?\n                    <DragHandle /> : <></>}\n                </div>\n              </div>\n            </div>\n          </div>\n          {props.isViewCard ?\n            <div className=\"row\">\n              <div className=\"col\">\n                {props.data.registryCategories.length > 1 ?\n                  props.data.registryCategories.map(category =>\n                    props.data.registryCategories[0].id !== category.id ?\n                      <div className=\"text-body font-medium p-6 added-card-other-category\">\n                        You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n                      </div>\n                      : null\n                  )\n                  : null}\n              </div>\n            </div> : null}\n        </>\n        :\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"text-body font-medium p-6 added-card-other-category\">\n              You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {props.multipleCategories.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n            </div>\n          </div>\n        </div>\n      }\n      <Modal\n        show={show}\n        closeModal={() => setShow(false)}\n        title={modalTitle}\n        size=\"xl\"\n      >\n        <div className=\"position-relative added-card-recommended\">\n          <div className=\"row category-recommended-products\">\n            {recommendedProducts.map((card, index) => (\n              <div className=\"col-4 mb-5\" key={\"CardItem-\" + index}>\n                <CardItem\n                  data={card}\n                  incrementQuantityHandler={() => incrementQuantity(card.id, 1)}\n                  decrementQuantityHandler={() => decrementQuantity(card.id, 1)}\n                  addProductHandler={() => addProductHandler(card, stateAddedProducts, stateRegistryInfo, dispatch)}\n                />\n              </div>\n            ))}\n            {recommendedProducts.length <= 0 ?\n              <div className=\"col text-center py-4\"><h4>No recommendation found</h4></div> : null}\n          </div>\n          {recommendedProducts.length > 0 ? <div className=\"added-card-recommends-bottom-gradient\" /> : null}\n        </div>\n      </Modal>\n      <Modal\n        show={showRemoveModel}\n        size=\"md\"\n        footer={removeConfirmFooter}\n      >\n        <h2>Do you want to remove {props.data.title}? </h2>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddedCard\n","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\nimport { GET_PERSONALIZE_QUESTIONS } from \"api/queries\";\nimport { graphQL } from \"api/axios\";\nimport { toast } from \"react-toastify\";\nimport {connect} from \"react-redux\";\n\nclass CheckList extends React.Component {\n\n    gotoPersonalize = (event) => {\n        event.preventDefault();\n        // this.props.history.push(routes.PERSONALIZE.HOME)\n        \n        // If user has given answer or not\n        let isQuizPending = false\n        let reqData = {\n            query: GET_PERSONALIZE_QUESTIONS,\n            variables: {\n                registryId: this.props.stateRegistryInfo.id,\n            }\n        }\n        // To route to edit-checklist or Quiz\n        graphQL(reqData).then(res => {\n            if (res.data.data.editablePersonalizeQuestions) {\n                const questions = res.data.data.editablePersonalizeQuestions\n                for (let question of questions) {\n                    if (question.answers.length > 0) {\n                        isQuizPending = false\n                        break;\n                    } \n                }\n                if(isQuizPending){\n                    this.props.history.push(routes.PERSONALIZE.HOME)\n                } else {\n                    this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n                }\n                \n            }\n        }).catch(err => {\n            toast.error(\"Error occurred while fetching questions\");\n            console.error(err);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"mb-3\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <a href=\"#\" className=\"ml-2 text-sm checklist-personalize\" tabindex onClick={(e) => this.gotoPersonalize(e)}>{this.props.t(\"checkList.personalize\")}</a>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\">\n                          <div className=\"check-list-progress mw-100\" style={{width: `${this.props.percentage}%`}}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n      stateRegistryInfo: state.registry.info,\n    }\n  }\n\nexport default withTranslation()(withRouter(connect(\n    mapStateToProps\n  )(CheckList)));","import React, { Component } from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport { connect } from 'react-redux';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({ id, categoryName, addedItemsCount, totalItemsCount, subProductTypes }) => {\n      return (\n        <>\n          {subProductTypes.length === 0 ?\n            <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n              onClick={() => this.scrollToCategory(categoryName)}>\n              <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n\n              <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                {addedItemsCount >= totalItemsCount ?\n                  <div className=\"icon-done\" /> :\n                  (totalItemsCount > 0 ?\n                    <div className='ml-auto mb-auto align-self-end card-progress'>\n                      {addedItemsCount}/{totalItemsCount}\n                    </div>\n                    : null)}\n              </div>\n            </div> :\n            // Todo handle scroll\n            <>\n              <div className=\"card-body-contain align-items-center py-2\" key={categoryName + id}\n                onClick={() => this.scrollToCategory(categoryName)}>\n                <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n              </div>\n              <div className=\"text-sm\">\n                {subProductTypes.map((subProductType, index) => (\n                  <div className=\"sub-product-list d-flex py-2 ml-3 align-items-center\" key={subProductType.categoryName + subProductType.id}>\n                    <div>{subProductType.categoryName}</div>\n                    <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                      {subProductType.addedItemsCount >= subProductType.totalItemsCount ?\n                        <div className=\"icon-done\" /> :\n                        (totalItemsCount > 0 ?\n                          <div className='ml-auto mb-auto align-self-end card-progress'>\n                            {subProductType.addedItemsCount}/{subProductType.totalItemsCount}\n                          </div>\n                          : null)}\n\n                    </div>\n                  </div>\n                ))}\n\n              </div>\n            </>}\n        </>\n      )\n\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        {this.props.item.categoryName && this.props.item.isParent ?\n          <Card>\n            <Accordion.Toggle\n              onClick={this.handleToggleEvent}\n              as={Card.Header}\n              id={this.props.item.categoryName}\n              eventKey={this.props.item.categoryName}\n            >\n              <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n                <span className=\"checklist-icon-arrow\" />\n                <div className=\"ml-3 mb-0 w-100\">\n                  <div className=\"text-body\">{this.props.item.categoryName}</div>\n                  <div className=\"d-flex\">\n                    <div className=\"check-list-hearder-background\">\n                      <div className=\"check-list-hearder-progress mw-100\" style={{ width: `${(this.props.item.addedItemsCount / this.props.item.totalItemsCount) * 100}%` }} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Accordion.Toggle>\n            <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n              <Card.Body>\n                {subListItem}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          :\n          <p className=\"pl-6 mr-3 text-body others-cat\" onClick={() => this.scrollToCategory(this.props.item.categoryName)}>{this.props.item.categoryName}</p>\n        }\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              tabindex\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" tabindex className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a tabindex className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className={[\"checkbox d-flex align-items-center\", props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"checkbox__input mr-2\">\n        <input\n          type=\"checkbox\"\n          name={props.id}\n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n        />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n          <i className=\"icon-check\"></i>\n        </span>\n      </span>\n      <span className={[\"radio__label text-sm\", props.textClass ? props.textClass : \"\"].join(\" \")}>{props.display} {props.count ? \"(\" + props.count + \")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React, {useState, useEffect} from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {GET_CATEGORIES} from \"../../../../api/queries\";\nimport {graphQL} from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {useSelector} from \"react-redux\";\nimport {getAllCategories} from \"../../../../utils/commonFunction\";\nimport CheckBox from \"../check-box/CheckBox\";\n\n// TODO: Change this Component to handle multiple categories\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [searched, setSearched] = useState(false)\n  const [searchedCategories, setSearchedCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(props.currentCategory ? props.currentCategory : []);\n  // const [selectedCategory, setSelectedCategory] = useState([]);\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.registryCategories) {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = {...category}\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n        }\n        setCategories(finalCheckList);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    props.changeCurrentCategory(selectedCategory)\n    props.closeModal(false);\n  }\n\n  const handleSelectionCategory = (category,subCategory) => {\n    subCategory = {\n      ...subCategory,\n      \"mainCategory\": category\n    }\n    let sameCatagory = [...selectedCategory].find(category => subCategory.id === category.id)\n    if (sameCatagory) {\n      let allSelectedCategory = selectedCategory.filter(category => subCategory.id !== category.id)\n      setSelectedCategory(allSelectedCategory)\n    }\n    else {\n      let allSelectedCategory = [...selectedCategory, subCategory]\n      setSelectedCategory(allSelectedCategory)\n    }\n  }\n\n  useEffect(() => {\n    if (props.currentCategory) {\n      setSelectedCategory(props.currentCategory)\n    } else {\n      setSelectedCategory([])\n    }\n  }, [props.currentCategory])\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const getCategoriesToDisplay = (cat) => {\n    return (\n      <div className=\"col\">\n        {cat.map(category => {\n          return (\n            <div className=\"mb-6\" key={\"select-\" + category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              <div className=\"category-columns\">\n                {category.subCategories ?\n                  category.subCategories.map(subCategory =>\n                    <div className=\"w-100 category-column\">\n                      <label className=\"checkbox d-flex align-items-center py-1 px-2 m-0\">\n                        <span className=\"checkbox__input mr-2\">\n                          <input\n                            type=\"checkbox\"\n                            name={subCategory.id}\n                            value={subCategory.id}\n                            checked={selectedCategory.find(category => category.id === subCategory.id) ? \"checked\" : \"\"}\n                            onChange={() => handleSelectionCategory(category.categoryName,subCategory)}\n                          />\n                          <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                            <i className=\"icon-check\"></i>\n                          </span>\n                        </span>\n                        <span className=\"select_category_radio__label text-body\">{subCategory.categoryName}</span>\n                      </label>\n                    </div>\n                  )\n                  : null}\n              </div>\n\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      {searched ? (searchedCategories.length > 0 ? getCategoriesToDisplay(searchedCategories) : getCategoriesToDisplay([])) : getCategoriesToDisplay(categories)}\n    </div>\n  )\n\n  const modalFooter = (\n    <div className=\"categories-modal-footer\">\n      <label>{selectedCategory.length > 0 ? selectedCategory.length + ' selected' : null}</label>\n      <Button\n        variant=\"primary\"\n        className=\"font-medium p-1\"\n        onClick={saveSelectedCategory}\n      >Done</Button>\n    </div>\n  )\n\n  // Search Category Section\n  const searchInputRef = React.createRef()\n  const changeLinkRef = React.createRef()\n\n  const focusSearchCategoryInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }\n\n  const searchInputFocusHandler = (e) => {\n    if (!e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.add(\"search-category-input-focus\");\n    }\n  }\n\n  const searchInputBlurHandler = (e) => {\n    if (e.target.value.length > 0) {\n      return\n    }\n\n    if (e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.remove(\"search-category-input-focus\");\n    }\n  }\n\n  const searchCategoryInputChangeHandler = (e) => {\n    setSearched(true)\n    if (e.target.value.length > 0) {\n      changeLinkRef.current.style.display = \"block\";\n\n      //  Searching through the category\n      let finalCategories = []\n      for (const parentCategory of categories) {\n        let newParentCategory = {...parentCategory}\n        newParentCategory.subCategories = []\n        let searchMatched = false\n\n        for (const subCategory of parentCategory.subCategories) {\n          if (subCategory.categoryName.toLowerCase().match(e.target.value.toLowerCase())) {\n            searchMatched = true\n            newParentCategory.subCategories.push(subCategory)\n          }\n        }\n\n        if (searchMatched) {\n          finalCategories.push(newParentCategory)\n          searchMatched = false\n        }\n      }\n      setSearchedCategories(finalCategories)\n    } else {\n      changeLinkRef.current.style.display = \"none\";\n    }\n  }\n\n  const changeLinkClickHandler = (e) => {\n    e.preventDefault();\n    setSearched(false)\n    if (searchInputRef.current) {\n      if (searchInputRef.current.value.length > 0) {\n        searchInputRef.current.value = \"\"\n      }\n      changeLinkRef.current.style.display = \"none\";\n      searchInputRef.current.focus()\n      setSearchedCategories([])\n    }\n  }\n\n  const headerContent = (\n    <div className=\"align-self-center d-flex position-relative select-category-search-section mr-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Search category...\"\n        className=\"search-category-input pl-5 py-1 pr-1 text-body m-0\"\n        ref={searchInputRef}\n        onChange={(e) => searchCategoryInputChangeHandler(e)}\n        onFocus={(e) => searchInputFocusHandler(e)}\n        onBlur={(e) => searchInputBlurHandler(e)}\n      />\n      <i className=\"icon-search search-category-icon\" onClick={focusSearchCategoryInput} />\n      <a\n        tabindex='0'\n        className=\"search-category-clear-link text-sm font-medium\"\n        href=\"#\"\n        onClick={(e) => changeLinkClickHandler(e)}\n        ref={changeLinkRef}>Clear all</a>\n    </div>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={modalFooter}\n      headerContent={headerContent}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React from \"react\";\nimport \"./CategoryPill.scss\";\n\nconst CategoryPill = (props) => {\n  return (\n    <span className={[\"import-registry-category-pill text-sm p-1\", props.className ? props.className : \"\"].join(\" \")}>\n      {props.mainCategory+\": \"+props.name}\n      <i className=\"icon-close remove-category-pill-icon ml-2\" onClick={props.removeCategory}/>\n    </span>\n  );\n}\n\nexport default CategoryPill;\n","import React, { createRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport { setAnotherStoreProductInfo } from \"modules/my-registry/MyRegistryActions\";\nimport { getScrapedProduct } from \"api/axios\";\nimport { toast } from 'react-toastify';\nimport CategoryPill from \"../import-registry/category-pill/CategoryPill\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst AddGiftAnotherStore = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n  const [hideProductDetails, setHideProductDetails] = useState(true);\n  const [showLoading, setshowLoading] = useState(false);\n\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice >= 0) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      try {\n        new URL(ev.target.value);\n      } catch {\n        toast.error(\"Invalid Store Url\")\n        return;\n      }\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      let ctgry = category;\n      let data = defaultData.myRegistry.defaultAnotherStoreProductInfo;\n      data.category = ctgry\n      dispatch(setAnotherStoreProductInfo(data))\n      setshowLoading(true);\n      setHideProductDetails(true);\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = { ...productInfo };\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n          setshowLoading(false);\n          setHideProductDetails(false);\n        }\n      }).catch(err => {\n        setshowLoading(false);\n        toast.error(\"Invalid Store Url\")\n        return false;\n      })\n    }\n  }\n\n  const removeSelectedCategory = (categoryId) => {\n    if (productInfo.category.length) {\n      let finalcategory = productInfo.category.filter(category => category.id !== categoryId);\n      let prodInfo = { ...productInfo };\n      prodInfo.category = finalcategory;\n      dispatch(setAnotherStoreProductInfo(prodInfo));\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm font-medium add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                onKeyUp={(ev) => submitStoreUrl(ev)}\n                placeholder=\"Paste a product link that you want to add in your Monica and Andy Registry\" />\n              {/* <a className=\"text-sm\" href=\"#\">Change</a> */}\n            </div>\n          </div>\n\n          <div className={[\"row mt-4\", hideProductDetails ? \"\" : \"pt-6\"].join(\" \")}>\n            {hideProductDetails ? showLoading ?\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                  <h4 className=\"hide-product-details m-auto\">Please wait while we fetch the product details</h4>\n                </div>\n              </div>\n              :\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <h4 className=\"hide-product-details m-auto\">Please paste product link above to view details here</h4>\n                </div>\n              </div>\n              :\n              <>\n                <div className=\"col-5 add-gift-image-select\">\n                  <div className=\"mr-3\">\n                    {productImage?.value ?\n                      <img\n                        src={productImage.value}\n                        alt=\"Product Image\"\n                      />\n                      : null}\n\n                    <i className=\"icon-preview p-1\" onClick={() => {\n                      imageInput.current.click()\n                    }} />\n                    {/* TODO: Change above icon to camera icon */}\n\n                    <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                      onChange={(ev) => selectFileHandler(ev)} />\n                  </div>\n                </div>\n                <div className=\"col-7\">\n                  <div className=\"ml-3\">\n                    <div className=\"row\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Product Name</p>\n                        <textarea\n                          className=\"w-100 mt-1 h1 p-2\"\n                          rows=\"2\"\n                          value={productInfo.productName}\n                          onChange={(ev) => productNameChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container mr-2\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Price</p>\n                          <div className=\"price-input mt-1\">\n                            <input\n                              type=\"text\"\n                              className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                              value={price}\n                              onChange={(ev) => priceChangeHandler(ev)}\n                            />\n                          </div>\n                          {/*<span className=\"price-input text-body\">$</span>*/}\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                          <Counter\n                            className=\"mt-2\"\n                            counter={quantity}\n                            incrementHandler={incrementQuantity}\n                            decrementHandler={decrementQuantity}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    {!props.addMyOwn ?\n                      <>\n                        <div className=\"row mt-5\">\n                          <div className=\"col d-flex\">\n                            <p className=\"text-sm add-gift-store-label font-medium mb-1\">Category</p>\n                            <a className=\"text-sm ml-2 add-gift-link font-medium\" href=\"#\" tabindex onClick={(ev) => openCategorySelect(ev)}>Add</a>\n                            {/* <div className=\"position-relative\">\n                            <input type=\"text\" value={category.displayName} readOnly={true}\n                                   className=\"w-100 pl-2 pr-12 py-1 text-body input-background change-link-input\"/>\n                          </div> */}\n                          </div>\n                        </div>\n                        <div className=\"row mt-2\">\n                          <div className=\"col\">\n                            {category.map(cat => (\n                              <CategoryPill\n                                key={cat.id}\n                                mainCategory={cat.mainCategory}\n                                name={cat.categoryName}\n                                removeCategory={() => removeSelectedCategory(cat.id)}\n                                className=\"mt-2 mr-3\"\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      </>\n                      : null}\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col d-flex\">\n                        <TogglePills\n                          iconClass=\"icon-heart\"\n                          activeClass={mustHave ? \"active-must-have\" : null}\n                          onClick={() => toggleMustHave(!mustHave)}\n                          text=\"Must Have\"\n                          className=\"mr-2\" />\n                        <TogglePills\n                          iconClass=\"icon-guest\"\n                          activeClass={groupGift ? \"active-group-gift\" : null}\n                          onClick={() => toggleGroupGift(!groupGift)}\n                          text=\"Group Gift\"\n                          className=\"mr-2\" />\n                        {/* TODO: Change above guest icon one added */}\n                        <TogglePills\n                          iconClass=\"icon-shopping-cart\"\n                          activeClass={purchased ? \"active-purchased\" : null}\n                          onClick={() => togglePurchased(!purchased)}\n                          text=\"Purchased\"\n                          className=\"mr-2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">How to gift?</p>\n                        {howToGiftOptions.map((option, index) => (\n                          <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                            <RadioButton\n                              name=\"how-to-gift\"\n                              textClass=\"text-sm\"\n                              display={option.text}\n                              checked={option.id === howToGift.id ? true : null}\n                              changeHandler={() => changeHowToGift(option)} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Notes</p>\n                        <textarea className=\"w-100 mt-1 text-body p-1\"\n                          rows=\"2\"\n                          placeholder=\"Write a note for your friends and family\"\n                          value={note}\n                          onChange={(ev) => noteChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","import React, { Component } from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  clearAnotherStoreProductInfo, setAnotherStoreProductInfo,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport { connect } from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport { ADD_REGISTRY_ITEM, UPDATE_REGISTRY_ITEM } from 'api/queries';\nimport { graphQL } from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { toast } from \"react-toastify\";\nimport { ADD_REGISTRY_ITEM as ADD_REGISTRY_ITEM_MUTATION } from 'api/mutations';\nimport BookmarkletSection from \"../add-gift/bookmarklet-section/BookmarkletSection\";\nimport AddGiftAnotherStore from \"../add-gift/add-gift-another-store/AddGiftAnotherStore\";\nimport Button from \"../button-component/ButtonComponent\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport { getProducts as commonGetProducts, getCategories as commonGetCategories } from \"../../../../utils/commonFunction\";\n\nclass ViewRecommend extends Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n    viewDetailsBtn: true,\n  }\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  cardRef = React.createRef()\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const cardId = atob(card.id).split('/')\n      const shopifyItemId = cardId[cardId.length - 1]\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n      const variantid = atob(card.variants.edges[0].node.id).split('/')\n      const shopifyVariantId = variantid.length > 0 ? variantid[variantid.length - 1] : null\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          // TODO: change category\n          category: [Number(category)],\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          shopifyItemVariantId: shopifyVariantId,\n          imageUrl: imageUrl,\n        }\n      }\n\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    }\n  }\n\n  // Checking if product data is valid or not\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // // Valid Category\n    // if (!storeProduct.category.id) {\n    //   alert(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  // Adding Add on my own product to registry\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM_MUTATION,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            // TODO: change category\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  // Popping up Add on my own modal\n  addOnMyOwnClickHandler = (category) => {\n    this.clearModalData()\n    let newCategory = [{\n      ...category,\n      displayName: category.parentCategory + \" : \" + category.categoryName\n    }]\n    let prodInfo = { ...this.props.stateAnotherStoreProduct };\n    prodInfo.category = newCategory;\n    this.props.dispatch(setAnotherStoreProductInfo(prodInfo));\n\n    this.modalTitle = `Add my own ${category ? category.categoryName.toLowerCase() : \"\"}`\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection />\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore addMyOwn={true} />\n\n    this.setState((prevState, props) => ({\n      show: !prevState.show\n    }))\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\" />\n      </button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\" />\n      </button>\n    };\n\n    let modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >Save & Close</Button>\n      </>\n    )\n    return (\n      <>\n        <div className=\"recommended-cart my-6\">\n          <div className=\"row\">\n            <div className=\"col title\"><h2>{this.props.title}\n              {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n            </h2>\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Slider {...settings}>\n              {this.props.products.map((card, index) =>\n                // <div><>{index}</></div>\n                <div className=\"cart-view\" ref={this.cardRef}>\n                  <CardItem\n                    className=\"mr-4\"\n                    data={card}\n                    key={\"CardItem-\" + index}\n                    incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                    decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                    addProductHandler={() => this.addProductHandler(card)}\n                  />\n                </div>\n              )}\n              <div>\n                <div className=\"add-my-own-card mr-4 d-flex flex-column align-items-center justify-content-center\"\n                  style={{ height: this.cardRef.current ? this.cardRef.current.offsetHeight + 'px' : '200px' }}\n                  onClick={() => this.addOnMyOwnClickHandler(this.props.category)}\n                >\n                  <button className=\"add-my-own-button\" />\n                  <p className=\"text-body font-medium mt-5\">Add my own</p>\n                </div>\n              </div>\n            </Slider>\n          </div>\n          <div className=\"mt-6 card-buttom d-flex\">\n            {/* TODO: Change text to dynamic */}\n            <div>\n              <img className=\"blog-img\"\n                src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\"\n                alt={this.props.title} />\n            </div>\n            <div className=\"pl-4 my-auto\">\n              <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n              <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n            </div>\n            <div className=\"text-sm my-auto mr-6 ml-auto\">\n              <a href=\"\" className=\"read-more\" tabindex>Read more</a>\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n      ;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info,\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setParentFilter, setChildFilter, clearFilter } from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\" />\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                  {parentFilter.child.map(childFilter => (\n                    <CheckBox\n                      {...childFilter}\n                      key={childFilter.id}\n                      className=\"mb-4\"\n                      checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                      changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                    />\n                  ))}\n                </div>\n              )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n            onClick={clearClickHandler}\n            variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./ImportRegistry.scss\";\nimport { getAnotherRegistryProducts } from \"../../../../../api/axios\";\nimport { toast } from \"react-toastify\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport CategoryPill from \"./category-pill/CategoryPill\";\nimport { connect } from \"react-redux\";\nimport { setAnotherStoreRegistryItems } from \"../../../../my-registry/MyRegistryActions\";\n\nclass ImportRegistry extends React.Component {\n  state = {\n    registryUrl: \"\",\n    errorMessage: \"\",\n    loading: false,\n    categoryModalShow: false,\n    activeCategoryProductIndex: null,\n    currentRegistryLink: \"\",\n    inputHasFocus: false,\n    currentCategory: [],\n  }\n\n  inputRef = React.createRef()\n\n  setCategoryModalVisible = () => {\n    this.setState({ categoryModalShow: false, currentCategory:[] })\n  }\n\n  changeLoadingState = (value) => {\n    this.setState({\n      loading: value\n    })\n  }\n\n  registryUrlChangeHandler = (ev) => {\n    this.setState({\n      registryUrl: ev.target.value,\n      errorMessage: \"\"\n    })\n  }\n\n  checkUrlAndGetRegistryItems = () => {\n    // Checking for valid url\n    try {\n      new URL(this.state.registryUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return;\n    }\n\n    this.getAnotherRegistryProductsInfo();\n  }\n\n  registryUrlKeyUpHandler = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      this.checkUrlAndGetRegistryItems()\n    }\n  }\n\n  getAnotherRegistryProductsInfo = () => {\n\n    this.setState({\n      currentRegistryLink: this.state.registryUrl\n    })\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = true;\n    }\n\n    const registryUrl = new URL(this.state.registryUrl);\n    const storeName = registryUrl.hostname.split(\".\")[1]\n\n    const reqData = {\n      store_name: storeName,\n      store_url: this.state.registryUrl\n    }\n\n    this.changeLoadingState(true);\n\n    getAnotherRegistryProducts(reqData).then(res => {\n      try {\n        if (res.data) {\n          const products = res.data.products;\n          const registry = res.data.registry;\n\n          if (products && registry) {\n            let newProducts = products.filter(product => product.title)\n            newProducts = newProducts.map(product => {\n              product.categories = [];\n              return product;\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n            // this.setState({\n            //   products: newProducts\n            // })\n          } else {\n            this.setState({\n              errorMessage: \"Looks like this registry is not publically accessible. Please change the settings and try again.\"\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems([]))\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        toast.error(\"Some error occurred while reading registry products.\")\n      }\n\n    }).catch(err => {\n      toast.error(\"Some error occurred while fetching registry.\")\n      console.error(err);\n    }).finally(() => {\n      this.changeLoadingState(false)\n    })\n  }\n\n  openSelectCategoryModal = (ev, productIndex) => {\n    ev.preventDefault()\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      this.setState({\n        activeCategoryProductIndex: productIndex,\n        categoryModalShow: true,\n        currentCategory: this.props.stateAnotherStoreRegistry[productIndex].categories\n      })\n    } else {\n      console.log(\"Invalid Product Index\");\n    }\n  }\n\n  setProductCategories = (categories) => {\n    // Saving categories passed from SelectCategory Modal\n    if (Number.isInteger(this.state.activeCategoryProductIndex) && this.props.stateAnotherStoreRegistry[this.state.activeCategoryProductIndex]) {\n      let newProductState = [...this.props.stateAnotherStoreRegistry];\n      // TODO: Change this to support multiple categories\n      newProductState[this.state.activeCategoryProductIndex].categories = categories;\n      this.props.dispatch(setAnotherStoreRegistryItems(newProductState))\n      this.setState({\n        activeCategoryProductIndex: null\n      })\n    }\n  }\n\n  removeSelectedCategory = (productIndex, categoryId) => {\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      let newProducts = [...this.props.stateAnotherStoreRegistry]\n      newProducts[productIndex].categories = newProducts[productIndex].categories.filter(category => category.id !== categoryId);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n      // this.setState({\n      //   products: newProducts\n      // })\n    }\n  }\n\n  changeRegistryUrl = (e) => {\n    e.preventDefault();\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = false;\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"baby-registry-import-registry\">\n          <div className=\"row mt-5\">\n            <div className=\"col d-flex flex-column\">\n              <span className=\"baby-registry-required-field text-sm font-medium\">Registry URL</span>\n              <div className=\"position-relative mt-1\">\n                <input type=\"text\"\n                  className={[\"import-registry-input-field w-100 mb-0 mw-100 text-body pl-2 py-1 pr-14\", this.state.errorMessage ? \"import-registry-error-field\" : \"\"].join(\" \")}\n                  placeholder=\"Paste your registry URL here to import.  Please ensure it's publicly accessible.\"\n                  value={this.state.registryUrl}\n                  ref={this.inputRef}\n                  onChange={this.registryUrlChangeHandler.bind(this)}\n                  onFocus={() => this.setState({ inputHasFocus: true })}\n                  onBlur={() => this.setState({ inputHasFocus: false })}\n                />\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink === this.state.registryUrl && !this.state.inputHasFocus ?\n                  <a tabindex className=\"import-registry-change-link text-sm font-medium import-registry-category-link\" href=\"#\"\n                    onClick={(e) => this.changeRegistryUrl(e, this.inputRef)}>Change</a> : null}\n\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink !== this.state.registryUrl ?\n                  <div className=\"import-registry-submit-url-section\">\n                    {/*TODO: Change icons once added to global icons*/}\n                    <button className=\"icon-close mr-3\"\n                      onClick={() => this.setState({ registryUrl: \"\" })} />\n                    <button className=\"icon-check\" onClick={this.checkUrlAndGetRegistryItems} />\n                  </div>\n                  : null}\n              </div>\n              {this.state.errorMessage ?\n                <span className=\"import-registry-input-error-message text-body mt-1\">{this.state.errorMessage}</span>\n                : null}\n            </div>\n          </div>\n\n          <div className=\"row baby-registry-import-section mt-6\">\n            <div className=\"col\">\n              {this.props.stateAnotherStoreRegistry.length <= 0 || this.state.loading ?\n                // When no product exists\n                <div className=\"py-20 text-center import-registry-main-content\">\n                  {this.state.loading ?\n                    <>\n                      <div className=\"spinner-border import-registry-spinner\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                      <h4 className=\"mt-1 mx-auto import-registry-loading-text\">Please wait while we’re importing your\n                        registry</h4>\n                    </>\n                    :\n                    <h4 className=\"mx-auto import-registry-no-content-text\">\n                      Please paste your publicly accessible\n                      registry URL above to import items\n                      to M+A.\n                    </h4>\n                  }\n                </div>\n                :\n                // When products is filled\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"import-registry-main-content d-flex flex-column import-registry-products\">\n                      <div className=\"d-flex import-registry-products-column \">\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Items</p>\n                        </div>\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Category: Item</p>\n                        </div>\n                      </div>\n\n\n                      {this.props.stateAnotherStoreRegistry.map((product, index) => (\n                        <div className=\"d-flex import-registry-products-column\" key={\"Product-\" + index}>\n                          <div className=\"w-50 px-3\">\n                            <p className=\"py-3 text-body\">{product.title}</p>\n                          </div>\n                          <div className=\"w-50 px-3\">\n                            {product.categories.length <= 0 ?\n                              <div className=\"py-3\">\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Select category</a>\n                              </div>\n                              :\n                              <div className=\"pb-2\">\n                                {product.categories.map(category => (\n                                  <CategoryPill\n                                    key={category.id}\n                                    name={category.categoryName}\n                                    mainCategory={category.mainCategory}\n                                    removeCategory={() => this.removeSelectedCategory(index, category.id)}\n                                    className=\"mt-2 mr-3\"\n                                  />\n                                ))}\n\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Add</a>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n          <SelectCategory\n            showModal={this.state.categoryModalShow}\n            closeModal={this.setCategoryModalVisible}\n            changeCurrentCategory={this.setProductCategories}\n            currentCategory={this.state.currentCategory}\n          />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ImportRegistry);","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n    return (\n        <div\n          onClick={props.onClick}\n          className={[\"cash-fund-toggle-pills px-2 py-1\", props.className ? props.className : \"\", props.selectedClass ? props.selectedClass : \"\"].join(\" \")}>\n            <i className={[\"cash-fund-toggle-icon float-left\", props.iconClass ? props.iconClass : null].join(\" \")} />\n            <span className=\"text-sm ml-2\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default TogglePills;","import React from \"react\";\nimport \"./AddCashFundModal.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from \"../../button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport TogglePills from \"./toggle-pills/TogglePills\";\nimport {connect} from \"react-redux\";\nimport {graphQL, graphQLMultipart} from \"../../../../../api/axios\";\nimport {GET_CASH_FUND_CATEGORIES} from \"../../../../../api/queries\";\nimport {ADD_REGISTRY_ITEM} from \"../../../../../api/mutations\";\nimport {setCashFundCategories} from \"../../../../my-registry/MyRegistryActions\";\nimport {M_A_STORE_NAME} from \"../../../../../utils/constants\";\nimport {dataURItoBlob, getCategories, getProducts} from \"../../../../../utils/commonFunction\";\nimport {Dropdown} from 'reactjs-dropdown-component';\n\nclass AddCashFundModal extends React.Component {\n\n  // Accepted Image input types for Cash fund image\n  ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  MAX_IMAGE_SIZE = 5000000; // 5MB\n\n  // Cash Fund data\n  state = {\n    cashFundImage: {},\n    cashFundName: this.props.categoryData ? this.props.categoryData.registryCategories[0].category.categoryName : \"\",\n    cashFundAmount: \"\",\n    hideTotal: false,\n    cashFundType: {},\n    cashFundNote: \"\",\n    mustHave: false,\n    markCompleted: false,\n    categories: [],\n    errors: {}\n  }\n\n  imageRef = React.createRef()\n\n  modalCloseHandler = () => {\n    this.props.closeModal();\n  }\n\n  validateCashFundData = () => {\n    let valid = true;\n    let errors = {}\n    if (this.state.cashFundName.length <= 0) {\n      errors['cashFundName'] = \"Please enter Cash Fund Name.\"\n      valid = false;\n      // toast.error(\"Please enter Cash Fund Name.\")\n      // return false;\n    }\n\n    if (this.state.cashFundAmount.length <= 0) {\n      errors['cashFundAmount'] = \"Please enter Cash Fund Amount\"\n      valid = false;\n      // toast.error(\"Please enter Cash Fund Amount\")\n      // return false;\n    }\n\n    if (this.state.cashFundAmount.length > 0 && !Number(this.state.cashFundAmount)) {\n      valid = false;\n      errors['cashFundAmount'] = \"Please enter valid amount\"\n      // toast.error(\"Please enter valid amount\")\n      // return false;\n    }\n\n    let selectedCat = this.state.categories.find(category => category.selected)\n    console.log(\"SelectedCat\", selectedCat)\n    if (!selectedCat) {\n      errors['cashFundType'] = \"Please select Cash Fund Type.\"\n      valid = false;\n      // toast.error(\"Please select Cash Fund Type.\")\n      // return false;\n    }\n\n    this.setState({\n      errors: errors\n    })\n\n    return valid;\n  }\n\n  // Adding Cash Fund\n  addCashFundClickHandler = () => {\n    if (this.validateCashFundData()) {\n      let formData = new FormData()\n      let selectedCat = this.state.categories.find(category => category.selected)\n      let reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id,\n          input: [{\n            storeName: M_A_STORE_NAME,\n            items: [{\n              title: this.state.cashFundName,\n              price: this.state.cashFundAmount,\n              mostWanted: this.state.mustHave,\n              tags: [],\n              quantity: 1,\n              isGroupGift: true,\n              hideTotal: this.state.hideTotal,\n              markAsCompleted: this.state.markCompleted,\n              note: this.state.cashFundNote,\n              registryCategories: [Number(selectedCat.id)],\n              isCashFund: true\n            }]\n          }]\n        }\n      }\n\n      if (this.state.cashFundImage.type === \"custom\") {\n        let map = {\n          images: [\"variables.input.0.items.0.images\"]\n        }\n        reqData.variables.input[0].items[0]['images'] = null;\n        console.log(dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n        formData.append(\"map\", JSON.stringify(map))\n        formData.append(\"images\", dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n      } else {\n        reqData.variables.input[0].items[0]['imageUrl'] = this.state.cashFundImage.value;\n      }\n\n      formData.append(\"operations\", JSON.stringify(reqData))\n\n      graphQLMultipart(formData).then(res => {\n        if (res.data.data && res.data.data.addRegistryItems) {\n          // Successfully added product\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n          toast.success((\n            <p><b>{this.state.cashFundName}</b> added to your registry!</p>\n          ))\n          this.modalCloseHandler()\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n  }\n\n  presentCategories = (allCategories) => {\n    let categories = allCategories.map(category => {\n      let categoryData = {\n        id: category.id,\n        title: category.categoryName,\n        selected: this.props.categoryData && this.props.categoryData.registryCategories[0].category.id === category.id ? true : false,\n        key: \"categories\"\n      }\n      return categoryData\n    })\n    this.setState({categories: [...categories]})\n  }\n\n  resetThenSet = (id, key) => {\n    if (this.state.errors.cashFundType) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.cashFundType\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    this.setState({\n      categories: this.state.categories.map(category => {\n        category.selected = category.id === id;\n        return category;\n      })\n    })\n  }\n\n  // Modal Data\n  modalTitle = \"Add Cash Fund\";\n  modalFooterButton = (\n    <Button\n      variant=\"primary\"\n      className=\"px-5 py-1 font-medium text-body\"\n      onClick={this.addCashFundClickHandler}\n    >Add & Close</Button>\n  )\n\n  // Handling custom image selection\n  selectFileHandler = (ev) => {\n    if (ev.target && ev.target.files.length > 0) {\n      const file = ev.target.files[0]\n\n      // Verifying file is image\n      if (this.ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= this.MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = (e) => {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              fileType: file.type,\n              fileName: file.name\n            }\n            this.setState({\n              cashFundImage: newProductImage\n            })\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n\n  // Input change handlers\n  cashFundNameChangeHandler = (ev) => {\n    if (this.state.errors.cashFundName) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.cashFundName\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    \n    this.setState({\n      cashFundName: ev.target.value\n    })\n  }\n\n  cashFundAmountChangeHandler = (ev) => {\n    if (this.state.errors.cashFundAmount) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.cashFundAmount\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    \n    this.setState({\n      cashFundAmount: ev.target.value\n    })\n  }\n\n  cashFundHideTotalChangeHandler = (_) => {\n    this.setState((prevState, _) => ({\n      hideTotal: !prevState.hideTotal\n    }))\n  }\n\n  cashFundTypeChangeHandler = (ev) => {\n    if (this.props.stateCashFundCategories.length > 0) {\n      const changedCategory = this.props.stateCashFundCategories.find(category => Number(category.id) === Number(ev.target.value))\n      if (changedCategory.id) {\n        this.setState({\n          cashFundType: changedCategory\n        })\n      }\n    }\n  }\n\n  cashFundNoteChangeHandler = (ev) => {\n    this.setState({\n      cashFundNote: ev.target.value\n    })\n  }\n\n  mustHaveClickHandler = () => {\n    this.setState((prevState, _) => ({\n      mustHave: !prevState.mustHave\n    }))\n  }\n\n  markCompletedClickHandler = () => {\n    this.setState((prevState, _) => ({\n      markCompleted: !prevState.markCompleted\n    }))\n  }\n\n\n  render() {\n\n    if (this.props.imageUrl && !this.state.cashFundImage.value && this.state.cashFundImage.value !== this.props.imageUrl) {\n      this.setState({\n        cashFundImage: {\n          type: \"url\",\n          value: this.props.imageUrl\n        }\n      })\n    }\n\n    if (this.props.stateCashFundCategories.length > 0 && this.state.categories.length <= 0) {\n      this.presentCategories(this.props.stateCashFundCategories)\n    }\n\n    if (this.props.stateCashFundCategories.length <= 0) {\n      // Fetching all cash fund categories\n      const reqData = {\n        query: GET_CASH_FUND_CATEGORIES,\n        operationName: \"getCashFund\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id\n        }\n      }\n\n\n      graphQL(reqData).then(res => {\n        console.log(res.data.data)\n        if (res.data.data && res.data.data.cashFundCategories) {\n          let allCashFundCategories = res.data.data.cashFundCategories.map(cat => {\n            cat.category.id = cat.id\n            return cat.category\n          })\n          this.presentCategories(allCashFundCategories);\n          this.props.dispatch(setCashFundCategories(allCashFundCategories))\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n\n\n    if (!this.state.cashFundType.id && this.props.stateCashFundCategories.length > 0) {\n      let foundCategory = false\n      if (this.props.categoryData?.registryCategories && this.props.categoryData.registryCategories.length > 0) {\n        for (let cashFundCategory of this.props.stateCashFundCategories) {\n          if (Number(this.props.categoryData.registryCategories[0].category.id) === Number(cashFundCategory.id)) {\n            foundCategory = true\n            this.setState({\n              cashFundType: cashFundCategory\n            })\n            break\n          }\n        }\n      }\n      if (!foundCategory) {\n        this.setState({\n          cashFundType: this.props.stateCashFundCategories[0]\n        })\n      }\n    }\n\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          title={this.modalTitle}\n          footer={this.modalFooterButton}\n          closeModal={this.modalCloseHandler}>\n\n          <div className=\"row cash-fund-modal-content\">\n            <div className=\"col-5\">\n              <div className=\"cash-fund-modal-image-section mr-1\">\n                {this.state.cashFundImage.type ?\n                  <img src={this.state.cashFundImage.value} alt=\"Cash Fund\" className=\"cash-fund-modal-image\" />\n                  :\n                  <div className=\"cash-fund-modal-no-image\" />\n                }\n                <i\n                  className=\"icon-preview change-cash-fund-image-icon p-1\"\n                  onClick={() => {\n                    this.imageRef.current.click()\n                  }}\n                />\n                <input\n                  type=\"file\"\n                  className=\"d-none\"\n                  ref={this.imageRef}\n                  accept={this.ACCEPTED_IMAGE_TYPE.join(\",\")}\n                  onChange={(ev) => this.selectFileHandler(ev)}\n                />\n              </div>\n            </div>\n            <div className=\"col-7 cash-fund-input-section\">\n              <div className=\"ml-3 mr-6\">\n\n                {/* Cash Fund name */}\n                <div className=\"row\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Cash Fund Name<label className=\"asterik\">*</label></p>\n                    <input\n                      className={[\"cash-fund-input h2 mt-1 w-100 mw-100 p-2\", this.state.errors.cashFundName ? \"cash-fund-input-error\" : \"\"].join(\" \")}\n                      type=\"text\"\n                      value={this.state.cashFundName}\n                      onChange={(ev) => this.cashFundNameChangeHandler(ev)}\n                    />\n                    {this.state.errors.cashFundName ? <label\n                      className=\"text-sm cash-fund-input-error-text\">{this.state.errors.cashFundName}</label>\n                      : null}\n                  </div>\n                </div>\n\n                {/* Cash Fund type */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium mb-1\">Type<label className=\"asterik\">*</label></p>\n                    <div className={[\"cash-fund-select w-100 mw-100\", this.state.errors.cashFundType ? \"cash-fund-input-error\" : \"\"].join(\" \")}>\n                      <Dropdown\n                        title=\"Select category\"\n                        list={this.state.categories}\n                        resetThenSet={this.resetThenSet}\n                      />\n                    </div>\n                    {this.state.errors.cashFundType ? <label\n                      className=\"text-sm cash-fund-input-error-text\">{this.state.errors.cashFundType}</label>\n                      : null}\n                  </div>\n                </div>\n\n\n                <div className=\"row mt-5\">\n\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium mb-1\">Total Amount<label className=\"asterik\">*</label></p>\n                    <div className=\"row\">\n\n                      {/* Cash fund amount */}\n                      <div className=\"col\">\n                        <div className=\"position-relative\">\n                          <input\n                            className={[\"cash-fund-input w-100 mw-100 p-1 pl-5 text-body\", this.state.errors.cashFundAmount ? \"cash-fund-input-error\" : \"\"].join(\" \")}\n                            type=\"number\"\n                            value={this.state.cashFundAmount}\n                            onChange={(ev) => this.cashFundAmountChangeHandler(ev)}\n                          />\n                          <span className=\"cash-fund-price-input-currency text-body\">$</span>\n                        </div>\n                      </div>\n\n                      {/* Cash fund hidden option */}\n                      <div className=\"col align-self-center\">\n                        <label\n                          className=\"checkbox d-flex align-items-center\">\n                          <span className=\"checkbox__input mr-2\">\n                            <input\n                              type=\"checkbox\"\n                              onChange={(ev) => this.cashFundHideTotalChangeHandler(ev)}\n                            />\n                            <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i className=\"icon-check\" />\n                            </span>\n                          </span>\n                          <span\n                            className=\"radio__label text-sm\">Hide total from guests</span>\n                        </label>\n                      </div>\n                    </div>\n                    {this.state.errors.cashFundAmount ? <label\n                      className=\"text-sm cash-fund-input-error-text\">{this.state.errors.cashFundAmount}</label>\n                      : null}\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col\">\n                    <TogglePills\n                      text=\"Must Have\"\n                      iconClass=\"icon-heart\"\n                      selectedClass={this.state.mustHave ? \"cash-fund-must-have-selected\" : null}\n                      onClick={this.mustHaveClickHandler}\n                    />\n                    {/* TODO: Change below icon to rounded correct when added */}\n                    <TogglePills\n                      text=\"Mark As Completed\"\n                      iconClass=\"icon-check\"\n                      className=\"ml-2\"\n                      selectedClass={this.state.markCompleted ? \"cash-fund-completed-selected\" : null}\n                      onClick={this.markCompletedClickHandler}\n                    />\n                  </div>\n                </div>\n\n\n                {/* Cash fund note */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Notes</p>\n                    <textarea\n                      placeholder=\"Write a note for your friends and family\"\n                      className=\"cash-fund-textarea w-100 mw-100 mt-1 w-100 mw-100 p-1 text-body\"\n                      value={this.state.cashFundNote}\n                      onChange={(ev) => this.cashFundNoteChangeHandler(ev)}\n                      rows={2} />\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateCashFundCategories: state.myRegistry.cashFundCategories,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddCashFundModal);","import React from 'react';\nimport \"./AddGift.scss\";\nimport {connect} from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport ImportRegistry from \"./import-registry/ImportRegistry\";\nimport {clearAnotherStoreProductInfo, setAnotherStoreRegistryItems} from \"modules/my-registry/MyRegistryActions\";\nimport {ADD_REGISTRY_ITEM, SAVE_REGISTRY_DATA} from \"../../../../api/mutations\";\nimport {graphQLMultipart as graphQL, graphQL as jsonGraphQL} from \"../../../../api/axios\";\nimport {getProducts, getCategories} from \"utils/commonFunction\";\nimport {toast} from \"react-toastify\";\nimport {IMPORT_REGISTRY_EMAIL} from \"../../../../utils/constants\";\nimport {dataURItoBlob} from \"../../../../utils/commonFunction\";\nimport AddCashFundModal from \"../../../commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false,\n    showCashFundModal: false,\n    cashFundProduct: null,\n    currentContent: \"\"\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n    this.props.dispatch(setAnotherStoreRegistryItems([]));\n  }\n\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      toast.error(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      toast.error(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      toast.error(\"Invalid Quantity\");\n      return false;\n    }\n\n    // TODO: if necessary Valid Category\n    // if (!storeProduct.category.id) {\n    //   toast.error(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"isCashAcceptedOnly\": storeProduct.howToGift.id === 1 ? true : false ,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false,\n      currentContent: \"\"\n    })\n  }\n\n  openCashFundModal = () => {\n    this.modalCloseHandler();\n    this.setState({\n      showCashFundModal: true\n    })\n  }\n\n  closeCashFundModal = () => {\n    this.setState({\n      showCashFundModal: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\" onClick={this.openCashFundModal}><h4 className=\"m-auto\">Cash Funds</h4>\n            </div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name}/>\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection/>\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n                onClick={this.importRegistry}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  validImportRegistryData = (registryItems) => {\n    if (registryItems.length <= 0) {\n      toast.error(\"No Item found\");\n      return false;\n    }\n    // TODO: if necessary Valid Category\n    // for (const item of registryItems) {\n    //   if (item.categories.length <= 0) {\n    //     toast.error(\"Please select category for all product\");\n    //     return false;\n    //   }\n    // }\n    return true;\n  }\n\n  getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  getCleanedRegistryItems = (registryItems) => {\n    let cleanedRegistryItems = []\n    for (const item of registryItems) {\n      // TODO: Handle multiple store for single product\n      const itemStore = item.stores[0]\n      if (cleanedRegistryItems.find(el => el.storeName ? el.storeName === itemStore.name : false)) {\n        cleanedRegistryItems = cleanedRegistryItems.map(el => {\n          if (el.storeName === itemStore.name) {\n            if (el.items) {\n              el.items.push({\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              })\n            } else {\n              el['items'] = [{\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              }]\n            }\n            if (item.img) {\n              el.items[el.items.length - 1]['imageUrl'] = item.img\n            }\n          }\n          return el;\n        })\n      } else {\n        let newStore = {\n          storeName: itemStore.name,\n          items: [{\n            title: item.title,\n            // TODO: change category\n            registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n            quantity: 1,\n            tags: [],\n            price: this.getRefinedPrice(itemStore.price)\n          }]\n        }\n\n        if (item.img) {\n          newStore.items[newStore.items.length - 1]['imageUrl'] = item.img\n        }\n        cleanedRegistryItems.push(newStore)\n      }\n    }\n\n    return cleanedRegistryItems;\n  }\n\n  importRegistryClickHandler = () => {\n    if (!this.validImportRegistryData(this.props.stateAnotherStoreRegistry)) {\n      return;\n    }\n\n    const registryItems = this.getCleanedRegistryItems(this.props.stateAnotherStoreRegistry)\n    if (registryItems.length > 0) {\n      const reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          \"registryId\": this.props.stateRegistryInfo.id,\n          \"input\": registryItems\n        }\n      }\n      jsonGraphQL(reqData).then(res => {\n        if (res.data.data.addRegistryItems) {\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n          toast.success(\"Registry items imported successfully\");\n          this.clearModalData();\n          this.modalCloseHandler();\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore/>\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal,\n      currentContent: \"anotherStoreProduct\"\n    }))\n  }\n\n  importRegistry = () => {\n    this.clearModalData()\n    this.modalTitle = \"Import Registry\"\n    this.modalBody = <ImportRegistry/>\n\n    this.setState((prevState, _) => ({\n      updateModal: !prevState.updateModal,\n      currentContent: \"importRegistry\"\n    }))\n  }\n\n  render() {\n\n    if (this.props.stateAnotherStoreProduct && this.state.currentContent === \"anotherStoreProduct\") {\n      this.modalFooterButtons = (\n        <>\n          <Button\n            variant=\"secondary\"\n            className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n            disabled={!this.props.stateAnotherStoreProduct.productName}\n            onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n          >View Details</Button>\n          <Button\n            variant=\"primary\"\n            className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n            disabled={!this.props.stateAnotherStoreProduct.productName}\n            onClick={this.addItemToRegistry}\n          >Save & Close</Button>\n        </>\n      )\n    }\n\n    if (this.props.stateAnotherStoreRegistry && this.state.currentContent === \"importRegistry\") {\n      this.modalFooterButtons = (\n        <>\n          {/*TODO: change href of email us link*/}\n          <a href={\"mailto:\" + IMPORT_REGISTRY_EMAIL} tabindex target='_blank'\n             className=\"mr-auto import-registry-email-link text-sm font-medium\">Email Us For Help</a>\n          {/*TODO: Integrate API when multiple category is supported*/}\n          <Button\n            variant=\"primary\"\n            className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n            disabled={this.props.stateAnotherStoreRegistry.length <= 0}\n            onClick={this.importRegistryClickHandler}\n          >Import</Button>\n        </>\n      )\n    }\n\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n            <span className=\"font-medium text-sm\">What is Add Gift?</span>\n            <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save\n              in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n\n        {this.state.showCashFundModal ?\n          <AddCashFundModal\n            show={this.state.showCashFundModal}\n            closeModal={this.closeCashFundModal}\n            categoryData={this.state.cashFundProduct}\n          />\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);\n","import React from \"react\";\nimport \"./CashFundCardNotAdded.scss\";\n\nclass CashFundCardNotAdded extends React.Component {\n  render() {\n    return (\n      <div\n        className={[\"baby-registry-cash-fund-card py-3 mb-2\", this.props.className ? this.props.className : \"\"].join(\" \")}>\n        <div className=\"row\">\n          <div className=\"col-2\">\n\n            <div className=\"pl-3\">\n              {this.props.data.item.imageUrl ?\n                <img className=\"cash-fund-image d-block mx-auto\" src={this.props.data.item.imageUrl}/>\n                :\n                <div className=\"baby-registry-cash-fund-no-image\" />\n              }\n            </div>\n\n          </div>\n          <div className=\"col\">\n            <div className=\"float-left\">\n              <p className=\"text-body font-medium\">{this.props.data.registryCategories[0].category.categoryName}</p>\n              <p\n                className=\"text-sm cash-fund-description\">{this.props.data.registryCategories[0].category.description}</p>\n            </div>\n            <button className=\"cash-fund-add-btn float-right mr-6\" onClick={this.props.addButtonClickHandler}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CashFundCardNotAdded;","import React from \"react\";\nimport CashFundCardNotAdded from \"./cash-fund-card-not-added/CashFundCardNotAdded\";\n\nclass CashFundCard extends React.Component {\n  render() {\n    return <CashFundCardNotAdded data={this.props.data} addButtonClickHandler={this.props.addButtonClickHandler}/>\n  }\n}\n\nexport default CashFundCard;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport {graphQL, getRecommendation} from 'api/axios';\nimport {GET_RECOMMENDATIONS} from 'api/queries';\nimport {TOGGLE_MUST_HAVE} from 'api/mutations';\nimport {getProducts, removeProductFromCartHandler, getCategories} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport config from \"api/config\";\nimport axios from \"axios\";\nimport CashFundCard from \"../../../commons/components/cash-fund-card/CashFundCard\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport AddCashFundModal from \"../../../commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal\";\n\nclass Everything extends Component {\n\n  state = {\n    showCashFundModal: false,\n    cashFundProduct: null\n  }\n\n  openCashFundModal = () => {\n    this.setState({\n      showCashFundModal: true\n    })\n  }\n\n  setCashFundCategoryAndOpenModal = (product) => {\n    this.setState({\n      cashFundProduct: {...product}\n    })\n    this.openCashFundModal()\n  }\n\n  closeCashFundModal = () => {\n    this.setState({\n      showCashFundModal: false,\n      cashFundProduct: null\n    })\n  }\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n\n  setAllRecommendation = async (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          ...category,\n          parentCategory: parentCat.categoryName,\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      // for (let i = 0; i <= 5; i++) {\n      // let recommendedCat = recommendedCategory[i]\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.categoryName\n        }\n      }\n      const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\n      const cookies = new Cookies();\n\n      await axios.get(apiURL + 'items', {\n        params: data,\n        headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n      })\n        .then(res => {\n          let rData = res.data.data.products.edges.map(item => {\n            let resData = {...item.node}\n            resData['quantity'] = 1\n            resData['category'] = recommendedCat\n            return resData\n          })\n          // count = count + 1;\n          if (rData.length !== 0) {\n            this.props.dispatch(addRecommendedProduct(rData))\n          }\n        }).catch(err => {\n          console.error(err.message)\n        })\n\n\n      // getRecommendation({ params: data }).then(res => {\n      //   let rData = res.data.data.products.edges.map(item => {\n      //     let resData = { ...item.node }\n      //     resData['quantity'] = 1\n      //     resData['category'] = recommendedCat\n      //     return resData\n      //   })\n      //   // count = count + 1;\n      //   this.props.dispatch(addRecommendedProduct(rData))\n      // }).catch(err => {\n      //   console.error(err.message)\n      // })\n      //   )\n      // ))\n      // count = count + 1;\n      // }\n      // else {\n      //   break;\n      // }\n    }\n  }\n\n  getSortedProducts = (addedProducts, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    const cashFundCategory = stateCategories.find(category => category.categoryType && Number(category.categoryType.id) === 2)\n    let cashFundCount = 0\n    if (cashFundCategory) {\n      let productsToAppend = []\n      for (let subCategory of cashFundCategory.subCategories) {\n        if (Number(subCategory.addedItemsCount) === 0) {\n          cashFundCount++;\n          productsToAppend.push({\n            item: {\n              imageUrl: \"\"\n            },\n            registryCategories: [{\n              id: subCategory.id,\n              category: {\n                ...subCategory\n              }\n            }]\n          })\n        }\n      }\n      addedProducts = [...addedProducts, ...productsToAppend]\n    }\n\n    let allProducts = []\n    let productCount = 0;\n    let categories = []\n    for (let parentCat of stateCategories) {\n      if (!parentCat.isParent) {\n        categories.push({\n          id: parentCat.id,\n          name: parentCat.categoryName,\n          added: parentCat.addedItemsCount,\n          total: parentCat.totalItemsCount,\n          parentCategory: {\n            id: parentCat.id,\n            name: parentCat.categoryName\n          },\n          categoryType: parentCat.categoryType,\n        })\n      } else {\n        for (let category of parentCat.subCategories) {\n          if (category.subProductTypes.length) {\n            for (let subProduct of category.subProductTypes) {\n              categories.push({\n                id: subProduct.id,\n                name: subProduct.categoryName,\n                added: subProduct.addedItemsCount,\n                total: subProduct.totalItemsCount,\n                parentCategory: {\n                  id: parentCat.id,\n                  name: parentCat.categoryName\n                },\n                categoryType: category.categoryType,\n              })\n            }\n          } else {\n            categories.push({\n              id: category.id,\n              name: category.categoryName,\n              added: category.addedItemsCount,\n              total: category.totalItemsCount,\n              parentCategory: {\n                id: parentCat.id,\n                name: parentCat.categoryName\n              },\n              categoryType: category.categoryType,\n            })\n          }\n        }\n      }\n    }\n\n\n    for (let category of categories) {\n      let products = []\n      let recommendations = []\n\n      // Getting filtered Products and recommendations\n      if (stateFilterApplied.parentFilter) {\n        if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n          if (stateFilterApplied.childFilter.length > 0) {\n            const childFilterArray = stateFilterApplied.childFilter\n\n            for (let product of addedProducts) {\n              let categoryFound = false\n              for (let cat of product.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              if (\n                ((childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n                  (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n                  // TODO: change category\n                  (childFilterArray.includes(\"reserved\") && product.isReserved)) && categoryFound\n              ) {\n                products.push(product)\n                // filteredProductsId.push(product.id)\n              }\n            }\n          } else {\n            // TODO: change category\n            products.push(...addedProducts.filter(el => {\n              let categoryFound = false\n              for (let cat of el.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              return categoryFound;\n            }))\n          }\n        } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n          let addedRecommendations = []\n          recommendations = stateRecommendedProducts.filter(el => {\n            if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n              addedRecommendations.push(el.id)\n              return true;\n            }\n            return false;\n          })\n        }\n      } else {\n        // TODO: Change this condition(el.item.category.length)\n        // TODO: change category\n        products.push(...addedProducts.filter(el => {\n          let categoryFound = false\n          for (let cat of el.registryCategories) {\n            if (cat.id === category.id) {\n              categoryFound = true\n              break\n            }\n          }\n          return categoryFound && el.registryCategories.length\n        }))\n        let addedRecommendations = []\n        recommendations = stateRecommendedProducts.filter(el => {\n          if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n            addedRecommendations.push(el.id)\n            return true;\n          }\n          return false;\n        })\n      }\n      productCount += products.length;\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: (category.added < category.total || category.total === 0) ? recommendations : []\n      })\n    }\n\n    // Grouping products based on parent category\n    let groupedProducts = []\n    for (const product of allProducts) {\n      let foundCategory = false;\n      groupedProducts = groupedProducts.map(el => {\n        if (el.id === product.category.parentCategory.id) {\n          foundCategory = true;\n          el.allProducts.push(product);\n        }\n        return el;\n      })\n\n      if (!foundCategory) {\n        groupedProducts.push({\n          ...product.category.parentCategory,\n          allProducts: [product]\n        })\n      }\n    }\n\n    // Adding total products and recommendations\n    groupedProducts = groupedProducts.map(el => {\n      let productCount = 0;\n      let recommendationCount = 0;\n\n      for (let product of el.allProducts) {\n        productCount += product.products.length;\n        recommendationCount += product.recommendations.length;\n      }\n\n      el['totalProducts'] = productCount;\n      el['totalRecommendations'] = recommendationCount;\n      return el;\n    })\n\n    // Removing items that does not have products or recommendations based on filters\n    if (stateFilterApplied.parentFilter) {\n      if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n        groupedProducts = groupedProducts.filter(product => product.totalProducts > 0)\n      } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n        groupedProducts = groupedProducts.filter(product => product.totalRecommendations > 0)\n      }\n    } else {\n      groupedProducts = groupedProducts.filter(product => (product.totalProducts > 0 || product.totalRecommendations > 0))\n    }\n\n    if (!stateFilterApplied.parentFilter) {\n      productCount -= cashFundCount\n    }\n    return {groupedProducts, productCount};\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for (let category of checklistItems) {\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems / totalItems) * 100;\n  }\n\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let {groupedProducts, productCount} = this.getSortedProducts(this.props.stateAddedProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"row mt-6\">\n            {/* View CheckList */}\n            <div className=\"col-3\">\n              <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)}/>\n              {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n                                                                     dispatch={this.props.dispatch}/>)}\n            </div>\n            <div className=\"col-9\">\n\n              {/* Top Filter Section */}\n              <FilterSection productCount={productCount}/>\n              <div className=\"mt-5\">\n                {groupedProducts.map(el => {\n                  let hasCashFund = false;\n                  return (<>\n                      <h4 className=\"text-uppercase my-4\">{el.name}</h4>\n                      {el.allProducts.map((product, i) => (\n                        <div id={product.category.name}>\n                          {product.products.map((card, index) => {\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2) {\n                              hasCashFund = true\n                            }\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2 && Number(card.registryCategories[0].category.addedItemsCount) === 0) {\n                              return (\n                                <CashFundCard\n                                  data={card}\n                                  key={\"cashFund\" + index}\n                                  className=\"mt-2\"\n                                  addButtonClickHandler={() => this.setCashFundCategoryAndOpenModal(card)}\n                                />\n                              )\n                            } else {\n                              return (\n                                <AddedCard\n                                  data={card} key={\"addedCard\" + index}\n                                  multipleCategories = {card.registryCategories.length > 1 ? card.registryCategories.find((cat, index) => Number(cat.id) === Number(product.category.id) && index != 0) : null}\n                                  toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                                  removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                                />\n                              )\n                            }\n                          })}\n                          {product.recommendations.length > 0 ?\n                            <ViewRecommend\n                              title={product.recommendations[0].category.categoryName}\n                              category={product.recommendations[0].category}\n                              products={product.recommendations}/>\n                            : null}\n                        </div>\n                      ))}\n                      {hasCashFund ?\n                        <div className=\"my-2\">\n                          <Button\n                            variant=\"secondary\"\n                            className=\" w-100 py-1 text-body font-medium\"\n                            onClick={this.openCashFundModal}\n                          >Add my own</Button>\n                        </div>\n                        : null}\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showCashFundModal ?\n          <AddCashFundModal\n            show={this.state.showCashFundModal}\n            closeModal={this.closeCashFundModal}\n            categoryData={this.state.cashFundProduct}\n          />\n          : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 5\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          closeModalHandler()\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      toast.error(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n\t\t  closeModalHandler()\n\t\t  setUploadImage(false);\n        } else {\n          toast.error(\"Some error occurred\");\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n\n  }\n\n  //modal close method\n  const closeModalHandler = () => {\n      getDefaultCoverImages();\n      props.closeCoverImagePicker();\n  }\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={closeModalHandler}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport { UPDATE_REGISTRY } from \"../../../../api/mutations\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport { toast } from 'react-toastify';\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      toast.error(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully updated registry information\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\" />\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\" />\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n        onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport routes from \"../../../../utils/routes\";\n\nconst ShareRegistry = (props) => {\n\n  const siteHostName = window.location.host + routes.REGISTRY.HOME;\n  // const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      toast.error(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      if (err.response.status === 400) {\n        setRegistryError(`${registryUrl} is not available. Please try something else.`)\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n      console.error(err.response.data)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toast.success(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section d-flex text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2 d-flex\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram .svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter.svg\"/>\n              </>\n              :\n              <>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook_disabled.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram _disabled.svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter_disabled.svg\"/>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport { setguestViewRegistry } from \"modules/view-registry/ViewRegistryActions\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\nimport { updateGuestViewRegistry } from 'utils/commonFunction';\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  componentDidMount() {\n    if (!this.props.guestViewRegistryState.urlSlug) {\n      updateGuestViewRegistry(this.props.stateRegistryInfo.urlSlug, this.props.dispatch)\n    }\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({ showCoverImagePicker: false })\n  }\n\n  closeShareRegistry = () => {\n    this.setState({ showShareRegistry: false })\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  handleGuestView = () => {\n    toast.success(\"Viewing registry as guest\")\n    this.props.dispatch(setguestViewRegistry(true))\n  }\n\n  handleDisableViewGuest = () => {\n    this.props.dispatch(setguestViewRegistry(false))\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({ showCoverImagePicker: true })\n      }\n    }\n  ]\n\n\n  render() {\n    // const style = {\n    //   backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'\n    // }\n    return (\n      <>\n        {this.props.stateGuestViewRegistry ?\n          <div className=\"view-guest-header text-body py-2\">\n            <div className=\"container d-flex justify-content-between\" onClick={this.handleDisableViewGuest}>\n              <div className=\"d-flex align-items-center view-guest-link\">\n                <i className=\"icon-chevron-left view-guest-text mr-2\" />\n                <a className=\"view-guest-text\" tabindex>Back To View Registry</a>\n              </div>\n              <div className=\"view-guest-text\">This is how your guests will see your registry</div>\n              <a className=\"view-guest-text view-guest-link\">Share</a>\n            </div>\n          </div> : null\n        }\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')' }}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          {!this.props.stateGuestViewRegistry ?\n            <div className=\"cover-pic-update-options\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-end\">\n                    <MoreOption\n                      data={this.COVER_PIC_OPTIONS}\n                      iconClass=\"icon-preview\"\n                      activeOptionClass=\"view-registry-cover-option-active\"\n                      buttonClass=\"update-cover-options p-1\" />\n                  </div>\n                </div>\n              </div>\n            </div> : null\n          }\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    {!this.props.stateGuestViewRegistry ?\n                      <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)} />\n                      : null\n                    }\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    !this.props.stateGuestViewRegistry ?\n                      <a className=\"add-greeting-link text-sm font-medium\" href=\"#\" tabindex\n                        onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a> : null\n                  }\n                </div>\n                {!this.props.stateGuestViewRegistry ?\n                  <div className=\"col-12 col-md-3 header-buttons\">\n                    <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\"\n                      onClick={this.handleGuestView}>View as Guest</Button>\n                    <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\"\n                      onClick={() => this.setState({ showShareRegistry: true })}>Share</Button>\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n        <EditViewRegistryDetail\n          show={this.state.showEditRegistryDetail}\n          closeEditRegistryDetail={this.closeEditRegistryDetail}\n          info={this.props.stateRegistryInfo}\n        />\n\n        <ShareRegistry\n          show={this.state.showShareRegistry}\n          closeShareRegistry={this.closeShareRegistry}\n          registryInfo={this.props.stateRegistryInfo}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    guestViewRegistryState: state.guestView.info,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt, clearViewFilter, setChildViewFilter } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearViewFilter())\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              {this.props.stateGuestViewRegistry ?\n                <></> :\n                <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>}\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 && !this.props.stateGuestViewRegistry ?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    stateRegistryInfo: state.registry.info,\n    stateFilterApplied: state.viewRegistry.viewFilterApplied,\n    stateFilterCategory: state.viewRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);\n","import React, { useState, useEffect } from 'react'\nimport \"./ViewFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildViewFilter, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport { FILTERS } from \"utils/constants\"\n\nconst ViewFilter = () => {\n\n  const dispatch = useDispatch()\n  let tempParentFilterId = useSelector(state => state.viewRegistry.viewFilterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  let stateFilterCategories = useSelector(state => state.viewRegistry.filterCategory)\n  let filterCountState = useSelector(state => state.myRegistry.filterCount)\n  let [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  const getLimitOfFliter = (parentId) => {\n    let limit = null\n    const filterCategory = [...filterCategoryLimit]\n    for (let category of filterCategory) {\n      if (parentId === category.id && category.limit) {\n        limit = category.limit\n      }\n    }\n    return limit\n  }\n\n  // Updating product count in filter categories\n  const updateFilterList = (addedProducts) => {\n\n    let newFilterList = [\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          if (category.addedItemsCount > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = newCategory.addedItemsCount\n          return newCategory\n        })\n        // count: 0\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: filterCountState.under50\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: filterCountState.between50100\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: filterCountState.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: filterCountState.maStoreItems\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: filterCountState.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    if (!stateGuestViewRegistry) {\n      const giftStatus = {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: filterCountState.totalAvailable\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: filterCountState.totalReserved\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: filterCountState.totalPurchased\n          }\n        ]\n      }\n      newFilterList.splice(0, 0, giftStatus)\n    }\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  useEffect(() => {\n    if (tempChildFilterIds.length === 0) {\n      updateFilterList(stateAddedProducts)\n    }\n  }, [stateAddedProducts, stateCategoriesInfo, tempChildFilterIds])\n\n\n  // Change event handlers\n\n  // TDOD: Add this if needed\n  // const parentChangeHandler = (parent) => {\n  //   dispatch(setParentViewFilter(parent.id))\n  //   if (parent.child) {\n  //     dispatch(setChildViewFilter(parent.child.map(child => child.id)))\n  //   } else {\n  //     dispatch(setChildViewFilter([]))\n  //   }\n  // }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildViewFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildViewFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearViewFilter())\n  }\n\n  const changeParentLimitHandler = (parentFilterID) => {\n    let limitLength = null\n    let filterCategory = [...stateFilterCategories].map(parentFilter => {\n      if (parentFilter.id === parentFilterID) {\n        parentFilter.limit = parentFilter.child.length\n        limitLength = parentFilter.child.length\n      }\n      return parentFilter\n    })\n    dispatch(setViewFilterCategory(filterCategory))\n\n    let isFound = false\n    let newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n      if (categorylimit.id === parentFilterID) {\n        categorylimit.limit = limitLength\n        isFound = true\n        return categorylimit\n      }\n      return categorylimit\n    })\n\n    if (!isFound) {\n      newFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n    }\n    setFilterCategoryLimit(newFilterCateoryLimit)\n  }\n\n  return (\n    <div className=\"view-filter\">\n      <div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n        <h4 className=\"font-weight-bold\">Filters</h4>\n        {tempChildFilterIds.length !== 0 ?\n          <a tabindex='0' className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n        }\n      </div>\n      <div className=\"d-flex flex-column\">\n        {[...stateFilterCategories].map(parentFilter => (\n          <div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n            {/* Parent filter */}\n            <div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n            {/* Child filter */}\n            {parentFilter.child ? (\n              <div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n                <div className=\"mt-3 fliter-checkbox-section\">\n                  {parentFilter.child.map((childFilter, index) => (\n                    childFilter.count > 0 ?\n                      index < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n                        <label class=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n                          <span class=\"checkbox__input mr-2\">\n                            <input type=\"checkbox\"\n                              name={childFilter.display}\n                              value={childFilter.display}\n                              checked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n                              onChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n                            <span class=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i class=\"icon-check\"></i>\n                            </span>\n                          </span>\n                          <p class=\"radio__label text-sm\"><div>{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</div></p>\n                        </label>\n                        : null\n                      : null\n\n                  ))}\n                  {(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n                    <div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n                    : null\n                  }\n                </div>\n              </div>\n            )\n              : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewFilter;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAlreadyBoughtProductInfo } from 'modules/guest-view/GuestViewAction';\nimport ProductDetailsModel from '../product-details-model/ProductDetailsModel';\nimport Counter from \"../counter/Counter\";\nimport { store } from \"store/Store\";\nimport './AlreadyBoughtProduct.scss';\n\nconst AlreadyBoughtProduct = (props) => {\n\n  const dispatch = useDispatch();\n  const stateRegistryInfo = useSelector(state => state.guestView.info)\n  const productInfo = useSelector(state => state.guestView.alreadyBoughtProduct)\n  const quantity = useSelector(state => state.guestView.alreadyBoughtProduct.quantity)\n  const name = useSelector(state => state.guestView.alreadyBoughtProduct.name)\n  const email = useSelector(state => state.guestView.alreadyBoughtProduct.email)\n  const orderNumber = useSelector(state => state.guestView.alreadyBoughtProduct.orderNumber)\n  const storeName = useSelector(state => state.guestView.alreadyBoughtProduct.storeName)\n  const giftMessage = useSelector(state => state.guestView.alreadyBoughtProduct.giftMessage)\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  const incrementQuantity = () => {\n    if (quantity < props.data.quantityStatus.still_needed) {\n      setQuantity(quantity + 1)\n    }\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const nameChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    props.onFocusHandler('name')\n    prodInfo.name = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n\n  const emailChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    props.onFocusHandler('email')\n    prodInfo.email = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  const storeNameChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    props.onFocusHandler('storeName')\n    prodInfo.storeName = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  const orderNumberChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    prodInfo.orderNumber = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  const giftMessageChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    prodInfo.giftMessage = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  return (\n    <div className=\"row add-gift-another-store\">\n      <div className=\"col\">\n        <div className=\"row\">\n          <div className=\"col-5 py-4 add-gift-image-select\">\n            <div className=\"mr-3\">\n              <ProductDetailsModel data={props.data} />\n            </div>\n          </div>\n          {/* // I Bought This Already Model Body */}\n          <div className=\"col-7 mt-4\">\n            <div className=\"ml-3\">\n              <div className=\"row col\">\n                <div className=\"col\">\n                  <p className=\"font-body font-medium\">Great, let’s update their registry</p>\n                  <p className=\"text-sm mt-1\">This info will help {stateRegistryInfo.user.firstName} {stateRegistryInfo.user.partnerUser ? 'and' + stateRegistryInfo.user.partnerUser.firstName : ''} keep track of all their gifts.</p>\n                </div>\n              </div>\n              <div className=\"row col mt-4\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Name</p>\n                  <input\n                    className={[\"w-100 mt-1 px-2 py-1\", props.fieldErrors.name ? \"already-bought-input-error\" : \"\"].join(\" \")}\n                    type='text'\n                    placeholder='John Doe'\n                    value={name}\n                    onChange={(ev) => nameChangeHandler(ev)}\n                  />\n                  {props.fieldErrors.name ?\n                    <label\n                      className=\"text-sm already-bought-input-error-text\">{props.fieldErrors.name}</label>\n                    : null}\n                </div>\n              </div>\n              <div className=\"row col mt-4\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Email Address</p>\n                  <input\n                    className={[\"w-100 mt-1 px-2 py-1\", props.fieldErrors.email ? \"already-bought-input-error\" : \"\"].join(\" \")}\n                    type='text'\n                    placeholder='johndoe@email.com'\n                    value={email}\n                    onChange={(ev) => emailChangeHandler(ev)}\n                  />\n                  {props.fieldErrors.email ?\n                    <label\n                      className=\"text-sm already-bought-input-error-text\">{props.fieldErrors.email}</label>\n                    : null}\n                </div>\n              </div>\n              <div className=\"row col mt-5\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                  <Counter\n                    className=\"mt-2\"\n                    counter={quantity}\n                    incrementHandler={incrementQuantity}\n                    decrementHandler={decrementQuantity}\n                  />\n                </div>\n              </div>\n              <div className=\"row col mt-4\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Store Name</p>\n                  <input\n                    className={[\"w-100 mt-1 px-2 py-1\", props.fieldErrors.storeName ? \"already-bought-input-error\" : \"\"].join(\" \")}\n                    type='text'\n                    placeholder='Eg. Target'\n                    value={storeName}\n                    onChange={(ev) => storeNameChangeHandler(ev)}\n                  />\n                  {props.fieldErrors.storeName ?\n                    <label\n                      className=\"text-sm already-bought-input-error-text\">{props.fieldErrors.storeName}</label>\n                    : null}\n                </div>\n                <div className=\"col m-a-input-container ml-3\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Order Number</p>\n                  <input\n                    className=\"w-100 mt-1 px-2 py-1\"\n                    type='text'\n                    placeholder='0012345'\n                    value={orderNumber}\n                    onChange={(ev) => orderNumberChangeHandler(ev)}\n                  />\n                </div>\n              </div>\n              <div className=\"row col mt-4\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Gift Message</p>\n                  <textarea className=\"w-100 mt-1 text-body p-1\"\n                    rows=\"2\"\n                    placeholder=\"Write a message for gift receiver\"\n                    value={giftMessage}\n                    onChange={(ev) => giftMessageChangeHandler(ev)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AlreadyBoughtProduct;","import React, { useState } from 'react';\nimport \"./PurchasedModal.scss\";\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport Counter from \"../counter/Counter\";\nimport ProductDetailsModel from '../product-details-model/ProductDetailsModel'\n\nclass PurchasedModal extends React.Component {\n\t// Variable declarations\n\tstate = {\n\t\tshow: false,\n\t\tupdateModal: false,\n\t\tquantity: 1\n\t}\n\n\tmodalTitle = \"\"\n\tmodalBody = \"\"\n\tmodalTitleContent = \"\"\n\tmodalFooterButtons = \"\"\n\n\tcomponentDidMount = () => {\n\t\tthis.setModalData()\n\t}\n\n\tincrementQuantity = () => {\n\t\tthis.setState(() => ({\n\t\t\tquantity: this.state.quantity + 1\n\t\t}))\n\t}\n\n\tdecrementQuantity = () => {\n\t\tthis.setState(() => ({\n\t\t\tquantity: this.state.quantity - 1\n\t\t}))\n\t}\n\n\tsetModalData = () => {\n\t\tthis.clearModalData()\n\t\tthis.modalTitle = this.props.title\n\t\tthis.setState(() => ({\n\t\t\tshow: true,\n\t\t}))\n\n\t\tthis.modalBody = (\n\t\t\t<>\n\t\t\t\t<div className=\"row add-gift-another-store\">\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<div className=\"row mt-4\">\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"col-5 add-gift-image-select\">\n\t\t\t\t\t\t\t\t\t<div className=\"mr-3\">\n\t\t\t\t\t\t\t\t\t\t<ProductDetailsModel data={this.props.data} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-7\">\n\t\t\t\t\t\t\t\t\t<div className=\"ml-3\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-body font-medium\">Buy this gift for {this.props.stateRegistryInfo.user.firstName} {this.props.stateRegistryInfo.user.partnerUser ? 'and' + this.props.stateRegistryInfo.user.partnerUser.firstName : ''}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm mt-1\">We’ll keep the gift available in the registry until you checkout of the cart</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-7 mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-body font-medium\">Great, let’s update their registry</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm mt-1\">This info will help {this.props.stateRegistryInfo.user.firstName} {this.props.stateRegistryInfo.user.partnerUser ? 'and' + this.props.stateRegistryInfo.user.partnerUser.firstName : ''} keep track of all their gifts.</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Name</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mt-1 px-2 py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='John Doe'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => productNameChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Email Address</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mt-1 px-2 py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='johndoe@email.com'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => productNameChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcounter={this.state.quantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tincrementHandler={this.incrementQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecrementHandler={this.decrementQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Store Name</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mt-1 px-2 py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Eg. Target'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => productNameChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Order Number</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mt-1 px-2 py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='0012345'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => productNameChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Gift Message</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea className=\"w-100 mt-1 text-body p-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write a message for gift receiver\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => noteChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\n\tclearModalData = () => {\n\t\tthis.modalTitle = \"\"\n\t\tthis.modalBody = \"\"\n\t\tthis.modalTitleContent = \"\"\n\t\tthis.modalFooterButtons = \"\"\n\t}\n\n\tmodalCloseHandler = () => {\n\t\t// this.clearModalData()\n\t\tthis.setState({\n\t\t\tshow: false\n\t\t})\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.props.show}\n\t\t\t\t\tupdateModal={this.state.updateModal}\n\t\t\t\t\ttitle={this.props.title}\n\t\t\t\t\ttitleContent={this.modalTitleContent}\n\t\t\t\t\tfooter={this.modalFooterButtons}\n\t\t\t\t\tcloseModal={this.props.close}>\n\t\t\t\t\t{this.modalBody}\n\t\t\t\t</Modal>\n\t\t\t</>\n\t\t)\n\t}\n}\n\n// const mapStateToProps = state => {\n// \treturn {\n// \t\tstateRegistryInfo: state.registry.info\n// \t}\n// }\n\nexport default PurchasedModal;","import React, { useState } from 'react';\nimport \"./GiveMAGiftModel.scss\";\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport Counter from \"../counter/Counter\";\nimport ProductDetailsModel from '../product-details-model/ProductDetailsModel'\nimport { connect } from \"react-redux\";\nimport AlreadyBoughtProduct from \"modules/commons/components/already-bought-product/AlreadyBoughtProduct\";\nimport { graphQL } from \"api/axios\";\nimport { MARK_AS_PURCHASED_BY_GUEST, GIVE_GROUP_GIFT_GUEST, CASH_FUND_GIFT_GUEST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport { withRouter } from 'react-router-dom';\nimport { clearViewGuestPaginationInfo, setGuestViewProducts } from \"modules/guest-view/GuestViewAction\";\nimport { addProductToCart } from \"utils/commonFunction\";\nimport { M_A_STORE_NAME } from 'utils/constants';\n\nclass GiveMAGiftModel extends React.Component {\n\t// Variable declarations\n\tstate = {\n\t\tupdateModal: false,\n\t\tmodalTitle: '',\n\t\tquantity: 1,\n\t\tisBoughtThisAlready: false,\n\t\tname: null,\n\t\temail: null,\n\t\tstoreName: null,\n\t\torderNumber: null,\n\t\tgiftMessage: null,\n\t\tamount: \"0.00\",\n\t\terrors: {}\n\t}\n\n\tmodalTitleContent = \"\"\n\n\tEMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\n\tcomponentDidMount = () => {\n\t\tthis.setModalData()\n\t}\n\n\tincrementQuantity = () => {\n\t\tif (this.state.quantity < this.props.data.quantityStatus.still_needed)\n\t\t\tthis.setState(() => ({\n\t\t\t\tquantity: this.state.quantity + 1\n\t\t\t}))\n\t}\n\n\tdecrementQuantity = () => {\n\t\tif (this.state.quantity > 1) {\n\t\t\tthis.setState(() => ({\n\t\t\t\tquantity: this.state.quantity - 1\n\t\t\t}))\n\t\t}\n\t}\n\n\tiBoughtThisAlready = () => {\n\t\tthis.setState(() => ({\n\t\t\tisBoughtThisAlready: true,\n\t\t\tmodalTitle: 'I Bought This Already',\n\t\t}))\n\t}\n\n\tnameChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\tname: ev.target.value\n\t\t})\n\t}\n\n\temailChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\temail: ev.target.value\n\t\t})\n\t}\n\n\tstoreNameChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\tstoreName: ev.target.value\n\t\t})\n\t}\n\n\torderNumberChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\torderNumber: ev.target.value\n\t\t})\n\t}\n\n\tgiftMessageChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\tgiftMessage: ev.target.value\n\t\t})\n\t}\n\n\tamountChangeHandler = (ev) => {\n\t\tthis.onFocusCashFundHandler('amount')\n\t\tif (ev.target.value.length > 0) {\n\t\t\tconst newPrice = Number(ev.target.value);\n\t\t\tconst hasDecimal = (ev.target.value.split('.').length === 2 ? ev.target.value.split('.')[1].length <= 2 : true)\n\t\t\tif ((newPrice >= 0) && hasDecimal) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tamount: ev.target.value\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tamount: ''\n\t\t\t})\n\t\t}\n\t}\n\n\tvalidBoughtThisAlreadyData = () => {\n\t\tlet valid = true\n\t\tlet errors = {}\n\t\t// validate fields\n\t\tif (this.props.productBoughtAlreadyInfo.storeName.length <= 0) {\n\t\t\terrors['storeName'] = \"Store Name is required field\"\n\t\t\tvalid = false\n\t\t}\n\n\t\tif (this.props.productBoughtAlreadyInfo.name.length <= 0) {\n\t\t\terrors['name'] = \"Name is required field\"\n\t\t\tvalid = false\n\t\t}\n\n\t\tif (this.props.productBoughtAlreadyInfo.email.length <= 0) {\n\t\t\terrors['email'] = \"Email address is required field\"\n\t\t\tvalid = false\n\t\t} else {\n\t\t\tif (!this.props.productBoughtAlreadyInfo.email.match(this.EMAIL_RE)) {\n\t\t\t\terrors['email'] = \"Invalid Email address\"\n\t\t\t\tvalid = false\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\terrors: errors\n\t\t})\n\n\t\treturn valid\n\t}\n\n\tonFocusBoughtThisAlreadyHandler = (fieldName) => {\n\t\tlet errors = { ...this.state.errors }\n\t\t// Remove the errors while typing\n\t\tif (this.state.errors.email && fieldName === 'email') {\n\t\t\tdelete errors.email\n\t\t}\n\t\tif (this.state.errors.name && fieldName === 'name') {\n\t\t\tdelete errors.email\n\t\t}\n\t\tif (this.state.errors.storeName && fieldName === 'storeName') {\n\t\t\tdelete errors.storeName\n\t\t}\n\t\tthis.setState({\n\t\t\terrors: errors\n\t\t})\n\t}\n\n\tvalidCashFundData = () => {\n\t\tlet valid = true\n\t\tlet errors = {}\n\t\t// validate fields\n\t\tif (Number(this.state.amount) === 0) {\n\t\t\terrors['amount'] = \"Amount can't be 0\"\n\t\t\tvalid = false\n\t\t}\n\t\telse if (Number(this.state.amount) > this.props.data.item.price) {\n\t\t\terrors['amount'] = \"Amount can't be greater than required amount\"\n\t\t\tvalid = false\n\t\t}\n\n\t\tthis.setState({\n\t\t\terrors: errors\n\t\t})\n\n\t\treturn valid\n\t}\n\n\tonFocusCashFundHandler = (fieldName) => {\n\t\tlet errors = { ...this.state.errors }\n\t\t// Remove the errors while typing\n\t\tif (this.state.errors.amount && fieldName === 'amount') {\n\t\t\tdelete errors.amount\n\t\t}\n\t\tthis.setState({\n\t\t\terrors: errors\n\t\t})\n\t}\n\n\tmodalCloseHandler = () => {\n\t\tthis.setState({\n\t\t\terrors: {}\n\t\t})\n\t\tthis.props.close()\n\t}\n\n\taddProductToCartHandler = (quantity, id) => {\n\t\t// For Ref\n\t\t// ('/cart/add.js', {\n\t\t//   items: [\n\t\t//     {\n\t\t//       quantity: 1,\n\t\t//       id: 31643811020880,\n\t\t//     }\n\t\t//   ]\n\t\t// });\n\t\tlet data = {\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tquantity: quantity,\n\t\t\t\t\t// id: id ? Number(id) : 4777708191824,\n          id: id\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\n\t\t// This function return a promise with object that container response status\n\t\taddProductToCart(data).then(res => {\n      if (res && res.status !== 200){\n        toast.error(res.description ? res.description : \"Some error occurred while adding product to cart\");\n      } else if (res && res.status === 200){\n        toast.success(\"Product added to cart successfully.\")\n        this.props.close()\n      } else {\n        toast.error(\"Some unexpected error has occurred\");\n      }\n    });\n\t}\n\n\tsubmitDataHandler = async () => {\n\t\t// Todo: API calls\n\t\t// For Bought this gift already\n\t\tif (this.state.isBoughtThisAlready) {\n\t\t\t// Vaidating data\n\t\t\tif (!this.validBoughtThisAlreadyData()) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tlet data = {\n\t\t\t\tquery: MARK_AS_PURCHASED_BY_GUEST,\n\t\t\t\tvariables: {\n\t\t\t\t\tregistryUrlSlug: this.props.stateRegistryInfo.urlSlug,\n\t\t\t\t\tregistryItemId: this.props.data.id,\n\t\t\t\t\tisPurchased: true,\n\t\t\t\t\tstoreName: this.props.productBoughtAlreadyInfo.storeName,\n\t\t\t\t\tpurchasedQuantity: this.props.productBoughtAlreadyInfo.quantity,\n\t\t\t\t\t// contributionAmount: null,\n\t\t\t\t\tgiftMessage: this.props.productBoughtAlreadyInfo.giftMessage,\n\t\t\t\t\torderNumber: this.props.productBoughtAlreadyInfo.orderNumber,\n\t\t\t\t\tname: this.props.productBoughtAlreadyInfo.name,\n\t\t\t\t\temail: this.props.productBoughtAlreadyInfo.email\n\t\t\t\t},\n\t\t\t}\n\t\t\tawait graphQL(data).then(async res => {\n\t\t\t\tif (res.data.errors || res.data.error) {\n\t\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\t\tconsole.log('Something went wrong-->', res.data.errors)\n\t\t\t\t\ttoast.error((\n\t\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t\t))\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Getting Update Product\n\t\t\t\t\tawait this.props.dispatch(clearViewGuestPaginationInfo())\n\t\t\t\t\tawait this.props.updateGuestViewProduct(this.props.match.params.registrySlug, this.props.stateAddedProducts.length, true)\n\t\t\t\t\ttoast.success((\n\t\t\t\t\t\t<p><b>{this.props.data.title}</b> Purchased!</p>\n\t\t\t\t\t))\n\t\t\t\t\tthis.modalCloseHandler()\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\tconsole.log('Something went wrong-->', err)\n\t\t\t\ttoast.error((\n\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t))\n\t\t\t})\n\t\t}\n\t\t// For Group Gift\n\t\telse if (this.props.isGroupGift && !this.props.data.item.isCashFund) {\n\t\t\tif (!this.validCashFundData()) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tlet data = {\n\t\t\t\tquery: GIVE_GROUP_GIFT_GUEST,\n\t\t\t\tvariables: {\n\t\t\t\t\tregistryId: this.props.stateRegistryInfo.id,\n\t\t\t\t\tregistryItemId: this.props.data.id,\n\t\t\t\t\tcontributionAmount: Number(this.state.amount)\n\t\t\t\t},\n\t\t\t}\n\t\t\tawait graphQL(data).then(async res => {\n\t\t\t\tif (res.data.errors || res.data.error) {\n\t\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\t\tconsole.log('Something went wrong-->', res.data.errors)\n\t\t\t\t\ttoast.error((\n\t\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t\t))\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Getting Update Product\n\t\t\t\t\tawait this.props.dispatch(clearViewGuestPaginationInfo())\n\t\t\t\t\tawait this.props.updateGuestViewProduct(this.props.match.params.registrySlug, this.props.stateAddedProducts.length, true)\n\t\t\t\t\tthis.addProductToCartHandler(1, res.data.data.giveGroupGiftMa.variantId)\n\t\t\t\t\ttoast.success((\n\t\t\t\t\t\t<p><b>{this.props.data.title}</b> added to Cart!</p>\n\t\t\t\t\t))\n\t\t\t\t\t// this.modalCloseHandler()\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\tconsole.log('Something went wrong-->', err)\n\t\t\t\ttoast.error((\n\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t))\n\t\t\t})\n\t\t}\n\t\t// For Cash Fund\n\t\telse if (this.props.data.item.isCashFund && this.props.isGroupGift) {\n\t\t\tif (!this.validCashFundData()) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tlet data = {\n\t\t\t\tquery: CASH_FUND_GIFT_GUEST,\n\t\t\t\tvariables: {\n\t\t\t\t\tregistryId: this.props.stateRegistryInfo.id,\n\t\t\t\t\tregistryItemId: this.props.data.id,\n\t\t\t\t\tcontributionAmount: Number(this.state.amount)\n\t\t\t\t},\n\t\t\t}\n\t\t\tawait graphQL(data).then(async res => {\n\t\t\t\tif (res.data.errors || res.data.error) {\n\t\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\t\tconsole.log('Something went wrong-->', res.data.errors)\n\t\t\t\t\ttoast.error((\n\t\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t\t))\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Getting Update Product\n\t\t\t\t\tawait this.props.dispatch(clearViewGuestPaginationInfo())\n\t\t\t\t\tawait this.props.updateGuestViewProduct(this.props.match.params.registrySlug, this.props.stateAddedProducts.length, true)\n\t\t\t\t\tthis.addProductToCartHandler(1, res.data.data.cashFundGift.variantId)\n\t\t\t\t\ttoast.success((\n\t\t\t\t\t\t<p><b>{this.props.data.title}</b> added to Cart!</p>\n\t\t\t\t\t))\n\t\t\t\t\t// this.modalCloseHandler()\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\tconsole.log('Something went wrong-->', err)\n\t\t\t\ttoast.error((\n\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t))\n\t\t\t})\n\t\t}\n\t\t// If M-A product: Adding to cart\n\t\telse if (this.props.data.item.store.storeName === M_A_STORE_NAME &&\n\t\t\t!this.props.isGroupGift &&\n\t\t\t!this.props.isCashAcceptedOnly) {\n\t\t\tthis.addProductToCartHandler(this.state.quantity, this.props.data.item.shopifyItemVariantId)\n\t\t}\n\t}\n\n\tsetModalData = () => {\n\t\tthis.clearModalData()\n\t\tthis.setState({\n\t\t\tmodalTitle: this.props.title\n\t\t})\n\t}\n\n\tclearModalData = () => {\n\t\tthis.state.modalTitle = \"\"\n\t\tthis.modalBody = \"\"\n\t\tthis.modalTitleContent = \"\"\n\t\tthis.modalFooterButtons = \"\"\n\t}\n\n\tcontributeRestHandler = (data) => {\n\t\tlet contributeAmount = data.groupGift ? data.item.price - data.groupGift.amountReceived : data.item.price\n\t\tthis.setState({\n\t\t\tamount: contributeAmount\n\t\t})\n\t}\n\n\trender() {\n\t\t// Body for modal\n\t\tlet modalBody = (\n\t\t\t<>\n\t\t\t\t{/* Give M+A Gift Model Body */}\n\t\t\t\t{!this.state.isBoughtThisAlready ?\n\t\t\t\t\t<div className=\"row add-gift-another-store\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className=\"col-5 py-4 add-gift-image-select\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"mr-3\">\n\t\t\t\t\t\t\t\t\t\t\t<ProductDetailsModel data={this.props.data} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{!this.props.isGroupGift ?\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-7 mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-body font-medium\">Buy this gift for {this.props.stateRegistryInfo.user.firstName} {this.props.stateRegistryInfo.user.partnerUser ? 'and' + this.props.stateRegistryInfo.user.partnerUser.firstName : ''}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm mt-1\">We’ll keep the gift available in the registry until you checkout of the cart{this.props.isCashAcceptedOnly ? \". This gift will be shipped to registrant at their convenience.\" : ''}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcounter={this.state.quantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tincrementHandler={this.incrementQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecrementHandler={this.decrementQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t// For group gift\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-7 mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-body font-medium\">How much do you want to contribute?</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.stateRegistryInfo.user.firstName} {this.props.stateRegistryInfo.user.partnerUser ? 'and' + this.props.stateRegistryInfo.user.partnerUser.firstName : ''} will be able to buy the gift themselves once they receive the funds.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.props.data.isGroupGift ?\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.data.item.hideTotal ? null :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4 give-gift-model\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium received-amount\">Received ${this.props.data.groupGift ? this.props.data.groupGift.amountReceived : 0} </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm total-amount\"> of ${this.props.data.item.price}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-background\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-progress mw-100\" style={{ width: `${this.props.data.groupGift ? this.props.data.groupGift.amountReceived / this.props.data.item.price * 100 : 0}%` }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mt-4 ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"m-a-input-container mr-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Amount</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"price-input mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={[\"w-100 pl-2 pr-1 py-1 text-body pl-5\", this.state.errors.amount ? \"already-bought-input-error\" : \"\"].join(\" \")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.amount}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => this.amountChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.errors.amount ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm already-bought-input-error-text\">{this.state.errors.amount}</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*<span className=\"price-input text-body\">$</span>*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.data.item.hideTotal ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull : <p className=\"mt-3 text-sm give-gift-text-link font-medium\" onClick={() => this.contributeRestHandler(this.props.data)}>Contribute the rest</p>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t: <AlreadyBoughtProduct\n\t\t\t\t\t\tdata={this.props.data}\n\t\t\t\t\t\tvalidBoughtThisAlreadyData={this.validBoughtThisAlreadyData}\n\t\t\t\t\t\tonFocusHandler={this.onFocusBoughtThisAlreadyHandler}\n\t\t\t\t\t\tfieldErrors={this.state.errors} />}\n\t\t\t</>\n\t\t)\n\n\t\t// Modal buttons\n\t\tlet modalFooterButtons = (\n\t\t\t<>\n\t\t\t\t{!this.state.isBoughtThisAlready || this.props.isGroupGift ?\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tclassName=\"MA-gift-footer-btn px-3 py-1 font-medium text-body\"\n\t\t\t\t\t\tonClick={() => this.iBoughtThisAlready()}\n\t\t\t\t\t>I Bought This Already</Button> : null}\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tclassName=\"MA-gift-footer-btn px-4 py-1 font-medium text-body\"\n\t\t\t\t\tdisabled={this.props.isGroupGift && Number(this.state.amount) === 0 ? true : false}\n\t\t\t\t\tonClick={() => this.submitDataHandler()}\n\t\t\t\t>{!this.state.isBoughtThisAlready ? this.props.isGroupGift ? 'Contribute' : 'Add To Cart' : 'Save & Close'}</Button>\n\t\t\t</>\n\t\t)\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.props.show}\n\t\t\t\t\tupdateModal={this.state.updateModal}\n\t\t\t\t\ttitle={this.state.modalTitle}\n\t\t\t\t\ttitleContent={this.modalTitleContent}\n\t\t\t\t\tfooter={modalFooterButtons}\n\t\t\t\t\tcloseModal={this.props.close}>\n\t\t\t\t\t{modalBody}\n\t\t\t\t</Modal>\n\t\t\t</>\n\t\t)\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\tstateRegistryInfo: state.guestView.info,\n\t\tproductBoughtAlreadyInfo: state.guestView.alreadyBoughtProduct,\n\t\tstateAddedProducts: state.guestView.product\n\t}\n}\n\nexport default connect(\n\tmapStateToProps\n)(withRouter(GiveMAGiftModel));","import React, { useState } from 'react'\nimport \"./GuestViewCard.scss\";\nimport MoreOption from \"../../commons/components/more-option/MoreOption\";\nimport {\n\tsortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../../commons/components/modal-component/ModalComponent\";\nimport CardItem from \"../../commons/components/card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../../commons/components/button-component/ButtonComponent\";\nimport GiftStatusPill from \"../../commons/components/gift-status-pill/GiftStatusPill\";\nimport PurchasedModal from \"modules/commons/components/purchased-modal/PurchasedModal\";\nimport GiveMAGiftModel from \"modules/commons/components/give-MA-gift-model/GiveMAGiftModel\";\nimport { clearAlreadyBoughtProductInfo } from '../GuestViewAction';\nimport { M_A_STORE_NAME } from 'utils/constants';\n\n\nconst GuestViewCard = (props) => {\n\n\tconst dispatch = useDispatch();\n\tconst stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n\tconst [showMAGiftmodel, setMAGiftModel] = useState(false)\n\tconst [isGroupGift, setIsGroupGift] = useState(false)\n\tconst [isCashAcceptedOnly, setIsCashAcceptedOnly] = useState(false)\n\tconst [modelTitle, setModelTitle] = useState('')\n\n\tconst modalCloseHandler = () => {\n\t\tdispatch(clearAlreadyBoughtProductInfo())\n\t\tsetMAGiftModel(false)\n\t}\n\n\t// Handle drag\n\t// TODO: Change Draggable icon\n\tconst DragHandle = sortableHandle(() => <i\n\t\tclassName={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n\t\t<div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n\t\t\t<p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n\t\t</div>\n\t</i>);\n\n\tconst openModelHandler = () => {\n\t\t// TODO: Conditions for different data model\n\t\t// For ma product which is not Grop Gift\n\t\tif (props.data.item.store.storeName === M_A_STORE_NAME && !props.data.isGroupGift) {\n\t\t\tsetMAGiftModel(true)\n\t\t}\n\t\t// For Group Gift\n\t\telse if (props.data.isGroupGift) {\n\t\t\tsetIsGroupGift(true)\n\t\t\tsetMAGiftModel(true)\n\t\t}\n\t\telse if (props.data.isCashAcceptedOnly) {\n\t\t\tsetIsCashAcceptedOnly(true)\n\t\t\tsetMAGiftModel(true)\n\t\t}\n\t\tsetModelTitle('Give This Gift')\n\t\t// modelTitle = 'Give This Gift'\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{!props.data.isPurchased ?\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"added-card py-5 pr-2\">\n\t\t\t\t\t\t<div className=\"row pl-3\">\n\t\t\t\t\t\t\t<div className=\"col-2 guest-card-image\">\n\t\t\t\t\t\t\t\t{props.data?.item.imageUrl ?\n\t\t\t\t\t\t\t\t\t<img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.title} />\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<div className=\"added-card-no-product-image\" />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{props.data.mostWanted ?\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center guest-must-have added-gift-must-have-btn px-1 added-gift-must-have-active\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"icon mr-1 d-block heart-fill\" />\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t: <></>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t{/* <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div> */}\n\t\t\t\t\t\t\t\t<h2>{props.data.title}</h2>\n\t\t\t\t\t\t\t\t<div className=\"d-flex mt-2\">\n\t\t\t\t\t\t\t\t\t<div className=\"\">${props.data.item.price}</div>\n\t\t\t\t\t\t\t\t\t{/*/!* TODO: Add Strikeout price dynamic *!/*/}\n\t\t\t\t\t\t\t\t\t{/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n\t\t\t\t\t\t\t\t\t{/* {props.data.quantity > 1 ?\n\t\t\t\t\t\t\t\t<div className=\"ml-4 text-body d-flex\">\n\t\t\t\t\t\t\t\t\tQty:{props.data.quantity}\n\t\t\t\t\t\t\t\t\t<div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n\t\t\t\t\t\t\t\t</div> : <></>} */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"d-flex mt-3\">\n\t\t\t\t\t\t\t\t\t{props.data.quantityStatus.purchased_quantity ?\n\t\t\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"purchased\" text={props.data.quantityStatus.purchased_quantity + \" Purchased\"} />\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t{props.data.quantityStatus.reserved_quantity ?\n\t\t\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"reserved\" text={props.data.quantityStatus.reserved_quantity + \"Reserved\"} />\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t{props.data.quantityStatus.still_needed ?\n\t\t\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"default\" text={`${props.data.quantityStatus.still_needed} ${props.data.quantityStatus.purchased_quantity === 0 ? \" Requested\" : \" Still Needed\"}`} />\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t{props.data.isGroupGift ?\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"guest-toggle-pills px-1 mr-3 d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"guest-icon-active mr-1\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm guest-icon-text\">Group Gift</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{props.data.item.hideTotal ? null :\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium received-amount\">Received ${props.data.groupGift ? props.data.groupGift.amountReceived : 0} </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm total-amount\">of ${props.data.item.price}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-background\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-progress mw-100\" style={{ width: `${props.data.groupGift ? props.data.groupGift.amountReceived / props.data.item.price * 100 : 0}%` }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={[\n\t\t\t\t\t\t\t\tprops.draggable ? \"col-4\" : \"col-3\",\n\t\t\t\t\t\t\t].join(\" \")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n\t\t\t\t\t\t\t\t\t<Button variant=\"secondary\" className=\"give-this-gift-btn font-medium text-body py-1 px-3 mr-3\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => openModelHandler()}\n\t\t\t\t\t\t\t\t\t>Give This Gift</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* TODO: change category */}\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t{props.data.registryCategories.length > 1 ?\n\t\t\t\t\t\t\t\tprops.data.registryCategories.map(category =>\n\t\t\t\t\t\t\t\t\tprops.data.registryCategories[0].id !== category.id ?\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-body font-medium p-6 added-card-other-category\">\n\t\t\t\t\t\t\t\t\t\t\tYou have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabIndex=\"true\">{props.data.title}</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</> :\n\t\t\t\t<div className=\"guest-purchased-card py-3 pl-6\">\n\t\t\t\t\t<p className=\"guest-purchased-card-title font-medium\">{props.data.title}</p>\n\t\t\t\t\t{props.data.quantityStatus.purchased_quantity ?\n\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"purchased\" text={props.data.quantityStatus.purchased_quantity + \" Purchased\"} />\n\t\t\t\t\t\t: null}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{showMAGiftmodel ?\n\t\t\t\t<GiveMAGiftModel\n\t\t\t\t\tshow={showMAGiftmodel}\n\t\t\t\t\tclose={modalCloseHandler}\n\t\t\t\t\ttitle={modelTitle}\n\t\t\t\t\tdata={props.data}\n\t\t\t\t\tisGroupGift={isGroupGift}\n\t\t\t\t\tisCashAcceptedOnly={isCashAcceptedOnly}\n\t\t\t\t\tupdateGuestViewProduct={props.updateGuestViewProduct}\n\t\t\t\t/> : null}\n\t\t</>\n\t)\n}\n\nexport default GuestViewCard","import React, { useEffect, useState } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition, getCategories } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\nimport ViewFilter from \"modules/view-registry/components/view-filter/ViewFilter\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport { FILTERS } from \"utils/constants\"\nimport { MEDIA_URL_PREFIX } from \"utils/constants\";\nimport { graphQL } from 'api/axios';\nimport { GET_PRODUCTS } from 'api/queries';\nimport GuestViewCard from \"modules/guest-view/components/GuestViewCard\";\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const [localAddedProductState, handleFilterProductChange] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  // Updating product count in filter categories\n  const updateFilterList = (registryItemsAnalysisCount, categoryData) => {\n\n    let newFilterList = [\n      {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: registryItemsAnalysisCount.totalAvailable\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: registryItemsAnalysisCount.totalReserved\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: registryItemsAnalysisCount.totalPurchased\n          }\n        ]\n      },\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        // limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          let id = category.category.id\n          let count = categoryData[id]\n          if (count > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          let id = category.category.id\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = categoryData[id]\n          return newCategory\n        })\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: registryItemsAnalysisCount.under50\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: registryItemsAnalysisCount.between50100\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: registryItemsAnalysisCount.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: registryItemsAnalysisCount.maStoreItems\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: registryItemsAnalysisCount.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  const getFiltersApplied = (stateFilterApplied, activeSortFilterState) => {\n    const childFilterArray = [...stateFilterApplied]\n    let filterApplied = {}\n    // For Gift Status\n    if (childFilterArray.includes(AVAILABLE)) {\n      filterApplied.isAvailable = true\n    }\n    if (childFilterArray.includes(RESERVED)) {\n      filterApplied.isReserved = true\n    }\n    if (childFilterArray.includes(PURCHASED)) {\n      filterApplied.isPurchased = true\n    }\n\n    // For Sort\n    if (activeSortFilterState.sortId === 2) {\n      filterApplied.sortBy = 'item__price'\n    } else if (activeSortFilterState.sortId === 3) {\n      filterApplied.sortBy = '-item__price'\n    }\n\n    // For Store\n    let store = []\n    if (childFilterArray.includes(MONICA_AND_ANDY)) {\n      store.push(MONICA_AND_ANDY)\n    }\n    if (childFilterArray.includes(ELSEWHERE)) {\n      store.push(ELSEWHERE)\n    }\n    if (store.length) {\n      filterApplied.store = store\n    }\n\n    let lessThanEqual = 0\n    let greaterThanEqual = 0\n    let hasPriceFilter = false\n    // For Price\n    if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_2) &&\n      childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 0\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_2)) {\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_3)) {\n      lessThanEqual = 49\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_2) &&\n      childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 50\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1)) {\n      lessThanEqual = 49\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_2)) {\n      greaterThanEqual = 50\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    if (hasPriceFilter) {\n      filterApplied.price_Lte = lessThanEqual\n      filterApplied.price_Gte = greaterThanEqual\n    }\n\n    let categories = []\n    // For categories\n    for (let cat of [...stateCategoriesInfo]) {\n      if (childFilterArray.includes(cat.category.id)) {\n        categories.push(cat.category.id)\n      }\n    }\n    if (categories.length) {\n      filterApplied.categories = categories\n    }\n\n    return filterApplied\n  }\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        isViewCard={true}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let itemsOldPosition = arrayMove([...stateViewRegistryProducts], oldIndex, oldIndex)\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    dispatch(setViewRegistryProducts(items))\n    updateViewRegistryPosition(stateRegistryInfo.id, items, itemsOldPosition, dispatch)\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedProductsByFilters = async (addedProducts, filterApplied) => {\n    let finalFilterProduct = []\n    let filtersApplied = getFiltersApplied(stateFilterApplied, activeSortFilterState)\n    let reqData = {\n      query: GET_PRODUCTS,\n      variables: {\n        registryId: stateRegistryInfo.id,\n        ...filtersApplied\n      }\n    }\n\n    await graphQL(reqData).then(res => {\n      if (res.data.data.registryItems) {\n        // Storing Product of GuestView\n        let responseData = [...res.data.data.registryItems.registryItems.edges].map(item => {\n          let newItemObj = { ...item.node }\n          delete newItemObj.registryitemImage;\n          if (item.node.registryitemImage.length > 0) {\n            newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n          }\n          return newItemObj;\n        })\n        let finalData = responseData.filter(product => product.registryCategories.length > 0)\n        updateFilterList({ ...res.data.data.registryItems.registryItemsAnalysisCount }, { ...res.data.data.registryItems.categoryData })\n\n        finalFilterProduct = finalData\n        return finalData\n      }\n    }).catch(err => {\n\n      if (err.response && err.response.data.errors) {\n        for (const error of err.response.data.errors) {\n          // TODO: Implement toast if necessary\n          console.log(error.message)\n        }\n      }\n    })\n    return finalFilterProduct\n  }\n\n  const getParentCategory = (id) => {\n    return [...stateCategoriesInfo].find((parentCategory) => parentCategory.subCategories.find((subCategory) => subCategory.id === id))\n  }\n\n  const getSortedFilteredProducts = async (addedProducts, activeSortFilterState, viewRegistryProducts, filterApplied, registryInfo) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    let newSortedProducts = null\n\n    if (filterApplied.length > 0) {\n      newSortedProducts = await getSortedProductsByFilters(addedProducts, filterApplied)\n    }\n    else {\n      newSortedProducts = [...addedProducts]\n    }\n\n    if (activeSortFilterState.sortId === 1) {\n      if (filterApplied.length > 0) {\n        sortedData = newSortedProducts\n      }\n      else if (registryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n      }\n      else {\n        sortedData = sortByMustHave([...newSortedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...newSortedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...newSortedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    // handleFilterProductChange(sortedProducts)\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n  }\n\n  const sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  //Clear filter state\n  const clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    dispatch(clearViewFilter())\n  }\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  useEffect(() => {\n    let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n    filteredSortProducts.then(product => {\n      handleFilterProductChange(product)\n    })\n  }, [stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo])\n\n  // updateFilterList(stateAddedProducts)\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <ViewFilter />\n          </div>\n          <div className=\"col\"></div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <SortFilterSection productCount={localAddedProductState.length} />\n            {/* Added Products */}\n            {!stateGuestViewRegistry ?\n              localAddedProductState.length > 0 ?\n                <div className=\"mt-5\">\n                  <SortableContainer onSortEnd={onSortEnd} helperClass=\"drag-add-card\" axis=\"y\" lockAxis=\"y\" useDragHandle>\n                    {localAddedProductState.map((card, index) =>\n                      <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1 || stateFilterApplied.length !== 0} />\n                    )}\n                  </SortableContainer>\n                </div> :\n                <div className=\"d-flex flex-column empty-filter mt-6 pb-8\">\n                  <div className=\"font-body empty-filter-title text-center mx-auto mt-10\">\n                    <p>We couldn’t find any gifts that matches your filters...</p>\n                    <p>Please try clearing ‘Filters’ to view gifts.</p>\n                  </div>\n                  <div className=\"mx-auto mt-3\">\n                    <Button\n                      variant=\"primary\"\n                      className=\"px-3 py-1 font-medium empty-filter-title text-body\"\n                      onClick={(ev) => clearFilterHandler(ev)}\n                    >\n                      Clear Filters\n                  </Button>\n                  </div>\n                </div> :\n              // Guest View Cards\n              localAddedProductState.length > 0 ?\n                localAddedProductState.map((card, index) =>\n                  <GuestViewCard\n                    data={card} key={\"addedCard\" + index}\n                  />) : null\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Toast.scss';\n\nconst Toast = () => {\n  const closeToastMessage = (parentId) => {\n    toast.dismiss(parentId);\n  }\n\n  return (\n    <ToastContainer\n      position=\"top-center\"\n      className=\"m-a-toast-container\"\n      toastClassName=\"m-a-toast\"\n      autoClose={4000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      draggable={false}\n      closeOnClick={false}\n      closeButton={<i className=\"icon-close m-a-toast-close\" onClick={(event) => closeToastMessage(event.target.parentElement.id)} />}\n    />\n  )\n}\n\nexport default Toast;","import React from \"react\";\nimport \"./TodoWidget.scss\";\nimport {connect} from \"react-redux\";\n\nclass TodoWidget extends React.Component {\n\n  performTodoAction = todo => {\n  //  Perform action related to to-do\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-todo-widget\">\n        {this.props.stateTodo.length > 0 ?\n          (\n            //  When there is To-do\n            <div className=\"baby-registry-todo-section\">\n              <button className=\"baby-steps-button d-flex align-items-center py-3 pl-4 pr-8\">\n                <i className=\"baby-steps-icon\"/>\n                <div className=\"ml-5\">\n                  <p className=\"text-body font-medium\">{this.props.stateTodo.length} Baby Steps</p>\n                  <p className=\"text-sm text-left\">to take next!</p>\n                </div>\n              </button>\n\n              <div className=\"baby-steps-todo-content p-2\">\n                {this.props.stateTodo.map(todo => (\n                  <div className=\"baby-step-todo d-flex justify-content-between py-2 align-items-center\">\n                    <p className=\"text-body mr-9\">{todo.text}</p>\n                    {/*TODO: Update below icon once updated*/}\n                    <button className=\"baby-step-action-btn p-2 icon-chevron-right float-right\" onClick={() => this.performTodoAction(todo)}/>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n          :\n          (\n            //  When there is no To-do\n            <div className=\"baby-registry-no-todo-section d-flex align-items-center py-4\">\n              <i className=\"no-todo-icon\"/>\n              <div className=\"ml-2\">\n                <p className=\"text-body font-medium\">Great job!</p>\n                <p className=\"text-sm\">More to come, soon.</p>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTodo: state.registry.todo\n})\n\nexport default connect(\n  mapStateToProps\n)(TodoWidget);","import React from \"react\";\nimport \"./Filters.scss\";\nimport {connect} from 'react-redux';\nimport CheckBox from \"../../../commons/components/check-box/CheckBox\";\nimport {setTrackGiftsFilters} from \"../../TrackGiftsAction\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport defaultData from \"data/ReducerDefaultData.json\"\n\nclass Filters extends React.Component {\n\n  filterChangeHandler = async filterId => {\n    let allUnselected = true\n    let newFilters = this.props.stateFilters.map(filter => {\n      let newFilter = {...filter}\n      if (newFilter.id === filterId) {\n        newFilter.selected = !newFilter.selected\n      }\n      if (newFilter.count > 0 && newFilter.selected) {\n        allUnselected = false\n      }\n      return newFilter\n    })\n\n    // Resetting filter to default when all filter are unselected\n    if (allUnselected){\n      newFilters = defaultData.trackGifts.filters\n    }\n\n    await this.props.dispatch(setTrackGiftsFilters(newFilters))\n    getTrackGiftsProduct(true, newFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n  }\n\n  render() {\n    return (\n      <div className=\"track-gifts-filters\">\n        <p className=\"text-sm\">Filters</p>\n        <div className=\"mt-3\">\n          {this.props.stateFilters.map(filter => (\n            filter.count > 0 ?\n              <CheckBox\n                display={filter.text}\n                count={filter.count}\n                checked={filter.selected ? \"checked\" : \"\"}\n                id={`trackGiftFilter-${filter.id}`}\n                className=\"mb-3\"\n                textClass=\"track-gifts-filter-text\"\n                changeHandler={() => this.filterChangeHandler(filter.id)}\n              />\n              :\n              null\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsSearch: state.trackGifts.search\n})\n\nexport default connect(\n  mapStateToProps\n)(Filters);","import React from \"react\";\nimport \"./ThankYouList.scss\"\n\nclass ThankYouList extends React.Component {\n  render() {\n    return (\n      <div className=\"track-gifts-thank-you-list p-4 mr-5\">\n        <img src=\"https://raw.githack.com/HetPatel-Aubergine/testCDNRepo/master/icons/file_heart.svg\" alt=\"Thank you list\"/>\n        <p className=\"mt-2 text-body font-medium\">Thank you list</p>\n        <p className=\"mt-1 text-sm track-gifts-thank-you-desc\">Let your gift-givers know that you are thankful to them.</p>\n        {/* TODO: Integrate API on Download Click */}\n        <a href=\"#\" className=\"mt-1 track-gifts-thank-you-link text-sm\">Download</a>\n      </div>\n    );\n  }\n}\n\nexport default ThankYouList;","import React from \"react\";\nimport ViewBy from \"../../components/view-by/ViewBy\";\nimport Filters from \"../../components/filters/Filters\";\nimport ThankYouList from \"../../components/thank-you-list/ThankYouList\";\n\nclass TrackGiftsSidebar extends React.Component {\n  render() {\n    return (\n      <>\n        <ViewBy/>\n        <div className=\"mt-4\">\n          <Filters/>\n        </div>\n        <div className=\"mt-4\">\n          <ThankYouList />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TrackGiftsSidebar;","import React from \"react\";\nimport \"./Search.scss\";\nimport {connect} from \"react-redux\";\nimport {setTrackGiftsSearch} from \"../../TrackGiftsAction\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\n\nclass Search extends React.Component {\n  inputRef = React.createRef()\n  inputContainer = React.createRef()\n\n  applySearch = () => {\n    let searchState = {...this.props.stateTrackGiftsSearch}\n    searchState.searched = true\n    getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n    this.props.dispatch(setTrackGiftsSearch(searchState))\n  }\n\n  searchInputChangeHandler = async () => {\n    if (this.inputRef.current && this.inputContainer.current) {\n      let searchInput = this.inputRef.current\n      if (searchInput.value.length > 0) {\n        if (!this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n          //Adding class to increase width\n          this.inputContainer.current.classList.add(\"track-gifts-search-container-focus\")\n        }\n      }\n\n      await this.props.dispatch(setTrackGiftsSearch({\n        searched: false,\n        searchText: searchInput.value\n      }))\n    }\n  }\n\n  searchInputFocusHandler = () => {\n    if (this.inputContainer.current) {\n      if (!this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n        //Adding class to increase width\n        this.inputContainer.current.classList.add(\"track-gifts-search-container-focus\")\n      }\n    }\n  }\n\n  searchInputBlurHandler = () => {\n    if (this.inputRef.current && this.inputContainer.current) {\n      let searchInput = this.inputRef.current\n      if (searchInput.value.length <= 0) {\n        if (this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n          //Removing class to decrease width\n          this.inputContainer.current.classList.remove(\"track-gifts-search-container-focus\")\n        }\n      }\n\n      if (searchInput.value.length >= 3 && !this.props.stateTrackGiftsSearch.searched) {\n        this.applySearch()\n      }\n    }\n  }\n\n  clearClickHandler = async ev => {\n    ev.preventDefault()\n    await this.props.dispatch(setTrackGiftsSearch({\n      searched: false,\n      searchText: \"\"\n    }))\n    if (this.inputRef.current) {\n      this.inputRef.current.focus()\n    }\n\n    this.applySearch()\n  }\n\n  searchClickHandler = async ev => {\n    ev.preventDefault()\n    this.applySearch()\n  }\n\n  render() {\n    return (\n      <div className=\"ml-auto track-gifts-search-container\" ref={this.inputContainer}>\n        <input\n          type=\"text\"\n          ref={this.inputRef}\n          placeholder=\"Search\"\n          value={this.props.stateTrackGiftsSearch.searchText}\n          onChange={this.searchInputChangeHandler}\n          onFocus={this.searchInputFocusHandler}\n          onBlur={this.searchInputBlurHandler}\n          className={[\"m-a-unset-line-height track-gifts-search-input pl-6 text-body py-1 w-100 mw-100\", this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ? \"pr-10\": \"pr-12\"].join(\" \")}\n        />\n        <i className=\"icon-search track-gifts-search-icon\"/>\n        {!this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ?\n          <a className=\"track-gifts-search-input-link text-body\" href=\"#\"\n             onClick={(ev) => this.searchClickHandler(ev)}>Search</a>\n          : null}\n        {this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ?\n          <a className=\"track-gifts-search-input-link text-body\" href=\"#\"\n             onClick={(ev) => this.clearClickHandler(ev)}>Clear</a>\n          : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsSearch: state.trackGifts.search,\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info\n})\n\nexport default connect(\n  mapStateToProps\n)(Search);","import React from \"react\";\nimport \"./AddGift.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {connect} from 'react-redux'\nimport {TRACK_GIFTS_ADD_GIFT} from \"../../../../api/mutations\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst EMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\nclass AddGift extends React.Component {\n  state = {\n    show: false,\n    giftName: \"\",\n    storeName: \"\",\n    orderNumber: \"\",\n    userName: \"\",\n    userEmail: \"\",\n    errors: {}\n  }\n\n  openAddGiftModal = () => {\n\n    this.setState({\n      show: true,\n      giftName: \"\",\n      storeName: \"\",\n      orderNumber: \"\",\n      userName: \"\",\n      userEmail: \"\",\n      errors: {}\n    })\n  }\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  validData = () => {\n    let valid = true\n    let errors = {}\n\n    if (this.state.giftName.length <= 0) {\n      errors['giftName'] = \"Gift Name is required field\"\n      valid = false\n    }\n\n    if (this.state.userName.length <= 0) {\n      errors['userName'] = \"Name is required field\"\n      valid = false\n    }\n\n    if (this.state.userEmail.length <= 0) {\n      errors['userEmail'] = \"Email address is required field\"\n      valid = false\n    } else {\n      if (!this.state.userEmail.match(EMAIL_RE)) {\n        errors['userEmail'] = \"Invalid Email address\"\n        valid = false\n      }\n    }\n\n    this.setState({\n      errors: errors\n    })\n\n    return valid\n  }\n\n  addGiftClickHandler = () => {\n    if (!this.validData()) {\n      return false\n    }\n\n    let reqData = {\n      query: TRACK_GIFTS_ADD_GIFT,\n      variables: {\n        registryId: this.props.stateRegistryInfo?.id,\n        gifts: [{\n          guestName: this.state.userName ? this.state.userName : null,\n          guestEmail: this.state.userEmail ? this.state.userEmail : null,\n          items: [{\n            title: this.state.giftName ? this.state.giftName : null,\n            quantity: 1,\n            price: 0.0\n          }]\n        }]\n      }\n    }\n\n    if (this.state.storeName) {\n      reqData.variables.gifts['storeName'] = this.state.storeName\n    }\n\n    if (this.state.orderNumber) {\n      reqData.variables.gifts['orderNo'] = this.state.orderNumber\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data.addGift) {\n        toast.success(<p><b>{this.state.giftName} gift added.</b></p>)\n        getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n        this.modalCloseHandler()\n      } else if (res.data.errors) {\n        toast.error(\"Some error occurred.\")\n        console.error({...res.data.errors})\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\")\n      console.error(err.response)\n    })\n\n  }\n\n  // Input Change Handlers\n  giftNameChangeHandler = ev => {\n    if (this.state.errors.giftName) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.giftName\n      this.setState({\n        errors: newErrorState\n      })\n    }\n\n    this.setState({\n      giftName: ev.target.value\n    })\n  }\n\n  storeNameChangeHandler = ev => {\n    this.setState({\n      storeName: ev.target.value\n    })\n  }\n\n  orderNumberChangeHandler = ev => {\n    this.setState({\n      orderNumber: ev.target.value\n    })\n  }\n\n  userNameChangeHandler = ev => {\n    if (this.state.errors.userName) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.userName\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    this.setState({\n      userName: ev.target.value\n    })\n  }\n\n  userEmailChangeHandler = ev => {\n    if (this.state.errors.userEmail) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.userEmail\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    this.setState({\n      userEmail: ev.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"track-gifts-add-gift-container\">\n\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 text-body font-medium track-gifts-add-gift-button\"\n          onClick={this.openAddGiftModal}\n        >Add Gift</Button>\n\n        <Modal\n          show={this.state.show}\n          title=\"Add Gift\"\n          size=\"md\"\n          footer={\n            <Button\n              variant=\"primary\"\n              onClick={this.addGiftClickHandler}\n              className=\"px-5 py-1 text-body font-medium track-gifts-add-gift-button\"\n            >Add & Close</Button>\n          }\n          closeModal={this.modalCloseHandler}>\n          <div className=\"track-gifts-add-gift-form\">\n\n            {/* Gift Name */}\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Gift\n                    Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"gift-name\"\n                    value={this.state.giftName}\n                    onChange={(ev) => this.giftNameChangeHandler(ev)}\n                    placeholder=\"Eg. Coming Home Blanket by Monica+Andy\"\n                    className={[\"m-a-unset-line-height track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.giftName ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}/>\n                  {this.state.errors.giftName ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.giftName}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row mt-2\">\n              {/* Store Name */}\n              <div className=\"col-6\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label className=\"track-gifts-add-gift-input-label text-sm font-medium mb-1\">Store Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"store-name\"\n                    value={this.state.storeName}\n                    onChange={(ev) => this.storeNameChangeHandler(ev)}\n                    className=\"m-a-unset-line-height track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\"\n                    placeholder=\"Eg. Target\"/>\n                </div>\n              </div>\n\n              {/* Order Number */}\n              <div className=\"col-6\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label className=\"track-gifts-add-gift-input-label text-sm font-medium mb-1\">Order number</label>\n                  <input\n                    type=\"text\"\n                    name=\"order-number\"\n                    value={this.state.orderNumber}\n                    onChange={(ev) => this.orderNumberChangeHandler(ev)}\n                    className=\"m-a-unset-line-height track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\"\n                    placeholder=\"00012345\"/>\n                </div>\n              </div>\n            </div>\n\n            {/* User Info */}\n            <div className=\"row mt-5\">\n              <div className=\"col\">\n                <p className=\"text-body font-medium\">Gifted By</p>\n              </div>\n            </div>\n\n            {/* User Name */}\n            <div className=\"row mt-2\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"user-name\"\n                    placeholder=\"John Doe\"\n                    value={this.state.userName}\n                    onChange={(ev) => this.userNameChangeHandler(ev)}\n                    className={[\"m-a-unset-line-height track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.userName ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}\n                  />\n                  {this.state.errors.userName ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.userName}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n            {/* User email */}\n            <div className=\"row mt-2 mb-1\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Email\n                    address</label>\n                  <input\n                    type=\"text\"\n                    name=\"user-email\"\n                    placeholder=\"johndoe@email.com\"\n                    value={this.state.userEmail}\n                    onChange={(ev) => this.userEmailChangeHandler(ev)}\n                    className={[\"m-a-unset-line-height track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.userEmail ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}\n                  />\n                  {this.state.errors.userEmail ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.userEmail}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsSearch: state.trackGifts.search\n})\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from \"react\";\nimport TrackGiftsSidebar from \"./containers/track-gifts-sidebar/TrackGiftsSidebar\";\nimport TrackGiftsContent from \"./containers/track-gifts-content/TrackGiftsContent\";\nimport Search from \"./components/search/Search\";\nimport AddGift from \"./components/add-gift/AddGift\";\n\nclass TrackGifts extends React.Component {\n  render() {\n    return (\n      <div className=\"container mt-8\">\n        <div className=\"row\">\n\n          {/* Sidebar content */}\n          <div className=\"col-2\">\n            <div className=\"row mb-5\">\n              <div className=\"col\">\n                <h4 className=\"font-medium\">View</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <TrackGiftsSidebar/>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"col-10\">\n            <div className=\"row mb-5\">\n              <div className=\"col\">\n                <h4 className=\"font-medium\">Gifts</h4>\n              </div>\n              <div className=\"col-5\">\n                <Search/>\n              </div>\n              <div className=\"col-2\">\n                <AddGift/>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <TrackGiftsContent/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrackGifts;","import React from \"react\";\nimport \"./RedirectionScreen.scss\";\n\nconst RedirectionScreen = props => {\n  return (\n    <div className=\"track-gifts-redirection-screen text-center pt-12 mx-auto\">\n      <h1 className=\"track-gifts-redirection-screen-title\">{`You’re on your way to ${props.store}`}</h1>\n      <h4 className=\"mt-1 track-gifts-redirection-screen-desc\">Don’t forget to come back to Monica+Andy to tell us if you bought this gift. We’ll make sure it doesn’t get bought twice.</h4>\n    </div>\n  )\n}\n\nexport default RedirectionScreen;","import React from 'react';\nimport {NavLink, Switch, Route, Redirect} from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport {useTranslation} from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport {useSelector} from 'react-redux';\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport TodoWidget from \"./component/todo-widget/TodoWidget\";\nimport TrackGifts from \"../track-gifts/TrackGifts\";\nimport RedirectionScreen from \"../track-gifts/components/redirection-screen/RedirectionScreen\";\n\nconst RegistryHero = (props) => {\n\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const stateTrackGiftsRedirectionInfo = useSelector(state => state.trackGifts.redirectionInfo)\n  const {t} = useTranslation();\n  const registryData = RegistryHeroData\n\n  if (!stateRegistryInfo.id && stateRegistryInfo.notFound) {\n    return <Redirect to={route.ONBOARDING.HOME}/>\n  }\n\n  return (\n    <>{stateTrackGiftsRedirectionInfo.store ?\n      <RedirectionScreen store={stateTrackGiftsRedirectionInfo.store}/>\n      :\n      <>\n        {!stateGuestViewRegistry ?\n          <div className=\"registry-hero\">\n            <div className=\"container pt-6\">\n              <div className=\"row\">\n                <div className=\"col d-flex justify-content-between align-items-start\">\n                  <div className=\"d-flex align-items-end\">\n                    <h1>{stateRegistryInfo.name}</h1>\n                    <span className=\"text-sm ml-1\">{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</span>\n                  </div>\n                  <div>\n                    <TodoWidget/>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex registry-hero-navigation-links\">\n                    <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n\n                    <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n\n                    <NavLink to={route.TRACK_GIFTS.HOME} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> : null}\n\n        {/* Registry Nav Routes */}\n        {stateRegistryInfo.id ?\n          <Switch>\n            <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME}/></Route>\n            <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry}/>\n            <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry}/>\n            <Route exact path={route.TRACK_GIFTS.HOME} component={TrackGifts}/>\n          </Switch>\n\n          : null}\n      </>\n    }\n\n\n      <Toast/>\n    </>\n  )\n}\n\nexport default RegistryHero;","import React from \"react\";\nimport \"./Option.scss\";\n\nconst Option = (props) => {\n  return (\n    <div\n      className={[\"px-4 py-3 baby-registry-question-option\", props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}>{props.children}</div>\n  );\n}\n\nexport default Option;","import React from \"react\";\nimport \"./Onboarding.scss\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport routes from \"utils/routes\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport {addQuestionAnswer, updateQuestionAnswer} from \"./OnboardingAction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  CREATE_REGISTRY,\n  SAVE_SINGLE_QUESTION_RESPONSE\n} from \"../../api/mutations\";\nimport {graphQLNoToken, graphQLNoHeader} from \"../../api/axios\";\nimport {Cookies} from \"react-cookie\";\nimport {setLoggingStatus, setOnboardingRegistry} from \"../registry/RegistryActions\";\nimport {getOnboardingQuestions} from \"../../utils/commonFunction\";\nimport {GET_REGISTRIES} from \"../../api/queries\";\nimport {M_A_FORGOT_PASSWORD_LINK} from \"../../utils/constants\";\n\nclass Onboarding extends React.Component {\n\n  //EMAIL PATTERN\n  MAIL_FORMAT = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  // Static titles\n  LOGIN_TITLE = \"Sign in for free gifts, free shipping, and exclusive access to our limited edition prints\"\n  SIGNUP_TITLE = \"Let’s make it official. Time to create your account.\"\n  PARTNER_TITLE = \"Your partner’s details please\"\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  LOGIN = \"Login\"\n  PARTNER = \"Partner\"\n\n  // Data to remove Both option\n  LITTLE_ONCE_ID = {\n    questionId: 5,\n    optionId: 7\n  }\n\n  BOTH_OPTION_ID = {\n    questionId: 6,\n    optionId: 13\n  }\n\n  SKIP_BOTH_OPTION = false\n\n  state = {\n    parentId: null,\n    question: {},\n    login: false,\n    toastMessage: \"\",\n    signUpErrors: {},\n    signInErrors: {},\n    submitAnswer: false,\n    bulkSaved: true\n  }\n\n  componentDidMount() {\n    window.onpopstate = () => {\n      if (this.props.location.pathname.search(routes.ONBOARDING.HOME) >= 0) {\n        this.setQuestionBasedOnId(this.props.match.params['questionId'])\n        this.clearToastMessage()\n      }\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      signUpErrors: {},\n      signInErrors: {}\n    })\n  }\n\n  createRegistry = () => {\n    let cookies = new Cookies();\n    graphQLNoHeader({query: CREATE_REGISTRY}, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data) {\n        let registryId = res.data.data.createRegistry.registry.id\n        if (registryId) {\n          this.props.dispatch(setOnboardingRegistry(registryId))\n          this.submitAllAnswers(registryId, true)\n        }\n      }\n    }).catch(err => {\n      console.error(err.response)\n    })\n  }\n\n  checkValidEmail = (email) => {\n    return email.match(this.MAIL_FORMAT)\n  }\n\n  submitAllAnswers = async (optionalRegistryId = null, submitBulk = false) => {\n    if (this.state.submitAnswer || submitBulk) {\n      if (this.props.stateOnboardingAnswers.length > 0 && (this.props.stateOnboardingRegistry || optionalRegistryId)) {\n        const registryId = optionalRegistryId ? optionalRegistryId : this.props.stateOnboardingRegistry;\n        let action = null;\n        let returnToURL = null;\n\n        const cookies = new Cookies();\n        const token = cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"\n\n        if (submitBulk) {\n          // Submitting all answers at once\n\n          const response = this.props.stateOnboardingAnswers.map(answer => {\n            return {\n              question: answer.question,\n              questionOptionInput: [\n                {\n                  option: answer.response.option,\n                  optionText: answer.response.optionText\n                }\n              ]\n            }\n          })\n          let reqData = {\n            query: SAVE_QUESTION_RESPONSE,\n            operationName: \"addRegistryQuestionOption\",\n            variables: {\n              registryId: registryId,\n              answers: response\n            }\n          }\n\n          await graphQLNoHeader(reqData, {\n            headers: {\"Authorization\": token}\n          }).then(res => {\n            if (res.data.data.addRegistryMultipleQuestionOption) {\n              console.log(\"Saved\")\n            }\n          }).catch(err => {\n            toast.error(\"Answer is not saved.\")\n            console.error(err.response);\n          }).finally(async () => {\n            await this.setState({\n              submitAnswer: false\n            })\n          })\n        } else {\n          //  Submitting single answer at once\n\n          let response = null\n\n          if (this.props.stateOnboardingAnswers.length > 0) {\n            const answer = this.props.stateOnboardingAnswers[this.props.stateOnboardingAnswers.length - 1]\n            action = answer.response.action ? answer.response.action : null;\n            response = {\n              question: answer.question,\n              questionOptionInput: [\n                {\n                  option: answer.response.option,\n                  optionText: answer.response.optionText\n                }\n              ]\n            }\n          }\n\n          if (action) {\n            switch (action) {\n              case \"build-registry\":\n                returnToURL = window.location.origin + routes.MY_REGISTRY.HOME\n                break\n              case \"registry-quiz\":\n                returnToURL = window.location.origin + routes.PERSONALIZE.HOME\n                break\n              default:\n                returnToURL = window.location.origin + routes.REGISTRY.HOME\n                break\n            }\n          }\n\n          if (response) {\n            let reqData = {\n              query: SAVE_SINGLE_QUESTION_RESPONSE,\n              operationName: \"updateOrCreateRegistrySingleQuestionOption\",\n              variables: {\n                registryId: registryId,\n                registryQuestionOptionInput: response\n              }\n            }\n\n            if (action && returnToURL) {\n              reqData.variables['returnTo'] = returnToURL\n            }\n\n            graphQLNoHeader(reqData, {\n              headers: {\"Authorization\": token}\n            }).then(res => {\n              if (res.data.data.updateOrCreateRegistrySingleQuestionOption) {\n                console.log(\"Saved\")\n                if (res.data.data.updateOrCreateRegistrySingleQuestionOption.redirectionUrl) {\n                  window.open(res.data.data.updateOrCreateRegistrySingleQuestionOption.redirectionUrl, \"_self\")\n                }\n              }\n            }).catch(err => {\n              console.error(err);\n            }).finally(() => {\n              this.setState({\n                submitAnswer: false\n              })\n            })\n          }\n        }\n\n      }\n    }\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    let nextFullQuestion = null;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.stateOnboardingQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          nextFullQuestion = ques\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      if (this.props.stateLoggedIn && this.state.redirectionUrl) {\n        // window.open(this.state.redirectionUrl, \"_self\")\n      }\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null\n      })\n\n      if (nextFullQuestion && nextFullQuestion.answers.length > 0 && (nextFullQuestion.options.length > 0 && !nextFullQuestion.options[0].action)) {\n        this.gotoNextQuestion(nextFullQuestion, null)\n        return;\n      } else {\n        this.setQuestionBasedOnId(nextQuestionId)\n        this.setToastMessage()\n        this.props.history.push(routes.ONBOARDING.HOME + `/${nextQuestionId}`)\n      }\n\n\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.stateOnboardingQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = async (questionId, response, option = null) => {\n    const alreadyAnswered = this.props.stateOnboardingAnswers.find(el => el.question === this.state.question.id)\n\n\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.stateOnboardingAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n          break;\n        }\n        newState.push(answer)\n      }\n      await this.props.dispatch(updateQuestionAnswer(newState))\n    } else {\n      await this.props.dispatch(addQuestionAnswer({question: questionId, response: response}))\n    }\n    await this.setState({\n      submitAnswer: true\n    })\n\n    if (option) {\n      if (option.toastMessage) {\n        this.setState({\n          toastMessage: option.toastMessage\n        })\n      }\n    }\n\n    this.submitAllAnswers(null, false)\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    if (Number(this.state.question.id) === this.LITTLE_ONCE_ID.questionId && Number(option.id) === this.LITTLE_ONCE_ID.optionId) {\n        this.SKIP_BOTH_OPTION = true\n    } else if (this.SKIP_BOTH_OPTION) {\n      this.SKIP_BOTH_OPTION = false\n    }\n    this.addAnswerToState(questionId, {option: option.id, optionText: option.value, action: option.action}, option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n  }\n\n  watchNextBtn = (ev) => {\n    this.setState({\n      nextBtnState: ev.target.value.length <= 0\n    })\n  }\n\n  answerDataQuestion = (questionId, response, dateCheck) => {\n    if (dateCheck) {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var currentDate = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n      if (currentDate <= response) {\n        this.addAnswerToState(questionId, {option: 0, optionText: response})\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Invalid date\")\n      }\n    } else {\n      this.addAnswerToState(questionId, {option: 0, optionText: response})\n      this.gotoNextQuestion(this.state.question, this.state.parentId);\n    }\n  }\n\n  textInputTypeChangeHandler = (ev, inputRefs) => {\n    let enableBtn = false;\n\n    for (const inputRef of inputRefs) {\n      if (inputRef.current.value.length <= 0) {\n        enableBtn = true\n        break\n      }\n    }\n\n    this.setState({\n      nextBtnState: enableBtn\n    })\n  }\n\n  changeLoginState = (ev, value, refs) => {\n    ev.preventDefault()\n    for (let ref of refs) {\n      if (ref.current) {\n        ref.current.value = \"\"\n      }\n    }\n    this.setState({\n      login: value\n    })\n  }\n\n  setErrorBasedOnResponse = (err, type) => {\n    if (err.response.data && err.response.data.errors) {\n      for (let error of err.response.data.errors) {\n        let parentErrors = err.response.data.errors\n\n        if (parentErrors.length > 0) {\n          for (const subErrors of parentErrors) {\n            if (subErrors.errors && (subErrors.errors instanceof Array ? subErrors.errors.length > 0 : true)) {\n              let newErrorState = {}\n              for (const error in subErrors.errors) {\n                newErrorState[error] = subErrors.errors[error].length > 0 ? subErrors.errors[error][0] : \"\"\n              }\n              switch (type) {\n                case \"signUp\":\n                  this.setState({\n                    signUpErrors: newErrorState\n                  })\n                  break\n                case \"signIn\":\n                  this.setState({\n                    signInErrors: newErrorState\n                  })\n                  break\n              }\n            } else {\n              toast.error(error.message)\n            }\n          }\n        }\n      }\n    }\n    console.error(err.response)\n  }\n\n  signInClickHandler = (emailRef, passwordRef) => {\n    if (emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signInErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    let reqData = {\n      query: LOGIN_USER,\n      operationName: \"login_user\",\n      variables: {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(async res => {\n      if (res.data.data.loginUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.loginUser.token, {path: \"/\"})\n\n        // Checking if user has registry\n        let data = {\n          query: GET_REGISTRIES\n        }\n        await graphQLNoHeader(data, {headers: {\"Authorization\": \"Token \" + res.data.data.loginUser.token}}).then(async registryRes => {\n          if (registryRes.data.data.registries.edges.length > 0) {\n            // TODO: Set currently active registry\n            let activeRegistry = registryRes.data.data.registries.edges[registryRes.data.data.registries.edges.length - 1]\n            let token = cookies.get(\"access_token\")\n            if (activeRegistry.node.id && token) {\n              await this.props.dispatch(setOnboardingRegistry(activeRegistry.node.id))\n              await getOnboardingQuestions(this.props.dispatch, activeRegistry.node.id, token)\n            }\n            if (res.data.data.loginUser.redirectionUrl) {\n              // window.open(res.data.data.loginUser.redirectionUrl, \"_self\")\n            }\n            // window.open(routes.MY_REGISTRY.HOME, \"_self\")\n            // updateRegistryDetailState(this.props.dispatch, registryRes.data.data.registries.edges);\n          } else {\n            // Creating Registry\n            this.createRegistry()\n          }\n\n        }).catch(err => {\n          console.error(err);\n        })\n        this.setState({\n          redirectionUrl: res.data.data.loginUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers(null, true)\n      }\n    }).catch(err => {\n      if (err.response.status === 401) {\n        toast.error(\"Invalid email or password\");\n        return;\n      }\n      this.setErrorBasedOnResponse(err, \"signIn\")\n    })\n  }\n\n  getSignInContent = () => {\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"signIn-email\"\n            ref={emailRef}\n            placeholder=\"johndoe@email.com\"\n          />\n          {this.state.signInErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-1\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"signIn-password\"\n            ref={passwordRef}\n            placeholder=\"Password\"\n          />\n          {this.state.signInErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.password}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <a className=\"text-body font-medium onboarding-link-text\" href={M_A_FORGOT_PASSWORD_LINK} target=\"_blank\">Forgot\n            Password</a>\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signInClickHandler(emailRef, passwordRef)}\n        >Sign In</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Don't have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                        onClick={(ev) => this.changeLoginState(ev, false, [emailRef, passwordRef])}\n        >Sign Up</a></h4>\n      </>\n    )\n  }\n\n  signUpClickHandler = (nameRef, emailRef, passwordRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signUpErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    // Clearing all error messages\n    this.clearErrorState()\n\n    let reqData = {\n      query: REGISTER_USER,\n      operationName: \"register_user\",\n      variables: {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.registerUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.registerUser.token, {path: \"/\"})\n        this.setState({\n          redirectionUrl: res.data.data.registerUser.redirectionUrl\n        })\n        this.createRegistry()\n        this.submitAllAnswers(null, true)\n        this.props.dispatch(setLoggingStatus(true))\n      }\n    }).catch(err => {\n      this.setErrorBasedOnResponse(err, \"signUp\")\n    })\n  }\n\n  getSignUpContent = () => {\n    let nameRef = React.createRef()\n    let emailRef = React.createRef()\n    let passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.name ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Doe\"\n            ref={nameRef}\n          />\n          {this.state.signUpErrors.name ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.name}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"johndoe@email.com\"\n            ref={emailRef}\n          />\n          {this.state.signUpErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n          />\n          {this.state.signUpErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.password}</p>\n            : null}\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signUpClickHandler(nameRef, emailRef, passwordRef)}\n        >Sign Up</Button>\n        <h4 className=\"mt-11\">Already have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\" tabindex\n                                                          onClick={(ev) => this.changeLoginState(ev, true, [nameRef, emailRef, passwordRef])}>Sign\n          In</a></h4>\n      </>\n    )\n  }\n\n  savePartnerDetail = (nameRef, emailRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      toast.error(\"Invalid email address\");\n      return;\n    }\n\n    const cookies = new Cookies();\n    let reqData = {\n      query: ADD_PARTNER_ACCOUNT,\n      operationName: \"addPartner\",\n      variables: {\n        partnerDetail: {\n          email: emailRef.current.value,\n          name: nameRef.current.value\n        }\n      }\n    }\n    graphQLNoHeader(reqData, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data.addPartnerAccount) {\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.response.data);\n    })\n  }\n\n  getPartnerContent = () => {\n    const nameRef = React.createRef()\n    const emailRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={nameRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1 mb-0\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={emailRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.savePartnerDetail(nameRef, emailRef)}\n        >Next</Button>\n      </>\n    )\n  }\n\n  render() {\n    // if (this.props.stateOnboardingAnswers) {\n    //   this.submitAllAnswers(null, false)\n    // }\n\n    // Redirecting user to registry home if registry found\n    if (this.props.stateRegistryInfo.id) {\n      return <Redirect to={routes.MY_REGISTRY.HOME}/>\n    }\n\n    // Redirecting to first question if not answered any\n    if (this.props.stateOnboardingQuestions.length > 0\n      && this.props.stateOnboardingAnswers.length <= 0\n      && this.props.location.pathname !== routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`) {\n      return <Redirect to={routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`}/>\n    }\n\n    if (!this.state.question.title && this.props.stateOnboardingQuestions.length > 0 && this.props.stateRouter.location.pathname !== routes.ONBOARDING.HOME + `/${this.state.question.id}`) {\n      this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    }\n\n    // Skipping Login Question if user is already logged in\n    if (this.props.stateLoggedIn && this.state.question.answerInputType === this.LOGIN) {\n      // If user already logged into M&A Store\n      this.setState((prevState, _) => ({\n        redirectionUrl: prevState.redirectionUrl ? prevState.redirectionUrl : routes.MY_REGISTRY.HOME\n      }))\n      this.gotoNextQuestion(this.state.question, null);\n    }\n\n    if (this.state.toastMessage) {\n      if (this.props.history.action === \"PUSH\") {\n        toast.dismiss()\n        toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n        setTimeout(() => this.setState({toastMessage: \"\"}), 4000)\n      }\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n    var now = new Date();\n    var day = (\"0\" + now.getDate()).slice(-2);\n    var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    var today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      for (const option of this.state.question.options) {\n        if (this.SKIP_BOTH_OPTION && Number(this.state.question.id) === this.BOTH_OPTION_ID.questionId && Number(option.id) === this.BOTH_OPTION_ID.optionId){\n          this.SKIP_BOTH_OPTION = true\n        } else {\n          options.push(\n            <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n              <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n              <span className=\"text-sm ml-1 onboarding-option-help-text\">{option.helpText}</span> : null}</Option>\n          )\n        }\n      }\n    } else if (this.state.question.answerInputType === \"Date\") {\n      let inputRef = React.createRef();\n      options.push(\n        <div className=\"d-flex flex-column\">\n          {/*TODO: Get placeholder from backend*/}\n          <input\n            type=\"date\"\n            className=\"onboarding-input py-1 px-2 text-body mb-0\"\n            placeholder=\"Date\"\n            ref={inputRef}\n            onChange={(ev) => this.watchNextBtn(ev)}\n            min={today}\n            max=\"9999-12-12\"\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(this.state.question.id, inputRef.current.value, true)}\n            className=\"px-3 py-1 font-medium mt-4 onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === \"Text\") {\n      let inputRefs = []\n      const inputRef = React.createRef()\n      inputRefs.push(inputRef)\n      options.push(\n        // TODO: Update this part if there is a Text type question\n        <div className=\"d-flex flex-column\">\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"Text\"\n            name=\"Answer\"\n            ref={inputRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(this.state.question.id, inputRef.current ? inputRef.current.value : \"\", false)}\n            className=\"mt-4 px-3 py-1 font-medium onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === this.LOGIN) {\n      let content = null;\n      if (this.state.login) {\n        staticQuestionTitle = this.LOGIN_TITLE\n        content = this.getSignInContent()\n      } else {\n        staticQuestionTitle = this.SIGNUP_TITLE\n        content = this.getSignUpContent()\n      }\n\n      options.push(content)\n    } else if (this.state.question.answerInputType === this.PARTNER) {\n      staticQuestionTitle = this.PARTNER_TITLE;\n      options.push(this.getPartnerContent())\n    }\n\n    return (\n      <>\n        <div className=\"baby-registry-onboarding container\">\n          <div className=\"row justify-content-center mt-24\">\n            <div className=\"col-12 col-md-6\">\n              <span\n                className=\"font-body onboading-question\">{[this.LOGIN, this.PARTNER].indexOf(this.state.question.answerInputType) !== -1 ? staticQuestionTitle : this.state.question.title}</span>\n            </div>\n          </div>\n          <div className=\"row justify-content-center mt-6\">\n            <div className=\"col-12 col-md-6\">\n              {options.map(option => option)}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          className=\"onboarding-toast-container\"\n          toastClassName=\"onboarding-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateOnboardingAnswers: state.onboarding.answers,\n    stateOnboardingRegistry: state.registry.onboardingRegistry,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Onboarding);","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from 'react';\nimport \"./PersonaliseHeader.scss\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\n\n\nconst PersonaliseHeader = (props) => {\n    const closePersonalise = (event) => {\n        event.preventDefault();\n        props.history.push(routes.REGISTRY.HOME)\n    }\n    \n    return (\n        <div className=\"personalise-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-between py-2\">\n                        <p className=\"text-body font-medium personalise-text\">My Registry Quiz</p>\n                        <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(PersonaliseHeader);","import React from 'react';\nimport \"./PersonaliseFooter.scss\";\n\n\nconst PersonaliseFooter = (props) => {\n  const closePersonalise = (event) => {\n    event.preventDefault();\n    // props.history.push(routes.REGISTRY.HOME)\n  }\n\n  return (\n    <div className=\"personalise-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4 justify-content-between pt-2 pb-4\">\n            <div className=\"mb-1\">\n              {props.percentage ? <p className=\"text-sm\">{props.percentage}% complete</p> : null}\n            </div>\n            <div className=\"personalise-progress-background\">\n              <div className=\"personalise-progress\" style={{ width: `${props.percentage}%` }} />\n            </div>\n          </div>\n          {/* <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} /> */}\n          <div className=\"col d-flex justify-content-end\">\n            <i className=\"icon-chevron-left align-self-center personalise-footer-icon p-2\" onClick={props.prevQuestion} />\n            <i className=\"icon-chevron-right align-self-center personalise-footer-icon p-2 ml-2\" onClick={props.nextQuestion} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonaliseFooter;","import React, { createRef } from \"react\";\n// import \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport PersonaliseHeader from \"./components/personalise-header/PersonaliseHeader\";\nimport { getPersonalizeQuestions } from \"utils/commonFunction\";\nimport { connect } from \"react-redux\";\nimport PersonaliseFooter from \"./components/personalise-footer/PersonaliseFooter\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport { updatePersonalizeQuestionAnswer, addPersonalizeQuestionAnswer, addPersonalizeQuestion } from \"./PersonaliseCheckListActions\";\nimport \"./PersonaliseChecklist.scss\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_SINGLE_QUESTION_RESPONSE } from 'api/mutations';\nimport { graphQL } from 'api/axios';\n\nclass PersonaliseChecklist extends React.Component {\n\n  state = {\n    parentId: null,\n    prevQuestionId: [],\n    question: {},\n    activeQuestionId: null,\n    toastMessage: \"\",\n    percentage: 0,\n    checkBoxSelected: []\n  }\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  CHECKBOX = \"Checkbox\"\n\n  componentDidMount() {\n    // getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    this.clearToastMessage()\n  }\n\n  calulatePercentage = (answerQuestionCount, totalQuestionCount) => {\n    let totalAnwer = 0;\n\n    const questions = [...this.props.statePersonaliseQuestions]\n    for (let question of questions) {\n      if (question.answers.length > 0) {\n        totalAnwer++;\n      }\n      if (questions.followUpQuestion) {\n        for (let subQuestion of question.followUpQuestions) {\n          if (subQuestion.answers.length > 0) {\n            totalAnwer++;\n          }\n        }\n      }\n    }\n    return this.props.statePersonaliseQuestions.length ? Math.ceil(totalAnwer * 100 / totalQuestionCount) : 0;\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    if (this.state.question.answerInputType === this.CHECKBOX) {\n      this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)\n    }\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.statePersonaliseQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null,\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        activeQuestionId: nextQuestionId\n      })\n      this.setQuestionBasedOnId(nextQuestionId)\n      // this.clearToastMessage();\n    }\n  }\n\n  gotoPrevQuestion = (prevQuestionId) => {\n    this.setQuestionBasedOnId(prevQuestionId);\n    if (this.state.prevQuestionId.length > 1) {\n      let popPrevQuestionId = [...this.state.prevQuestionId];\n      popPrevQuestionId.pop();\n      this.clearToastMessage();\n      this.setState({\n        prevQuestionId: popPrevQuestionId,\n        activeQuestionId: popPrevQuestionId.length > 0 ? popPrevQuestionId[popPrevQuestionId.length - 1] : this.state.activeQuestionId\n      })\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.statePersonaliseQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId,\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.statePersonaliseAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.statePersonaliseAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n        }\n        else {\n          newState.push(answer)\n        }\n      }\n      this.props.dispatch(updatePersonalizeQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addPersonalizeQuestionAnswer({ question: this.state.question.id, response: response }))\n    }\n  }\n\n  isActiveIdPresent = () => {\n    for (let prevQuestion of this.state.prevQuestionId) {\n      if (prevQuestion === this.state.activeQuestionId) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    this.addAnswerToState(option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    let finalAnswer = [{\n      option: option.id,\n      optionText: option.value\n    }]\n    this.submitQuestionAnswer(questionId, finalAnswer, option);\n  }\n\n  answerCheckBoxQuestion = (questionId, option) => {\n    this.addAnswerToState(option[0]);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    // let finalAnswer = [{\n    //   option: option.id,\n    //   optionText: option.value\n    // }]\n\n    let finalAnswer = []\n\n    for (let op of option) {\n      finalAnswer.push({option: op.id, optionText: op.value})\n    }\n    this.submitQuestionAnswer(questionId, finalAnswer, option);\n  }\n\n  selectCheckboxAnswer = (event, checkBoxRef, option) => {\n    checkBoxRef.current.classList.toggle(\"personalise-checkbox-selected\");\n    if (event.target.checked) {\n      this.setState({\n        // checkBoxSelected: selectedOption.push(option)\n        checkBoxSelected: [...this.state.checkBoxSelected, option]\n      })\n    }\n    else {\n      var removeIndex = this.state.checkBoxSelected.map(function (item) {return item.id;}).indexOf(option.id);\n      this.state.checkBoxSelected.splice(removeIndex, 1);\n    }\n  }\n\n  submitQuestionAnswer = (questionId, answer, option = null) => {\n\n    if (option?.toastMessage) {\n      this.setState({\n        toastMessage: option.toastMessage\n      })\n    } else {\n      this.setToastMessage()\n    }\n    let questionOptionInput = {\n      question: questionId,\n      questionOptionInput: answer\n    }\n    let reqData = {\n      query: SAVE_SINGLE_QUESTION_RESPONSE,\n      variables: {\n        registryId: this.props.stateRegistryInfo.id,\n        registryQuestionOptionInput: questionOptionInput\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data) {\n        console.log('Answer Done')\n        this.setStateQuestionWithSelectedAnswer(questionId, answer)\n      }\n    }).catch(err => {\n      toast.error(\"Error occurred while fetching questions\");\n      console.error(err);\n    })\n  }\n\n  setStateQuestionWithSelectedAnswer = (questionId, answer) => {\n    let answerOpt = []\n    for (let ans of answer) {\n      answerOpt.push({ questionOption: { id: ans.option }, optionText: ans.optionText })\n    }\n\n    // Setting question state with selected answer\n    const questions = [...this.props.statePersonaliseQuestions].map(question => {\n\n      if (question.id === questionId) {\n        question.answers = answerOpt\n      }\n      question.options = question.options.map(opt => {\n        if (opt.followUpQuestions.length > 0) {\n          opt.followUpQuestions.map(followUpQuestion => {\n            if (opt.id === questionId) {\n              opt.answers = answerOpt\n            }\n          })\n        }\n        return opt;\n      })\n      question.isAnswered = false;\n      return question;\n    })\n    this.props.dispatch(addPersonalizeQuestion(questions))\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    let question = { ...this.state.question }\n    if (question.toastMessage) {\n      this.setState({\n        toastMessage: question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  selectedColorSchemes = (data) => {\n    if (this.state.checkBoxSelected.length <= 0) {\n      this.setState({\n        checkBoxSelected: [...data]\n      })\n    }\n  }\n\n  render() {\n\n    if (!this.state.question.id && this.props.statePersonaliseQuestions.length > 0) {\n      let prevQuestionID = []\n      let currentQuestion = null\n      for (let question of this.props.statePersonaliseQuestions){\n        if (!question.isPersonalize) {\n          prevQuestionID.push(question.id)\n        }\n        else {\n          currentQuestion = question\n          break\n        }\n      }\n      this.setState({\n        prevQuestionId: prevQuestionID,\n        activeQuestionId: currentQuestion.id,\n        question: currentQuestion\n      })\n\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      const selectedOptionID = this.state.question.answers?.length > 0 ? this.state.question.answers[0].questionOption.id : null\n      options = this.state.question.options.map(option => (\n        <Option className={[\"mb-2 mr-4\", selectedOptionID === option.id ? \"answer-selected\" : \"\"].join(\" \")} onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n            <div className=\"text-sm onboarding-option-help-text\">{option.helpText}</div> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === this.CHECKBOX) {\n      // TODO: If it is selected\n      const selectedOptionID = []\n      if (this.state.question.answers?.length > 0) {\n        for (let ans of this.state.question.answers) {\n          if (!selectedOptionID.includes(ans.questionOption.id)) {\n            selectedOptionID.push(ans.questionOption.id)\n          }\n        }\n        const selectOptions = []\n        for (let selectedOption of this.state.question.options) {\n          if (selectedOptionID.includes(selectedOption.id)) {\n            selectOptions.push(selectedOption)\n          }\n        }\n        this.selectedColorSchemes(selectOptions);\n      }\n      options = this.state.question.options.map(option => {\n        let checkBoxRef = createRef();\n        return (\n          <div\n            className={[\"personalise-checkbox mr-3 mb-3\", selectedOptionID.includes(option.id) ? \"personalise-checkbox-selected\" : \"\"].join(\" \")} ref={checkBoxRef}>\n            <label className=\"checkbox d-flex align-items-center pb-0 mb-0\">\n              <span className=\"checkbox__input p-2\">\n                <input\n                  type=\"checkbox\"\n                  name={option.id}\n                  value={option.id}\n                  onChange={(e) => this.selectCheckboxAnswer(e, checkBoxRef, option)}\n                  defaultChecked={selectedOptionID.includes(option.id)}\n                />\n                <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                  <i className=\"icon-check\"></i>\n                </span>\n              </span>\n              <h4 className=\"radio__label pr-2\">{option.value}</h4>\n            </label>\n          </div>\n        )\n      })\n      options.push(\n        // <div>\n        //   <Button\n        //     variant=\"primary\"\n        //     className=\"px-3 py-1 font-medium onboarding-next-button\"\n        //     onClick={() => this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)}\n        //   >Done</Button>\n        // </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"personalise\">\n          {/* Personalise Header */}\n          <PersonaliseHeader />\n\n          {/* Personalise Body */}\n          <div className=\"baby-registry-onboarding container mb-15\">\n            <div className=\"row justify-content-center mt-24\">\n              <div className=\"col-12 col-md-6\">\n                <span\n                  className=\"font-body onboading-question\">{this.state.question.title}</span>\n              </div>\n            </div>\n            <div className=\"row justify-content-center mt-6\">\n              <div className=\"col-12 col-md-6\">\n                {options.map(option => option)}\n              </div>\n            </div>\n          </div>\n\n          {/* Personalise Footer */}\n          <PersonaliseFooter\n            percentage={this.calulatePercentage(this.props.statePersonaliseAnswers.length, this.props.statePersonaliseQuestions.length)}\n            prevQuestion={() => { this.gotoPrevQuestion(this.state.prevQuestionId[this.state.prevQuestionId.length - 1]) }}\n            nextQuestion={() => { this.gotoNextQuestion(this.state.question, this.state.parentId) }}\n          />\n        </div>\n\n        <ToastContainer\n          position=\"top-center\"\n          className=\"personalise-toast-container\"\n          toastClassName=\"personalise-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n    statePersonaliseAnswers: state.personaliseCheckList.answers,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React, { useState } from \"react\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { setPersonaliseCheckListItems } from \"../../PersonaliseCheckListActions\";\nimport { connect } from \"react-redux\";\nimport './EditChecklist.scss';\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {\n  incrementCheckListQuantity,\n  setIsActiveCheckList,\n  decrementCheckListQuantity\n} from \"../../PersonaliseCheckListActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_UPDATED_CHECKLIST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport { getAllCategories } from 'utils/commonFunction';\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\n\n// import {setCheckListItems} from \"../../../my-registry/MyRegistryActions\";\n\nclass PersonaliseChecklist extends React.Component {\n  state = {\n\t  showOverrideModal: false\n\t};\n\n  componentDidMount() {\n    this.getAllCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n  getAllCategories = (registryId, dispatch) => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryId)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.errors || res.data.error) {\n        // TODO: Add toast\n        console.log('Something went wrong-->', res.data.errors)\n        return;\n      } else {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  if (subProductType.isExcluded) {\n                    subProductType.totalItemsCount = 1\n                    subProductType['isAdded'] = false\n                  } else {\n                    subProductType['isAdded'] = true\n                  }\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                if (subCategory.isExcluded) {\n                  subCategory.totalItemsCount = 1\n                  subCategory['isAdded'] = false\n                } else {\n                  subCategory['isAdded'] = true\n                }\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = { ...category }\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n\n        }\n        dispatch(setPersonaliseCheckListItems(finalCheckList))\n      }\n    }).catch(err => {\n      console.error('Something went wrong-->', err);\n    })\n  }\n\n  closeAndSavePersonaliseCheckList = (event) => {\n    event.preventDefault();\n    let finalCheckListData = []\n    let tempStateCheckList = [...this.props.stateCheckList]\n    for (let category of tempStateCheckList) {\n      for (let subCategory of category.subCategories) {\n        // let tempData = null\n        let tempData = {\n          registryCategoryId: subCategory.id,\n          itemsCount: subCategory.totalItemsCount,\n          isExcluded: !subCategory.isAdded\n        }\n        finalCheckListData.push(tempData)\n      }\n    }\n\n    let registryId = this.props.stateRegistryInfo.id\n    let data = {\n      query: SAVE_UPDATED_CHECKLIST,\n      variables: {\n        registryId: registryId,\n        itemCountData: finalCheckListData\n      },\n    }\n\n    graphQL(data).then(res => {\n      if (res.data) {\n        toast.success((\n          <p>Personalise Checklist Updated Successfully</p>\n        ))\n        this.props.history.push(routes.REGISTRY.HOME)\n      }\n\n    }).catch(err => {\n      console.error(err.message)\n      toast.error((\n        <p>Some error occurred.</p>\n      ))\n    })\n  }\n\n  gotoPersonaliseQuestions = (event) => {\n    event.preventDefault();\n    this.props.history.push(routes.PERSONALIZE.HOME)\n  }\n\n  removeConfirmFooter = (\n    <>\n\t  <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => {\n\t  this.props.history.push(routes.REGISTRY.HOME)\n\t  this.setState({showOverrideModal:false})\n\t  }}>Do Not Override</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={(e) => {\n\t\tthis.closeAndSavePersonaliseCheckList(e)\n\t\tthis.setState({showOverrideModal:false});\n      }}>Yes, Please Override</Button>\n    </>\n  )\n\n  render() {\n    return (\n\t  // TODO: API call\n\t  <>\n      <div className=\"personalise-checklist\">\n        {/* Header */}\n        <div className=\"py-2 personalise-checklist-header font-body font-medium\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col \">Edit Checklist</div>\n              <div className=\"col d-flex align-items-center justify-content-end\">\n                <a className=\"mr-6 personalise-header-link\" tabindex onClick={(e) => { this.gotoPersonaliseQuestions(e) }}>Take our quiz</a>\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1  font-medium done-btn\"\n                    onClick={()=>this.setState({showOverrideModal:true})}\n                  >Save & Close</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* All categries selection body */}\n        {this.props.stateCheckList.map((parentCategories, i) => (\n          <div className=\"mt-6 container\" key={parentCategories.categoryName + \"-\" + i}>\n            <div className=\"checklist-title pb-4 body-text\">\n              {parentCategories.categoryName}\n            </div>\n            <div className=\"row mt-4\">\n              {parentCategories.subCategories.map((subCategories, i) => (\n                <div className=\"col-3 mb-5\" key={subCategories.id}>\n                  <div className={[\"checklist-card pl-2 pr-3 py-3\",\n                    !subCategories.isAdded ? \"add-checklist-bg\" : \"\"].join(' ')\n                  }>\n                    <div className=\"d-flex mb-4 checklist-action-btn\">\n                      <div className=\"text-body font-medium align-self-center\">{subCategories.categoryName}</div>\n                      {subCategories.addedItemsCount <= 0 ?\n                        <div className=\"ml-auto\">\n                          <button className={[\"checklist-add-btn\",\n                            !subCategories.isAdded ? \"checklist-icon-plus\" : \"icon-close\"].join(' ')}\n                            onClick={() => this.props.dispatch(setIsActiveCheckList(subCategories.id, !subCategories.isAdded))} />\n                        </div>\n                        : null\n                      }\n                    </div>\n                    <div className=\"d-flex align-items-center\">\n                      <Counter\n                        counter={subCategories.totalItemsCount}\n                        incrementHandler={() => this.props.dispatch(incrementCheckListQuantity(subCategories.id, 1))}\n                        decrementHandler={() => this.props.dispatch(decrementCheckListQuantity(subCategories.id, 1))}\n                      />\n                      {subCategories.addedItemsCount > 0 ?\n                        <span className=\"ml-auto text-sm item-count-label\">{subCategories.addedItemsCount} added</span>\n                        : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        <Toast />\n      </div>\n\t  <Modal\n        show={this.state.showOverrideModal}\n        size=\"lg\"\n        footer={this.removeConfirmFooter}\n      >\n        <h2 className=\"mb-1\">This will override your personalizd suggestions that came from registry quiz.</h2>\n\t\t    <label className=\"text-sm\">If you do not want to override, click on ‘Do Not Override’, which will take you to your registry. The changes you made in edit checklist will be discarded.</label>\n      </Modal>\n\t  </>\n    );\n  }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport \"./GuestViewHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\n\n\nclass GuestViewHeader extends React.Component {\n\n  state = {\n    showEditRegistryDetail: false,\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateGuestViewRegistry.image.image + ')' }}>\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateGuestViewRegistry.displayName ? this.props.stateGuestViewRegistry.displayName : \"\"}</h2>\n                  </div>\n                  {this.props.stateGuestViewRegistry.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateGuestViewRegistry.greeting}</span>\n                    :\n                    null\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.guestView.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(GuestViewHeader);","import React from 'react';\nimport \"./GuestSortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeGuestSortFilter } from '../../GuestViewAction';\n\nconst GuestSortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.guestView.activeGuestSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeGuestSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GuestSortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport GuestSortFilter from \"../guest-sort-filter/GuestSortFilter\";\nimport './GuestSortSection.scss';\nimport { clearGuestViewFilter, setChildGuestViewFilter, setGuestViewProducts, clearViewGuestPaginationInfo } from \"../../GuestViewAction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass GuestSortSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = async (isParent, childId) => {\n    if (isParent) {\n      await this.props.dispatch(clearGuestViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      await this.props.dispatch(setChildGuestViewFilter(newChildArray))\n    }\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n    await this.props.dispatch(setGuestViewProducts([]))\n    await this.props.setFilterhandler()\n  }\n\n  //Clear filter state\n  clearFilterHandler = async (ev) => {\n    ev.preventDefault()\n    await this.props.dispatch(clearGuestViewFilter())\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n\t\tawait this.props.dispatch(setGuestViewProducts([]))\n    await this.props.setFilterhandler()\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <GuestSortFilter />\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.guestView.product,\n    stateActiveSortFilter: state.guestView.activeGuestSortFilter,\n    stateGuestViewRegistry: state.guestView.guestViewRegistry,\n    stateRegistryInfo: state.guestView.info,\n    stateFilterApplied: state.guestView.guestViewFilterApplied,\n    stateFilterCategory: state.guestView.guestFilterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestSortSection);\n","import React, { useState } from 'react'\nimport \"./GuestFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildGuestViewFilter, clearGuestViewFilter, setGuestViewFilterCategory, setGuestViewProducts, clearViewGuestPaginationInfo } from '../../GuestViewAction';\nimport { FILTERS } from \"utils/constants\";\n\nconst GuestFilter = (props) => {\n\n\tconst dispatch = useDispatch()\n\tlet tempParentFilterId = useSelector(state => state.guestView.guestViewFilterApplied.parentFilter)\n\tlet tempChildFilterIds = useSelector(state => state.guestView.guestViewFilterApplied.childFilter)\n\tlet stateAddedProducts = useSelector(state => state.guestView.product)\n\tconst stateCategoriesInfo = useSelector(state => state.guestView.checkList)\n\tlet stateFilterCategories = useSelector(state => state.guestView.guestFilterCategory)\n\tlet [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n\tconst childChangeHandler = async (childId, parentId) => {\n\n\t\tif (parentId !== tempParentFilterId) {\n\t\t\tif (tempChildFilterIds.length > 0) {\n\t\t\t\tawait dispatch(setChildGuestViewFilter([]))\n\t\t\t}\n\t\t}\n\n\t\tconst childIndex = tempChildFilterIds.indexOf(childId)\n\n\t\tif (childIndex === -1) {\n\t\t\tawait dispatch(setChildGuestViewFilter([...tempChildFilterIds, childId]))\n\t\t} else {\n\t\t\tlet newChildArray = [...tempChildFilterIds]\n\t\t\tnewChildArray.splice(childIndex, 1)\n\t\t\tawait dispatch(setChildGuestViewFilter(newChildArray))\n\t\t}\n\t\tawait dispatch(clearViewGuestPaginationInfo())\n\t\tawait dispatch(setGuestViewProducts([]))\n\t\tprops.setFilterhandler()\n\t}\n\n\tconst clearClickHandler = async () => {\n\t\tawait dispatch(clearGuestViewFilter())\n\t\tawait dispatch(clearViewGuestPaginationInfo())\n\t\tawait dispatch(setGuestViewProducts([]))\n\t\tawait props.setFilterhandler()\n\t}\n\n\tconst changeParentLimitHandler = (parentFilterID) => {\n\t\tlet limitLength = null\n\t\tlet filterCategory = [...stateFilterCategories].map(parentFilter => {\n\t\t\tif (parentFilter.id === parentFilterID) {\n\t\t\t\tparentFilter.limit = parentFilter.child.length\n\t\t\t\tlimitLength = parentFilter.child.length\n\t\t\t}\n\t\t\treturn parentFilter\n\t\t})\n\t\tdispatch(setGuestViewFilterCategory(filterCategory))\n\n\t\tlet isFound = false\n\t\tlet newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n\t\t\tif (categorylimit.id === parentFilterID) {\n\t\t\t\tcategorylimit.limit = limitLength\n\t\t\t\tisFound = true\n\t\t\t\treturn categorylimit\n\t\t\t}\n\t\t\treturn categorylimit\n\t\t})\n\n\t\tprops.categoryFilterLimit(newFilterCateoryLimit);\n\t\tif (!isFound) {\n\t\t\tnewFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n\t\t}\n\t\tsetFilterCategoryLimit(newFilterCateoryLimit)\n\t}\n\n\treturn (\n\t\t<div className=\"view-filter\">\n\t\t\t<div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n\t\t\t\t<h4 className=\"font-weight-bold\">Filters</h4>\n\t\t\t\t{tempChildFilterIds.length !== 0 ?\n\t\t\t\t\t<a tabindex='0' className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t{[...stateFilterCategories].map(parentFilter => (\n\t\t\t\t\t<div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n\t\t\t\t\t\t{/* Parent filter */}\n\t\t\t\t\t\t<div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n\t\t\t\t\t\t{/* Child filter */}\n\t\t\t\t\t\t{parentFilter.child ? (\n\t\t\t\t\t\t\t<div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n\t\t\t\t\t\t\t\t<div className=\"mt-3 fliter-checkbox-section\">\n\t\t\t\t\t\t\t\t\t{parentFilter.child.map((childFilter, index) => (\n\t\t\t\t\t\t\t\t\t\tchildFilter.count > 0 ?\n\t\t\t\t\t\t\t\t\t\t\tindex < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"checkbox__input mr-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={childFilter.display}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={childFilter.display}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-check\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"radio__label text-sm\">{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t: null\n\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GuestFilter;\n","import React from \"react\";\nimport \"./GuestView.scss\";\nimport { connect } from \"react-redux\";\nimport { updateGuestViewRegistry, getGuestCategories } from \"../../utils/commonFunction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport GuestViewHeader from \"./containers/guest-view-header/GuestViewHeader\";\nimport GuestSortSection from \"./containers/guest-sort/GuestSortSection\";\nimport GuestViewCard from \"./components/GuestViewCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { VIEW_GIFT_PRODUCTS_PER_REQUEST } from \"utils/constants\";\nimport { setGuestViewProducts, setViewGuestPaginationInfo, updateGuestViewInfo, setGuestViewFilterCategory, clearViewGuestPaginationInfo } from './GuestViewAction';\nimport { GET_GUEST_REGISTRY_PRODUCT } from 'api/queries';\nimport { MEDIA_URL_PREFIX } from \"utils/constants\";\nimport { graphQL } from 'api/axios';\nimport GuestFilter from './containers/guest-filter/GuestFilter';\nimport { FILTERS } from \"utils/constants\";\nimport Toast from \"modules/commons/components/toast/Toast\";\n\n\nclass GuestView extends React.Component {\n\n  state = {\n    isFirstTime: true,\n    filterCategoryLimit: []\n  }\n\n  BABY_GIFTS_URL = \"https://monicaandandy.com/collections/baby-gifts\"\n\n  // Constant variables for filters\n  AVAILABLE = \"available\"\n  RESERVED = \"reserved\"\n  PURCHASED = \"purchased\"\n  PRICE_1 = \"price-1\"\n  PRICE_2 = \"price-2\"\n  PRICE_3 = \"price-3\"\n  MONICA_AND_ANDY = \"monicaandandy\"\n  ELSEWHERE = \"elsewhere\"\n\n  getLimitOfFliter = (parentId) => {\n    let limit = null\n    const filterCategory = [...this.state.filterCategoryLimit]\n    for (let category of filterCategory) {\n      if (parentId === category.id && category.limit) {\n        limit = category.limit\n      }\n    }\n    return limit\n  }\n\n  // Updating product count in filter categories\n  updateFilterList = (registryItemsAnalysisCount, categoryData) => {\n\n    let newFilterList = [\n      {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: this.AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: registryItemsAnalysisCount.totalAvailable\n          },\n          {\n            id: this.RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: registryItemsAnalysisCount.totalReserved\n          },\n          {\n            id: this.PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: registryItemsAnalysisCount.totalPurchased\n          }\n        ]\n      },\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        limit: this.getLimitOfFliter(\"categories\") ? this.getLimitOfFliter(\"categories\") : 6,\n        child: [...this.props.stateCategoriesInfo].filter(category => {\n          let id = category.category.id\n          let count = categoryData[id]\n          if (count > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          let id = category.category.id\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = categoryData[id]\n          return newCategory\n        })\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: this.PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: registryItemsAnalysisCount.under50\n          },\n          {\n            id: this.PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: registryItemsAnalysisCount.between50100\n          },\n          {\n            id: this.PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: registryItemsAnalysisCount.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: this.MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: registryItemsAnalysisCount.maStoreItems\n          },\n          {\n            id: this.ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: registryItemsAnalysisCount.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    this.props.dispatch(setGuestViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  getFiltersApplied = (stateFilterApplied, activeSortFilterState) => {\n    const childFilterArray = [...stateFilterApplied]\n    let filterApplied = {}\n    // For Gift Status\n    if (childFilterArray.includes(this.AVAILABLE)) {\n      filterApplied.isAvailable = true\n    }\n    if (childFilterArray.includes(this.RESERVED)) {\n      filterApplied.isReserved = true\n    }\n    if (childFilterArray.includes(this.PURCHASED)) {\n      filterApplied.isPurchased = true\n    }\n\n    // For Sort\n    if (activeSortFilterState.sortId === 2) {\n      filterApplied.sortBy = 'item__price'\n    } else if (activeSortFilterState.sortId === 3) {\n      filterApplied.sortBy = '-item__price'\n    }\n\n    // For Store\n    let store = []\n    if (childFilterArray.includes(this.MONICA_AND_ANDY)) {\n      store.push(this.MONICA_AND_ANDY)\n    }\n    if (childFilterArray.includes(this.ELSEWHERE)) {\n      store.push(this.ELSEWHERE)\n    }\n    if (store.length) {\n      filterApplied.store = store\n    }\n\n    let lessThanEqual = 0\n    let greaterThanEqual = 0\n    let hasPriceFilter = false\n    // For Price\n    if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_2) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 0\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_2)) {\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      lessThanEqual = 49\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_2) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 50\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1)) {\n      lessThanEqual = 49\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_2)) {\n      greaterThanEqual = 50\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    if (hasPriceFilter) {\n      filterApplied.price_Lte = lessThanEqual\n      filterApplied.price_Gte = greaterThanEqual\n    }\n\n    let categories = []\n    // For categories\n    for (let cat of [...this.props.stateCategoriesInfo]) {\n      if (childFilterArray.includes(cat.category.id)) {\n        categories.push(cat.category.id)\n      }\n    }\n    if (categories.length) {\n      filterApplied.categories = categories\n    }\n\n    return filterApplied\n  }\n\n  updateGuestViewRegistryProduct = (urlSlug, first = VIEW_GIFT_PRODUCTS_PER_REQUEST, emptyAllProduct = false) => {\n    let filtersApplied = this.getFiltersApplied(this.props.stateFilterApplied, this.props.activeSortFilterState)\n    let reqData = {\n      query: GET_GUEST_REGISTRY_PRODUCT,\n      variables: {\n        urlSlug: urlSlug,\n        after: this.props.stateGuestViewPagination.endCursor,\n        first: first,\n        ...filtersApplied\n      }\n    }\n\n    graphQL(reqData).then(async res => {\n      if (res.data.data.registryAsGuest) {\n        if (emptyAllProduct) {\n          await this.props.dispatch(setGuestViewProducts([]))\n        }\n\n        // Storing Product of GuestView\n        let responseData = [...res.data.data.registryAsGuest.registryItems.edges].map(item => {\n          let newItemObj = { ...item.node }\n          delete newItemObj.registryitemImage;\n          if (item.node.registryitemImage.length > 0) {\n            newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n          }\n          return newItemObj;\n        })\n        let finalData = responseData.filter(product => product.registryCategories.length > 0)\n        await this.props.dispatch(setGuestViewProducts(finalData))\n\n        // Storing PagenationInfo\n        let pagenationInfo = { ...res.data.data.registryAsGuest.registryItems.pageInfo }\n        await this.props.dispatch(setViewGuestPaginationInfo(pagenationInfo))\n\n        this.updateFilterList({ ...res.data.data.registryAsGuest.registryItemsAnalysisCount }, { ...res.data.data.registryAsGuest.categoryData })\n      }\n    }).catch(err => {\n      this.props.dispatch(updateGuestViewInfo({ notFound: true }))\n      if (err.response && err.response.data.errors) {\n        for (const error of err.response.data.errors) {\n          // TODO: Implement toast if necessary\n          console.log(error.message)\n        }\n      }\n    })\n  }\n\n  filterCategoryLimitHandler = (limitData) => {\n    this.setState({ filterCategoryLimit: limitData })\n  }\n\n  sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  getSortedFilteredProducts = (guestProducts, activeSortFilterState, filterApplied) => {\n    let sortedProducts = [];\n    if (activeSortFilterState.sortId === 1) {\n      sortedProducts = [...guestProducts]\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedProducts = this.sortByLowToHigh([...guestProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedProducts = this.sortByHighToLow([...guestProducts])\n    }\n\n    return sortedProducts;\n  }\n\n  getdataForFirstTime = async () => {\n    await getGuestCategories(this.props.match.params.registrySlug, this.props.dispatch)\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n    await this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug, VIEW_GIFT_PRODUCTS_PER_REQUEST, true)\n  }\n\n  render() {\n\n    if (this.props.stateGuestViewRegistry.urlSlug !== this.props.match.params.registrySlug) {\n      updateGuestViewRegistry(this.props.match.params.registrySlug, this.props.dispatch)\n    }\n\n    // When registry doesn't exists\n    if (this.props.stateGuestViewRegistry.notFound) {\n      return <h1>Registry not found</h1>;\n    }\n\n    if (this.props.stateGuestViewRegistry.id) {\n      // When registry exists and it is not public\n      if (this.props.stateGuestViewRegistry.isPublic === false) {\n        let registryUsers = [this.props.stateGuestViewRegistry.user.firstName]\n        if (this.props.stateGuestViewRegistry.user.partnerUser) {\n          registryUsers.push(this.props.stateGuestViewRegistry.user.partnerUser.firstName)\n        }\n        return (\n          <div className=\"container mt-17\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n                <h1>{this.props.stateGuestViewRegistry.displayName}</h1>\n                {/*TODO: Display partner name as well below*/}\n                {registryUsers.length === 1 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> is still curating their baby registry</h4> : null}\n                {registryUsers.length === 2 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> and <span className=\"text-capitalize\">{registryUsers[1]}</span> are still curating their baby registry</h4> : null}\n\n                <Button\n                  variant=\"primary\"\n                  className=\"py-1 px-2 mt-3 text-body font-medium\"\n                  onClick={() => window.location.href = this.BABY_GIFTS_URL}\n                >Shop baby Gifts</Button>\n              </div>\n            </div>\n          </div>\n        )\n      } else {\n\n        let filteredSortProducts = this.getSortedFilteredProducts(this.props.stateAddedProducts, this.props.activeSortFilterState, this.props.stateFilterApplied)\n\n        // Fetching product for first time \n        if (this.state.isFirstTime && this.props.stateAddedProducts.length <= 0 && this.props.stateGuestViewRegistry.urlSlug) {\n          this.setState({\n            isFirstTime: false\n          })\n          this.getdataForFirstTime()\n          // this.updateFilterList(this.props.stateAddedProducts)\n        }\n\n        // When registry exists and it is public\n        return (\n          <>\n            <GuestViewHeader />\n            <div className=\"container mt-7\">\n              <div className=\"row\">\n                <div className=\"col-2\">\n                  <GuestFilter setFilterhandler={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)} categoryFilterLimit={this.filterCategoryLimitHandler} />\n                </div>\n                <div className=\"col\"></div>\n                <div className=\"col-9\">\n                  <GuestSortSection\n                    productCount={filteredSortProducts.length}\n                    setFilterhandler={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)}\n                  />\n\n                  <div className=\"mt-5\">\n                    <InfiniteScroll\n                      next={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)}\n                      hasMore={this.props.stateGuestViewPagination.hasNextPage}\n                      loader={<h4>Loading...</h4>}\n                      dataLength={this.props.stateAddedProducts.length}\n                      style={{ overflow: \"hidden\" }}\n                    >\n\n                      {filteredSortProducts.length > 0 ?\n                        filteredSortProducts.map((card, index) =>\n                          <GuestViewCard\n                            data={card}\n                            key={\"addedCard\" + index}\n                            updateGuestViewProduct={this.updateGuestViewRegistryProduct}\n                          />) : null}\n                    </InfiniteScroll>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <Toast />\n          </>\n        )\n      }\n    }\n\n\n    // Default return\n    return <></>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stateGuestViewRegistry: state.guestView.info,\n    stateAddedProducts: state.guestView.product,\n    activeSortFilterState: state.guestView.activeGuestSortFilter,\n    stateFilterApplied: state.guestView.guestViewFilterApplied.childFilter,\n    stateGuestViewPagination: state.guestView.paginationInfo,\n    stateCategoriesInfo: state.guestView.checkList,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestView);","import React, { useState } from \"react\";\nimport \"./FindRegistry.scss\";\nimport { FIND_REGISTRY } from \"api/queries\";\nimport { graphQL } from 'api/axios';\nimport moment from 'moment';\nimport { IMPORT_REGISTRY_EMAIL } from \"utils/constants\";\n\nconst FindRegistry = () => {\n  const [searchName, setSearchName] = useState('')\n  const [allRegistry, setAllRegistry] = useState([])\n  const [hasRegistry, setHasRegistry] = useState(true)\n\n  const findRegistry = (registryName) => {\n    let reqData = {\n      query: FIND_REGISTRY,\n      variables: {\n        registryName: registryName\n      }\n    }\n    graphQL(reqData).then(res => {\n      if (res.data.data.findRegistry) {\n        let registries = [...res.data.data.findRegistry.edges]\n        setAllRegistry(registries)\n        if (registries.length > 0) {\n          setHasRegistry(true)\n        } else {\n          setHasRegistry(false)\n        }\n      }\n    }).catch(err => {\n      setHasRegistry(false)\n    })\n  }\n\n  const handleClearSearch = () => {\n    setSearchName('')\n    setAllRegistry([])\n  }\n\n  const findRegistryHandler = async (ev) => {\n    ev.persist();\n    await setSearchName(ev.target.value)\n    if (ev.target.value.length <= 0) {\n      handleClearSearch()\n    } else {\n      await findRegistry(ev.target.value)\n    }\n  }\n\n  const handleRegistryUrlSlug = (urlSlug) => {\n    window.open(urlSlug)\n  }\n\n  return (\n    <div className=\"mt-10 find-registry\">\n      <div className=\"row\">\n        <div className=\"col-4 offset-4\">\n          <div className=\"find-registry-header text-center\">Find a Baby Registry</div>\n          <div className=\"mt-6 find-registry-search-container mx-auto\">\n            <input\n              type=\"text\"\n              placeholder=\"Search registry...\"\n              value={searchName}\n              onChange={(ev) => findRegistryHandler(ev)}\n              className=\"find-registry-search-input pl-6 text-body py-1 w-100 mw-100 pr-10 m-a-unset-line-height\"\n            />\n            <i className=\"icon-search find-registry-search-icon\" />\n            {searchName.length > 0 ?\n              <a className=\"find-registry-search-input-link text-body\" href=\"#\"\n                onClick={() => { handleClearSearch() }}>Clear</a>\n              : null}\n          </div>\n\n\n        </div>\n      </div>\n      <div className={[\"row\", allRegistry.length ? \"mb-4 mt-10\" : \"\"].join(\" \")}>\n        <div className=\"col-10 offset-1\">\n          {[...allRegistry].map(data => (\n            <div className=\"p-4 find-registry-card mx-5\" key={data.node.urlSlug}>\n              <div className=\"d-flex align-items-center\">\n                <div className=\"d-flex align-items-baseline\">\n                  <h3 className=\"find-registry-displayName\">{data.node.displayName}</h3>\n                  <p className=\"ml-2 find-registry-content\">{moment(data.node.dueDate).format('MMM DD, YYYY')}</p>\n                </div>\n                <div className=\"ml-auto\">\n                  <button className=\"find-registry-action-btn p-2\" onClick={() => handleRegistryUrlSlug(data.node.urlSlug)}/>\n                </div>\n              </div>\n              {data.node.user.defaultAddress ?\n                <p className=\"mt-1 find-registry-content\">{data.node.user.defaultAddress?.city}, {data.node.user.defaultAddress?.province}</p>\n                : null}\n            </div>\n          ))}\n\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"mt-6 text-center\">\n            {searchName.length > 0 ?\n              hasRegistry ?\n                // If has registries in list\n                <div className=\"find-registry-content\">\n                  <h4>Didn’t find the registry that you are looking for?</h4>\n                  <h4 className=\"mb-2\">Check with the family or shower host for <a href={\"mailto:\" + IMPORT_REGISTRY_EMAIL} className=\"find-registry-email-link\" tabIndex target='_blank'>direct link</a> or</h4>\n                  <a\n                    className=\"px-3 py-1 find-registry-help-disable-btn text-body font-medium d-inline-block\"\n                    href={\"mailto:\" + IMPORT_REGISTRY_EMAIL}\n                    target='_blank'\n                    tabIndex\n                  >Email Us For Help</a>\n                </div>\n                :\n                // If has no registries in list\n                <div className=\"find-registry-content\">\n                  <h4>We couldn’t find any registries that match your search...</h4>\n                  <h4 className=\"mb-2\">Check with the family or shower host for <a href={\"mailto:\" + IMPORT_REGISTRY_EMAIL} className=\"find-registry-email-link\" tabIndex target='_blank'>direct link</a> or</h4>\n                  <a\n                    className=\"px-3 py-1 find-registry-help-primary-btn text-body font-medium d-inline-block\"\n                    href={\"mailto:\" + IMPORT_REGISTRY_EMAIL}\n                    target='_blank'\n                    tabIndex\n                  >Email Us For Help</a>\n                </div>\n              :\n              // Search is not been started yet\n              <div className=\"font-medium find-registry-content\">\n                <p>Looking for Monica+Andy baby registry?</p>\n                <p>Begin typing to search</p>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FindRegistry;","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport Onboarding from \"../onboarding/Onboarding\";\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {\n  updateRegistryDetail,\n  getOnboardingQuestions,\n  createRegistry,\n  getPersonalizeQuestions,\n  getCategories,\n  getProducts\n} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport {verifyAccessToken} from \"../../api/axios\";\nimport {setLoggingStatus, updateRegistryInfo} from \"../registry/RegistryActions\";\nimport PersonaliseChecklist from \"../personalise-checklist/PersonaliseChecklist\";\nimport EditChecklist from \"modules/personalise-checklist/components/edit-checklist/EditChecklist\";\nimport GuestView from \"../guest-view/GuestView\";\nimport MyRegistry from \"../my-registry/MyRegistry\";\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport FindRegistry from \"modules/find-registry/FindRegistry\";\n\nclass ViewsContainer extends React.Component {\n\n  state = {\n    displayContent: false,\n    foundRegistry: false\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    const access_token = cookies.get(\"access_token\")\n    if (access_token) {\n      verifyAccessToken(access_token).then(res => {\n        if (res.data.data.customer) {\n          this.props.dispatch(setLoggingStatus(true))\n          if (res.data.data.registries.length > 0) {\n            this.setState({\n              foundRegistry: true\n            })\n            updateRegistryDetail(this.props.dispatch);\n            // TODO: Get products of active registry\n            getCategories(res.data.data.registries[res.data.data.registries.length - 1].id, this.props.dispatch);\n            // TODO: Get categories of active registry\n            getProducts(res.data.data.registries[res.data.data.registries.length - 1].id, this.props.dispatch);\n          } else {\n            this.props.dispatch(updateRegistryInfo({notFound: true}))\n\n            //  Creating New Registry\n            createRegistry(this.props.dispatch)\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n        this.props.dispatch(setLoggingStatus(false))\n        this.props.dispatch(updateRegistryInfo({notFound: true}))\n      }).finally(() => {\n        this.setState({\n          displayContent: true\n        })\n      })\n    } else {\n      this.setState({\n        displayContent: true\n      })\n      this.props.dispatch(updateRegistryInfo({notFound: true}))\n    }\n  }\n\n  render() {\n\n    // if (this.props.stateRouter.location.pathname.search(route.GUEST_VIEW.HOME) !== -1) {\n    //   console.log(route.GUEST_VIEW.HOME+\"/:registryName\")\n    //   return <Redirect to={this.props.stateRouter.location.pathname}/>\n    // }\n\n    // Redirecting user to onboarding is no registry found\n    // if (this.props.stateRouter.location.pathname.search(route.ONBOARDING.HOME) === -1 && !this.props.stateRegistryInfo.id && !this.state.foundRegistry && this.state.displayContent) {\n    //   console.log(this.props.stateRouter.location.pathname)\n    //   return <Redirect to={route.ONBOARDING.HOME}/>\n    // }\n\n    if (this.props.stateOnboardingQuestions.length <= 0) {\n      getOnboardingQuestions(this.props.dispatch)\n    }\n\n    if (this.props.stateRegistryInfo.id && this.props.statePersonaliseQuestions.length <= 0) {\n      getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    }\n\n    return (\n      <>\n        {this.state.displayContent ?\n          <Switch>\n            <Route exact path={route.PERSONALIZE.CHECKLIST} component={EditChecklist}/>\n            <Route exact path={route.PERSONALIZE.HOME} component={PersonaliseChecklist}/>\n            <Route exact path={route.FIND_REGISTRY.HOME} component={FindRegistry}/>\n            <Route exact path={route.ONBOARDING.HOME + \"/:questionId?\"} component={Onboarding}/>\n            <Route exact path={route.MY_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.VIEW_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.TRACK_GIFTS.HOME} component={RegistryHero}/>\n            <Route exact path={route.GUEST_VIEW.HOME + \"/:registrySlug\"} component={GuestView}/>\n            <Route path={route.REGISTRY.HOME} component={RegistryHero}/>\n            <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n            <Route render={() => <div>DEFAULT</div>}/>\n          </Switch>\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateRouter: state.router,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}