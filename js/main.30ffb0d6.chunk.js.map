{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","modules/personalise-checklist/PersonaliseCheckListActions.js","modules/personalise-checklist/PersonaliseCheckListReducer.js","modules/onboarding/OnboardingAction.js","modules/onboarding/OnboardingReducer.js","modules/guest-view/GuestViewAction.js","modules/guest-view/GuestViewReducer.js","modules/track-gifts/TrackGiftsAction.jsx","modules/track-gifts/components/view-by/ViewBy.jsx","modules/track-gifts/TrackGiftsReducer.jsx","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/modal-component/ModalComponent.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","api/queries.js","api/config.js","api/axios.js","utils/constants.js","api/mutations.js","modules/track-gifts/components/gift-card-pill/GiftCardPill.jsx","modules/commons/components/button-component/ButtonComponent.jsx","modules/commons/components/gift-status-pill/GiftStatusPill.jsx","modules/commons/components/product-details-model/ProductDetailsModel.jsx","modules/track-gifts/components/buy-now/BuyNow.jsx","modules/commons/components/mark-as-purchased/MarkAsPurchased.jsx","modules/track-gifts/components/mark-purchased/MarkPurchased.jsx","modules/track-gifts/components/gift-card/GiftCard.jsx","modules/track-gifts/containers/track-gifts-content/TrackGiftsContent.jsx","utils/commonFunction.js","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/import-registry/category-pill/CategoryPill.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/import-registry/ImportRegistry.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/toggle-pills/TogglePills.jsx","modules/commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal.jsx","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/commons/components/cash-fund-card/cash-fund-card-not-added/CashFundCardNotAdded.jsx","modules/commons/components/cash-fund-card/CashFundCard.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/components/view-filter/ViewFilter.jsx","modules/commons/components/already-bought-product/AlreadyBoughtProduct.jsx","modules/commons/components/purchased-modal/PurchasedModal.jsx","modules/commons/components/give-MA-gift-model/GiveMAGiftModel.jsx","modules/guest-view/components/GuestViewCard.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/commons/components/toast/Toast.jsx","modules/registry-hero/component/todo-widget/TodoWidget.jsx","modules/track-gifts/components/filters/Filters.jsx","modules/track-gifts/components/thank-you-list/ThankYouList.jsx","modules/track-gifts/containers/track-gifts-sidebar/TrackGiftsSidebar.jsx","modules/track-gifts/components/search/Search.jsx","modules/track-gifts/components/add-gift/AddGift.jsx","modules/track-gifts/TrackGifts.jsx","modules/track-gifts/components/redirection-screen/RedirectionScreen.jsx","modules/registry-hero/RegistryHero.jsx","modules/commons/components/questions/option/Option.jsx","modules/onboarding/Onboarding.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/personalise-checklist/components/personalise-header/PersonaliseHeader.jsx","modules/personalise-checklist/components/personalise-footer/PersonaliseFooter.jsx","modules/personalise-checklist/PersonaliseChecklist.jsx","modules/personalise-checklist/components/edit-checklist/EditChecklist.jsx","modules/guest-view/containers/guest-view-header/GuestViewHeader.jsx","modules/guest-view/containers/guest-sort-filter/GuestSortFilter.jsx","modules/guest-view/containers/guest-sort/GuestSortSection.jsx","modules/guest-view/containers/guest-filter/GuestFilter.jsx","modules/guest-view/GuestView.jsx","modules/find-registry/FindRegistry.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","SET_ANOTHER_STORE_REGISTRY_ITEMS","SET_CASH_FUND_CATEGORIES","addRecommendedProduct","params","toggleMustHaveProduct","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","setAnotherStoreRegistryItems","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","anotherStoreRegistry","cashFundCategories","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","setguestViewRegistry","setViewFilterCategory","setChildViewFilter","clearViewFilter","viewRegistryProducts","activeSortFilter","sortId","sortTitle","guestViewRegistry","viewFilterApplied","REGISTRY_ACTION_TYPES","updateRegistryInfo","setLoggingStatus","setOnboardingRegistry","info","loggedIn","todo","onboardingRegistry","PERSONALISE_CHECKLIST_ACTION_TYPES","setPersonaliseCheckListItems","addPersonalizeQuestion","addPersonalizeQuestionAnswer","updatePersonalizeQuestionAnswer","newSubCategory","subCategories","subCategory","totalItemsCount","setIsAddedCheckList","isAdded","editedPersonaliseCheckList","questions","answers","ONBOARDING_ACTION_TYPES","addOnboardingQuestion","addQuestionAnswer","updateQuestionAnswer","GUEST_VIEW_ACTION_TYPES","updateGuestViewInfo","setGuestViewProducts","setChildGuestViewFilter","clearGuestViewFilter","setGuestViewFilterCategory","setViewGuestPaginationInfo","clearViewGuestPaginationInfo","setAlreadyBoughtProductInfo","updated","activeGuestSortFilter","guestViewFilterApplied","guestFilterCategory","paginationInfo","trackGifts","pagination","alreadyBoughtProduct","defaultAlreadyBoughtProductInfo","TRACK_GIFTS_ACTION_TYPES","setTrackGiftsProduct","setTrackGiftsPaginationInfo","setTrackGiftsFilters","setTrackGiftsSearch","setTrackGiftsRedirectionInfo","TRACK_GIFTS_VIEWS","ViewBy","activeView","useSelector","dispatch","useDispatch","changeTrackGiftView","view","className","join","onClick","products","filters","search","redirectionInfo","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","personaliseCheckList","PersonaliseCheckListReducer","onboarding","Onboarding","TrackGiftsReducer","guestView","GuestViewReducer","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","shower","announcements","more","toDos","es","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","TRACK_GIFTS","ONBOARDING","PERSONALIZE","CHECKLIST","GUEST_VIEW","FIND_REGISTRY","MoreOption","props","iconClass","buttonClass","data","map","option","index","key","name","ModalComponent","Modal","show","size","titleContent","Header","headerContent","closeModal","Body","children","footer","Footer","Counter","decrementHandler","counter","incrementHandler","CardItem","src","image","originalSrc","alt","href","productLink","tabindex","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","gql","GET_CATEGORIES","GET_PRODUCTS","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","GET_REGISTRIES","GET_QUESTIONS","GET_PERSONALIZE_QUESTIONS","GET_TRACK_GIFTS","GET_GUEST_REGISTRY_PRODUCT","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","axiosInstanceNoToken","axiosInstanceNoHeader","graphQLNoToken","post","graphQLNoHeader","graphQL","getAnotherRegistryProducts","axiosInstanceMultipart","graphQLMultipart","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","FILTERS","BOOKMARKLET_SCRIPT","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","REGISTER_USER","SAVE_QUESTION_RESPONSE","LOGIN_USER","ADD_PARTNER_ACCOUNT","SAVE_UPDATED_CHECKLIST","SAVE_SINGLE_QUESTION_RESPONSE","CREATE_REGISTRY","TRACK_GIFTS_ADD_GIFT","MARK_AS_PURCHASED_BY_GUEST","GIVE_GROUP_GIFT_GUEST","CASH_FUND_GIFT_GUEST","MARK_AS_PURCHASED","GiftCardPill","text","variant","amount","ButtonComponent","React","forwardRef","ref","btnVariantClass","disabled","GiftStatusPill","pillVariantClass","ProductDetailsModel","imageUrl","storeItemUrl","target","isGroupGift","note","quantityStatus","purchased_quantity","reserved_quantity","still_needed","EMAIL_RE","BuyNow","storeName","orderNumber","guestName","guestEmail","errors","modalCloseHandler","setState","incrementQuantity","prevState","decrementQuantity","storeNameChangeHandler","ev","value","orderNumberChangeHandler","guestNameChangeHandler","errorState","guestEmailChangeHandler","validData","valid","match","saveClickHandler","buyNowClickHandler","createNewRecord","updateProduct","openModal","jsonVisitedItems","JSON","parse","localStorage","getItem","Number","rId","stateRegistryInfo","pId","productData","productTimestamp","timestamp","currentDate","setHours","newVisitedItemsData","foundProduct","newData","setItem","stringify","open","this","onChange","placeholder","Component","connect","MarkAsPurchased","email","contributionAmount","closeModalHandler","nameChangeHandler","emailChangeHandler","noteChangeHandler","contributionAmountChangeHandler","persist","reqData","query","variables","registryId","registryItemId","purchasedRegistryItemInput","isPurchased","giftMessage","guestUserInput","then","res","markAsPurchased","toast","success","getTrackGiftsProduct","stateTrackGiftsFilters","stateTrackGiftsProducts","stateTrackGiftsPagination","stateTrackGiftsView","stateTrackGiftsSearch","catch","err","error","console","response","rows","MarkPurchased","openPurchasedModal","preventDefault","GiftCard","friendsDetailRef","createRef","toggleFriendsDetail","e","current","classList","toggle","purchasedRegistryItem","guestUser","firstName","lastName","orderNo","isCashFund","groupGift","amountReceived","style","width","isReserved","isCashAcceptedOnly","isAmountReceived","createdTs","moment","format","otherUsers","user","LOCAL_2_API_FILTERS_MAPPING","4","1","3","2","5","NoRecordFound","TrackGiftsContent","currentView","checkProductAvailability","getProductsBasedOnView","stateProducts","availableProducts","guestUsersEmails","refinedProducts","skipCashFund","userProducts","currentProduct","newUsers","groupUser","log","indexOf","groupProduct","hasNextPage","overflow","next","hasMore","loader","dataLength","groupedProduct","getProducts","parseInt","finalData","registryItems","newItemObj","registryitemImage","registryCategories","removeProductFromCartHandler","card","getCategories","message","getRefinedCategory","categoryName","categoryType","isDesired","isExcluded","addedItemsCount","isParent","getAllCategories","getAll","subCategoriesIsExcluded","parentCategory","newParentCategory","registrySubCategories","newSubCategories","cat","refinedSubCate","subProductTypes","registrySubProductTypes","subProduct","operationName","finalCategories","allCategories","updateRegistryDetail","registries","registryData","currentRegistryInfo","notFound","updateRegistryDetailState","getOnboardingQuestions","a","token","isPersonalize","question","followUpQuestions","followUpQuestion","isAnswered","updateGuestViewRegistry","urlSlug","registryAsGuest","guestViewInfo","dataURItoBlob","dataURI","fileType","fileName","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","getGuestCategories","registryCategoriesAsGuest","getTrackGiftsFilterStatus","filterString","trackGiftsFilter","returnStatus","selected","clearProducts","trackGiftsFilters","trackGiftsProduct","trackGiftsPagination","trackGiftsView","trackGiftsSearch","first","giftGivers","after","endCursor","searchKeyword","searchText","isAvailable","isFundsReceived","isReturned","registryGifts","registryGiftItemsCount","allFilterCounts","newFilters","count","gifts","pageInfo","addProductToCartAPI","status","AddedCard","stateGuestViewRegistry","stateRecommendedProducts","stateFilterApplied","stateAddedProducts","useState","setRecommendedProducts","setShow","modalTitle","showRemoveModel","setShowRemoveModel","moreOptionsData","unshift","categoryRecommended","jsonObject","uniqueSet","Set","Array","from","showRecommendation","removeConfirmFooter","DragHandle","sortableHandle","disabledDrag","multipleCategories","draggable","isViewCard","cardId","newRecommended","existingProduct","sku","parseFloat","shopifyItemId","tags","CheckList","gotoPersonalize","event","isQuizPending","editablePersonalizeQuestions","t","percentage","withTranslation","withRouter","CheckListItems","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","subProductType","handleToggleEvent","checkListIconEl","checkListHeader","firstChild","subListItem","Accordion","Card","Toggle","as","eventKey","Collapse","BookmarkletSection","updateModal","modalBody","modalTitleContent","modalFooterButtons","openAddBookmarkletModal","addItemToRegistry","TogglePills","activeClass","RadioButton","checked","changeHandler","textClass","display","CheckBox","SelectCategory","categories","setCategories","searched","setSearched","searchedCategories","setSearchedCategories","currentCategory","selectedCategory","setSelectedCategory","useEffect","resData","finalCheckList","finalSubCategory","tempSubCategory","tempCategory","getCategoriesToDisplay","find","allSelectedCategory","handleSelectionCategory","categorySelectBody","modalFooter","changeCurrentCategory","searchInputRef","changeLinkRef","searchMatched","toLowerCase","searchCategoryInputChangeHandler","onFocus","contains","add","searchInputFocusHandler","onBlur","remove","searchInputBlurHandler","focus","changeLinkClickHandler","showModal","CategoryPill","mainCategory","removeCategory","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","hideProductDetails","setHideProductDetails","showLoading","setshowLoading","productInfo","productImage","productName","howToGift","mustHave","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","changeProductName","changeNote","selectFileHandler","files","file","includes","reader","FileReader","onload","changeProductImage","result","readAsDataURL","submitStoreUrl","keyCode","URL","url","productUrl","changeProductUrl","item_url","ctgry","getScrapedProduct","img","newPrice","char","isInteger","getRefinedPrice","onKeyUp","class","role","click","accept","priceChangeHandler","addMyOwn","openCategorySelect","categoryId","finalcategory","removeSelectedCategory","toggleGroupGift","togglePurchased","changeHowToGift","ViewRecommend","viewDetailsBtn","cardRef","clearModalData","alert","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","childCategory","commonGetProducts","commonGetCategories","checkDataValidity","storeProduct","stateAnotherStoreProduct","storeUrl","hostname","formData","FormData","ADD_REGISTRY_ITEM_MUTATION","input","items","append","images","anotherStoreItemViewDetail","addOnMyOwnClickHandler","newCategory","displayName","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","height","offsetHeight","Filter","filterData","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","childId","parentId","childIndex","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ImportGiftCard","ImportRegistry","registryUrl","errorMessage","loading","activeCategoryProductIndex","currentRegistryLink","inputHasFocus","inputRef","changeLoadingState","registryUrlChangeHandler","checkUrlAndGetRegistryItems","getAnotherRegistryProductsInfo","registryUrlKeyUpHandler","store_name","store_url","newProducts","finally","openSelectCategoryModal","productIndex","stateAnotherStoreRegistry","setProductCategories","newProductState","changeRegistryUrl","bind","selectedClass","AddCashFundModal","MAX_IMAGE_SIZE","cashFundImage","cashFundName","categoryData","cashFundAmount","hideTotal","cashFundType","cashFundNote","markCompleted","imageRef","validateCashFundData","addCashFundClickHandler","selectedCat","markAsCompleted","addRegistryItems","presentCategories","resetThenSet","modalFooterButton","newProductImage","cashFundNameChangeHandler","cashFundAmountChangeHandler","cashFundHideTotalChangeHandler","cashFundTypeChangeHandler","stateCashFundCategories","changedCategory","cashFundNoteChangeHandler","mustHaveClickHandler","markCompletedClickHandler","allCashFundCategories","foundCategory","cashFundCategory","list","AddGift","showCashFundModal","cashFundProduct","currentContent","categoryList","openCashFundModal","closeCashFundModal","openAddGiftModal","importGiftAnotherStoreHandler","importRegistry","validImportRegistryData","getCleanedRegistryItems","cleanedRegistryItems","itemStore","stores","newStore","importRegistryClickHandler","jsonGraphQL","FilterSection","deleteChipHandler","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","productCount","stateFilteredProducts","CashFundCardNotAdded","addButtonClickHandler","CashFundCard","Everything","setCashFundCategoryAndOpenModal","updateFilterList","newFilterList","productId","mustHaveValue","setAllRecommendation","recommendedCategory","parentCat","recommendedCat","productType","rData","getSortedProducts","stateCategories","cashFundCount","productsToAppend","allProducts","added","total","recommendations","childFilterArray","categoryFound","addedRecommendations","groupedProducts","recommendationCount","totalProducts","totalRecommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","hasCashFund","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","getDefaultCoverImages","registryImages","defaultImages","closeCoverImagePicker","fileChangeHandler","imageId","updateRegistry","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","siteHostName","location","host","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","setRegistryUrl","registryError","setRegistryError","inputContainerRef","changeRegistryVisibility","newRegistry","readOnly","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","handleGuestView","handleDisableViewGuest","COVER_PIC_OPTIONS","guestViewRegistryState","backgroundImage","activeOptionClass","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","filterCat","childCat","stateActiveSortFilter","stateViewRegistryProducts","ViewFilter","stateCategoriesInfo","stateFilterCategories","filterCategoryLimit","setFilterCategoryLimit","getLimitOfFliter","limit","giftStatus","parentFilterID","limitLength","isFound","newFilterCateoryLimit","categorylimit","changeParentLimitHandler","AlreadyBoughtProduct","partnerUser","fieldErrors","onFocusHandler","giftMessageChangeHandler","GiveMAGiftModel","isBoughtThisAlready","componentDidMount","setModalData","iBoughtThisAlready","amountChangeHandler","onFocusCashFundHandler","hasDecimal","validBoughtThisAlreadyData","productBoughtAlreadyInfo","onFocusBoughtThisAlreadyHandler","fieldName","validCashFundData","close","addProductToCartHandler","submitDataHandler","registryUrlSlug","purchasedQuantity","updateGuestViewProduct","registrySlug","giveGroupGiftMa","variantId","cashFundGift","contributeRestHandler","contributeAmount","GuestViewCard","showMAGiftmodel","setMAGiftModel","setIsGroupGift","setIsCashAcceptedOnly","modelTitle","setModelTitle","tabIndex","ViewRegistryHome","localAddedProductState","handleFilterProductChange","registryItemsAnalysisCount","totalAvailable","totalReserved","totalPurchased","under50","between50100","moreThan100","maStoreItems","otherStoreItems","getFiltersApplied","sortBy","lessThanEqual","greaterThanEqual","hasPriceFilter","price_Lte","price_Gte","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","getSortedProductsByFilters","finalFilterProduct","filtersApplied","getSortedFilteredProducts","sortedProducts","sortedData","newSortedProducts","isFeatured","sortByMustHave","sortByLowToHigh","sortByHighToLow","viewRegistryProductsId","addProduct","productList","sort","b","onSortEnd","oldIndex","newIndex","itemsOldPosition","arrayMove","position","oldPosition","updateViewRegistryPosition","helperClass","axis","lockAxis","useDragHandle","ViewRegistry","Toast","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","closeButton","parentElement","dismiss","TodoWidget","performTodoAction","stateTodo","Filters","filterChangeHandler","filterId","allUnselected","stateFilters","newFilter","ThankYouList","TrackGiftsSidebar","Search","inputContainer","applySearch","searchState","searchInputChangeHandler","searchInput","clearClickHandler","searchClickHandler","giftName","userName","userEmail","addGiftClickHandler","addGift","giftNameChangeHandler","newErrorState","userNameChangeHandler","userEmailChangeHandler","TrackGifts","RedirectionScreen","RegistryHero","stateTrackGiftsRedirectionInfo","useTranslation","RegistryHeroData","to","babyArrival","Option","MAIL_FORMAT","LOGIN_TITLE","SIGNUP_TITLE","PARTNER_TITLE","RADIO","PARTNER","LITTLE_ONCE_ID","questionId","optionId","BOTH_OPTION_ID","SKIP_BOTH_OPTION","login","toastMessage","signUpErrors","signInErrors","submitAnswer","bulkSaved","clearErrorState","createRegistry","submitAllAnswers","checkValidEmail","optionalRegistryId","submitBulk","stateOnboardingAnswers","stateOnboardingRegistry","returnToURL","answer","questionOptionInput","optionText","addRegistryMultipleQuestionOption","origin","registryQuestionOptionInput","updateOrCreateRegistrySingleQuestionOption","redirectionUrl","clearToastMessage","setToastMessage","gotoNextQuestion","nextQuestionId","returnNext","nextFullQuestion","idToMatch","stateOnboardingQuestions","ques","stateLoggedIn","setQuestionBasedOnId","finalQuestion","foundQuestion","parentQuestion","addAnswerToState","answerRadioQuestion","watchNextBtn","nextBtnState","answerDataQuestion","dateCheck","now","day","getDate","slice","month","getMonth","getFullYear","textInputTypeChangeHandler","inputRefs","enableBtn","changeLoginState","refs","setErrorBasedOnResponse","parentErrors","subErrors","signInClickHandler","emailRef","passwordRef","password","loginUser","set","registryRes","activeRegistry","getSignInContent","signUpClickHandler","nameRef","registerUser","getSignUpContent","savePartnerDetail","partnerDetail","addPartnerAccount","getPartnerContent","undefined","onpopstate","pathname","stateRouter","answerInputType","setTimeout","staticQuestionTitle","helpText","min","max","content","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","customer","redirectVerifyToken","VerifyToken","verifyToken","PersonaliseFooter","prevQuestion","nextQuestion","PersonaliseChecklist","prevQuestionId","activeQuestionId","checkBoxSelected","CHECKBOX","calulatePercentage","answerQuestionCount","totalQuestionCount","totalAnwer","statePersonaliseQuestions","Math","ceil","answerCheckBoxQuestion","isActiveIdPresent","gotoPrevQuestion","popPrevQuestionId","pop","statePersonaliseAnswers","finalAnswer","submitQuestionAnswer","op","selectCheckboxAnswer","checkBoxRef","removeIndex","setStateQuestionWithSelectedAnswer","answerOpt","ans","questionOption","opt","selectedColorSchemes","prevQuestionID","currentQuestion","selectedOptionID","selectOptions","selectedOption","defaultChecked","showOverrideModal","closeAndSavePersonaliseCheckList","finalCheckListData","tempStateCheckList","tempData","registryCategoryId","itemsCount","itemCountData","gotoPersonaliseQuestions","parentCategories","GuestViewHeader","GuestSortFilter","GuestSortSection","setFilterhandler","GuestFilter","categoryFilterLimit","GuestView","isFirstTime","BABY_GIFTS_URL","AVAILABLE","RESERVED","PURCHASED","PRICE_1","PRICE_2","PRICE_3","MONICA_AND_ANDY","ELSEWHERE","updateGuestViewRegistryProduct","emptyAllProduct","stateGuestViewPagination","responseData","pagenationInfo","filterCategoryLimitHandler","limitData","guestProducts","getdataForFirstTime","registryUsers","filteredSortProducts","FindRegistry","searchName","setSearchName","allRegistry","setAllRegistry","hasRegistry","setHasRegistry","findRegistryHandler","findRegistry","defaultAddress","city","province","ViewsContainer","displayContent","foundRegistry","access_token","EditChecklist","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.30ffb0d6.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\",\n\n  // ANOTHER STORE REGISTRY\n  SET_ANOTHER_STORE_REGISTRY_ITEMS: \"SET_ANOTHER_STORE_REGISTRY_ITEMS\",\n\n  // SET CASH FUND CATEGORIES\n  SET_CASH_FUND_CATEGORIES: \"SET_CASH_FUND_CATEGORIES\"\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}\n\n//Another store Registry Items\nexport const setAnotherStoreRegistryItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n//Set Cash Fund Categories\nexport const setCashFundCategories = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES,\n\t\tpayload: params\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreRegistry = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nconst cashFundCategories = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_CASH_FUND_CATEGORIES:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct,\n  anotherStoreRegistry,\n  cashFundCategories\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_GUEST_VIEW: \"IS_GUEST_VIEW\",\n  SET_VIEW_FILTER_CATEGORY: \"SET_VIEW_FILTER_CATEGORY\",\n\n  // Filter\n\tSET_VIEW_PARENT_FILTER: \"SET_VIEW_PARENT_FILTER\",\n\tSET_VIEW_CHILD_FILTER: \"SET_VIEW_CHILD_FILTER\",\n\tCLEAR_VIEW_FILTER: \"CLEAR_VIEW_FILTER\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setguestViewRegistry = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW,\n    payload: params\n  }\n}\n\n// View Filter Category Section\nexport const setViewFilterCategory = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n\n// Filter Section\n\nexport const setParentViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewFilter = () => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER,\n\t}\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst guestViewRegistry = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst viewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    guestViewRegistry,\n    filterCategory,\n    viewFilterApplied\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\",\n  SET_LOGGING_STATUS: \"SET_LOGGING_STATUS\",\n  SET_TODO : \"SET_TODO\",\n  SET_ONBOARDING_REGISTRY: \"SET_ONBOARDING_REGISTRY\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}\n\nexport const setLoggingStatus = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS,\n    payload: params\n  }\n}\n\nexport const setTodo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_TODO,\n    payload: params\n  }\n}\n\nexport const setOnboardingRegistry = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY,\n    payload: params\n  }\n}\n","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst todo = (state = defaultData.todo, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_TODO:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst onboardingRegistry = (state = \"\", action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo,\n  loggedIn,\n  todo,\n  onboardingRegistry\n});","export const PERSONALISE_CHECKLIST_ACTION_TYPES = {\n\n\tGET_ALL_CHECKLIST_ITEMS: \"GET_ALL_CHECKLIST_ITEMS\",\n\tINCREMENT_CHECKLIST_QUANTITY: \"INCREMENT_CHECKLIST_QUANTITY\",\n\tDECREMENT_CHECKLIST_QUANTITY: \"DECREMENT_CHECKLIST_QUANTITY\",\n\tCHECKLIST_ADDED: \"CHECKLIST_ADDED\",\n\n\tPERSONALISE_ADD_QUESTION: \"PERSONALISE_ADD_QUESTION\",\n    PERSONALISE_ADD_ANSWER: \"PERSONALISE_ADD_ANSWER\",\n    PERSONALISE_UPDATE_ANSWER: \"PERSONALISE_UPDATE_ANSWER\"\n}\n\nexport const incrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\n\nexport const setPersonaliseCheckListItems = params => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\nexport const setIsActiveCheckList = (id, isAdded) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED,\n\t\tpayload: { id, isAdded }\n\t}\n}\n\nexport const addPersonalizeQuestion = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION,\n\t  payload: params\n\t}\n  }\n  \n  export const addPersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER,\n\t  payload: params\n\t}\n  }\n  \n  export const updatePersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER,\n\t  payload: params\n\t}\n  }","import {PERSONALISE_CHECKLIST_ACTION_TYPES} from \"./PersonaliseCheckListActions\";\nimport {combineReducers} from \"redux\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.totalItemsCount += quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id && subCategory.totalItemsCount > 1) {\n        subCategory.totalItemsCount -= quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst setIsAddedCheckList = (state, payload) => {\n  let {\n    id,\n    isAdded\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.isAdded = isAdded;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\n// Reducers\nconst editedPersonaliseCheckList = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS:\n      return [...action.payload];\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n      case PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED:\n        return setIsAddedCheckList(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER:\n      return [...state, action.payload]\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  editedPersonaliseCheckList,\n  questions,\n  answers\n})","export const ONBOARDING_ACTION_TYPES = {\n  ADD_QUESTION: \"ADD_QUESTION\",\n  ADD_ANSWER: \"ADD_ANSWER\",\n  UPDATE_ANSWER: \"UPDATE_ANSWER\"\n}\n\nexport const addOnboardingQuestion = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_QUESTION,\n    payload: params\n  }\n}\n\nexport const addQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_ANSWER,\n    payload: params\n  }\n}\n\nexport const updateQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.UPDATE_ANSWER,\n    payload: params\n  }\n}","import {ONBOARDING_ACTION_TYPES} from \"./OnboardingAction\";\nimport {combineReducers} from \"redux\";\n\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_QUESTION:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_ANSWER:\n      return [...state, action.payload]\n    case ONBOARDING_ACTION_TYPES.UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  questions,\n  answers\n});","export const GUEST_VIEW_ACTION_TYPES = {\n\tUPDATE_GUEST_VIEW_INFO: \"UPDATE_GUEST_VIEW_INFO\",\n\tSET_GUEST_VIEW_PRODUCT: \"SET_GUEST_VIEW_PRODUCT\",\n\tGUEST_ACTIVE_SORT_FILTER: \"GUEST_ACTIVE_SORT_FILTER\",\n\n\t// Filter\n\tSET_GUEST_VIEW_PARENT_FILTER: \"SET_GUEST_VIEW_PARENT_FILTER\",\n\tSET_GUEST_VIEW_CHILD_FILTER: \"SET_GUEST_VIEW_CHILD_FILTER\",\n\tCLEAR_GUEST_VIEW_FILTER: \"CLEAR_GUEST_VIEW_FILTER\",\n\n\tSET_GUEST_VIEW_FILTER_CATEGORY: \"SET_GUEST_VIEW_FILTER_CATEGORY\",\n\tGUEST_VIEW_SET_PAGINATION_INFO: \"GUEST_VIEW_SET_PAGINATION_INFO\",\n\tCLEAR_GUEST_PAGINATION_INFO: \"CLEAR_GUEST_PAGINATION_INFO\",\n\n\tGET_GUEST_CHECKLIST_ITEMS: \"GET_GUEST_CHECKLIST_ITEMS\",\n\n\t//I BOUGHT THIS ALREADY STORE PRODUCT\n  SET_ALREADY_BOUGHT_PRODUCT_INFO : \"SET_ALREADY_BOUGHT_PRODUCT_INFO\",\n  CLEAR_ALREADY_BOUGHT_PRODUCT_INFO : \"CLEAR_ALREADY_BOUGHT_PRODUCT_INFO\",\n}\n\nexport const updateGuestViewInfo = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const setGuestViewProducts = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const activeGuestSortFilter = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_ACTIVE_SORT_FILTER,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\nexport const setParentGuestViewFilter = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildGuestViewFilter = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearGuestViewFilter = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_VIEW_FILTER,\n\t}\n}\n\n// View Filter Category Section\nexport const setGuestViewFilterCategory = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\nexport const setViewGuestPaginationInfo = (params) => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewGuestPaginationInfo = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_PAGINATION_INFO,\n\t}\n}\n\nexport const setGuestCheckListItems = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.GET_GUEST_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// I BOUGHT THIS ALREADY STORE PRODUCT\nexport const setAlreadyBoughtProductInfo = params => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.SET_ALREADY_BOUGHT_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAlreadyBoughtProductInfo = () => {\n\treturn {\n\t\ttype: GUEST_VIEW_ACTION_TYPES.CLEAR_ALREADY_BOUGHT_PRODUCT_INFO,\n\t}\n}\n\n","import { GUEST_VIEW_ACTION_TYPES } from \"./GuestViewAction\";\nimport { combineReducers } from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst guestViewRegistry = (state = { updated: false }, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO:\n      return { ...action.payload }\n    default:\n      return state\n  }\n}\n\nconst addedGuestProducts = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PRODUCT:\n      return action.payload.length ? [...state, ...action.payload] : [];\n    default:\n      return state;\n  }\n}\n\nconst activeGuestSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GUEST_ACTIVE_SORT_FILTER:\n      return {...action.payload};\n    default:\n      return state;\n  }\n}\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst guestViewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst guestFilterCategory = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_GUEST_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst paginationInfo = (state = defaultData.trackGifts.pagination, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GUEST_VIEW_SET_PAGINATION_INFO:\n      return {...action.payload}\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_GUEST_PAGINATION_INFO:\n      return defaultData.trackGifts.pagination\n    default:\n      return state\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.GET_GUEST_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst alreadyBoughtProduct = (state = defaultData.defaultAlreadyBoughtProductInfo, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.SET_ALREADY_BOUGHT_PRODUCT_INFO:\n      return {...action.payload};\n    case GUEST_VIEW_ACTION_TYPES.CLEAR_ALREADY_BOUGHT_PRODUCT_INFO:\n      return defaultData.defaultAlreadyBoughtProductInfo;\n    default:\n      return state;\n  }\n}\n\n\nexport default combineReducers({\n  info: guestViewRegistry,\n  product: addedGuestProducts,\n  activeGuestSortFilter,\n  guestViewFilterApplied,\n  guestFilterCategory,\n  paginationInfo,\n  checkList,\n  alreadyBoughtProduct,\n});","export const TRACK_GIFTS_ACTION_TYPES = {\n  TRACK_GIFTS_ACTIVE_VIEW: \"TRACK_GIFTS_ACTIVE_VIEW\",\n\n  TRACK_GIFTS_SET_PRODUCT: \"TRACK_GIFTS_SET_PRODUCT\",\n\n  TRACK_GIFTS_SET_PAGINATION_INFO: \"TRACK_GIFTS_SET_PAGINATION_INFO\",\n\n  TRACK_GIFTS_SET_FILTERS: \"TRACK_GIFTS_SET_FILTERS\",\n\n  TRACK_GIFTS_SET_SEARCH: \"TRACK_GIFTS_SET_SEARCH\",\n\n  TRACK_GIFTS_SET_REDIRECTING_INFO: \"TRACK_GIFTS_SET_REDIRECTING_INFO\"\n}\n\nexport const setActiveView = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_ACTIVE_VIEW,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsProduct = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PRODUCT,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsPaginationInfo = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PAGINATION_INFO,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsFilters = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_FILTERS,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsSearch = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_SEARCH,\n    payload: params\n  }\n}\n\nexport const setTrackGiftsRedirectionInfo = (params) => {\n  return {\n    type: TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_REDIRECTING_INFO,\n    payload: params\n  }\n}\n","import React from \"react\";\nimport \"./ViewBy.scss\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setActiveView} from \"../../TrackGiftsAction\";\n\nexport const TRACK_GIFTS_VIEWS = [\n  {\n    \"id\": 1,\n    \"text\": \"Gifts\"\n  },\n  {\n    \"id\": 2,\n    \"text\": \"Gift Givers\"\n  }\n]\n\nconst ViewBy = () => {\n  const activeView = useSelector(state => state.trackGifts.activeView);\n  const dispatch = useDispatch()\n\n  const changeTrackGiftView = view => {\n    dispatch(setActiveView(view))\n  }\n\n  return (\n    <div className=\"track-gift-view-by\">\n      <p className=\"text-sm\">View By</p>\n      <div className=\"view-by-toggle-section mt-1\">\n        <div\n          className={[\"view-by-toggle text-sm p-2\", activeView.id === TRACK_GIFTS_VIEWS[0].id ? \"active-view-toggle\" : \"\"].join(\" \")}\n          onClick={() => changeTrackGiftView(TRACK_GIFTS_VIEWS[0])}\n        >Gifts\n        </div>\n        <div\n          className={[\"view-by-toggle text-sm p-2\", activeView.id === TRACK_GIFTS_VIEWS[1].id ? \"active-view-toggle\" : \"\"].join(\" \")}\n          onClick={() => changeTrackGiftView(TRACK_GIFTS_VIEWS[1])}\n        >Gift\n          Givers\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewBy;","import {TRACK_GIFTS_ACTION_TYPES} from \"./TrackGiftsAction\";\nimport {combineReducers} from \"redux\";\nimport {TRACK_GIFTS_VIEWS} from \"./components/view-by/ViewBy\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// By default \"Gifts\" are selected\nconst activeView = (state = TRACK_GIFTS_VIEWS[0], action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_ACTIVE_VIEW:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst products = (state = [], action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PRODUCT:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst paginationInfo = (state = defaultData.trackGifts.pagination, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_PAGINATION_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst filters = (state = defaultData.trackGifts.filters, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_FILTERS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst search = (state = defaultData.trackGifts.search, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_SEARCH:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nconst redirectionInfo = (state = {}, action) => {\n  switch (action.type) {\n    case TRACK_GIFTS_ACTION_TYPES.TRACK_GIFTS_SET_REDIRECTING_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\n\nexport default combineReducers({\n  activeView,\n  products,\n  paginationInfo,\n  filters,\n  search,\n  redirectionInfo\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\nimport PersonaliseCheckListReducer from \"../modules/personalise-checklist/PersonaliseCheckListReducer\";\nimport Onboarding from \"../modules/onboarding/OnboardingReducer\";\nimport GuestViewReducer from \"../modules/guest-view/GuestViewReducer\";\nimport TrackGiftsReducer from \"../modules/track-gifts/TrackGiftsReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  personaliseCheckList: PersonaliseCheckListReducer,\n  onboarding: Onboarding,\n  trackGifts: TrackGiftsReducer,\n  guestView: GuestViewReducer,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n  LOGIN: {\n    VERIFY_TOKEN: APP_HOME_ROUTE + \"/verify-token/:token\"\n  },\n  REGISTRY: {\n    HOME: APP_HOME_ROUTE\n  },\n\n  MY_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/home\",\n    GIFTS_ADDED: APP_HOME_ROUTE + \"/~/gifts-added\",\n    GIFT_TO_ADD: APP_HOME_ROUTE + \"/~/gifts-to-add\",\n    GIFT_VIEW: APP_HOME_ROUTE + \"/guest-view\",\n    SHOWER: APP_HOME_ROUTE + \"/~/shower\",\n    ANNOUNCEMENTS: APP_HOME_ROUTE + \"/~/announcements\",\n    MORE: APP_HOME_ROUTE + \"/~/more\",\n    TO_DOS: APP_HOME_ROUTE + \"/~/to_dos\"\n  },\n\n  VIEW_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/view-registry\"\n  },\n\n  TRACK_GIFTS: {\n    HOME: APP_HOME_ROUTE + \"/track_gifts\"\n  },\n\n  ONBOARDING: {\n    HOME: APP_HOME_ROUTE + \"/onboarding\"\n  },\n\n  PERSONALIZE:{\n    HOME: APP_HOME_ROUTE + \"/personalize-quiz\",\n    CHECKLIST: APP_HOME_ROUTE + \"/personalize-checklist\"\n  },\n\n  GUEST_VIEW: {\n    HOME: APP_HOME_ROUTE+\"\"\n  },\n\n  FIND_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/find\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")} />\n      <div className={[\"more-option-dropdown\"].join(\" \")}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;\n","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      {props.title || props.titleContent ?\n        <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n          <div>\n            <div className=\"d-flex justify-content-between\">\n              <h1>{props.title}</h1>\n              <div className=\"d-flex\">\n                {props.headerContent ? props.headerContent : null}\n                <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n              </div>\n            </div>\n          </div>\n\n          {/* OPTIONAL CONTENT IN TITLE PORTION */}\n          {props.titleContent ? props.titleContent : null}\n\n        </Modal.Header> : null}\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n        {/* MODAL CONTENT GOES HERE */}\n        {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image text-center\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image?.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink} tabindex>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import { gql } from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  registryCategories(registryId:$registryId){\n    id,\n    isExcluded,\n    itemsCount,\n    addedItemsCount,\n    totalItemsCount,\n    subCategoriesIsExcluded,\n    category{\n      id,\n      categoryName,\n      description,\n      categoryType {\n        id,\n        name\n      }\n      isParent,\n    },\n    registrySubCategories{\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n      subCategoriesIsExcluded,\n      category{\n        id,\n        categoryName,\n        description,\n        categoryType {\n          id,\n          name\n        }\n        isParent,\n      },\n      registrySubProductTypes{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName,\n          description,\n          categoryType {\n            id,\n            name\n          }\n          isParent,\n        },\n      }\n    }\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems(\n  $registryId:Int!\n  $after: String,\n  $first: Int,\n  $isReserved: Boolean,\n  $isPurchased: Boolean,\n  $isAvailable: Boolean,\n  $sortBy: String,\n  $categories:[Int],\n  $price_Lte: Float,\n  $price_Gte: Float,\n  $store: [String],\n  ){\n    registryItems(\n      registryId:$registryId\n      isReserved: $isReserved,\n      isPurchased: $isPurchased,\n      isAvailable: $isAvailable,\n      sortBy: $sortBy,\n      categories: $categories,\n      price_Lte: $price_Lte,\n      price_Gte: $price_Gte,\n      store: $store,\n      ){\n      registryItems(after: $after, first: $first) {\n        edges {\n          node {\n            id\n            registryitemImage {\n              image\n            }\n            isGroupGift\n            isReserved\n            quantity\n            mostWanted\n            featuredOrder\n            isReserved\n            isAmountReceived\n            isPurchased\n            title\n            isCashAcceptedOnly\n            quantityStatus\n            purchasedRegistryItem{\n              id,\n              purchasedQuantity,\n              isPurchased,\n              giftMessage,\n              orderNo,\n              storeName,\n              createdTs,\n              contributionAmount\n              groupGift{\n                amountReceived\n              }\n              guestUser{\n                email,\n                firstName,\n                lastName,\n              }\n            }\n            registryCategories {\n              id\n              category {\n                categoryName\n                categoryType {\n                  id\n                  name\n                }\n              }\n            }\n            note\n            item {\n              store {\n                id\n                storeName\n              }\n              id\n              shopifyItemId\n              storeItemUrl\n              sku\n              price\n              imageUrl\n              hideTotal\n            }\n          }\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n      registryItemsAnalysisCount{\n        totalAvailable,\n        totalReserved,\n        totalPurchased,\n        maStoreItems,\n        otherStoreItems,\n        under50,\n        moreThan100,\n        between50100,\n        totalFundsReceived\n      }\n      categoryData\n    }\n  }\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:[Int]!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      registryCategories:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nconst GET_QUESTIONS = `\n  query getQuestions($registryId: Int, $isPersonalize: Boolean!){\n  questions(registryId: $registryId, isPersonalize: $isPersonalize){\n    id,\n    title,\n    answerInputType,\n    fields,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      action,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          options{\n            id\n            value\n            toastMessage\n            action\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY = `\n  query getGuestRegistry($urlSlug: String!, $after: String, $first: Int){\n    registryAsGuest(urlSlug: $urlSlug){\n      id,\n      name,\n      displayName,\n      greeting,\n      isPublic,\n      urlSlug,\n      image {\n        id\n        image\n      },\n      user {\n        firstName,\n        partnerUser {\n          firstName\n        }\n      },\n      registryItems(after: $after, first: $first) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            isReserved,\n            isCashAcceptedOnly,\n            isAmountReceived,\n            isPurchased,\n            title,\n            quantityStatus\n            purchasedRegistryItem{\n              id,\n              purchasedQuantity,\n              isPurchased,\n              giftMessage,\n              orderNo,\n              storeName,\n              createdTs,\n              contributionAmount\n              groupGift{\n                amountReceived\n              }\n              guestUser{\n                email,\n                firstName,\n                lastName,\n              }\n            }\n            registryCategories {\n              id,\n              category{\n                categoryName,\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              storeItemUrl,\n              sku,\n              price,\n              imageUrl,\n              isCashFund,\n              hideTotal,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n    }\n  }\n`\n\nconst GET_PERSONALIZE_QUESTIONS = `\nquery editablePersonalizeQuestions($registryId: Int!){\n  editablePersonalizeQuestions(registryId: $registryId){\n    id,\n    title,\n    answerInputType,\n    fields,\n    isPersonalize,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          isPersonalize,\n          options{\n            id\n            value\n            toastMessage\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_TRACK_GIFTS = `\nquery registryGifts($registryId: Int!, $giftGivers: Boolean!, $after: String, $first: Int, $isReserved: Boolean, $isAvailable: Boolean, $isPurchased: Boolean, $isFundsReceived: Boolean, $isReturned: Boolean, $searchKeyword: String) {\n  registryGifts(registryId: $registryId, giftGivers: $giftGivers, isReserved: $isReserved, isAvailable: $isAvailable, isPurchased: $isPurchased, isFundsReceived: $isFundsReceived, isReturned: $isReturned, searchKeyword: $searchKeyword) {\n    registryGiftItemsCount {\n      totalAvailable\n      totalPurchased\n      totalReserved\n      totalFundsReceived\n      totalReturned\n    }\n    gifts(after: $after, first: $first) {\n      edges {\n        node {\n          id\n          isGroupGift\n          featuredOrder\n          isReserved\n          isPurchased\n          quantity\n          isCashAcceptedOnly\n          isAmountReceived\n          item {\n            store {\n              id\n              storeName\n            }\n            storeItemUrl\n            price\n            imageUrl\n            isCashFund\n          }\n          quantityStatus\n          purchasedRegistryItem {\n            id\n            purchasedQuantity\n            isPurchased\n            giftMessage\n            orderNo\n            storeName\n            createdTs\n            contributionAmount\n            groupGift {\n              id\n              amountReceived\n              guestUser {\n                email\n                firstName\n                lastName\n                id\n              }\n            }\n            guestUser {\n              email\n              firstName\n              lastName\n              id\n            }\n          }\n          title\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n`\n\nconst GET_CASH_FUND_CATEGORIES = `\nquery getCashFund($registryId: Int!){\n  cashFundCategories(registryId:$registryId){\n    id\n    category{\n      id\n      categoryName\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY_PRODUCT = `\n  query getGuestRegistry(\n    $urlSlug: String!,\n    $after: String,\n    $first: Int,\n    $isReserved: Boolean,\n    $isPurchased: Boolean,\n    $isAvailable: Boolean,\n    $sortBy: String,\n    $categories:[Int],\n    $price_Lte: Float,\n    $price_Gte: Float,\n    $store: [String],\n    ){\n    registryAsGuest(\n      urlSlug: $urlSlug,\n      isReserved: $isReserved,\n      isPurchased: $isPurchased,\n      isAvailable: $isAvailable,\n      sortBy: $sortBy,\n      categories: $categories,\n      price_Lte: $price_Lte,\n      price_Gte: $price_Gte,\n      store: $store,\n      ){\n      registryItems(\n        after: $after,\n        first: $first,\n        ) {\n        edges{\n          node{\n            id,\n            registryitemImage{\n              image\n            }\n            isGroupGift,\n            isReserved,\n            quantity,\n            mostWanted,\n            featuredOrder,\n            isReserved,\n            isCashAcceptedOnly,\n            isAmountReceived,\n            isPurchased,\n            title,\n            quantityStatus\n            purchasedRegistryItem{\n              id,\n              purchasedQuantity,\n              isPurchased,\n              giftMessage,\n              orderNo,\n              storeName,\n              createdTs,\n              contributionAmount\n              groupGift{\n                amountReceived\n              }\n              guestUser{\n                email,\n                firstName,\n                lastName,\n              }\n            }\n            registryCategories {\n              id,\n              category{\n                categoryName,\n              }\n            }\n            note,\n            item{\n              store{\n                id,\n                storeName\n              }\n              id,\n              shopifyItemId,\n              storeItemUrl,\n              sku,\n              price,\n              imageUrl,\n              isCashFund,\n              hideTotal,\n            }\n          }\n        }\n        pageInfo{\n          endCursor,\n          hasNextPage\n        }\n      }\n      registryItemsAnalysisCount{\n        totalAvailable,\n        totalReserved,\n        totalPurchased,\n        maStoreItems,\n        otherStoreItems,\n        under50,\n        moreThan100,\n        between50100,\n        totalFundsReceived\n      }\n      categoryData\n    }\n  }\n`;\n\nconst GET_GUEST_CHECKLIST = `\n  query registryCategoriesAsGuest($urlSlug: String!){\n    registryCategoriesAsGuest(urlSlug: $urlSlug){\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n       category{\n        id,\n        categoryName,\n        categoryType{\n          id,\n          name\n        }\n      },\n      registrySubCategories{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName\n        },\n        registrySubProductTypes{\n          id,\n          isExcluded,\n          itemsCount,\n          addedItemsCount,\n          totalItemsCount,\n          category{\n            id,\n            categoryName\n          },\n        }\n      }\n    }\n  }\n`;\n\nconst FIND_REGISTRY = `\n  query findRegistry($registryName: String!){\n    findRegistry(registryName: $registryName){\n      edges{\n        node{\n          id,\n          name,\n          displayName,\n          urlSlug,\n          createdTs,\n          dueDate,\n          user{\n            id,\n            defaultAddress{\n              city,\n              province\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_TRACK_GIFTS,\n  GET_CASH_FUND_CATEGORIES,\n  GET_GUEST_REGISTRY_PRODUCT,\n  GET_GUEST_CHECKLIST,\n  FIND_REGISTRY\n};\n\n// Example to use queries added in home.jsx","const backendId = \"https://3.12.191.197\";\n// const backendId = \"http://localhost:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport {Cookies} from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: {\"Authorization\": cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"}\n});\n\nconst axiosInstanceNoToken = axios.create({\n  baseURL: apiURL\n});\n\nconst axiosInstanceNoHeader = axios.create({\n  baseURL: apiURL\n});\n\nexport function graphQLNoToken(data) {\n  return axiosInstanceNoToken.post(\"/graphql\", data);\n}\n\nexport function graphQLNoHeader(data, options) {\n  return axiosInstanceNoHeader.post(\"/graphql\", data, options);\n}\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nexport function verifyAccessToken(token) {\n  return axiosInstanceNoToken.post(\"/user/verify/token\", {}, {\n    headers: {\n      'Authorization': `Token ${token}`\n    }\n  });\n}\n\nexport function getAnotherRegistryProducts(data) {\n  return axiosInstance.post(\"/registry/import\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}\n\nexport function addProductToCart(data) {\n  return axios.post(\"/cart/add.js\", data);\n}","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n  VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL + \"/media/\"\n}\n\nexport const FILTERS = {\n  CATEGORIES_DISPLAY: \"Categories\",\n  PRICE_DISPLAY: \"Price\",\n  PRICE_DISPLAY_1: \"Under $50\",\n  PRICE_DISPLAY_2: \"$50 - $100\",\n  PRICE_DISPLAY_3: \"more than $100\",\n  STORE_DISPLAY: \"Store\",\n  MONICA_AND_ANDY_DISPLAY: \"Monica + Andy\",\n  ELSEWHERE_DISPLAY: \"Elsewhere\",\n  AVAILABLE_DISPLAY: \"Available\",\n  RESERVED_DISPLAY: \"Reserved\",\n  PURCHASED_DISPLAY: \"Purchased\",\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'https%3A%2F%2Fmonicaandandy-watertower.myshopify.com%2Fpages%2Fma_bady_registry_bookmarklet%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"\n\nexport const IMPORT_REGISTRY_EMAIL = \"storks@monicaandandy.com\"\n\nexport const TRACK_GIFTS_PRODUCTS_PER_REQUEST = 20\nexport const M_A_STORE_NAME = \"monicaandandy\"\n\nexport const M_A_FORGOT_PASSWORD_LINK = \"https://monicaandandy-watertower.myshopify.com/account/login#recover\"\nexport const VIEW_GIFT_PRODUCTS_PER_REQUEST = 20\n\nexport const CURRENCY = \"$\"\n\nexport const LOCAL_STORAGE_TRACK_GIFT_BUY_KEY = \"babyRegistryVisitedItems\"\n","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    }\n  }\n}\n`\n\nconst REGISTER_USER = `\nmutation register_user($name: String!, $email: String!, $password: String!){\n  registerUser(registerInput:{\n      name:$name,\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\nconst SAVE_QUESTION_RESPONSE = `\nmutation addRegistryQuestionOption($registryId: Int!, $answers: [RegistryQuestionOptionInput]!){\n  addRegistryMultipleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $answers){\n    message\n  }\n}\n`\n\nconst SAVE_REGISTRY_DATA = `\nmutation saveRegistryData($registryData:RegistryInput!, $registryItems:[StoreInput]){\n  importRegistry(registryData: $registryData, registryItems: $registryItems) {\n    message\n  }\n}\n`\n\nconst LOGIN_USER = `\nmutation login_user($email: String!, $password: String!){\n  loginUser(loginInput:{\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\n\nconst ADD_PARTNER_ACCOUNT = `\nmutation addPartner($partnerDetail: AddPartnerAccountInput!){\n  addPartnerAccount(addPartnerAccountInput:$partnerDetail){\n    message\n  }\n}\n`\n\nconst SAVE_UPDATED_CHECKLIST = `\nmutation addDesiredChecklistItemCount($registryId:Int!, $itemCountData:[DesiredItemCountInput]!){\n  addDesiredChecklistItemCount(registryId: $registryId, itemCountData: $itemCountData){\n    message\n  }\n}\n`\n\nconst SAVE_SINGLE_QUESTION_RESPONSE = `\nmutation updateOrCreateRegistrySingleQuestionOption($registryId:Int!, $registryQuestionOptionInput: RegistryQuestionOptionInput!, $returnTo: String){\n  updateOrCreateRegistrySingleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $registryQuestionOptionInput, returnTo: $returnTo){\n    message,\n    redirectionUrl\n  }\n}\n`\n\nconst CREATE_REGISTRY = `\nmutation{\n  createRegistry{\n    registry{\n      id\n    },\n    message,\n    status\n  }\n}\n`\n\nconst TRACK_GIFTS_ADD_GIFT = `\nmutation addGift($registryId: Int!, $gifts: [GiftInput]){\n  addGift(registryId: $registryId, gifts: $gifts){\n   message,\n   status\n  }\n}\n`\n\nconst MARK_AS_PURCHASED_BY_GUEST = `\nmutation markAsPurchasedByGuest(\n  $registryUrlSlug: String!,\n  $registryItemId: Int!,\n  $isPurchased: Boolean!,\n  $storeName: String!,\n  $purchasedQuantity: Int,\n  $contributionAmount: Float,\n  $name: String!,\n  $email: String!,\n  $giftMessage: String,\n  $orderNumber: String,\n  ){\n  markAsPurchasedByGuest(registryUrlSlug: $registryUrlSlug,registryItemId: $registryItemId ,purchasedRegistryItemInput:{\n    isPurchased: $isPurchased,\n    storeName: $storeName,\n    purchasedQuantity: $purchasedQuantity,\n    contributionAmount: $contributionAmount,\n    giftMessage: $giftMessage,\n    orderNumber: $orderNumber,\n  },guestUserInput:{\n    name: $name,\n    email: $email\n  }){\n    message,\n    status\n  }\n}\n`;\n\nconst GIVE_GROUP_GIFT_GUEST = `\nmutation giveGroupGiftMa(\n  $registryId: Int!,\n  $registryItemId: Int!,\n  $contributionAmount: Float!\n  ){\n  giveGroupGiftMa(\n    registryId: $registryId,\n    registryItemId: $registryItemId,\n    contributionAmount: $contributionAmount\n    ){\n    message,\n    status,\n    variantId\n  }\n}\n`;\n\nconst CASH_FUND_GIFT_GUEST = `\nmutation cashFundGift(\n  $registryId: Int!,\n  $registryItemId: Int!,\n  $contributionAmount: Float!\n  ){\n    cashFundGift(\n    registryId: $registryId,\n    registryItemId: $registryItemId,\n    contributionAmount: $contributionAmount\n    ){\n    message,\n    status,\n    variantId\n  }\n}\n`;\n\nconst MARK_AS_PURCHASED = `\nmutation markAsPurchased($registryId: Int!, $registryItemId: Int!, $purchasedRegistryItemInput: PurchasedRegistryItemInput!, $guestUserInput: GuestUserInput!){\n  markAsPurchased(registryId:$registryId,registryItemId:$registryItemId,purchasedRegistryItemInput:$purchasedRegistryItemInput,guestUserInput:$guestUserInput){\n    message,\n    status\n  }\n}`\n\n\nexport {\n  TOGGLE_MUST_HAVE,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY,\n  UPDATE_VIEW_REGISTRY_POISTION,\n  UPDATE_REGISTRY_URL,\n  SAVE_REGISTRY_DATA,\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  SAVE_UPDATED_CHECKLIST,\n  SAVE_SINGLE_QUESTION_RESPONSE,\n  CREATE_REGISTRY,\n  TRACK_GIFTS_ADD_GIFT,\n  MARK_AS_PURCHASED_BY_GUEST,\n  GIVE_GROUP_GIFT_GUEST,\n  CASH_FUND_GIFT_GUEST,\n  MARK_AS_PURCHASED\n};\n","import React from \"react\";\nimport \"./GiftCardPill.scss\";\n\nconst GiftCardPill = (props) => {\n  let className = \"\"\n  let text = \"\"\n  switch (props.variant) {\n    case \"purchased\":\n      className = \"track-gifts-purchased-pill\"\n      text = \"Purchased\"\n      break\n    case \"reserved\":\n      className = \"track-gifts-reserved-pill\"\n      text = \"Reserved\"\n      break\n    case \"received\":\n      className = \"track-gifts-received-pill\"\n      text = \"Received\"\n      break\n    default:\n      className = \"\"\n      break\n  }\n\n  return (\n    <div className={[\"track-gifts-pills px-2 d-inline-block\", className, props.className ? props.className : ''].join(\" \")}>\n      <span className=\"text-sm font-medium\">{props.amount != null || undefined ? `$${props.amount}` : null} {text}</span>\n    </div>\n  )\n}\n\nexport default GiftCardPill","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = React.forwardRef((props, ref) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n    ref={ref}\n    disabled={props.disabled ? props.disabled : false}\n  >{props.children}</button>\n})\n\nexport default ButtonComponent;","import React from \"react\";\nimport \"./GiftStatusPill.scss\";\n\nconst GiftStatusPill = (props) => {\n  let pillVariantClass = \"\"\n\n  if (props.variant === 'purchased') {\n    pillVariantClass = \"purchased-pill\";\n  } else if (props.variant === 'reserved') {\n    pillVariantClass = \"reserved-pill\";\n  } else if (props.variant === 'default') {\n    pillVariantClass = \"default-pill\";\n  } else {\n    pillVariantClass = \"default-pill\";\n  }\n\n  return (\n    <div\n      className={[\"gift-status-pill px-3\", pillVariantClass, props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"text-sm font-medium\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default GiftStatusPill;","import React from \"react\";\nimport './ProductDetailsModel.scss';\nimport GiftStatusPill from '../gift-status-pill/GiftStatusPill'\n\nconst ProductDetailsModel = (props) => {\n  return (\n    <div className=\"row product-details-model\">\n      <div className=\"col-12 product-details-image\">\n        {props.data?.item.imageUrl ?\n          <img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.title} />\n          :\n          <div className=\"added-card-no-product-image\" />\n        }\n        {props.data.mostWanted ?\n          <div\n            className=\"d-flex align-items-center product-details-have product-details-must-have-btn px-1 added-gift-must-have-active\">\n            <i className=\"icon mr-1 d-block heart-fill\" />\n            <p className=\"text-sm product-details-must-have-text\">Must Have</p>\n          </div>\n          : <></>}\n        <div className=\"px-3 mt-2\">\n          <p className=\"font-medium\">{props.data.title}</p>\n          <a className=\"product-detail-link text-sm font-medium mt-1\" href={props.data.item.storeItemUrl} target=\"_blank\">View Details</a>\n          <div className=\"d-flex align-items-baseline\">\n            {props.data.isGroupGift ?\n              <div className=\"guest-toggle-pills px-1 mr-1 d-flex align-items-center\">\n                <i className=\"guest-icon-active mr-1\" />\n                <span className=\"text-sm guest-icon-text\">Group Gift</span>\n              </div> : null}\n            <p className=\"mt-2\">${props.data.item.price}</p>\n          </div>\n          {props.data.note ?\n            <>\n              <p className=\"mt-2 text-sm product-note font-medium\">Note:</p>\n              <p className=\"text-sm product-note\">{props.data.note}</p>\n            </>\n            : null}\n          <div className=\"d-flex mt-2 mb-3\">\n            {props.data.quantityStatus.purchased_quantity ?\n              <GiftStatusPill className=\"mr-1\" variant=\"purchased\" text={props.data.quantityStatus.purchased_quantity + \" Purchased\"} />\n              : null}\n            {props.data.quantityStatus.reserved_quantity ?\n              <GiftStatusPill className=\"mr-1\" variant=\"reserved\" text={props.data.quantityStatus.reserved_quantity + \"Reserved\"} />\n              : null}\n            {props.data.quantityStatus.still_needed ?\n              <GiftStatusPill className=\"mr-1\" variant=\"default\" text={`${props.data.quantityStatus.still_needed} ${props.data.quantityStatus.purchased_quantity === 0 ? \" Requested\" : \" Still Needed\"}`} />\n              : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductDetailsModel;","import React from \"react\";\nimport \"./BuyNow.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {LOCAL_STORAGE_TRACK_GIFT_BUY_KEY} from \"../../../../utils/constants\";\nimport {connect} from \"react-redux\";\nimport {setTrackGiftsRedirectionInfo} from \"../../TrackGiftsAction\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport ProductDetailsModel from \"../../../commons/components/product-details-model/ProductDetailsModel\";\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {toast} from \"react-toastify\";\n\nconst EMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\nclass BuyNow extends React.Component {\n\n  state = {\n    show: false,\n    quantity: 1,\n    storeName: \"\",\n    orderNumber: \"\",\n    guestName: \"\",\n    guestEmail: \"\",\n    errors: {}\n  }\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  incrementQuantity = () => {\n    this.setState((prevState, _) => ({\n      quantity: prevState.quantity + 1\n    }))\n  }\n\n  decrementQuantity = () => {\n    this.setState((prevState, _) => ({\n      quantity: prevState.quantity - 1 > 0 ? prevState.quantity - 1 : 1\n    }))\n  }\n\n  storeNameChangeHandler = ev => {\n    this.setState({\n      storeName: ev.target.value\n    })\n  }\n\n  orderNumberChangeHandler = ev => {\n    this.setState({\n      orderNumber: ev.target.value\n    })\n  }\n\n  guestNameChangeHandler = ev => {\n    let errorState = {...this.state.errors}\n    if (this.state.errors.guestName){\n      delete errorState.guestName\n    }\n\n    this.setState({\n      guestName: ev.target.value,\n      errors: errorState\n    })\n  }\n\n  guestEmailChangeHandler = ev => {\n    let errorState = {...this.state.errors}\n    if (this.state.errors.guestEmail){\n      delete errorState.guestEmail\n    }\n    this.setState({\n      guestEmail: ev.target.value,\n      errors: errorState\n    })\n  }\n\n  validData = () => {\n    let errors = {}\n    let valid = true\n    if (this.state.guestName.length <= 0){\n      errors['guestName'] = \"This field is mandatory\"\n      valid = false\n    }\n\n    if (this.state.guestEmail.length <= 0){\n      errors['guestEmail'] = \"This field is mandatory\"\n      valid = false\n    } else if (!this.state.guestEmail.match(EMAIL_RE)){\n        errors['guestEmail'] = \"Invalid Email address\"\n        valid = false\n    }\n\n    this.setState({\n      errors: errors\n    })\n    return valid\n  }\n\n  saveClickHandler = () => {\n    if (this.validData()) {\n      return false\n    }\n\n    //  TODO: Integrate Buy Now API\n  }\n\n  buyNowClickHandler = () => {\n    let createNewRecord = false\n    let updateProduct = false\n    let openModal = false\n    let jsonVisitedItems = JSON.parse(localStorage.getItem(LOCAL_STORAGE_TRACK_GIFT_BUY_KEY))\n\n    if (jsonVisitedItems) {\n      for (let item of jsonVisitedItems) {\n\n        // If registry doesn't match then delete old and create new record\n        if (Number(item.rId) === Number(this.props.stateRegistryInfo.id)) {\n          if (Number(item.pId) === Number(this.props.productData.id)) {\n\n            let productTimestamp = new Date(item.timestamp)\n            let currentDate = new Date()\n\n            // Resetting hours because only checking the dates\n            productTimestamp.setHours(0, 0, 0, 0)\n            currentDate.setHours(0, 0, 0, 0)\n\n            // Checking if current date is same as product time stamp\n            // After 1 day, this product entry will be invalid\n            if (currentDate - productTimestamp === 0) {\n              openModal = true\n            } else {\n              updateProduct = true;\n              createNewRecord = true;\n            }\n            break;\n          } else {\n            updateProduct = true;\n            createNewRecord = true;\n          }\n        } else {\n          createNewRecord = true;\n          break;\n        }\n      }\n    } else {\n      createNewRecord = true;\n    }\n\n    if (createNewRecord && !openModal) {\n      const newVisitedItemsData = {\n        rId: this.props.stateRegistryInfo.id,\n        pId: this.props.productData.id,\n        timestamp: new Date()\n      }\n\n      let foundProduct = false\n      let newData = null\n      if (jsonVisitedItems) {\n        newData = jsonVisitedItems.map(item => {\n          if (Number(item.rId) === Number(this.props.stateRegistryInfo.id) && Number(item.pId) === Number(this.props.productData.id)) {\n            foundProduct = true\n            return newVisitedItemsData\n          }\n          return item\n        })\n        if (!foundProduct) {\n          newData.push(newVisitedItemsData)\n        }\n      }\n\n      // Updating localStorage\n      localStorage.setItem(LOCAL_STORAGE_TRACK_GIFT_BUY_KEY, JSON.stringify(updateProduct ? newData : [newVisitedItemsData]))\n\n      //Setting Redirection Store\n      this.props.dispatch(setTrackGiftsRedirectionInfo({store: this.props.productData.item?.store?.storeName}))\n\n      window.open(this.props.productData.item.storeItemUrl, \"_blank\")\n\n    } else {\n      this.setState({\n        show: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className={[\"track-gifts-buy-now\", this.props.className ? this.props.className : \"\"].join(\" \")}>\n          <Button\n            variant=\"primary\"\n            onClick={this.buyNowClickHandler}\n            className=\"px-3 py-1 font-medium text-body track-gifts-buy-now-button\"\n          >Buy Now</Button>\n        </div>\n        {this.state.show ?\n          <Modal\n            show={this.state.show}\n            title=\"Buy Now\"\n            footer={\n              <Button\n                variant=\"primary\"\n                onClick={this.saveClickHandler}\n                className=\"text-body font-medium py-1 px-3 track-gifts-buy-now-modal-button\"\n              >Save & Close</Button>\n            }\n            closeModal={this.modalCloseHandler}>\n            <div className=\"track-gifts-buy-now-modal\">\n              <div className=\"row\">\n\n                <div className=\"col-5 track-gifts-buy-now-product-detail\">\n                  <div className=\"mr-3\">\n                    <ProductDetailsModel data={this.props.productData}/>\n                  </div>\n                </div>\n\n                <div className=\"col-7\">\n                  <div className=\"ml-3 mr-5 pt-4\">\n\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <p className=\"text-body font-medium\">Give us some more details please</p>\n                        <p className=\"text-sm\">This info will help keep track of all their gifts.</p>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm track-gifts-buy-now-required\">Name</label>\n                          <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={this.state.guestName}\n                            onChange={(ev) => this.guestNameChangeHandler(ev)}\n                            className={[\"px-2 py-1 text-body track-gifts-buy-now-input w-100 mw-100\", this.state.errors.guestName ? 'track-gifts-buy-now-input-error' : ''].join(\" \")}\n                            placeholder=\"John Doe\"/>\n                          {this.state.errors.guestName ?\n                            <label\n                              className=\"text-sm track-gifts-buy-now-input-error-text\">{this.state.errors.guestName}</label>\n                            : null}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm track-gifts-buy-now-required\">Email\n                            Address</label>\n                          <input\n                            type=\"text\"\n                            name=\"user-email\"\n                            value={this.state.guestEmail}\n                            onChange={(ev) => this.guestEmailChangeHandler(ev)}\n                            className={[\"px-2 py-1 text-body track-gifts-buy-now-input w-100 mw-100\", this.state.errors.guestEmail ? 'track-gifts-buy-now-input-error' : ''].join(\" \")}\n                            placeholder=\"johndoe@email.com\"/>\n                            {this.state.errors.guestEmail ?\n                            <label\n                              className=\"text-sm track-gifts-buy-now-input-error-text\">{this.state.errors.guestEmail}</label>\n                            : null}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm\">Quantity</label>\n                          <Counter\n                            className=\"mt-1\"\n                            counter={this.state.quantity}\n                            incrementHandler={this.incrementQuantity}\n                            decrementHandler={this.decrementQuantity}/>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col-6\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm\">Store Name</label>\n                          <input\n                            type=\"text\"\n                            name=\"storeName\"\n                            value={this.state.storeName}\n                            onChange={(ev) => this.storeNameChangeHandler(ev)}\n                            className=\"px-2 py-1 text-body track-gifts-buy-now-input w-100 mw-100\"\n                            placeholder=\"Eg. Target\"/>\n                        </div>\n                      </div>\n                      <div className=\"col-6\">\n                        <div className=\"track-gifts-buy-now-modal-input-container\">\n                          <label className=\"track-gifts-buy-now-label text-sm\">Order Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"orderNumber\"\n                            value={this.state.orderNumber}\n                            onChange={(ev) => this.orderNumberChangeHandler(ev)}\n                            className=\"px-2 py-1 text-body track-gifts-buy-now-input w-100 mw-100\"\n                            placeholder=\"0012345\"/>\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </Modal>\n          : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateRegistryInfo: state.registry.info\n})\n\nexport default connect(\n  mapStateToProps\n)(BuyNow);","import React from \"react\";\nimport \"./MarkAsPurchased.scss\";\nimport {connect} from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport ProductDetailsModel from \"../product-details-model/ProductDetailsModel\";\nimport Counter from \"../counter/Counter\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {MARK_AS_PURCHASED} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {toast} from \"react-toastify\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\n\nconst EMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\nclass MarkAsPurchased extends React.Component {\n  state = {\n    quantity: 1,\n    name: \"\",\n    email: \"\",\n    storeName: \"\",\n    orderNumber: \"\",\n    note: \"\",\n    errors: {},\n    contributionAmount: 0.00\n  }\n\n  closeModalHandler = () => {\n    this.setState({\n      quantity: 1,\n      name: \"\",\n      email: \"\",\n      storeName: \"\",\n      orderNumber: \"\",\n      note: \"\",\n      errors: {},\n      contributionAmount: 0.00\n    })\n    this.props.closeModal()\n  }\n\n  incrementQuantity = () => {\n    this.setState((prevState, _) => ({\n      quantity: prevState.quantity + 1\n    }))\n  }\n\n  decrementQuantity = () => {\n    this.setState((prevState, _) => ({\n      quantity: prevState.quantity - 1 > 0 ? prevState.quantity - 1 : 1\n    }))\n  }\n\n  validData = () => {\n    let errors = {}\n    let valid = true\n    if (this.state.name.length <= 0) {\n      errors['name'] = \"This field is mandatory\"\n      valid = false\n    }\n\n    if (this.state.email.length <= 0) {\n      errors['email'] = \"This field is mandatory\"\n      valid = false\n    } else if (!this.state.email.match(EMAIL_RE)) {\n      errors['email'] = \"Invalid Email address\"\n      valid = false\n    }\n\n    if (this.props.data.isGroupGift) {\n      if (this.state.contributionAmount.length <= 0) {\n        errors['contributionAmount'] = \"This field is mandatory\"\n        valid = false\n      } else if (Number(this.state.contributionAmount) <= 0) {\n        errors['contributionAmount'] = \"Please enter valid amount\"\n        valid = false\n      }\n    }\n\n    this.setState({\n      errors: errors\n    })\n    return valid\n  }\n\n  // Event Handlers\n  nameChangeHandler = (ev) => {\n    let errors = {...this.state.errors}\n    if (errors.name) {\n      delete errors.name\n    }\n\n    this.setState({\n      name: ev.target.value,\n      errors: errors\n    })\n  }\n\n  emailChangeHandler = (ev) => {\n    let errors = {...this.state.errors}\n    if (errors.email) {\n      delete errors.email\n    }\n\n    this.setState({\n      email: ev.target.value,\n      errors: errors\n    })\n  }\n\n  storeNameChangeHandler = (ev) => {\n    this.setState({\n      storeName: ev.target.value\n    })\n  }\n\n  orderNumberChangeHandler = (ev) => {\n    this.setState({\n      orderNumber: ev.target.value\n    })\n  }\n\n  noteChangeHandler = (ev) => {\n    this.setState({\n      note: ev.target.value\n    })\n  }\n\n  contributionAmountChangeHandler = (ev) => {\n    ev.persist();\n    let errors = {...this.state.errors}\n    if (errors.contributionAmount) {\n      delete errors.contributionAmount\n    }\n\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice >= 0) {\n        this.setState({\n          contributionAmount: ev.target.value,\n          errors: errors\n        })\n      }\n    } else {\n      this.setState({\n        contributionAmount: \"\",\n        errors: errors\n      })\n    }\n  }\n\n  saveClickHandler = () => {\n    if (!this.validData()) {\n      return false\n    }\n\n    let reqData = {\n      query: MARK_AS_PURCHASED,\n      variables: {\n        registryId: this.props.stateRegistryInfo.id,\n        registryItemId: this.props.data.id,\n        purchasedRegistryItemInput: {\n          isPurchased: true,\n          storeName: this.state.storeName,\n          orderNumber: this.state.orderNumber,\n          giftMessage: this.state.note\n        },\n        guestUserInput: {\n          name: this.state.name,\n          email: this.state.email\n        }\n      }\n    }\n\n    if (this.props.data.isGroupGift) {\n      reqData.variables.purchasedRegistryItemInput['contributionAmount'] = this.state.contributionAmount\n    } else {\n      reqData.variables.purchasedRegistryItemInput['purchasedQuantity'] = this.state.quantity\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data && res.data.data.markAsPurchased) {\n        toast.success(<p><b>{this.props.data.title}</b> updated successfully.</p>)\n\n        //Fetching all current products\n        getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch, this.props.stateTrackGiftsProducts.length)\n        this.closeModalHandler()\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred while updating product.\")\n      console.error(err.response);\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          title={this.props.data.isGroupGift ? \"Record a contribution\" : \"Record a purchase\"}\n          footer={(\n            <Button\n              variant=\"primary\"\n              disabled={this.state.name.length <= 0 || this.state.email.length <= 0}\n              onClick={this.saveClickHandler}\n              className=\"font-medium px-3 py-1\">Save & Close</Button>\n          )}\n          closeModal={this.closeModalHandler}>\n\n          <div className=\"row add-gift-another-store mark-as-purchased-modal\">\n            <div className=\"col-5 mt-4 add-gift-image-select\">\n              <div className=\"mr-3\">\n                <ProductDetailsModel data={this.props.data}/>\n              </div>\n            </div>\n            <div className=\"col-7 mt-4\">\n              <div className=\"mx-3\">\n\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <p className=\"text-body font-medium\">Already got it?</p>\n                    <p className=\"text-sm\">Let guests know, so you don’t get another.</p>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col mt-4 m-a-input-container\">\n                    <p className=\"text-sm font-medium add-gift-store-label\">Name</p>\n                    <input\n                      className={[\"w-100 mt-1 px-2 py-1\", this.state.errors.name ? \"mark-as-purchased-error\" : \"\"].join(\" \")}\n                      type='text'\n                      placeholder='John Doe'\n                      value={this.state.name}\n                      onChange={(ev) => this.nameChangeHandler(ev)}\n                    />\n                    {this.state.errors.name ?\n                      <label className=\"text-sm mark-as-purchased-error-text\">{this.state.errors.name}</label>\n                      : null}\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col mt-4 m-a-input-container\">\n                    <p className=\"text-sm font-medium add-gift-store-label\">Email Address</p>\n                    <input\n                      className={[\"w-100 mt-1 px-2 py-1\", this.state.errors.email ? \"mark-as-purchased-error\" : \"\"].join(\" \")}\n                      type='text'\n                      placeholder='johndoe@email.com'\n                      value={this.state.email}\n                      onChange={(ev) => this.emailChangeHandler(ev)}\n                    />\n                    {this.state.errors.email ?\n                      <label className=\"text-sm mark-as-purchased-error-text\">{this.state.errors.email}</label>\n                      : null}\n                  </div>\n                </div>\n\n                {this.props.data.isGroupGift ?\n                  <div className=\"row\">\n                    <div className=\"col mt-4 m-a-input-container\">\n                      <p className=\"text-sm font-medium add-gift-store-label\">Amount</p>\n                      <div className=\"price-input mt-1\">\n                        <input\n                          type=\"text\"\n                          className={[\"w-100 pr-2 py-1 text-body pl-5\", this.state.errors.contributionAmount ? \"mark-as-purchased-error\" : \"\"].join(\" \")}\n                          value={this.state.contributionAmount}\n                          onChange={(ev) => this.contributionAmountChangeHandler(ev)}\n                        />\n                      </div>\n                      {this.state.errors.contributionAmount ?\n                        <label\n                          className=\"text-sm mark-as-purchased-error-text\">{this.state.errors.contributionAmount}</label>\n                        : null}\n                    </div>\n                  </div>\n                  :\n                  <>\n                    <div className=\"row\">\n                      <div className=\"col mt-4 m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                        <Counter\n                          className=\"mt-2\"\n                          counter={this.state.quantity}\n                          incrementHandler={this.incrementQuantity}\n                          decrementHandler={this.decrementQuantity}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-6 mt-4 m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Store Name</p>\n                        <input\n                          className=\"w-100 mt-1 px-2 py-1\"\n                          type='text'\n                          placeholder='Eg. Target'\n                          value={this.state.storeName}\n                          onChange={(ev) => this.storeNameChangeHandler(ev)}\n                        />\n                      </div>\n                      <div className=\"col-6 mt-4 m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Order Number</p>\n                        <input\n                          className=\"w-100 mt-1 px-2 py-1\"\n                          type='text'\n                          placeholder='0012345'\n                          value={this.state.orderNumber}\n                          onChange={(ev) => this.orderNumberChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </>\n                }\n\n\n                <div className=\"row\">\n                  <div className=\"col mt-4 m-a-input-container\">\n                    <p className=\"text-sm font-medium add-gift-store-label\">Gift Message</p>\n                    <textarea className=\"w-100 mt-1 text-body p-1\"\n                              rows=\"2\"\n                              placeholder=\"Write a message for gift receiver\"\n                              value={this.state.note}\n                              onChange={(ev) => this.noteChangeHandler(ev)}\n                    />\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsSearch: state.trackGifts.search\n})\n\nexport default connect(\n  mapStateToProps\n)(MarkAsPurchased);","import React from \"react\";\nimport \"./MarkPurchased.scss\";\nimport MarkAsPurchased from \"../../../commons/components/mark-as-purchased/MarkAsPurchased\";\n\nclass MarkPurchased extends React.Component{\n  state = {\n    show: false\n  }\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openPurchasedModal = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      show: true\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <a\n          href=\"#\"\n          className=\"mark-purchased-link font-medium text-sm\"\n          onClick={(ev) => this.openPurchasedModal(ev)}>Record A Purchase</a>\n        <MarkAsPurchased\n          show={this.state.show}\n          closeModal={this.modalCloseHandler}\n          data={this.props.data}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MarkPurchased;","import React from \"react\";\nimport \"./GiftCard.scss\";\nimport GiftCardPill from \"../gift-card-pill/GiftCardPill\";\nimport {CURRENCY} from \"../../../../utils/constants\";\nimport BuyNow from \"../buy-now/BuyNow\";\nimport MarkPurchased from \"../mark-purchased/MarkPurchased\";\nimport moment from 'moment';\n\nclass GiftCard extends React.Component {\n  friendsDetailRef = React.createRef()\n\n  toggleFriendsDetail = e => {\n    e.preventDefault()\n    if (this.friendsDetailRef.current) {\n      this.friendsDetailRef.current.classList.toggle(\"track-gifts-show-friends-detail\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-track-gifts-card pt-3 pb-4\">\n        <div className=\"row\">\n\n          <div className=\"col-1\">\n            {this.props.data.item.imageUrl ?\n              <img src={this.props.data.item.imageUrl} className=\"track-gifts-card-image\"/>\n              :\n              <div className=\"track-gifts-no-product-image\"/>\n            }\n          </div>\n\n          <div className=\"col-5\">\n            <div className=\"track-gifts-product-description pl-1\">\n              <div className=\"d-flex\">\n                <h4\n                  className={[\"font-medium track-gifts-product-title\", !this.props.data.isGroupGift && this.props.data.purchasedRegistryItem.length > 0 && this.props.data.purchasedRegistryItem[0].giftMessage && this.props.data.purchasedRegistryItem[0].guestUser ? \"mr-5\" : \"mr-9\"].join(\" \")}>\n                  {this.props.data.title}\n                </h4>\n                {!this.props.data.isGroupGift && this.props.data.purchasedRegistryItem.length > 0 && this.props.data.purchasedRegistryItem[0].giftMessage && this.props.data.purchasedRegistryItem[0].guestUser ?\n                  <button className=\"ml-auto track-gifts-gift-message-container text-left\">\n                    <div className=\"track-gifts-gift-message-content p-5\">\n                      <h3>Gift Message</h3>\n                      <p\n                        className=\"text-body mt-5 track-gifts-gift-message\">{this.props.data.purchasedRegistryItem[0].giftMessage}</p>\n                      <p\n                        className=\"mt-3 text-sm font-medium\">{`${this.props.data.purchasedRegistryItem[0].guestUser.firstName} ${this.props.data.purchasedRegistryItem[0].guestUser.lastName ? `${this.props.data.purchasedRegistryItem[0].guestUser.lastName[0]}.` : ''}`}</p>\n                    </div>\n                  </button>\n                  : null}\n\n              </div>\n              {this.props.data.purchasedRegistryItem.length > 0 && (this.props.data.purchasedRegistryItem[0].storeName || this.props.data.purchasedRegistryItem[0].orderNo) ?\n                <p\n                  className=\"text-body\">{this.props.data.purchasedRegistryItem[0].storeName ? this.props.data.purchasedRegistryItem[0].storeName : ''} {this.props.data.purchasedRegistryItem[0].orderNo ? '| #' + this.props.data.purchasedRegistryItem[0].orderNo : ''}</p>\n                : null}\n\n\n              {this.props.data.item.isCashFund ?\n                <div className=\"mt-2\">\n                  {this.props.data.purchasedRegistryItem.length > 0 ?\n                    <div>\n                      <span\n                        className=\"text-sm font-medium\">{`${CURRENCY}${this.props.data.purchasedRegistryItem[0].groupGift.amountReceived}`}</span>\n                      <span className=\"text-sm\">{` of ${CURRENCY}${this.props.data.item.price} received`}</span>\n                      <div className=\"track-gifts-cash-fund-progress-bar\">\n                        <div className=\"track-gifts-cash-fund-progress mw-100\"\n                             style={{width: `${(this.props.data.purchasedRegistryItem[0].groupGift.amountReceived / this.props.data.item.price) * 100}%`}}/>\n                      </div>\n                    </div>\n                    : null}\n\n                </div>\n                :\n                <div className=\"mt-2\">\n                  {this.props.data.isPurchased ? <GiftCardPill variant=\"purchased\" className=\"mr-1\"/> : null}\n                  {this.props.data.isReserved ? <GiftCardPill variant=\"reserved\" className=\"mr-1\"/> : null}\n                  {this.props.data.isCashAcceptedOnly && this.props.data.isAmountReceived ?\n                    <GiftCardPill variant=\"received\" amount={this.props.data.item.price}/> : null}\n                  {/* TODO: Add date of purchased */}\n                  {this.props.data.purchasedRegistryItem.length > 0 && this.props.data.purchasedRegistryItem[0].createdTs ?\n                    <span\n                      className=\"text-sm track-gifts-purchased-time\">{moment(this.props.data.purchasedRegistryItem[0].createdTs).format('MMM DD, YYYY')}</span>\n                    : null}\n                </div>\n              }\n\n\n            </div>\n          </div>\n\n          <div className=\"col-6 d-flex\">\n            {this.props.data.isGroupGift ?\n              // Group Gift\n\n              (this.props.data.purchasedRegistryItem.length > 0 ?\n                <div className=\"track-gifts-group-users-details\">\n                  <p\n                    className=\"text-sm font-medium\">{`${this.props.data.purchasedRegistryItem[0].otherUsers.length} friends`}</p>\n                  <a href=\"#\" className=\"track-gifts-view-friends-link text-sm font-medium\"\n                     onClick={(e) => this.toggleFriendsDetail(e)}>View</a>\n                  <div ref={this.friendsDetailRef} className=\"track-gifts-friends-detail pt-3 pb-1\">\n                    <div className=\"friends-detail-header d-flex pb-2 px-3\">\n                      <p\n                        className=\"text-sm font-medium\">{`${this.props.data.purchasedRegistryItem[0].otherUsers.length} friends`}</p>\n                      <i className=\"icon-close close-friends-detail-icon ml-auto\"\n                         onClick={(e) => this.toggleFriendsDetail(e)}/>\n                    </div>\n                    <div className=\"px-3\">\n                      <table>\n                        {this.props.data.purchasedRegistryItem[0].otherUsers.map(user => (\n\n                          <tr className=\"friend-detail\">\n                            <td>\n                              <div className=\"py-2 mr-8\">\n                                <p\n                                  className=\"text-sm font-medium\">{`${user.guestUser.firstName ? user.guestUser.firstName : ''} ${user.guestUser.lastName ? user.guestUser.lastName : ''}`}</p>\n                                <p className=\"text-sm friend-user-email\">{user.guestUser.email}</p>\n                              </div>\n                            </td>\n                            <td className=\"text-right\">\n                              <p\n                                className=\"text-sm font-medium friend-contribution-amount mr-1\">{`${CURRENCY}${user.contributionAmount}`}</p>\n                            </td>\n                            <td>\n                              {user.createdTs ?\n                                <p\n                                  className=\"text-sm track-gifts-purchased-time\">{moment(user.createdTs).format('MMM DD, YYYY')}</p>\n                                : null}\n                            </td>\n                          </tr>\n                        ))}\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                : null)\n              :\n              // Single guest User\n              (this.props.data.purchasedRegistryItem.length > 0 ?\n                <div className=\"track-gifts-user-detail\">\n                  <p\n                    className=\"text-sm font-medium\">{`${this.props.data.purchasedRegistryItem[0].guestUser.firstName ? this.props.data.purchasedRegistryItem[0].guestUser.firstName : ''} ${this.props.data.purchasedRegistryItem[0].guestUser.lastName ? this.props.data.purchasedRegistryItem[0].guestUser.lastName : ''}`}</p>\n                  <p\n                    className=\"text-sm track-gifts-user-email\">{this.props.data.purchasedRegistryItem[0].guestUser.email}</p>\n                </div>\n                : null)\n            }\n            <div className=\"ml-auto d-flex align-items-baseline\">\n\n              {!this.props.data.isPurchased ?\n                <MarkPurchased data={this.props.data}/>\n                : null}\n\n              {this.props.data.isCashAcceptedOnly && this.props.data.isAmountReceived ?\n                <BuyNow productData={this.props.data} className=\"ml-2\"/> : null}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GiftCard;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {TRACK_GIFTS_VIEWS} from \"../../components/view-by/ViewBy\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport GiftCard from \"../../components/gift-card/GiftCard\";\nimport \"./TrackGiftContent.scss\";\n\nexport const LOCAL_2_API_FILTERS_MAPPING = {\n  4: \"totalAvailable\",\n  1: \"totalPurchased\",\n  3: \"totalReserved\",\n  2: \"totalFundsReceived\",\n  5: \"totalReturned\"\n}\n\n// Component for No registry Gifts Found\nconst NoRecordFound = () => {\n  return (\n    <h2>No Gifts Found...</h2>\n  )\n}\n\nclass TrackGiftsContent extends React.Component {\n\n  state = {\n    currentView: null\n  }\n\n  checkProductAvailability = product => {\n    // Checking if product has any guestUser or not (Availability)\n    if (!product.isGroupGift) {\n      return !(product.isReserved || product.isPurchased || (product.isCashAcceptedOnly && product.isAmountReceived))\n    } else {\n        return product.purchasedRegistryItem.length <= 0\n    }\n  }\n\n  getProductsBasedOnView = (view, stateProducts) => {\n    let products = []\n    let availableProducts = []\n    let guestUsersEmails = []\n    let refinedProducts = []\n    let skipCashFund = false;\n    for (const product of [...stateProducts]){\n      if (product.purchasedRegistryItem.length <= 0) {\n        refinedProducts.push(product)\n      }else {\n        let userProducts = []\n        let currentProduct = {...product}\n        for (let user of product.purchasedRegistryItem) {\n          if (skipCashFund){\n            skipCashFund = false\n            break\n          }\n          let newUsers = {...user}\n          let otherUsers = product.purchasedRegistryItem\n          newUsers['otherUsers'] = otherUsers\n          currentProduct.purchasedRegistryItem = [newUsers]\n          userProducts.push({...currentProduct})\n          currentProduct = {...product}\n          if (product.isGroupGift && view?.id === TRACK_GIFTS_VIEWS[0].id){\n            skipCashFund = true\n          }\n        }\n        refinedProducts.push(...userProducts)\n      }\n    }\n\n\n    if (view?.id === TRACK_GIFTS_VIEWS[0].id) { // [0] index is Gifts\n      //  Gifts View\n      for (const product of refinedProducts) {\n        if (this.checkProductAvailability(product)) {\n          availableProducts.push({...product})\n        } else {\n          products.push({...product})\n        }\n      }\n\n      // Show Available products in Gifts View only if Available Filter is applied\n      if (availableProducts.length > 0) {\n        products.push(...availableProducts)\n      }\n    } else {\n\n      //  Gift Giver View\n\n      for (const product of refinedProducts) {\n        if (this.checkProductAvailability(product)) {\n          availableProducts.push({...product})\n        } else {\n          if (product.purchasedRegistryItem.length > 0) {\n            // Grouping Product\n            if (product.isGroupGift) {\n              // Looping through each groupGift User\n              for (const groupUser of product.purchasedRegistryItem) {\n                console.log(groupUser)\n                if (guestUsersEmails.indexOf(groupUser.guestUser.email) !== -1) {\n                  // User already have product\n                  products = products.map(groupProduct => {\n                    if (groupProduct.user.email === groupUser.guestUser.email) {\n                      groupProduct.products.push(product)\n                    }\n                    return groupProduct\n                  })\n                } else {\n                  // User doesn't have product\n                  products.push({\n                    user: {...groupUser},\n                    products: [{...product}]\n                  })\n                  guestUsersEmails.push(groupUser.email)\n                }\n              }\n            } else {\n              //  Not a group Gift\n              try {\n                if (guestUsersEmails.indexOf(product.purchasedRegistryItem[0].guestUser.email) !== -1) {\n                  // User already have product\n                  products = products.map(groupProduct => {\n                    if (groupProduct.user.guestUser.email === product.purchasedRegistryItem[0].guestUser.email) {\n                      groupProduct.products.push(product)\n                    }\n                    return groupProduct\n                  })\n                } else {\n                  // User doesn't have product\n                  products.push({\n                    user: {...product.purchasedRegistryItem[0]},\n                    products: [{...product}]\n                  })\n                  guestUsersEmails.push(product.purchasedRegistryItem[0].guestUser.email)\n                }\n              } catch {\n                availableProducts.push({...product})\n              }\n            }\n\n          }\n        }\n      }\n\n      if (availableProducts.length > 0) {\n        products.push({\n          availableProducts: true,\n          products: [...availableProducts]\n        })\n      }\n    }\n\n    return products\n  }\n\n  render() {\n\n    if (this.props.stateTrackGiftsProducts.length <= 0 && this.state.currentView && this.props.stateTrackGiftsPagination.hasNextPage) {\n      getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n    }\n\n    // Getting new products when new views are switched\n    if (this.state.currentView?.id !== this.props.stateTrackGiftsView?.id) {\n      this.setState({\n        currentView: {...this.props.stateTrackGiftsView}\n      })\n      getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n    }\n\n    const products = this.getProductsBasedOnView(this.props.stateTrackGiftsView, this.props.stateTrackGiftsProducts)\n\n    if (this.props.stateTrackGiftsProducts.length <= 0 && !this.props.stateTrackGiftsPagination.hasNextPage) {\n      return <NoRecordFound/>\n    } else if (this.props.stateTrackGiftsView?.id === TRACK_GIFTS_VIEWS[0].id) {\n\n      // For Gifts\n\n      return (\n        <div>\n          <div className=\"row mb-2\">\n            <div className=\"col-6\">\n              <p className=\"text-sm font-medium\">Gift details</p>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"text-sm font-medium\">Gifted by</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <InfiniteScroll\n                style={{overflow: \"unset\"}}\n                next={() => getTrackGiftsProduct(false, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)}\n                hasMore={this.props.stateTrackGiftsPagination.hasNextPage}\n                loader={<h4>Loading...</h4>}\n                dataLength={this.props.stateTrackGiftsProducts.length}\n              >\n                {products.map(product => {\n                  // return <p className=\"my-5\">{product.title}</p>\n                  return <GiftCard data={product}/>\n                })}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n\n      // For Gift Giver\n\n      return (\n        <div>\n          <InfiniteScroll\n            next={() => getTrackGiftsProduct(false, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)}\n            hasMore={this.props.stateTrackGiftsPagination.hasNextPage}\n            loader={<h4>Loading...</h4>}\n            dataLength={this.props.stateTrackGiftsProducts.length}\n            style={{overflow: \"unset\"}}\n          >\n            {products.map(groupedProduct => {\n              return (\n                <div className=\"mb-4 track-gifts-gift-giver-view\">\n                  <div className=\"mb-2\">\n                    <span\n                      className=\"text-body font-medium\">{groupedProduct.availableProducts ? \"Available\" : `${groupedProduct.user.guestUser.firstName ? groupedProduct.user.guestUser.firstName : \"\"} ${groupedProduct.user.guestUser.lastName ? groupedProduct.user.guestUser.lastName : \"\"}`}\n                    </span>\n                    {!groupedProduct.availableProducts ?\n                      <span className=\"ml-1 text-body\">{groupedProduct.user.guestUser.email}</span> : null}\n                    <span\n                      className=\"ml-1 text-body font-medium gift-givers-user-gift-count px-2\">{groupedProduct.products.length} gifts</span>\n                  </div>\n                  <div>\n                    {groupedProduct.products.map(product => (\n                      <GiftCard data={product}/>\n                    ))}\n                  </div>\n                </div>\n              )\n            })}\n          </InfiniteScroll>\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsSearch: state.trackGifts.search\n})\n\nexport default connect(\n  mapStateToProps\n)(TrackGiftsContent);","import React from \"react\";\nimport {\n  GET_PRODUCTS,\n  REMOVE_REGISTRY_ITEM,\n  GET_CATEGORIES,\n  GET_REGISTRIES,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS,\n  GET_GUEST_CHECKLIST, GET_TRACK_GIFTS\n} from \"../api/queries\";\nimport {graphQL, graphQLNoHeader, graphQLNoToken, addProductToCart as addProductToCartAPI} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX, TRACK_GIFTS_PRODUCTS_PER_REQUEST} from \"./constants\";\nimport {\n  setRegistryProducts,\n  setCheckListItems,\n  toggleMustHaveProduct as toggleMustHaveProductAction,\n  setCashFundCategories\n} from \"../modules/my-registry/MyRegistryActions\";\nimport {CREATE_REGISTRY, TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION} from \"../api/mutations\";\nimport {setOnboardingRegistry, updateRegistryInfo} from \"../modules/registry/RegistryActions\";\nimport {setViewRegistryProducts} from \"../modules/view-registry/ViewRegistryActions\";\nimport {addOnboardingQuestion} from \"../modules/onboarding/OnboardingAction\";\nimport {addPersonalizeQuestion} from \"../modules/personalise-checklist/PersonaliseCheckListActions\";\nimport {updateGuestViewInfo, setGuestCheckListItems} from \"../modules/guest-view/GuestViewAction\";\nimport {toast} from \"react-toastify\";\nimport reducerDefaultData from \"data/ReducerDefaultData.json\";\nimport {TRACK_GIFTS_VIEWS} from \"../modules/track-gifts/components/view-by/ViewBy\";\nimport {\n  setTrackGiftsFilters,\n  setTrackGiftsPaginationInfo,\n  setTrackGiftsProduct\n} from \"../modules/track-gifts/TrackGiftsAction\";\nimport {LOCAL_2_API_FILTERS_MAPPING} from \"../modules/track-gifts/containers/track-gifts-content/TrackGiftsContent\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    let responseData = res.data.data.registryItems.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = {...item.node}\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n\n    // TODO: change category\n    let finalData = responseData.filter(product => product.registryCategories.length > 0)\n    dispatch(setRegistryProducts(finalData))\n\n  }).catch(err => {\n    console.error(err.response)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch,) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n\n      toast.error((\n        <p><b>{card.title}</b> removed from your registry!</p>\n      ))\n\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n    toast.error((\n      <p>Some error occurred.</p>\n    ))\n  })\n}\n\nexport const getRefinedCategory = (category) => {\n  return ({\n    id: category.id,\n    category: category.category,\n    categoryName: category.category.categoryName,\n    description: category.category.description,\n    categoryType: category.category.categoryType,\n    isDesired: category.isDesired,\n    isExcluded: category.isExcluded,\n    addedItemsCount: category.addedItemsCount,\n    totalItemsCount: category.totalItemsCount,\n    isParent: category.category.isParent,\n  })\n}\n\n\n// Get all categories\nexport const getAllCategories = (registryCategories, getAll) => {\n  // let finalCondition = category.subCategoriesIsExcluded ?\n  let parentCategories = registryCategories.filter(category => getAll ? true : (category.subCategoriesIsExcluded ? !category.subCategoriesIsExcluded : !category.isExcluded))\n  let finalCategories = parentCategories.map(parentCategory => {\n    let newParentCategory = getRefinedCategory(parentCategory)\n    let subCategory = parentCategory.registrySubCategories;\n    delete parentCategory.registrySubCategories\n    let newSubCategories = subCategory.filter(cat => getAll ? true : (cat.subCategoriesIsExcluded ? !cat.subCategoriesIsExcluded : !cat.isExcluded))\n    newSubCategories = newSubCategories.map(cat => {\n      let refinedSubCate = getRefinedCategory(cat)\n      let subProductTypes = cat.registrySubProductTypes.map(subProduct => getRefinedCategory(subProduct))\n      refinedSubCate['subProductTypes'] = subProductTypes.filter(category => getAll ? true : !category.isExcluded)\n      return refinedSubCate\n    })\n    newParentCategory['subCategories'] = newSubCategories\n    return newParentCategory\n  })\n\n  return finalCategories\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    operationName: \"getCategories\",\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n\n      // let tempAllCategories = getAllCategories(res.data.data.registryCategories, true)\n      // let cashFundCategories = []\n      //\n      // for (const category of tempAllCategories) {\n      //   for (const subCategory of category.subCategories) {\n      //     if (Number(subCategory.categoryType.id) === 2) {\n      //       cashFundCategories.push(subCategory)\n      //     }\n      //   }\n      // }\n      // dispatch(setCashFundCategories(cashFundCategories))\n      let finalCategories = getAllCategories(res.data.data.registryCategories, false)\n      if (finalCategories.length === 0) {\n        let allCategories = getAllCategories(res.data.data.registryCategories, true)\n        dispatch(setCheckListItems(allCategories))\n      } else {\n        dispatch(setCheckListItems(finalCategories))\n      }\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}\n\nexport const updateRegistryDetailState = (dispatch, registryData) => {\n  let currentRegistryInfo = null;\n\n  currentRegistryInfo = registryData[0].node;\n  if (currentRegistryInfo.image) {\n    currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n  }\n\n  if (currentRegistryInfo) {\n    dispatch(updateRegistryInfo({...currentRegistryInfo}))\n  } else {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.log(\"No registry found!\");\n  }\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        updateRegistryDetailState(dispatch, res.data.data.registries.edges)\n      } else {\n        dispatch(updateRegistryInfo({notFound: true}))\n      }\n    } catch (e) {\n      dispatch(updateRegistryInfo({notFound: true}))\n      console.error(e)\n    }\n  }).catch(err => {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.error(err.response ? err.response.data : null)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, oldPosition, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      dispatch(setViewRegistryProducts(oldPosition))\n      toast.error(\"Somerhing went wrong while re-arranging Products\")\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    }\n\n  }).catch(err => {\n    dispatch(setViewRegistryProducts(oldPosition))\n    console.error(err.message)\n  })\n}\n\nexport const addProductHandler = (card, stateAddedProducts, stateRegistryInfo, dispatch) => {\n  let existingProduct = stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n  const registryId = parseInt(stateRegistryInfo.id)\n  if (existingProduct.length === 0) {\n    const title = card.title\n    const category = card.category.id\n    const storeItemUrl = card.onlineStoreUrl\n    const sku = card.variants.edges[0].node.sku\n    const price = parseFloat(card.variants.edges[0].node.price)\n    const quantity = parseInt(card.quantity)\n    const shopifyItemId = card.id\n    const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      variables: {\n        registryId: registryId,\n        title: title,\n        category: category,\n        tags: [],\n        storeItemUrl: storeItemUrl ? storeItemUrl : '',\n        sku: sku,\n        price: price,\n        quantity: quantity,\n        shopifyItemId: shopifyItemId,\n        imageUrl: imageUrl,\n      }\n    }\n    graphQL(data).then(_ => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  } else {\n    let data = {\n      query: UPDATE_REGISTRY_ITEM,\n      variables: {\n        registryItemId: existingProduct[0].id,\n        quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n      }\n    }\n    graphQL(data).then(res => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  }\n}\n\nexport const getOnboardingQuestions = async (dispatch, registryId = null, token = null) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: false,\n      registryId: registryId ? Number(registryId) : null\n    }\n  }\n  let options = {}\n  if (token) {\n    options = {headers: {\"Authorization\": \"Token \" + token}}\n  }\n\n  await graphQLNoHeader(reqData, options).then(async res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      await dispatch(addOnboardingQuestion(questions))\n    }\n  }).catch(err => {\n    // toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\n\nexport const getPersonalizeQuestions = (registryId, dispatch) => {\n  let reqData = {\n    query: GET_PERSONALIZE_QUESTIONS,\n    variables: {\n      registryId: registryId,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.editablePersonalizeQuestions) {\n      const questions = res.data.data.editablePersonalizeQuestions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addPersonalizeQuestion(questions))\n    }\n  }).catch(err => {\n    toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\nexport const updateGuestViewRegistry = (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_REGISTRY,\n    variables: {\n      urlSlug: urlSlug,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.registryAsGuest) {\n      let guestViewInfo = {...res.data.data.registryAsGuest}\n      if (guestViewInfo.image) {\n        guestViewInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + guestViewInfo.image.image;\n      }\n      delete guestViewInfo.registryItems\n      dispatch(updateGuestViewInfo(guestViewInfo))\n    }\n  }).catch(err => {\n    dispatch(updateGuestViewInfo({notFound: true}))\n    if (err.response && err.response.data.errors) {\n      for (const error of err.response.data.errors) {\n        // TODO: Implement toast if necessary\n        console.log(error.message)\n      }\n    }\n  })\n}\n\nexport const createRegistry = dispatch => {\n  graphQL({query: CREATE_REGISTRY}).then(res => {\n    if (res.data.data) {\n      let registryId = res.data.data.createRegistry.registry.id\n      if (registryId) {\n        dispatch(setOnboardingRegistry(registryId))\n      }\n    }\n  }).catch(err => {\n    console.log(err.response)\n  })\n}\n\nexport const dataURItoBlob = (dataURI, fileType, fileName) => {\n  let byteString = atob(dataURI.split(',')[1]);\n  let ab = new ArrayBuffer(byteString.length);\n  let ia = new Uint8Array(ab);\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  let blob = new Blob([ab], {type: fileType});\n  return new File([blob], fileName, {\n    type: fileType\n  })\n}\n\nexport const getGuestCategories = async (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_CHECKLIST,\n    variables: {\n      urlSlug: urlSlug,\n    }\n  }\n  await graphQL(reqData).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n      let finalCategories = getAllCategories(res.data.data.registryCategoriesAsGuest, true)\n      dispatch(setGuestCheckListItems(finalCategories))\n      // dispatch(setCheckListItems(categoryToUpdate))\n    }\n  })\n}\n\nconst getTrackGiftsFilterStatus = (filterString, trackGiftsFilter) => {\n  let returnStatus = false\n  switch (filterString) {\n    case \"available\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 4) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"purchased\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 1) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"reserved\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 3) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"fundsReceived\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 2) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    case \"returned\":\n      for (const filter of trackGiftsFilter) {\n        if (filter.id === 5) {\n          returnStatus = filter.selected\n          break;\n        }\n      }\n      break\n    default:\n      returnStatus = false\n      break\n  }\n  return returnStatus;\n}\n\nexport const getTrackGiftsProduct = (clearProducts = false, trackGiftsFilters, trackGiftsProduct, trackGiftsPagination, trackGiftsView, registryInfo, trackGiftsSearch, dispatch, first=TRACK_GIFTS_PRODUCTS_PER_REQUEST) => {\n  // TODO: Change this Function when Search API in implemented\n  let reqData = {\n    query: GET_TRACK_GIFTS,\n    operationName: \"registryGifts\",\n    variables: {\n      registryId: registryInfo?.id,\n      giftGivers: trackGiftsView?.id === TRACK_GIFTS_VIEWS[1].id,  // [1] index is Gift Giver\n      after: clearProducts ? null : trackGiftsPagination.endCursor,\n      first: first,\n      searchKeyword: trackGiftsSearch.searchText,\n      isReserved: getTrackGiftsFilterStatus(\"reserved\", trackGiftsFilters),\n      isAvailable: getTrackGiftsFilterStatus(\"available\", trackGiftsFilters),\n      isPurchased: getTrackGiftsFilterStatus(\"purchased\", trackGiftsFilters),\n      isFundsReceived: getTrackGiftsFilterStatus(\"fundsReceived\", trackGiftsFilters),\n      isReturned: getTrackGiftsFilterStatus(\"returned\", trackGiftsFilters),\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    // Updating Track Gifts Filters\n    if (res.data.data.registryGifts && res.data.data.registryGifts.registryGiftItemsCount) {\n      const allFilterCounts = res.data.data.registryGifts.registryGiftItemsCount;\n      const newFilters = trackGiftsFilters.map(filter => {\n        filter.count = allFilterCounts[LOCAL_2_API_FILTERS_MAPPING[filter.id]] ? allFilterCounts[LOCAL_2_API_FILTERS_MAPPING[filter.id]] : 0\n        return filter\n      })\n\n      dispatch(setTrackGiftsFilters(newFilters))\n    }\n\n    // Updating Track Gifts Products\n    if (res.data.data.registryGifts && res.data.data.registryGifts.gifts) {\n      let registryGifts = res.data.data.registryGifts.gifts\n      let products = registryGifts.edges.map(item => ({...item.node}))\n      let pagination = null\n      if (registryGifts.pageInfo) {\n        pagination = {\n          hasNextPage: registryGifts.pageInfo.hasNextPage,\n          endCursor: registryGifts.pageInfo.endCursor,\n        }\n      }\n      if (pagination) {\n        dispatch(setTrackGiftsPaginationInfo({...pagination}))\n      }\n      if (clearProducts) {\n        dispatch(setTrackGiftsProduct([...products]))\n      } else {\n        dispatch(setTrackGiftsProduct([...trackGiftsProduct, ...products]))\n      }\n\n    } else {\n      dispatch(setTrackGiftsPaginationInfo({\n        hasNextPage: false,\n        endCursor: null\n      }))\n    }\n  }).catch(err => {\n    dispatch(setTrackGiftsPaginationInfo({\n      hasNextPage: false,\n      endCursor: null\n    }))\n    console.error(err.response)\n  })\n}\n\nexport const addProductToCart = (data) => {\n  addProductToCartAPI(data).then(res => {\n    if (res.status === 200) {\n      console.log('Added to cart ', res)\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}","import React, { useState } from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport CardItem from \"../card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../button-component/ButtonComponent\";\n\nconst AddedCard = (props) => {\n\n  const dispatch = useDispatch();\n  let stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRecommendedProducts = useSelector(state => state.myRegistry.recommendedProducts)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const [recommendedProducts, setRecommendedProducts] = useState([])\n  const [show, setShow] = useState(false);\n  const modalTitle = `Recommended ${props.data.registryCategories[0].category.categoryName}`\n  const [showRemoveModel, setShowRemoveModel] = useState(false);\n\n  const showRecommendation = (category) => {\n    // Fetching all recommendations for that particular product category\n    let categoryRecommended = [...stateRecommendedProducts.filter(product => Number(category.id) === Number(product.category.id))]\n\n    // Removing duplicate products if found any\n    let jsonObject = categoryRecommended.map(JSON.stringify);\n    let uniqueSet = new Set(jsonObject);\n    categoryRecommended = Array.from(uniqueSet).map(JSON.parse);\n\n    setRecommendedProducts(categoryRecommended.map(product => {\n      // Resetting recommended product quantity\n      product.quantity = 1;\n      return product;\n    }));\n\n    setShow(true);\n  }\n\n  let moreOptionsData = [\n    {\n      name: \"Remove\",\n      action: () => setShowRemoveModel(true)\n    }\n  ]\n\n  if (Number(props.data.registryCategories[0].category.categoryType.id) !== 2) {\n    moreOptionsData.unshift({\n      name: \"View Recommendations\",\n      action: () => showRecommendation(props.data.registryCategories[0])\n    })\n  }\n\n\n  const removeConfirmFooter = (\n    <>\n      <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => setShowRemoveModel(false)}>Do not\n        remove</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={() => {\n        props.removeProductFromCartHandler();\n        setShowRemoveModel(false);\n      }}>Remove</Button>\n    </>\n  )\n\n  // Incrementing quantity of local recommended product\n  const incrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        product.quantity += quantity;\n      }\n      newRecommended.push(product)\n    }\n    setRecommendedProducts(newRecommended)\n  }\n\n  // Decrementing quantity of local recommended product\n  const decrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    let updated = false;\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        if (product.quantity - quantity <= 0) {\n          break;\n        } else {\n          product.quantity -= quantity;\n          updated = true;\n        }\n      }\n      newRecommended.push(product)\n    }\n\n    if (updated) {\n      setRecommendedProducts(newRecommended)\n    }\n  }\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i\n    className={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n    <div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n      <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n    </div>\n  </i>);\n\n  return (\n    <>\n      {!props.multipleCategories ?\n        <>\n          <div className=\"added-card py-5 pr-2\">\n            <div className=\"row\">\n              <div className=\"col-2\">\n              <div className=\"pl-2\">\n              {props.data?.item.imageUrl ?\n                <img\n                  className={[\"product-img d-block mx-auto\", Number(props.data.registryCategories[0].category.categoryType.id) === 2 ? \"added-card-product-image-radius\" : \"\"].join(\" \")}\n                  src={props.data?.item.imageUrl}\n                  alt={props.data?.item.title}/>\n                :\n                <div className=\"added-card-no-product-image\"/>\n              }\n\n            </div>\n\n              </div>\n              <div className=\"col\">\n                {/* TODO: change category */}\n                <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div>\n                <h2>{props.data.title}</h2>\n                <div className=\"d-flex mt-2\">\n                  <div className=\"\">${props.data.item.price}</div>\n                  {/*/!* TODO: Add Strikeout price dynamic *!/*/}\n                  {/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n                  {props.data.quantity > 1 ?\n                    <div className=\"ml-4 text-body d-flex\">\n                      Qty:{props.data.quantity}\n                      <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n                    </div> : <></>}\n                </div>\n              </div>\n              <div className={[\n                props.draggable ? \"col-4\" : \"col-3\",\n              ].join(\" \")}\n              >\n                <div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n                  {!stateGuestViewRegistry ?\n                    <button\n                      className={[\n                        \"mr-4 d-flex align-items-center added-gift-must-have-btn px-2\",\n                        props.data.mostWanted ? \"added-gift-must-have-active\" : \"added-gift-must-have-not-active\"\n                      ].join(\" \")}\n                      onClick={props.toggleMustHave}\n                    >\n                      <i className={[\"icon mr-1 d-block\", props.data.mostWanted ? \"heart-fill\" : \"heart\"].join(\" \")} />\n                      <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                    </button> :\n                    props.data.mostWanted ?\n                      <button\n                        className=\"mr-4 d-flex align-items-center added-gift-must-have-btn px-2 added-gift-must-have-active\">\n                        <i className=\"icon mr-1 d-block heart-fill\" />\n                        <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                      </button>\n                      : <></>\n                  }\n                  {!stateGuestViewRegistry ?\n                    <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\" />\n                    : <></>}\n                  {/* TODO: Add icon/rearrange icon */}\n                  {props.draggable && !stateGuestViewRegistry ?\n                    <DragHandle /> : <></>}\n                </div>\n              </div>\n            </div>\n          </div>\n          {props.isViewCard ?\n            <div className=\"row\">\n              <div className=\"col\">\n                {props.data.registryCategories.length > 1 ?\n                  props.data.registryCategories.map(category =>\n                    props.data.registryCategories[0].id !== category.id ?\n                      <div className=\"text-body font-medium p-6 added-card-other-category\">\n                        You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n                      </div>\n                      : null\n                  )\n                  : null}\n              </div>\n            </div> : null}\n        </>\n        :\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"text-body font-medium p-6 added-card-other-category\">\n              You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {props.multipleCategories.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n            </div>\n          </div>\n        </div>\n      }\n      <Modal\n        show={show}\n        closeModal={() => setShow(false)}\n        title={modalTitle}\n        size=\"xl\"\n      >\n        <div className=\"position-relative added-card-recommended\">\n          <div className=\"row category-recommended-products\">\n            {recommendedProducts.map((card, index) => (\n              <div className=\"col-4 mb-5\" key={\"CardItem-\" + index}>\n                <CardItem\n                  data={card}\n                  incrementQuantityHandler={() => incrementQuantity(card.id, 1)}\n                  decrementQuantityHandler={() => decrementQuantity(card.id, 1)}\n                  addProductHandler={() => addProductHandler(card, stateAddedProducts, stateRegistryInfo, dispatch)}\n                />\n              </div>\n            ))}\n            {recommendedProducts.length <= 0 ?\n              <div className=\"col text-center py-4\"><h4>No recommendation found</h4></div> : null}\n          </div>\n          {recommendedProducts.length > 0 ? <div className=\"added-card-recommends-bottom-gradient\" /> : null}\n        </div>\n      </Modal>\n      <Modal\n        show={showRemoveModel}\n        size=\"md\"\n        footer={removeConfirmFooter}\n      >\n        <h2>Do you want to remove {props.data.title}? </h2>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddedCard\n","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\nimport { GET_PERSONALIZE_QUESTIONS } from \"api/queries\";\nimport { graphQL } from \"api/axios\";\nimport { toast } from \"react-toastify\";\nimport {connect} from \"react-redux\";\n\nclass CheckList extends React.Component {\n\n    gotoPersonalize = (event) => {\n        event.preventDefault();\n        // this.props.history.push(routes.PERSONALIZE.HOME)\n        \n        // If user has given answer or not\n        let isQuizPending = false\n        let reqData = {\n            query: GET_PERSONALIZE_QUESTIONS,\n            variables: {\n                registryId: this.props.stateRegistryInfo.id,\n            }\n        }\n        // To route to edit-checklist or Quiz\n        graphQL(reqData).then(res => {\n            if (res.data.data.editablePersonalizeQuestions) {\n                const questions = res.data.data.editablePersonalizeQuestions\n                for (let question of questions) {\n                    if (question.answers.length > 0) {\n                        isQuizPending = false\n                        break;\n                    } \n                }\n                if(isQuizPending){\n                    this.props.history.push(routes.PERSONALIZE.HOME)\n                } else {\n                    this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n                }\n                \n            }\n        }).catch(err => {\n            toast.error(\"Error occurred while fetching questions\");\n            console.error(err);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"mb-3\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <a href=\"#\" className=\"ml-2 text-sm checklist-personalize\" tabindex onClick={(e) => this.gotoPersonalize(e)}>{this.props.t(\"checkList.personalize\")}</a>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\">\n                          <div className=\"check-list-progress mw-100\" style={{width: `${this.props.percentage}%`}}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n      stateRegistryInfo: state.registry.info,\n    }\n  }\n\nexport default withTranslation()(withRouter(connect(\n    mapStateToProps\n  )(CheckList)));","import React, { Component } from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport { connect } from 'react-redux';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({ id, categoryName, addedItemsCount, totalItemsCount, subProductTypes }) => {\n      return (\n        <>\n          {subProductTypes.length === 0 ?\n            <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n              onClick={() => this.scrollToCategory(categoryName)}>\n              <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n\n              <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                {addedItemsCount >= totalItemsCount ?\n                  <div className=\"icon-done\" /> :\n                  (totalItemsCount > 0 ?\n                    <div className='ml-auto mb-auto align-self-end card-progress'>\n                      {addedItemsCount}/{totalItemsCount}\n                    </div>\n                    : null)}\n              </div>\n            </div> :\n            // Todo handle scroll\n            <>\n              <div className=\"card-body-contain align-items-center py-2\" key={categoryName + id}\n                onClick={() => this.scrollToCategory(categoryName)}>\n                <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n              </div>\n              <div className=\"text-sm\">\n                {subProductTypes.map((subProductType, index) => (\n                  <div className=\"sub-product-list d-flex py-2 ml-3 align-items-center\" key={subProductType.categoryName + subProductType.id}>\n                    <div>{subProductType.categoryName}</div>\n                    <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                      {subProductType.addedItemsCount >= subProductType.totalItemsCount ?\n                        <div className=\"icon-done\" /> :\n                        (totalItemsCount > 0 ?\n                          <div className='ml-auto mb-auto align-self-end card-progress'>\n                            {subProductType.addedItemsCount}/{subProductType.totalItemsCount}\n                          </div>\n                          : null)}\n\n                    </div>\n                  </div>\n                ))}\n\n              </div>\n            </>}\n        </>\n      )\n\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        {this.props.item.categoryName && this.props.item.isParent ?\n          <Card>\n            <Accordion.Toggle\n              onClick={this.handleToggleEvent}\n              as={Card.Header}\n              id={this.props.item.categoryName}\n              eventKey={this.props.item.categoryName}\n            >\n              <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n                <span className=\"checklist-icon-arrow\" />\n                <div className=\"ml-3 mb-0 w-100\">\n                  <div className=\"text-body\">{this.props.item.categoryName}</div>\n                  <div className=\"d-flex\">\n                    <div className=\"check-list-hearder-background\">\n                      <div className=\"check-list-hearder-progress mw-100\" style={{ width: `${(this.props.item.addedItemsCount / this.props.item.totalItemsCount) * 100}%` }} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Accordion.Toggle>\n            <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n              <Card.Body>\n                {subListItem}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          :\n          <p className=\"pl-6 mr-3 text-body others-cat\" onClick={() => this.scrollToCategory(this.props.item.categoryName)}>{this.props.item.categoryName}</p>\n        }\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              tabindex\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" tabindex className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a tabindex className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className={[\"checkbox d-flex align-items-center\", props.className ? props.className : \"\"].join(\" \")}>\n      <span className=\"checkbox__input mr-2\">\n        <input\n          type=\"checkbox\"\n          name={props.id}\n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n        />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n          <i className=\"icon-check\"></i>\n        </span>\n      </span>\n      <span className={[\"radio__label text-sm\", props.textClass ? props.textClass : \"\"].join(\" \")}>{props.display} {props.count ? \"(\" + props.count + \")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React, {useState, useEffect} from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {GET_CATEGORIES} from \"../../../../api/queries\";\nimport {graphQL} from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {useSelector} from \"react-redux\";\nimport {getAllCategories} from \"../../../../utils/commonFunction\";\nimport CheckBox from \"../check-box/CheckBox\";\n\n// TODO: Change this Component to handle multiple categories\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [searched, setSearched] = useState(false)\n  const [searchedCategories, setSearchedCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(props.currentCategory ? props.currentCategory : []);\n  // const [selectedCategory, setSelectedCategory] = useState([]);\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.registryCategories) {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = {...category}\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n        }\n        setCategories(finalCheckList);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    props.changeCurrentCategory(selectedCategory)\n    props.closeModal(false);\n  }\n\n  const handleSelectionCategory = (category,subCategory) => {\n    subCategory = {\n      ...subCategory,\n      \"mainCategory\": category\n    }\n    let sameCatagory = [...selectedCategory].find(category => subCategory.id === category.id)\n    if (sameCatagory) {\n      let allSelectedCategory = selectedCategory.filter(category => subCategory.id !== category.id)\n      setSelectedCategory(allSelectedCategory)\n    }\n    else {\n      let allSelectedCategory = [...selectedCategory, subCategory]\n      setSelectedCategory(allSelectedCategory)\n    }\n  }\n\n  useEffect(() => {\n    if (props.currentCategory) {\n      setSelectedCategory(props.currentCategory)\n    } else {\n      setSelectedCategory([])\n    }\n  }, [props.currentCategory])\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const getCategoriesToDisplay = (cat) => {\n    return (\n      <div className=\"col\">\n        {cat.map(category => {\n          return (\n            <div className=\"mb-6\" key={\"select-\" + category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              <div className=\"category-columns\">\n                {category.subCategories ?\n                  category.subCategories.map(subCategory =>\n                    <div className=\"w-100 category-column\">\n                      <label className=\"checkbox d-flex align-items-center py-1 px-2 m-0\">\n                        <span className=\"checkbox__input mr-2\">\n                          <input\n                            type=\"checkbox\"\n                            name={subCategory.id}\n                            value={subCategory.id}\n                            checked={selectedCategory.find(category => category.id === subCategory.id) ? \"checked\" : \"\"}\n                            onChange={() => handleSelectionCategory(category.categoryName,subCategory)}\n                          />\n                          <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                            <i className=\"icon-check\"></i>\n                          </span>\n                        </span>\n                        <span className=\"select_category_radio__label text-body\">{subCategory.categoryName}</span>\n                      </label>\n                    </div>\n                  )\n                  : null}\n              </div>\n\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      {searched ? (searchedCategories.length > 0 ? getCategoriesToDisplay(searchedCategories) : getCategoriesToDisplay([])) : getCategoriesToDisplay(categories)}\n    </div>\n  )\n\n  const modalFooter = (\n    <div className=\"categories-modal-footer\">\n      <label>{selectedCategory.length > 0 ? selectedCategory.length + ' selected' : null}</label>\n      <Button\n        variant=\"primary\"\n        className=\"font-medium p-1\"\n        onClick={saveSelectedCategory}\n      >Done</Button>\n    </div>\n  )\n\n  // Search Category Section\n  const searchInputRef = React.createRef()\n  const changeLinkRef = React.createRef()\n\n  const focusSearchCategoryInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }\n\n  const searchInputFocusHandler = (e) => {\n    if (!e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.add(\"search-category-input-focus\");\n    }\n  }\n\n  const searchInputBlurHandler = (e) => {\n    if (e.target.value.length > 0) {\n      return\n    }\n\n    if (e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.remove(\"search-category-input-focus\");\n    }\n  }\n\n  const searchCategoryInputChangeHandler = (e) => {\n    setSearched(true)\n    if (e.target.value.length > 0) {\n      changeLinkRef.current.style.display = \"block\";\n\n      //  Searching through the category\n      let finalCategories = []\n      for (const parentCategory of categories) {\n        let newParentCategory = {...parentCategory}\n        newParentCategory.subCategories = []\n        let searchMatched = false\n\n        for (const subCategory of parentCategory.subCategories) {\n          if (subCategory.categoryName.toLowerCase().match(e.target.value.toLowerCase())) {\n            searchMatched = true\n            newParentCategory.subCategories.push(subCategory)\n          }\n        }\n\n        if (searchMatched) {\n          finalCategories.push(newParentCategory)\n          searchMatched = false\n        }\n      }\n      setSearchedCategories(finalCategories)\n    } else {\n      changeLinkRef.current.style.display = \"none\";\n    }\n  }\n\n  const changeLinkClickHandler = (e) => {\n    e.preventDefault();\n    setSearched(false)\n    if (searchInputRef.current) {\n      if (searchInputRef.current.value.length > 0) {\n        searchInputRef.current.value = \"\"\n      }\n      changeLinkRef.current.style.display = \"none\";\n      searchInputRef.current.focus()\n      setSearchedCategories([])\n    }\n  }\n\n  const headerContent = (\n    <div className=\"align-self-center d-flex position-relative select-category-search-section mr-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Search category...\"\n        className=\"search-category-input pl-5 py-1 pr-1 text-body m-0\"\n        ref={searchInputRef}\n        onChange={(e) => searchCategoryInputChangeHandler(e)}\n        onFocus={(e) => searchInputFocusHandler(e)}\n        onBlur={(e) => searchInputBlurHandler(e)}\n      />\n      <i className=\"icon-search search-category-icon\" onClick={focusSearchCategoryInput} />\n      <a\n        tabindex='0'\n        className=\"search-category-clear-link text-sm font-medium\"\n        href=\"#\"\n        onClick={(e) => changeLinkClickHandler(e)}\n        ref={changeLinkRef}>Clear all</a>\n    </div>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={modalFooter}\n      headerContent={headerContent}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React from \"react\";\nimport \"./CategoryPill.scss\";\n\nconst CategoryPill = (props) => {\n  return (\n    <span className={[\"import-registry-category-pill text-sm p-1\", props.className ? props.className : \"\"].join(\" \")}>\n      {props.mainCategory+\": \"+props.name}\n      <i className=\"icon-close remove-category-pill-icon ml-2\" onClick={props.removeCategory}/>\n    </span>\n  );\n}\n\nexport default CategoryPill;\n","import React, { createRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport { setAnotherStoreProductInfo } from \"modules/my-registry/MyRegistryActions\";\nimport { getScrapedProduct } from \"api/axios\";\nimport { toast } from 'react-toastify';\nimport CategoryPill from \"../import-registry/category-pill/CategoryPill\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst AddGiftAnotherStore = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n  const [hideProductDetails, setHideProductDetails] = useState(true);\n  const [showLoading, setshowLoading] = useState(false);\n\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice >= 0) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      try {\n        new URL(ev.target.value);\n      } catch {\n        toast.error(\"Invalid Store Url\")\n        return;\n      }\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      let ctgry = category;\n      let data = defaultData.myRegistry.defaultAnotherStoreProductInfo;\n      data.category = ctgry\n      dispatch(setAnotherStoreProductInfo(data))\n      setshowLoading(true);\n      setHideProductDetails(true);\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = { ...productInfo };\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n          setshowLoading(false);\n          setHideProductDetails(false);\n        }\n      }).catch(err => {\n        setshowLoading(false);\n        toast.error(\"Invalid Store Url\")\n        return false;\n      })\n    }\n  }\n\n  const removeSelectedCategory = (categoryId) => {\n    if (productInfo.category.length) {\n      let finalcategory = productInfo.category.filter(category => category.id !== categoryId);\n      let prodInfo = { ...productInfo };\n      prodInfo.category = finalcategory;\n      dispatch(setAnotherStoreProductInfo(prodInfo));\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm font-medium add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                onKeyUp={(ev) => submitStoreUrl(ev)}\n                placeholder=\"Paste a product link that you want to add in your Monica and Andy Registry\" />\n              {/* <a className=\"text-sm\" href=\"#\">Change</a> */}\n            </div>\n          </div>\n\n          <div className={[\"row mt-4\", hideProductDetails ? \"\" : \"pt-6\"].join(\" \")}>\n            {hideProductDetails ? showLoading ?\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                  <h4 className=\"hide-product-details m-auto\">Please wait while we fetch the product details</h4>\n                </div>\n              </div>\n              :\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <h4 className=\"hide-product-details m-auto\">Please paste product link above to view details here</h4>\n                </div>\n              </div>\n              :\n              <>\n                <div className=\"col-5 add-gift-image-select\">\n                  <div className=\"mr-3\">\n                    {productImage?.value ?\n                      <img\n                        src={productImage.value}\n                        alt=\"Product Image\"\n                      />\n                      : null}\n\n                    <i className=\"icon-preview p-1\" onClick={() => {\n                      imageInput.current.click()\n                    }} />\n                    {/* TODO: Change above icon to camera icon */}\n\n                    <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                      onChange={(ev) => selectFileHandler(ev)} />\n                  </div>\n                </div>\n                <div className=\"col-7\">\n                  <div className=\"ml-3\">\n                    <div className=\"row\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Product Name</p>\n                        <textarea\n                          className=\"w-100 mt-1 h1 p-2\"\n                          rows=\"2\"\n                          value={productInfo.productName}\n                          onChange={(ev) => productNameChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container mr-2\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Price</p>\n                          <div className=\"price-input mt-1\">\n                            <input\n                              type=\"text\"\n                              className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                              value={price}\n                              onChange={(ev) => priceChangeHandler(ev)}\n                            />\n                          </div>\n                          {/*<span className=\"price-input text-body\">$</span>*/}\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                          <Counter\n                            className=\"mt-2\"\n                            counter={quantity}\n                            incrementHandler={incrementQuantity}\n                            decrementHandler={decrementQuantity}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    {!props.addMyOwn ?\n                      <>\n                        <div className=\"row mt-5\">\n                          <div className=\"col d-flex\">\n                            <p className=\"text-sm add-gift-store-label font-medium mb-1\">Category</p>\n                            <a className=\"text-sm ml-2 add-gift-link font-medium\" href=\"#\" tabindex onClick={(ev) => openCategorySelect(ev)}>Add</a>\n                            {/* <div className=\"position-relative\">\n                            <input type=\"text\" value={category.displayName} readOnly={true}\n                                   className=\"w-100 pl-2 pr-12 py-1 text-body input-background change-link-input\"/>\n                          </div> */}\n                          </div>\n                        </div>\n                        <div className=\"row mt-2\">\n                          <div className=\"col\">\n                            {category.map(cat => (\n                              <CategoryPill\n                                key={cat.id}\n                                mainCategory={cat.mainCategory}\n                                name={cat.categoryName}\n                                removeCategory={() => removeSelectedCategory(cat.id)}\n                                className=\"mt-2 mr-3\"\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      </>\n                      : null}\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col d-flex\">\n                        <TogglePills\n                          iconClass=\"icon-heart\"\n                          activeClass={mustHave ? \"active-must-have\" : null}\n                          onClick={() => toggleMustHave(!mustHave)}\n                          text=\"Must Have\"\n                          className=\"mr-2\" />\n                        <TogglePills\n                          iconClass=\"icon-guest\"\n                          activeClass={groupGift ? \"active-group-gift\" : null}\n                          onClick={() => toggleGroupGift(!groupGift)}\n                          text=\"Group Gift\"\n                          className=\"mr-2\" />\n                        {/* TODO: Change above guest icon one added */}\n                        <TogglePills\n                          iconClass=\"icon-shopping-cart\"\n                          activeClass={purchased ? \"active-purchased\" : null}\n                          onClick={() => togglePurchased(!purchased)}\n                          text=\"Purchased\"\n                          className=\"mr-2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">How to gift?</p>\n                        {howToGiftOptions.map((option, index) => (\n                          <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                            <RadioButton\n                              name=\"how-to-gift\"\n                              textClass=\"text-sm\"\n                              display={option.text}\n                              checked={option.id === howToGift.id ? true : null}\n                              changeHandler={() => changeHowToGift(option)} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Notes</p>\n                        <textarea className=\"w-100 mt-1 text-body p-1\"\n                          rows=\"2\"\n                          placeholder=\"Write a note for your friends and family\"\n                          value={note}\n                          onChange={(ev) => noteChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","import React, { Component } from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  clearAnotherStoreProductInfo, setAnotherStoreProductInfo,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport { connect } from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport { ADD_REGISTRY_ITEM, UPDATE_REGISTRY_ITEM } from 'api/queries';\nimport { graphQL } from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { toast } from \"react-toastify\";\nimport { ADD_REGISTRY_ITEM as ADD_REGISTRY_ITEM_MUTATION } from 'api/mutations';\nimport BookmarkletSection from \"../add-gift/bookmarklet-section/BookmarkletSection\";\nimport AddGiftAnotherStore from \"../add-gift/add-gift-another-store/AddGiftAnotherStore\";\nimport Button from \"../button-component/ButtonComponent\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport { getProducts as commonGetProducts, getCategories as commonGetCategories } from \"../../../../utils/commonFunction\";\n\nclass ViewRecommend extends Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n    viewDetailsBtn: true,\n  }\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  cardRef = React.createRef()\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const cardId = atob(card.id).split('/')\n      const shopifyItemId = cardId[cardId.length - 1]\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          // TODO: change category\n          category: [Number(category)],\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          imageUrl: imageUrl,\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    }\n  }\n\n  // Checking if product data is valid or not\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // // Valid Category\n    // if (!storeProduct.category.id) {\n    //   alert(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  // Adding Add on my own product to registry\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM_MUTATION,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            // TODO: change category\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  // Popping up Add on my own modal\n  addOnMyOwnClickHandler = (category) => {\n    this.clearModalData()\n    let newCategory = [{\n      ...category,\n      displayName: category.parentCategory + \" : \" + category.categoryName\n    }]\n    let prodInfo = { ...this.props.stateAnotherStoreProduct };\n    prodInfo.category = newCategory;\n    this.props.dispatch(setAnotherStoreProductInfo(prodInfo));\n\n    this.modalTitle = `Add my own ${category ? category.categoryName.toLowerCase() : \"\"}`\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection />\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore addMyOwn={true} />\n\n    this.setState((prevState, props) => ({\n      show: !prevState.show\n    }))\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\" />\n      </button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\" />\n      </button>\n    };\n\n    let modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n          disabled={this.props.stateAnotherStoreProduct && this.props.stateAnotherStoreProduct.productName ? false : true}\n        >Save & Close</Button>\n      </>\n    )\n    return (\n      <>\n        <div className=\"recommended-cart my-6\">\n          <div className=\"row\">\n            <div className=\"col title\"><h2>{this.props.title}\n              {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n            </h2>\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Slider {...settings}>\n              {this.props.products.map((card, index) =>\n                // <div><>{index}</></div>\n                <div className=\"cart-view\" ref={this.cardRef}>\n                  <CardItem\n                    className=\"mr-4\"\n                    data={card}\n                    key={\"CardItem-\" + index}\n                    incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                    decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                    addProductHandler={() => this.addProductHandler(card)}\n                  />\n                </div>\n              )}\n              <div>\n                <div className=\"add-my-own-card mr-4 d-flex flex-column align-items-center justify-content-center\"\n                  style={{ height: this.cardRef.current ? this.cardRef.current.offsetHeight + 'px' : '200px' }}\n                  onClick={() => this.addOnMyOwnClickHandler(this.props.category)}\n                >\n                  <button className=\"add-my-own-button\" />\n                  <p className=\"text-body font-medium mt-5\">Add my own</p>\n                </div>\n              </div>\n            </Slider>\n          </div>\n          <div className=\"mt-6 card-buttom d-flex\">\n            {/* TODO: Change text to dynamic */}\n            <div>\n              <img className=\"blog-img\"\n                src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\"\n                alt={this.props.title} />\n            </div>\n            <div className=\"pl-4 my-auto\">\n              <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n              <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n            </div>\n            <div className=\"text-sm my-auto mr-6 ml-auto\">\n              <a href=\"\" className=\"read-more\" tabindex>Read more</a>\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n      ;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info,\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setParentFilter, setChildFilter, clearFilter } from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\" />\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                  {parentFilter.child.map(childFilter => (\n                    <CheckBox\n                      {...childFilter}\n                      key={childFilter.id}\n                      className=\"mb-4\"\n                      checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                      changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                    />\n                  ))}\n                </div>\n              )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n            onClick={clearClickHandler}\n            variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./ImportRegistry.scss\";\nimport { getAnotherRegistryProducts } from \"../../../../../api/axios\";\nimport { toast } from \"react-toastify\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport CategoryPill from \"./category-pill/CategoryPill\";\nimport { connect } from \"react-redux\";\nimport { setAnotherStoreRegistryItems } from \"../../../../my-registry/MyRegistryActions\";\n\nclass ImportRegistry extends React.Component {\n  state = {\n    registryUrl: \"\",\n    errorMessage: \"\",\n    loading: false,\n    categoryModalShow: false,\n    activeCategoryProductIndex: null,\n    currentRegistryLink: \"\",\n    inputHasFocus: false,\n    currentCategory: [],\n  }\n\n  inputRef = React.createRef()\n\n  setCategoryModalVisible = () => {\n    this.setState({ categoryModalShow: false, currentCategory:[] })\n  }\n\n  changeLoadingState = (value) => {\n    this.setState({\n      loading: value\n    })\n  }\n\n  registryUrlChangeHandler = (ev) => {\n    this.setState({\n      registryUrl: ev.target.value,\n      errorMessage: \"\"\n    })\n  }\n\n  checkUrlAndGetRegistryItems = () => {\n    // Checking for valid url\n    try {\n      new URL(this.state.registryUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return;\n    }\n\n    this.getAnotherRegistryProductsInfo();\n  }\n\n  registryUrlKeyUpHandler = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      this.checkUrlAndGetRegistryItems()\n    }\n  }\n\n  getAnotherRegistryProductsInfo = () => {\n\n    this.setState({\n      currentRegistryLink: this.state.registryUrl\n    })\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = true;\n    }\n\n    const registryUrl = new URL(this.state.registryUrl);\n    const storeName = registryUrl.hostname.split(\".\")[1]\n\n    const reqData = {\n      store_name: storeName,\n      store_url: this.state.registryUrl\n    }\n\n    this.changeLoadingState(true);\n\n    getAnotherRegistryProducts(reqData).then(res => {\n      try {\n        if (res.data) {\n          const products = res.data.products;\n          const registry = res.data.registry;\n\n          if (products && registry) {\n            let newProducts = products.filter(product => product.title)\n            newProducts = newProducts.map(product => {\n              product.categories = [];\n              return product;\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n            // this.setState({\n            //   products: newProducts\n            // })\n          } else {\n            this.setState({\n              errorMessage: \"Looks like this registry is not publically accessible. Please change the settings and try again.\"\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems([]))\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        toast.error(\"Some error occurred while reading registry products.\")\n      }\n\n    }).catch(err => {\n      toast.error(\"Some error occurred while fetching registry.\")\n      console.error(err);\n    }).finally(() => {\n      this.changeLoadingState(false)\n    })\n  }\n\n  openSelectCategoryModal = (ev, productIndex) => {\n    ev.preventDefault()\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      this.setState({\n        activeCategoryProductIndex: productIndex,\n        categoryModalShow: true,\n        currentCategory: this.props.stateAnotherStoreRegistry[productIndex].categories\n      })\n    } else {\n      console.log(\"Invalid Product Index\");\n    }\n  }\n\n  setProductCategories = (categories) => {\n    // Saving categories passed from SelectCategory Modal\n    if (Number.isInteger(this.state.activeCategoryProductIndex) && this.props.stateAnotherStoreRegistry[this.state.activeCategoryProductIndex]) {\n      let newProductState = [...this.props.stateAnotherStoreRegistry];\n      // TODO: Change this to support multiple categories\n      newProductState[this.state.activeCategoryProductIndex].categories = categories;\n      this.props.dispatch(setAnotherStoreRegistryItems(newProductState))\n      this.setState({\n        activeCategoryProductIndex: null\n      })\n    }\n  }\n\n  removeSelectedCategory = (productIndex, categoryId) => {\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      let newProducts = [...this.props.stateAnotherStoreRegistry]\n      newProducts[productIndex].categories = newProducts[productIndex].categories.filter(category => category.id !== categoryId);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n      // this.setState({\n      //   products: newProducts\n      // })\n    }\n  }\n\n  changeRegistryUrl = (e) => {\n    e.preventDefault();\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = false;\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"baby-registry-import-registry\">\n          <div className=\"row mt-5\">\n            <div className=\"col d-flex flex-column\">\n              <span className=\"baby-registry-required-field text-sm font-medium\">Registry URL</span>\n              <div className=\"position-relative mt-1\">\n                <input type=\"text\"\n                  className={[\"import-registry-input-field w-100 mb-0 mw-100 text-body pl-2 py-1 pr-14\", this.state.errorMessage ? \"import-registry-error-field\" : \"\"].join(\" \")}\n                  placeholder=\"Paste your registry URL here to import.  Please ensure it's publicly accessible.\"\n                  value={this.state.registryUrl}\n                  ref={this.inputRef}\n                  onChange={this.registryUrlChangeHandler.bind(this)}\n                  onFocus={() => this.setState({ inputHasFocus: true })}\n                  onBlur={() => this.setState({ inputHasFocus: false })}\n                />\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink === this.state.registryUrl && !this.state.inputHasFocus ?\n                  <a tabindex className=\"import-registry-change-link text-sm font-medium import-registry-category-link\" href=\"#\"\n                    onClick={(e) => this.changeRegistryUrl(e, this.inputRef)}>Change</a> : null}\n\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink !== this.state.registryUrl ?\n                  <div className=\"import-registry-submit-url-section\">\n                    {/*TODO: Change icons once added to global icons*/}\n                    <button className=\"icon-close mr-3\"\n                      onClick={() => this.setState({ registryUrl: \"\" })} />\n                    <button className=\"icon-check\" onClick={this.checkUrlAndGetRegistryItems} />\n                  </div>\n                  : null}\n              </div>\n              {this.state.errorMessage ?\n                <span className=\"import-registry-input-error-message text-body mt-1\">{this.state.errorMessage}</span>\n                : null}\n            </div>\n          </div>\n\n          <div className=\"row baby-registry-import-section mt-6\">\n            <div className=\"col\">\n              {this.props.stateAnotherStoreRegistry.length <= 0 || this.state.loading ?\n                // When no product exists\n                <div className=\"py-20 text-center import-registry-main-content\">\n                  {this.state.loading ?\n                    <>\n                      <div className=\"spinner-border import-registry-spinner\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                      <h4 className=\"mt-1 mx-auto import-registry-loading-text\">Please wait while we’re importing your\n                        registry</h4>\n                    </>\n                    :\n                    <h4 className=\"mx-auto import-registry-no-content-text\">\n                      Please paste your publicly accessible\n                      registry URL above to import items\n                      to M+A.\n                    </h4>\n                  }\n                </div>\n                :\n                // When products is filled\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"import-registry-main-content d-flex flex-column import-registry-products\">\n                      <div className=\"d-flex import-registry-products-column \">\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Items</p>\n                        </div>\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Category: Item</p>\n                        </div>\n                      </div>\n\n\n                      {this.props.stateAnotherStoreRegistry.map((product, index) => (\n                        <div className=\"d-flex import-registry-products-column\" key={\"Product-\" + index}>\n                          <div className=\"w-50 px-3\">\n                            <p className=\"py-3 text-body\">{product.title}</p>\n                          </div>\n                          <div className=\"w-50 px-3\">\n                            {product.categories.length <= 0 ?\n                              <div className=\"py-3\">\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Select category</a>\n                              </div>\n                              :\n                              <div className=\"pb-2\">\n                                {product.categories.map(category => (\n                                  <CategoryPill\n                                    key={category.id}\n                                    name={category.categoryName}\n                                    mainCategory={category.mainCategory}\n                                    removeCategory={() => this.removeSelectedCategory(index, category.id)}\n                                    className=\"mt-2 mr-3\"\n                                  />\n                                ))}\n\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Add</a>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n          <SelectCategory\n            showModal={this.state.categoryModalShow}\n            closeModal={this.setCategoryModalVisible}\n            changeCurrentCategory={this.setProductCategories}\n            currentCategory={this.state.currentCategory}\n          />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ImportRegistry);","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n    return (\n        <div\n          onClick={props.onClick}\n          className={[\"cash-fund-toggle-pills px-2 py-1\", props.className ? props.className : \"\", props.selectedClass ? props.selectedClass : \"\"].join(\" \")}>\n            <i className={[\"cash-fund-toggle-icon float-left\", props.iconClass ? props.iconClass : null].join(\" \")} />\n            <span className=\"text-sm ml-2\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default TogglePills;","import React from \"react\";\nimport \"./AddCashFundModal.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from \"../../button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport TogglePills from \"./toggle-pills/TogglePills\";\nimport {connect} from \"react-redux\";\nimport {graphQL, graphQLMultipart} from \"../../../../../api/axios\";\nimport {GET_CASH_FUND_CATEGORIES} from \"../../../../../api/queries\";\nimport {ADD_REGISTRY_ITEM} from \"../../../../../api/mutations\";\nimport {setCashFundCategories} from \"../../../../my-registry/MyRegistryActions\";\nimport {M_A_STORE_NAME} from \"../../../../../utils/constants\";\nimport {dataURItoBlob, getCategories, getProducts} from \"../../../../../utils/commonFunction\";\nimport {Dropdown} from 'reactjs-dropdown-component';\n\nclass AddCashFundModal extends React.Component {\n\n  // Accepted Image input types for Cash fund image\n  ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  MAX_IMAGE_SIZE = 5000000; // 5MB\n\n  // Cash Fund data\n  state = {\n    cashFundImage: {},\n    cashFundName: this.props.categoryData? this.props.categoryData.registryCategories[0].category.categoryName : \"\",\n    cashFundAmount: \"\",\n    hideTotal: false,\n    cashFundType: {},\n    cashFundNote: \"\",\n    mustHave: false,\n    markCompleted: false,\n    categories: []\n  }\n\n  imageRef = React.createRef()\n\n  modalCloseHandler = () => {\n    this.props.closeModal();\n  }\n\n  validateCashFundData = () => {\n    if (this.state.cashFundName.length <= 0) {\n      toast.error(\"Please enter Cash Fund Name.\")\n      return false;\n    }\n\n    if (this.state.cashFundAmount.length <= 0) {\n      toast.error(\"Please enter Cash Fund Amount\")\n      return false;\n    }\n\n    if (!Number(this.state.cashFundAmount)) {\n      toast.error(\"Please enter valid amount\")\n      return false;\n    }\n\n\n    let selectedCat = this.state.categories.find(category => category.selected)\n    if (!selectedCat) {\n      toast.error(\"Please select Cash Fund Type.\")\n      return false;\n    }\n\n    return true;\n  }\n\n  // Adding Cash Fund\n  addCashFundClickHandler = () => {\n    if (this.validateCashFundData()) {\n      let formData = new FormData()\n      let selectedCat = this.state.categories.find(category => category.selected)\n      let reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id,\n          input: [{\n            storeName: M_A_STORE_NAME,\n            items: [{\n              title: this.state.cashFundName,\n              price: this.state.cashFundAmount,\n              mostWanted: this.state.mustHave,\n              tags: [],\n              quantity: 1,\n              isGroupGift: true,\n              hideTotal: this.state.hideTotal,\n              markAsCompleted: this.state.markCompleted,\n              note: this.state.cashFundNote,\n              registryCategories: [Number(selectedCat.id)],\n              isCashFund: true\n            }]\n          }]\n        }\n      }\n\n      if (this.state.cashFundImage.type === \"custom\") {\n        let map = {\n          images: [\"variables.input.0.items.0.images\"]\n        }\n        reqData.variables.input[0].items[0]['images'] = null;\n        console.log(dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n        formData.append(\"map\", JSON.stringify(map))\n        formData.append(\"images\", dataURItoBlob(this.state.cashFundImage.value, this.state.cashFundImage.fileType, this.state.cashFundImage.fileName))\n      } else {\n        reqData.variables.input[0].items[0]['imageUrl'] = this.state.cashFundImage.value;\n      }\n\n      formData.append(\"operations\", JSON.stringify(reqData))\n\n      graphQLMultipart(formData).then(res => {\n        if (res.data.data && res.data.data.addRegistryItems) {\n          // Successfully added product\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n          toast.success((\n            <p><b>{this.state.cashFundName}</b> added to your registry!</p>\n          ))\n          this.modalCloseHandler()\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n  }\n\n  presentCategories = (allCategories) => {\n    let categories = allCategories.map(category => {\n      let categoryData = {\n        id: category.id,\n        title: category.categoryName,\n        selected: this.props.categoryData && this.props.categoryData.registryCategories[0].category.id === category.id ? true : false,\n        key: \"categories\"\n      }\n      return categoryData\n    })\n    this.setState({categories: [...categories]})\n  }\n\n  resetThenSet = (id, key) => {\n    this.setState({\n      categories: this.state.categories.map(category => {\n        category.selected = category.id === id;\n        return category;\n      })\n    })\n  }\n\n  // Modal Data\n  modalTitle = \"Add Cash Fund\";\n  modalFooterButton = (\n    <Button\n      variant=\"primary\"\n      className=\"px-5 py-1 font-medium text-body\"\n      onClick={this.addCashFundClickHandler}\n    >Add & Close</Button>\n  )\n\n  // Handling custom image selection\n  selectFileHandler = (ev) => {\n    if (ev.target && ev.target.files.length > 0) {\n      const file = ev.target.files[0]\n\n      // Verifying file is image\n      if (this.ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= this.MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = (e) => {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              fileType: file.type,\n              fileName: file.name\n            }\n            this.setState({\n              cashFundImage: newProductImage\n            })\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n\n  // Input change handlers\n  cashFundNameChangeHandler = (ev) => {\n    this.setState({\n      cashFundName: ev.target.value\n    })\n  }\n\n  cashFundAmountChangeHandler = (ev) => {\n    this.setState({\n      cashFundAmount: ev.target.value\n    })\n  }\n\n  cashFundHideTotalChangeHandler = (_) => {\n    this.setState((prevState, _) => ({\n      hideTotal: !prevState.hideTotal\n    }))\n  }\n\n  cashFundTypeChangeHandler = (ev) => {\n    if (this.props.stateCashFundCategories.length > 0) {\n      const changedCategory = this.props.stateCashFundCategories.find(category => Number(category.id) === Number(ev.target.value))\n      if (changedCategory.id) {\n        this.setState({\n          cashFundType: changedCategory\n        })\n      }\n    }\n  }\n\n  cashFundNoteChangeHandler = (ev) => {\n    this.setState({\n      cashFundNote: ev.target.value\n    })\n  }\n\n  mustHaveClickHandler = () => {\n    this.setState((prevState, _) => ({\n      mustHave: !prevState.mustHave\n    }))\n  }\n\n  markCompletedClickHandler = () => {\n    this.setState((prevState, _) => ({\n      markCompleted: !prevState.markCompleted\n    }))\n  }\n\n  \n  render() {\n    \n    if (this.props.imageUrl && !this.state.cashFundImage.value && this.state.cashFundImage.value !== this.props.imageUrl) {\n      this.setState({\n        cashFundImage: {\n          type: \"url\",\n          value: this.props.imageUrl\n        }\n      })\n    }\n    \n    if(this.props.stateCashFundCategories.length > 0 && this.state.categories.length<=0){\n      this.presentCategories(this.props.stateCashFundCategories)\n    }\n  \n    if (this.props.stateCashFundCategories.length <= 0) {\n      // Fetching all cash fund categories\n      const reqData = {\n        query: GET_CASH_FUND_CATEGORIES,\n        operationName: \"getCashFund\",\n        variables: {\n          registryId: this.props.stateRegistryInfo.id\n        }\n      }\n\n\n      graphQL(reqData).then(res => {\n        console.log(res.data.data)\n        if (res.data.data && res.data.data.cashFundCategories) {\n          let allCashFundCategories = res.data.data.cashFundCategories.map(cat => {\n            cat.category.id = cat.id\n            return cat.category\n          })\n          this.presentCategories(allCashFundCategories);\n          this.props.dispatch(setCashFundCategories(allCashFundCategories))\n        }\n      }).catch(err => {\n        console.error(err.response)\n      })\n    }\n\n\n    if (!this.state.cashFundType.id && this.props.stateCashFundCategories.length > 0) {\n      let foundCategory = false\n      if (this.props.categoryData?.registryCategories && this.props.categoryData.registryCategories.length > 0) {\n        for (let cashFundCategory of this.props.stateCashFundCategories) {\n          if (Number(this.props.categoryData.registryCategories[0].category.id) === Number(cashFundCategory.id)) {\n            foundCategory = true\n            this.setState({\n              cashFundType: cashFundCategory\n            })\n            break\n          }\n        }\n      }\n      if (!foundCategory) {\n        this.setState({\n          cashFundType: this.props.stateCashFundCategories[0]\n        })\n      }\n    }\n\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          title={this.modalTitle}\n          footer={this.modalFooterButton}\n          closeModal={this.modalCloseHandler}>\n\n          <div className=\"row cash-fund-modal-content\">\n            <div className=\"col-5\">\n              <div className=\"cash-fund-modal-image-section mr-1\">\n                {this.state.cashFundImage.type ?\n                  <img src={this.state.cashFundImage.value} alt=\"Cash Fund\" className=\"cash-fund-modal-image\" />\n                  :\n                  <div className=\"cash-fund-modal-no-image\" />\n                }\n                <i\n                  className=\"icon-preview change-cash-fund-image-icon p-1\"\n                  onClick={() => {\n                    this.imageRef.current.click()\n                  }}\n                />\n                <input\n                  type=\"file\"\n                  className=\"d-none\"\n                  ref={this.imageRef}\n                  accept={this.ACCEPTED_IMAGE_TYPE.join(\",\")}\n                  onChange={(ev) => this.selectFileHandler(ev)}\n                />\n              </div>\n            </div>\n            <div className=\"col-7 cash-fund-input-section\">\n              <div className=\"ml-3 mr-6\">\n\n                {/* Cash Fund name */}\n                <div className=\"row\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Cash Fund Name<label className=\"asterik\">*</label></p>\n                    <input\n                      className=\"cash-fund-input h2 mt-1 w-100 mw-100 p-2\"\n                      type=\"text\"\n                      value={this.state.cashFundName}\n                      onChange={(ev) => this.cashFundNameChangeHandler(ev)}\n                    />\n                  </div>\n                </div>\n\n                {/* Cash Fund type */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium mb-1\">Type<label className=\"asterik\">*</label></p>\n                    <div className=\"cash-fund-select w-100 mw-100\">\n                    <Dropdown\n                      title=\"Select category\"\n                      list={this.state.categories}\n                      resetThenSet={this.resetThenSet}\n                    />\n                    </div>\n                  </div>\n                </div>\n\n\n                <div className=\"row mt-5\">\n\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium mb-1\">Total Amount<label className=\"asterik\">*</label></p>\n                    <div className=\"row\">\n\n                      {/* Cash fund amount */}\n                      <div className=\"col\">\n                        <div className=\"position-relative\">\n                          <input\n                            className=\"cash-fund-input w-100 mw-100 p-1 pl-5 text-body\"\n                            type=\"number\"\n                            value={this.state.cashFundAmount}\n                            onChange={(ev) => this.cashFundAmountChangeHandler(ev)}\n                          />\n                          <span className=\"cash-fund-price-input-currency text-body\">$</span>\n                        </div>\n                      </div>\n\n                      {/* Cash fund hidden option */}\n                      <div className=\"col align-self-center\">\n                        <label\n                          className=\"checkbox d-flex align-items-center\">\n                          <span className=\"checkbox__input mr-2\">\n                            <input\n                              type=\"checkbox\"\n                              onChange={(ev) => this.cashFundHideTotalChangeHandler(ev)}\n                            />\n                            <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i className=\"icon-check\" />\n                            </span>\n                          </span>\n                          <span\n                            className=\"radio__label text-sm\">Hide total from guests</span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col\">\n                    <TogglePills\n                      text=\"Must Have\"\n                      iconClass=\"icon-heart\"\n                      selectedClass={this.state.mustHave ? \"cash-fund-must-have-selected\" : null}\n                      onClick={this.mustHaveClickHandler}\n                    />\n                    {/* TODO: Change below icon to rounded correct when added */}\n                    <TogglePills\n                      text=\"Mark As Completed\"\n                      iconClass=\"icon-check\"\n                      className=\"ml-2\"\n                      selectedClass={this.state.markCompleted ? \"cash-fund-completed-selected\" : null}\n                      onClick={this.markCompletedClickHandler}\n                    />\n                  </div>\n                </div>\n\n\n                {/* Cash fund note */}\n                <div className=\"row mt-5\">\n                  <div className=\"col cash-fund-input-container\">\n                    <p className=\"cash-fund-input-label text-sm font-medium\">Notes</p>\n                    <textarea\n                      placeholder=\"Write a note for your friends and family\"\n                      className=\"cash-fund-textarea w-100 mw-100 mt-1 w-100 mw-100 p-1 text-body\"\n                      value={this.state.cashFundNote}\n                      onChange={(ev) => this.cashFundNoteChangeHandler(ev)}\n                      rows={2} />\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateCashFundCategories: state.myRegistry.cashFundCategories,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddCashFundModal);","import React from 'react';\nimport \"./AddGift.scss\";\nimport {connect} from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport ImportRegistry from \"./import-registry/ImportRegistry\";\nimport {clearAnotherStoreProductInfo, setAnotherStoreRegistryItems} from \"modules/my-registry/MyRegistryActions\";\nimport {ADD_REGISTRY_ITEM, SAVE_REGISTRY_DATA} from \"../../../../api/mutations\";\nimport {graphQLMultipart as graphQL, graphQL as jsonGraphQL} from \"../../../../api/axios\";\nimport {getProducts, getCategories} from \"utils/commonFunction\";\nimport {toast} from \"react-toastify\";\nimport {IMPORT_REGISTRY_EMAIL} from \"../../../../utils/constants\";\nimport {dataURItoBlob} from \"../../../../utils/commonFunction\";\nimport AddCashFundModal from \"../../../commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false,\n    showCashFundModal: false,\n    cashFundProduct: null,\n    currentContent: \"\"\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n    this.props.dispatch(setAnotherStoreRegistryItems([]));\n  }\n\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      toast.error(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      toast.error(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      toast.error(\"Invalid Quantity\");\n      return false;\n    }\n\n    // TODO: if necessary Valid Category\n    // if (!storeProduct.category.id) {\n    //   toast.error(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"isCashAcceptedOnly\": storeProduct.howToGift.id === 1 ? true : false ,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false,\n      currentContent: \"\"\n    })\n  }\n\n  openCashFundModal = () => {\n    this.modalCloseHandler();\n    this.setState({\n      showCashFundModal: true\n    })\n  }\n\n  closeCashFundModal = () => {\n    this.setState({\n      showCashFundModal: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\" onClick={this.openCashFundModal}><h4 className=\"m-auto\">Cash Funds</h4>\n            </div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name}/>\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection/>\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n                onClick={this.importRegistry}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  validImportRegistryData = (registryItems) => {\n    if (registryItems.length <= 0) {\n      toast.error(\"No Item found\");\n      return false;\n    }\n    // TODO: if necessary Valid Category\n    // for (const item of registryItems) {\n    //   if (item.categories.length <= 0) {\n    //     toast.error(\"Please select category for all product\");\n    //     return false;\n    //   }\n    // }\n    return true;\n  }\n\n  getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  getCleanedRegistryItems = (registryItems) => {\n    let cleanedRegistryItems = []\n    for (const item of registryItems) {\n      // TODO: Handle multiple store for single product\n      const itemStore = item.stores[0]\n      if (cleanedRegistryItems.find(el => el.storeName ? el.storeName === itemStore.name : false)) {\n        cleanedRegistryItems = cleanedRegistryItems.map(el => {\n          if (el.storeName === itemStore.name) {\n            if (el.items) {\n              el.items.push({\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              })\n            } else {\n              el['items'] = [{\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              }]\n            }\n            if (item.img) {\n              el.items[el.items.length - 1]['imageUrl'] = item.img\n            }\n          }\n          return el;\n        })\n      } else {\n        let newStore = {\n          storeName: itemStore.name,\n          items: [{\n            title: item.title,\n            // TODO: change category\n            registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n            quantity: 1,\n            tags: [],\n            price: this.getRefinedPrice(itemStore.price)\n          }]\n        }\n\n        if (item.img) {\n          newStore.items[newStore.items.length - 1]['imageUrl'] = item.img\n        }\n        cleanedRegistryItems.push(newStore)\n      }\n    }\n\n    return cleanedRegistryItems;\n  }\n\n  importRegistryClickHandler = () => {\n    if (!this.validImportRegistryData(this.props.stateAnotherStoreRegistry)) {\n      return;\n    }\n\n    const registryItems = this.getCleanedRegistryItems(this.props.stateAnotherStoreRegistry)\n    if (registryItems.length > 0) {\n      const reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          \"registryId\": this.props.stateRegistryInfo.id,\n          \"input\": registryItems\n        }\n      }\n      jsonGraphQL(reqData).then(res => {\n        if (res.data.data.addRegistryItems) {\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n          toast.success(\"Registry items imported successfully\");\n          this.clearModalData();\n          this.modalCloseHandler();\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore/>\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal,\n      currentContent: \"anotherStoreProduct\"\n    }))\n  }\n\n  importRegistry = () => {\n    this.clearModalData()\n    this.modalTitle = \"Import Registry\"\n    this.modalBody = <ImportRegistry/>\n\n    this.setState((prevState, _) => ({\n      updateModal: !prevState.updateModal,\n      currentContent: \"importRegistry\"\n    }))\n  }\n\n  render() {\n\n    if (this.props.stateAnotherStoreProduct && this.state.currentContent === \"anotherStoreProduct\") {\n      this.modalFooterButtons = (\n        <>\n          <Button\n            variant=\"secondary\"\n            className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n            disabled={!this.props.stateAnotherStoreProduct.productName}\n            onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n          >View Details</Button>\n          <Button\n            variant=\"primary\"\n            className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n            disabled={!this.props.stateAnotherStoreProduct.productName}\n            onClick={this.addItemToRegistry}\n          >Save & Close</Button>\n        </>\n      )\n    }\n\n    if (this.props.stateAnotherStoreRegistry && this.state.currentContent === \"importRegistry\") {\n      this.modalFooterButtons = (\n        <>\n          {/*TODO: change href of email us link*/}\n          <a href={\"mailto:\" + IMPORT_REGISTRY_EMAIL} tabindex target='_blank'\n             className=\"mr-auto import-registry-email-link text-sm font-medium\">Email Us For Help</a>\n          {/*TODO: Integrate API when multiple category is supported*/}\n          <Button\n            variant=\"primary\"\n            className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n            disabled={this.props.stateAnotherStoreRegistry.length <= 0}\n            onClick={this.importRegistryClickHandler}\n          >Import</Button>\n        </>\n      )\n    }\n\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n            <span className=\"font-medium text-sm\">What is Add Gift?</span>\n            <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save\n              in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n\n        {this.state.showCashFundModal ?\n          <AddCashFundModal\n            show={this.state.showCashFundModal}\n            closeModal={this.closeCashFundModal}\n            categoryData={this.state.cashFundProduct}\n          />\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);\n","import React from \"react\";\nimport \"./CashFundCardNotAdded.scss\";\n\nclass CashFundCardNotAdded extends React.Component {\n  render() {\n    return (\n      <div\n        className={[\"baby-registry-cash-fund-card py-3 mb-2\", this.props.className ? this.props.className : \"\"].join(\" \")}>\n        <div className=\"row\">\n          <div className=\"col-2\">\n\n            <div className=\"pl-3\">\n              {this.props.data.item.imageUrl ?\n                <img className=\"cash-fund-image d-block mx-auto\" src={this.props.data.item.imageUrl}/>\n                :\n                <div className=\"baby-registry-cash-fund-no-image\" />\n              }\n            </div>\n\n          </div>\n          <div className=\"col\">\n            <div className=\"float-left\">\n              <p className=\"text-body font-medium\">{this.props.data.registryCategories[0].category.categoryName}</p>\n              <p\n                className=\"text-sm cash-fund-description\">{this.props.data.registryCategories[0].category.description}</p>\n            </div>\n            <button className=\"cash-fund-add-btn float-right mr-6\" onClick={this.props.addButtonClickHandler}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CashFundCardNotAdded;","import React from \"react\";\nimport CashFundCardNotAdded from \"./cash-fund-card-not-added/CashFundCardNotAdded\";\n\nclass CashFundCard extends React.Component {\n  render() {\n    return <CashFundCardNotAdded data={this.props.data} addButtonClickHandler={this.props.addButtonClickHandler}/>\n  }\n}\n\nexport default CashFundCard;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport {graphQL, getRecommendation} from 'api/axios';\nimport {GET_RECOMMENDATIONS} from 'api/queries';\nimport {TOGGLE_MUST_HAVE} from 'api/mutations';\nimport {getProducts, removeProductFromCartHandler, getCategories} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport config from \"api/config\";\nimport axios from \"axios\";\nimport CashFundCard from \"../../../commons/components/cash-fund-card/CashFundCard\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport AddCashFundModal from \"../../../commons/components/cash-fund-card/add-cash-fund-modal/AddCashFundModal\";\n\nclass Everything extends Component {\n\n  state = {\n    showCashFundModal: false,\n    cashFundProduct: null\n  }\n\n  openCashFundModal = () => {\n    this.setState({\n      showCashFundModal: true\n    })\n  }\n\n  setCashFundCategoryAndOpenModal = (product) => {\n    this.setState({\n      cashFundProduct: {...product}\n    })\n    this.openCashFundModal()\n  }\n\n  closeCashFundModal = () => {\n    this.setState({\n      showCashFundModal: false,\n      cashFundProduct: null\n    })\n  }\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n\n  setAllRecommendation = async (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          ...category,\n          parentCategory: parentCat.categoryName,\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      // for (let i = 0; i <= 5; i++) {\n      // let recommendedCat = recommendedCategory[i]\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.categoryName\n        }\n      }\n      const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\n      const cookies = new Cookies();\n\n      await axios.get(apiURL + 'items', {\n        params: data,\n        headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n      })\n        .then(res => {\n          let rData = res.data.data.products.edges.map(item => {\n            let resData = {...item.node}\n            resData['quantity'] = 1\n            resData['category'] = recommendedCat\n            return resData\n          })\n          // count = count + 1;\n          if (rData.length !== 0) {\n            this.props.dispatch(addRecommendedProduct(rData))\n          }\n        }).catch(err => {\n          console.error(err.message)\n        })\n\n\n      // getRecommendation({ params: data }).then(res => {\n      //   let rData = res.data.data.products.edges.map(item => {\n      //     let resData = { ...item.node }\n      //     resData['quantity'] = 1\n      //     resData['category'] = recommendedCat\n      //     return resData\n      //   })\n      //   // count = count + 1;\n      //   this.props.dispatch(addRecommendedProduct(rData))\n      // }).catch(err => {\n      //   console.error(err.message)\n      // })\n      //   )\n      // ))\n      // count = count + 1;\n      // }\n      // else {\n      //   break;\n      // }\n    }\n  }\n\n  getSortedProducts = (addedProducts, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    const cashFundCategory = stateCategories.find(category => category.categoryType && Number(category.categoryType.id) === 2)\n    let cashFundCount = 0\n    if (cashFundCategory) {\n      let productsToAppend = []\n      for (let subCategory of cashFundCategory.subCategories) {\n        if (Number(subCategory.addedItemsCount) === 0) {\n          cashFundCount++;\n          productsToAppend.push({\n            item: {\n              imageUrl: \"\"\n            },\n            registryCategories: [{\n              id: subCategory.id,\n              category: {\n                ...subCategory\n              }\n            }]\n          })\n        }\n      }\n      addedProducts = [...addedProducts, ...productsToAppend]\n    }\n\n    let allProducts = []\n    let productCount = 0;\n    let categories = []\n    for (let parentCat of stateCategories) {\n      if (!parentCat.isParent) {\n        categories.push({\n          id: parentCat.id,\n          name: parentCat.categoryName,\n          added: parentCat.addedItemsCount,\n          total: parentCat.totalItemsCount,\n          parentCategory: {\n            id: parentCat.id,\n            name: parentCat.categoryName\n          },\n          categoryType: parentCat.categoryType,\n        })\n      } else {\n        for (let category of parentCat.subCategories) {\n          if (category.subProductTypes.length) {\n            for (let subProduct of category.subProductTypes) {\n              categories.push({\n                id: subProduct.id,\n                name: subProduct.categoryName,\n                added: subProduct.addedItemsCount,\n                total: subProduct.totalItemsCount,\n                parentCategory: {\n                  id: parentCat.id,\n                  name: parentCat.categoryName\n                },\n                categoryType: category.categoryType,\n              })\n            }\n          } else {\n            categories.push({\n              id: category.id,\n              name: category.categoryName,\n              added: category.addedItemsCount,\n              total: category.totalItemsCount,\n              parentCategory: {\n                id: parentCat.id,\n                name: parentCat.categoryName\n              },\n              categoryType: category.categoryType,\n            })\n          }\n        }\n      }\n    }\n\n\n    for (let category of categories) {\n      let products = []\n      let recommendations = []\n\n      // Getting filtered Products and recommendations\n      if (stateFilterApplied.parentFilter) {\n        if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n          if (stateFilterApplied.childFilter.length > 0) {\n            const childFilterArray = stateFilterApplied.childFilter\n\n            for (let product of addedProducts) {\n              let categoryFound = false\n              for (let cat of product.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              if (\n                ((childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n                  (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n                  // TODO: change category\n                  (childFilterArray.includes(\"reserved\") && product.isReserved)) && categoryFound\n              ) {\n                products.push(product)\n                // filteredProductsId.push(product.id)\n              }\n            }\n          } else {\n            // TODO: change category\n            products.push(...addedProducts.filter(el => {\n              let categoryFound = false\n              for (let cat of el.registryCategories) {\n                if (cat.id === category.id) {\n                  categoryFound = true\n                  break\n                }\n              }\n              return categoryFound;\n            }))\n          }\n        } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n          let addedRecommendations = []\n          recommendations = stateRecommendedProducts.filter(el => {\n            if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n              addedRecommendations.push(el.id)\n              return true;\n            }\n            return false;\n          })\n        }\n      } else {\n        // TODO: Change this condition(el.item.category.length)\n        // TODO: change category\n        products.push(...addedProducts.filter(el => {\n          let categoryFound = false\n          for (let cat of el.registryCategories) {\n            if (cat.id === category.id) {\n              categoryFound = true\n              break\n            }\n          }\n          return categoryFound && el.registryCategories.length\n        }))\n        let addedRecommendations = []\n        recommendations = stateRecommendedProducts.filter(el => {\n          if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n            addedRecommendations.push(el.id)\n            return true;\n          }\n          return false;\n        })\n      }\n      productCount += products.length;\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: (category.added < category.total || category.total === 0) ? recommendations : []\n      })\n    }\n\n    // Grouping products based on parent category\n    let groupedProducts = []\n    for (const product of allProducts) {\n      let foundCategory = false;\n      groupedProducts = groupedProducts.map(el => {\n        if (el.id === product.category.parentCategory.id) {\n          foundCategory = true;\n          el.allProducts.push(product);\n        }\n        return el;\n      })\n\n      if (!foundCategory) {\n        groupedProducts.push({\n          ...product.category.parentCategory,\n          allProducts: [product]\n        })\n      }\n    }\n\n    // Adding total products and recommendations\n    groupedProducts = groupedProducts.map(el => {\n      let productCount = 0;\n      let recommendationCount = 0;\n\n      for (let product of el.allProducts) {\n        productCount += product.products.length;\n        recommendationCount += product.recommendations.length;\n      }\n\n      el['totalProducts'] = productCount;\n      el['totalRecommendations'] = recommendationCount;\n      return el;\n    })\n\n    // Removing items that does not have products or recommendations based on filters\n    if (stateFilterApplied.parentFilter) {\n      if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n        groupedProducts = groupedProducts.filter(product => product.totalProducts > 0)\n      } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n        groupedProducts = groupedProducts.filter(product => product.totalRecommendations > 0)\n      }\n    } else {\n      groupedProducts = groupedProducts.filter(product => (product.totalProducts > 0 || product.totalRecommendations > 0))\n    }\n\n    if (!stateFilterApplied.parentFilter) {\n      productCount -= cashFundCount\n    }\n    return {groupedProducts, productCount};\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for (let category of checklistItems) {\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems / totalItems) * 100;\n  }\n\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let {groupedProducts, productCount} = this.getSortedProducts(this.props.stateAddedProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"row mt-6\">\n            {/* View CheckList */}\n            <div className=\"col-3\">\n              <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)}/>\n              {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n                                                                     dispatch={this.props.dispatch}/>)}\n            </div>\n            <div className=\"col-9\">\n\n              {/* Top Filter Section */}\n              <FilterSection productCount={productCount}/>\n              <div className=\"mt-5\">\n                {groupedProducts.map(el => {\n                  let hasCashFund = false;\n                  return (<>\n                      <h4 className=\"text-uppercase my-4\">{el.name}</h4>\n                      {el.allProducts.map((product, i) => (\n                        <div id={product.category.name}>\n                          {product.products.map((card, index) => {\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2) {\n                              hasCashFund = true\n                            }\n                            if (Number(card.registryCategories[0].category.categoryType.id) === 2 && Number(card.registryCategories[0].category.addedItemsCount) === 0) {\n                              return (\n                                <CashFundCard\n                                  data={card}\n                                  key={\"cashFund\" + index}\n                                  className=\"mt-2\"\n                                  addButtonClickHandler={() => this.setCashFundCategoryAndOpenModal(card)}\n                                />\n                              )\n                            } else {\n                              return (\n                                <AddedCard\n                                  data={card} key={\"addedCard\" + index}\n                                  multipleCategories = {card.registryCategories.length > 1 ? card.registryCategories.find((cat, index) => Number(cat.id) === Number(product.category.id) && index != 0) : null}\n                                  toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                                  removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                                />\n                              )\n                            }\n                          })}\n                          {product.recommendations.length > 0 ?\n                            <ViewRecommend\n                              title={product.recommendations[0].category.categoryName}\n                              category={product.recommendations[0].category}\n                              products={product.recommendations}/>\n                            : null}\n                        </div>\n                      ))}\n                      {hasCashFund ?\n                        <div className=\"my-2\">\n                          <Button\n                            variant=\"secondary\"\n                            className=\" w-100 py-1 text-body font-medium\"\n                            onClick={this.openCashFundModal}\n                          >Add my own</Button>\n                        </div>\n                        : null}\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showCashFundModal ?\n          <AddCashFundModal\n            show={this.state.showCashFundModal}\n            closeModal={this.closeCashFundModal}\n            categoryData={this.state.cashFundProduct}\n          />\n          : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 5\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          closeModalHandler()\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      toast.error(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n\t\t  closeModalHandler()\n\t\t  setUploadImage(false);\n        } else {\n          toast.error(\"Some error occurred\");\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n\n  }\n\n  //modal close method\n  const closeModalHandler = () => {\n      getDefaultCoverImages();\n      props.closeCoverImagePicker();\n  }\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={closeModalHandler}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport { UPDATE_REGISTRY } from \"../../../../api/mutations\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport { toast } from 'react-toastify';\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      toast.error(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully updated registry information\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\" />\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\" />\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n        onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport routes from \"../../../../utils/routes\";\n\nconst ShareRegistry = (props) => {\n\n  const siteHostName = window.location.host + routes.REGISTRY.HOME;\n  // const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      toast.error(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      if (err.response.status === 400) {\n        setRegistryError(`${registryUrl} is not available. Please try something else.`)\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n      console.error(err.response.data)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toast.success(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section d-flex text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2 d-flex\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram .svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter.svg\"/>\n              </>\n              :\n              <>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook_disabled.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram _disabled.svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter_disabled.svg\"/>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport { setguestViewRegistry } from \"modules/view-registry/ViewRegistryActions\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\nimport { updateGuestViewRegistry } from 'utils/commonFunction';\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  componentDidMount() {\n    if (!this.props.guestViewRegistryState.urlSlug) {\n      updateGuestViewRegistry(this.props.stateRegistryInfo.urlSlug, this.props.dispatch)\n    }\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({ showCoverImagePicker: false })\n  }\n\n  closeShareRegistry = () => {\n    this.setState({ showShareRegistry: false })\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  handleGuestView = () => {\n    toast.success(\"Viewing registry as guest\")\n    this.props.dispatch(setguestViewRegistry(true))\n  }\n\n  handleDisableViewGuest = () => {\n    this.props.dispatch(setguestViewRegistry(false))\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({ showCoverImagePicker: true })\n      }\n    }\n  ]\n\n\n  render() {\n    // const style = {\n    //   backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'\n    // }\n    return (\n      <>\n        {this.props.stateGuestViewRegistry ?\n          <div className=\"view-guest-header text-body py-2\">\n            <div className=\"container d-flex justify-content-between\" onClick={this.handleDisableViewGuest}>\n              <div className=\"d-flex align-items-center view-guest-link\">\n                <i className=\"icon-chevron-left view-guest-text mr-2\" />\n                <a className=\"view-guest-text\" tabindex>Back To View Registry</a>\n              </div>\n              <div className=\"view-guest-text\">This is how your guests will see your registry</div>\n              <a className=\"view-guest-text view-guest-link\">Share</a>\n            </div>\n          </div> : null\n        }\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')' }}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          {!this.props.stateGuestViewRegistry ?\n            <div className=\"cover-pic-update-options\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-end\">\n                    <MoreOption\n                      data={this.COVER_PIC_OPTIONS}\n                      iconClass=\"icon-preview\"\n                      activeOptionClass=\"view-registry-cover-option-active\"\n                      buttonClass=\"update-cover-options p-1\" />\n                  </div>\n                </div>\n              </div>\n            </div> : null\n          }\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    {!this.props.stateGuestViewRegistry ?\n                      <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)} />\n                      : null\n                    }\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    !this.props.stateGuestViewRegistry ?\n                      <a className=\"add-greeting-link text-sm font-medium\" href=\"#\" tabindex\n                        onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a> : null\n                  }\n                </div>\n                {!this.props.stateGuestViewRegistry ?\n                  <div className=\"col-12 col-md-3 header-buttons\">\n                    <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\"\n                      onClick={this.handleGuestView}>View as Guest</Button>\n                    <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\"\n                      onClick={() => this.setState({ showShareRegistry: true })}>Share</Button>\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n        <EditViewRegistryDetail\n          show={this.state.showEditRegistryDetail}\n          closeEditRegistryDetail={this.closeEditRegistryDetail}\n          info={this.props.stateRegistryInfo}\n        />\n\n        <ShareRegistry\n          show={this.state.showShareRegistry}\n          closeShareRegistry={this.closeShareRegistry}\n          registryInfo={this.props.stateRegistryInfo}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    guestViewRegistryState: state.guestView.info,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt, clearViewFilter, setChildViewFilter } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearViewFilter())\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              {this.props.stateGuestViewRegistry ?\n                <></> :\n                <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>}\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 && !this.props.stateGuestViewRegistry ?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    stateRegistryInfo: state.registry.info,\n    stateFilterApplied: state.viewRegistry.viewFilterApplied,\n    stateFilterCategory: state.viewRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);\n","import React, { useState, useEffect } from 'react'\nimport \"./ViewFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildViewFilter, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport { FILTERS } from \"utils/constants\"\n\nconst ViewFilter = () => {\n\n  const dispatch = useDispatch()\n  let tempParentFilterId = useSelector(state => state.viewRegistry.viewFilterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  let stateFilterCategories = useSelector(state => state.viewRegistry.filterCategory)\n  let [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  const getLimitOfFliter = (parentId) => {\n    let limit = null\n    const filterCategory = [...filterCategoryLimit]\n    for (let category of filterCategory) {\n      if (parentId === category.id && category.limit) {\n        limit = category.limit\n      }\n    }\n    return limit\n  }\n\n  // Updating product count in filter categories\n  const updateFilterList = (addedProducts) => {\n\n    let newFilterList = [\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          if (category.addedItemsCount > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = newCategory.addedItemsCount\n          return newCategory\n        })\n        // count: 0\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: addedProducts.filter((product) => product.item.price < 50).length\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: addedProducts.filter(product => (product.item.price >= 50 && product.item.price <= 100)).length\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: addedProducts.filter(product => (product.item.price > 100)).length\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName === MONICA_AND_ANDY).length\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName !== MONICA_AND_ANDY).length\n          },\n        ]\n      },\n\n    ]\n    if (!stateGuestViewRegistry) {\n      const giftStatus = {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: addedProducts.filter(product => !product.isReserved || !product.isPurchased).length\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: addedProducts.filter(product => product.isPurchased).length\n          }\n        ]\n      }\n      newFilterList.splice(0, 0, giftStatus)\n    }\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  useEffect(() => {\n    if (tempChildFilterIds.length === 0) {\n      updateFilterList(stateAddedProducts)\n    }\n  }, [stateAddedProducts, stateCategoriesInfo, tempChildFilterIds])\n\n\n  // Change event handlers\n\n  // TDOD: Add this if needed\n  // const parentChangeHandler = (parent) => {\n  //   dispatch(setParentViewFilter(parent.id))\n  //   if (parent.child) {\n  //     dispatch(setChildViewFilter(parent.child.map(child => child.id)))\n  //   } else {\n  //     dispatch(setChildViewFilter([]))\n  //   }\n  // }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildViewFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildViewFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearViewFilter())\n  }\n\n  const changeParentLimitHandler = (parentFilterID) => {\n    let limitLength = null\n    let filterCategory = [...stateFilterCategories].map(parentFilter => {\n      if (parentFilter.id === parentFilterID) {\n        parentFilter.limit = parentFilter.child.length\n        limitLength = parentFilter.child.length\n      }\n      return parentFilter\n    })\n    dispatch(setViewFilterCategory(filterCategory))\n\n    let isFound = false\n    let newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n      if (categorylimit.id === parentFilterID) {\n        categorylimit.limit = limitLength\n        isFound = true\n        return categorylimit\n      }\n      return categorylimit\n    })\n\n    if (!isFound) {\n      newFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n    }\n    setFilterCategoryLimit(newFilterCateoryLimit)\n  }\n\n  return (\n    <div className=\"view-filter\">\n      <div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n        <h4 className=\"font-weight-bold\">Filters</h4>\n        {tempChildFilterIds.length !== 0 ?\n          <a tabindex='0' className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n        }\n      </div>\n      <div className=\"d-flex flex-column\">\n        {[...stateFilterCategories].map(parentFilter => (\n          <div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n            {/* Parent filter */}\n            <div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n            {/* Child filter */}\n            {parentFilter.child ? (\n              <div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n                <div className=\"mt-3 fliter-checkbox-section\">\n                  {parentFilter.child.map((childFilter, index) => (\n                    childFilter.count > 0 ?\n                      index < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n                        <label class=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n                          <span class=\"checkbox__input mr-2\">\n                            <input type=\"checkbox\"\n                              name={childFilter.display}\n                              value={childFilter.display}\n                              checked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n                              onChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n                            <span class=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i class=\"icon-check\"></i>\n                            </span>\n                          </span>\n                          <p class=\"radio__label text-sm\"><div>{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</div></p>\n                        </label>\n                        : null\n                      : null\n\n                  ))}\n                  {(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n                    <div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n                    : null\n                  }\n                </div>\n              </div>\n            )\n              : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewFilter;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAlreadyBoughtProductInfo } from 'modules/guest-view/GuestViewAction';\nimport ProductDetailsModel from '../product-details-model/ProductDetailsModel';\nimport Counter from \"../counter/Counter\";\nimport { store } from \"store/Store\";\nimport './AlreadyBoughtProduct.scss';\n\nconst AlreadyBoughtProduct = (props) => {\n\n  const dispatch = useDispatch();\n  const stateRegistryInfo = useSelector(state => state.guestView.info)\n  const productInfo = useSelector(state => state.guestView.alreadyBoughtProduct)\n  const quantity = useSelector(state => state.guestView.alreadyBoughtProduct.quantity)\n  const name = useSelector(state => state.guestView.alreadyBoughtProduct.name)\n  const email = useSelector(state => state.guestView.alreadyBoughtProduct.email)\n  const orderNumber = useSelector(state => state.guestView.alreadyBoughtProduct.orderNumber)\n  const storeName = useSelector(state => state.guestView.alreadyBoughtProduct.storeName)\n  const giftMessage = useSelector(state => state.guestView.alreadyBoughtProduct.giftMessage)\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  const incrementQuantity = () => {\n    if (quantity < props.data.quantityStatus.still_needed) {\n      setQuantity(quantity + 1)\n    }\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const nameChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    props.onFocusHandler('name')\n    prodInfo.name = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n\n  const emailChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    props.onFocusHandler('email')\n    prodInfo.email = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  const storeNameChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    props.onFocusHandler('storeName')\n    prodInfo.storeName = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  const orderNumberChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    prodInfo.orderNumber = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  const giftMessageChangeHandler = (ev) => {\n    ev.persist();\n    let prodInfo = { ...productInfo };\n    prodInfo.giftMessage = ev.target.value;\n    dispatch(setAlreadyBoughtProductInfo(prodInfo));\n  }\n\n  return (\n    <div className=\"row add-gift-another-store\">\n      <div className=\"col\">\n        <div className=\"row\">\n          <div className=\"col-5 py-4 add-gift-image-select\">\n            <div className=\"mr-3\">\n              <ProductDetailsModel data={props.data} />\n            </div>\n          </div>\n          {/* // I Bought This Already Model Body */}\n          <div className=\"col-7 mt-4\">\n            <div className=\"ml-3\">\n              <div className=\"row col\">\n                <div className=\"col\">\n                  <p className=\"font-body font-medium\">Great, let’s update their registry</p>\n                  <p className=\"text-sm mt-1\">This info will help {stateRegistryInfo.user.firstName} {stateRegistryInfo.user.partnerUser ? 'and' + stateRegistryInfo.user.partnerUser.firstName : ''} keep track of all their gifts.</p>\n                </div>\n              </div>\n              <div className=\"row col mt-4\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Name</p>\n                  <input\n                    className={[\"w-100 mt-1 px-2 py-1\", props.fieldErrors.name ? \"already-bought-input-error\" : \"\"].join(\" \")}\n                    type='text'\n                    placeholder='John Doe'\n                    value={name}\n                    onChange={(ev) => nameChangeHandler(ev)}\n                  />\n                  {props.fieldErrors.name ?\n                    <label\n                      className=\"text-sm already-bought-input-error-text\">{props.fieldErrors.name}</label>\n                    : null}\n                </div>\n              </div>\n              <div className=\"row col mt-4\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Email Address</p>\n                  <input\n                    className={[\"w-100 mt-1 px-2 py-1\", props.fieldErrors.email ? \"already-bought-input-error\" : \"\"].join(\" \")}\n                    type='text'\n                    placeholder='johndoe@email.com'\n                    value={email}\n                    onChange={(ev) => emailChangeHandler(ev)}\n                  />\n                  {props.fieldErrors.email ?\n                    <label\n                      className=\"text-sm already-bought-input-error-text\">{props.fieldErrors.email}</label>\n                    : null}\n                </div>\n              </div>\n              <div className=\"row col mt-5\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                  <Counter\n                    className=\"mt-2\"\n                    counter={quantity}\n                    incrementHandler={incrementQuantity}\n                    decrementHandler={decrementQuantity}\n                  />\n                </div>\n              </div>\n              <div className=\"row col mt-4\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Store Name</p>\n                  <input\n                    className={[\"w-100 mt-1 px-2 py-1\", props.fieldErrors.storeName ? \"already-bought-input-error\" : \"\"].join(\" \")}\n                    type='text'\n                    placeholder='Eg. Target'\n                    value={storeName}\n                    onChange={(ev) => storeNameChangeHandler(ev)}\n                  />\n                  {props.fieldErrors.storeName ?\n                    <label\n                      className=\"text-sm already-bought-input-error-text\">{props.fieldErrors.storeName}</label>\n                    : null}\n                </div>\n                <div className=\"col m-a-input-container ml-3\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Order Number</p>\n                  <input\n                    className=\"w-100 mt-1 px-2 py-1\"\n                    type='text'\n                    placeholder='0012345'\n                    value={orderNumber}\n                    onChange={(ev) => orderNumberChangeHandler(ev)}\n                  />\n                </div>\n              </div>\n              <div className=\"row col mt-4\">\n                <div className=\"col m-a-input-container\">\n                  <p className=\"text-sm font-medium add-gift-store-label\">Gift Message</p>\n                  <textarea className=\"w-100 mt-1 text-body p-1\"\n                    rows=\"2\"\n                    placeholder=\"Write a message for gift receiver\"\n                    value={giftMessage}\n                    onChange={(ev) => giftMessageChangeHandler(ev)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AlreadyBoughtProduct;","import React, { useState } from 'react';\nimport \"./PurchasedModal.scss\";\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport Counter from \"../counter/Counter\";\nimport ProductDetailsModel from '../product-details-model/ProductDetailsModel'\n\nclass PurchasedModal extends React.Component {\n\t// Variable declarations\n\tstate = {\n\t\tshow: false,\n\t\tupdateModal: false,\n\t\tquantity: 1\n\t}\n\n\tmodalTitle = \"\"\n\tmodalBody = \"\"\n\tmodalTitleContent = \"\"\n\tmodalFooterButtons = \"\"\n\n\tcomponentDidMount = () => {\n\t\tthis.setModalData()\n\t}\n\n\tincrementQuantity = () => {\n\t\tthis.setState(() => ({\n\t\t\tquantity: this.state.quantity + 1\n\t\t}))\n\t}\n\n\tdecrementQuantity = () => {\n\t\tthis.setState(() => ({\n\t\t\tquantity: this.state.quantity - 1\n\t\t}))\n\t}\n\n\tsetModalData = () => {\n\t\tthis.clearModalData()\n\t\tthis.modalTitle = this.props.title\n\t\tthis.setState(() => ({\n\t\t\tshow: true,\n\t\t}))\n\n\t\tthis.modalBody = (\n\t\t\t<>\n\t\t\t\t<div className=\"row add-gift-another-store\">\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<div className=\"row mt-4\">\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"col-5 add-gift-image-select\">\n\t\t\t\t\t\t\t\t\t<div className=\"mr-3\">\n\t\t\t\t\t\t\t\t\t\t<ProductDetailsModel data={this.props.data} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-7\">\n\t\t\t\t\t\t\t\t\t<div className=\"ml-3\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-body font-medium\">Buy this gift for {this.props.stateRegistryInfo.user.firstName} {this.props.stateRegistryInfo.user.partnerUser ? 'and' + this.props.stateRegistryInfo.user.partnerUser.firstName : ''}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm mt-1\">We’ll keep the gift available in the registry until you checkout of the cart</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-7 mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-body font-medium\">Great, let’s update their registry</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm mt-1\">This info will help {this.props.stateRegistryInfo.user.firstName} {this.props.stateRegistryInfo.user.partnerUser ? 'and' + this.props.stateRegistryInfo.user.partnerUser.firstName : ''} keep track of all their gifts.</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Name</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mt-1 px-2 py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='John Doe'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => productNameChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Email Address</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mt-1 px-2 py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='johndoe@email.com'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => productNameChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcounter={this.state.quantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tincrementHandler={this.incrementQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecrementHandler={this.decrementQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Store Name</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mt-1 px-2 py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Eg. Target'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => productNameChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Order Number</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mt-1 px-2 py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='0012345'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => productNameChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Gift Message</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea className=\"w-100 mt-1 text-body p-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write a message for gift receiver\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={(ev) => noteChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\n\tclearModalData = () => {\n\t\tthis.modalTitle = \"\"\n\t\tthis.modalBody = \"\"\n\t\tthis.modalTitleContent = \"\"\n\t\tthis.modalFooterButtons = \"\"\n\t}\n\n\tmodalCloseHandler = () => {\n\t\t// this.clearModalData()\n\t\tthis.setState({\n\t\t\tshow: false\n\t\t})\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.props.show}\n\t\t\t\t\tupdateModal={this.state.updateModal}\n\t\t\t\t\ttitle={this.props.title}\n\t\t\t\t\ttitleContent={this.modalTitleContent}\n\t\t\t\t\tfooter={this.modalFooterButtons}\n\t\t\t\t\tcloseModal={this.props.close}>\n\t\t\t\t\t{this.modalBody}\n\t\t\t\t</Modal>\n\t\t\t</>\n\t\t)\n\t}\n}\n\n// const mapStateToProps = state => {\n// \treturn {\n// \t\tstateRegistryInfo: state.registry.info\n// \t}\n// }\n\nexport default PurchasedModal;","import React, { useState } from 'react';\nimport \"./GiveMAGiftModel.scss\";\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport Counter from \"../counter/Counter\";\nimport ProductDetailsModel from '../product-details-model/ProductDetailsModel'\nimport { connect } from \"react-redux\";\nimport AlreadyBoughtProduct from \"modules/commons/components/already-bought-product/AlreadyBoughtProduct\";\nimport { graphQL } from \"api/axios\";\nimport { MARK_AS_PURCHASED_BY_GUEST, GIVE_GROUP_GIFT_GUEST, CASH_FUND_GIFT_GUEST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport { withRouter } from 'react-router-dom';\nimport { clearViewGuestPaginationInfo, setGuestViewProducts } from \"modules/guest-view/GuestViewAction\";\nimport { addProductToCart } from \"utils/commonFunction\";\nimport { M_A_STORE_NAME } from 'utils/constants';\n\nclass GiveMAGiftModel extends React.Component {\n\t// Variable declarations\n\tstate = {\n\t\tupdateModal: false,\n\t\tmodalTitle: '',\n\t\tquantity: 1,\n\t\tisBoughtThisAlready: false,\n\t\tname: null,\n\t\temail: null,\n\t\tstoreName: null,\n\t\torderNumber: null,\n\t\tgiftMessage: null,\n\t\tamount: \"0.00\",\n\t\terrors: {}\n\t}\n\n\tmodalTitleContent = \"\"\n\n\tEMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\n\tcomponentDidMount = () => {\n\t\tthis.setModalData()\n\t}\n\n\tincrementQuantity = () => {\n\t\tif (this.state.quantity < this.props.data.quantityStatus.still_needed)\n\t\t\tthis.setState(() => ({\n\t\t\t\tquantity: this.state.quantity + 1\n\t\t\t}))\n\t}\n\n\tdecrementQuantity = () => {\n\t\tif (this.state.quantity > 1) {\n\t\t\tthis.setState(() => ({\n\t\t\t\tquantity: this.state.quantity - 1\n\t\t\t}))\n\t\t}\n\t}\n\n\tiBoughtThisAlready = () => {\n\t\tthis.setState(() => ({\n\t\t\tisBoughtThisAlready: true,\n\t\t\tmodalTitle: 'I Bought This Already',\n\t\t}))\n\t}\n\n\tnameChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\tname: ev.target.value\n\t\t})\n\t}\n\n\temailChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\temail: ev.target.value\n\t\t})\n\t}\n\n\tstoreNameChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\tstoreName: ev.target.value\n\t\t})\n\t}\n\n\torderNumberChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\torderNumber: ev.target.value\n\t\t})\n\t}\n\n\tgiftMessageChangeHandler = (ev) => {\n\t\tev.persist();\n\t\tthis.setState({\n\t\t\tgiftMessage: ev.target.value\n\t\t})\n\t}\n\n\tamountChangeHandler = (ev) => {\n\t\tthis.onFocusCashFundHandler('amount')\n\t\tif (ev.target.value.length > 0) {\n\t\t\tconst newPrice = Number(ev.target.value);\n\t\t\tconst hasDecimal = (ev.target.value.split('.').length === 2 ? ev.target.value.split('.')[1].length <= 2 : true)\n\t\t\tif ((newPrice >= 0) && hasDecimal) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tamount: ev.target.value\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tamount: ''\n\t\t\t})\n\t\t}\n\t}\n\n\tvalidBoughtThisAlreadyData = () => {\n\t\tlet valid = true\n\t\tlet errors = {}\n\t\t// validate fields\n\t\tif (this.props.productBoughtAlreadyInfo.storeName.length <= 0) {\n\t\t\terrors['storeName'] = \"Store Name is required field\"\n\t\t\tvalid = false\n\t\t}\n\n\t\tif (this.props.productBoughtAlreadyInfo.name.length <= 0) {\n\t\t\terrors['name'] = \"Name is required field\"\n\t\t\tvalid = false\n\t\t}\n\n\t\tif (this.props.productBoughtAlreadyInfo.email.length <= 0) {\n\t\t\terrors['email'] = \"Email address is required field\"\n\t\t\tvalid = false\n\t\t} else {\n\t\t\tif (!this.props.productBoughtAlreadyInfo.email.match(this.EMAIL_RE)) {\n\t\t\t\terrors['email'] = \"Invalid Email address\"\n\t\t\t\tvalid = false\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\terrors: errors\n\t\t})\n\n\t\treturn valid\n\t}\n\n\tonFocusBoughtThisAlreadyHandler = (fieldName) => {\n\t\tlet errors = { ...this.state.errors }\n\t\t// Remove the errors while typing\n\t\tif (this.state.errors.email && fieldName === 'email') {\n\t\t\tdelete errors.email\n\t\t}\n\t\tif (this.state.errors.name && fieldName === 'name') {\n\t\t\tdelete errors.email\n\t\t}\n\t\tif (this.state.errors.storeName && fieldName === 'storeName') {\n\t\t\tdelete errors.storeName\n\t\t}\n\t\tthis.setState({\n\t\t\terrors: errors\n\t\t})\n\t}\n\n\tvalidCashFundData = () => {\n\t\tlet valid = true\n\t\tlet errors = {}\n\t\t// validate fields\n\t\tif (Number(this.state.amount) === 0) {\n\t\t\terrors['amount'] = \"Amount can't be 0\"\n\t\t\tvalid = false\n\t\t}\n\t\telse if (Number(this.state.amount) > this.props.data.item.price) {\n\t\t\terrors['amount'] = \"Amount can't be greater than required amount\"\n\t\t\tvalid = false\n\t\t}\n\n\t\tthis.setState({\n\t\t\terrors: errors\n\t\t})\n\n\t\treturn valid\n\t}\n\n\tonFocusCashFundHandler = (fieldName) => {\n\t\tlet errors = { ...this.state.errors }\n\t\t// Remove the errors while typing\n\t\tif (this.state.errors.amount && fieldName === 'amount') {\n\t\t\tdelete errors.amount\n\t\t}\n\t\tthis.setState({\n\t\t\terrors: errors\n\t\t})\n\t}\n\n\tmodalCloseHandler = () => {\n\t\tthis.setState({\n\t\t\terrors: {}\n\t\t})\n\t\tthis.props.close()\n\t}\n\n\taddProductToCartHandler = (quantity, id) => {\n\t\t// For Ref\n\t\t// ('/cart/add.js', {\n\t\t//   items: [\n\t\t//     {\n\t\t//       quantity: 1,\n\t\t//       id: 31643811020880,\n\t\t//     }\n\t\t//   ]\n\t\t// });\n\t\tlet data = {\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tquantity: quantity,\n\t\t\t\t\t// id: id ? Number(id) : 4777708191824,\n          id: id\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\taddProductToCart(data)\n\t}\n\n\tsubmitDataHandler = async () => {\n\t\t// Todo: API calls\n\t\t// For Bought this gift already\n\t\tif (this.state.isBoughtThisAlready) {\n\t\t\t// Vaidating data\n\t\t\tif (!this.validBoughtThisAlreadyData()) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tlet data = {\n\t\t\t\tquery: MARK_AS_PURCHASED_BY_GUEST,\n\t\t\t\tvariables: {\n\t\t\t\t\tregistryUrlSlug: this.props.stateRegistryInfo.urlSlug,\n\t\t\t\t\tregistryItemId: this.props.data.id,\n\t\t\t\t\tisPurchased: true,\n\t\t\t\t\tstoreName: this.props.productBoughtAlreadyInfo.storeName,\n\t\t\t\t\tpurchasedQuantity: this.props.productBoughtAlreadyInfo.quantity,\n\t\t\t\t\t// contributionAmount: null,\n\t\t\t\t\tgiftMessage: this.props.productBoughtAlreadyInfo.giftMessage,\n\t\t\t\t\torderNumber: this.props.productBoughtAlreadyInfo.orderNumber,\n\t\t\t\t\tname: this.props.productBoughtAlreadyInfo.name,\n\t\t\t\t\temail: this.props.productBoughtAlreadyInfo.email\n\t\t\t\t},\n\t\t\t}\n\t\t\tawait graphQL(data).then(async res => {\n\t\t\t\tif (res.data.errors || res.data.error) {\n\t\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\t\tconsole.log('Something went wrong-->', res.data.errors)\n\t\t\t\t\ttoast.error((\n\t\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t\t))\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Getting Update Product\n\t\t\t\t\tawait this.props.dispatch(clearViewGuestPaginationInfo())\n\t\t\t\t\tawait this.props.updateGuestViewProduct(this.props.match.params.registrySlug, this.props.stateAddedProducts.length, true)\n\t\t\t\t\ttoast.success((\n\t\t\t\t\t\t<p><b>{this.props.data.title}</b> Purchased!</p>\n\t\t\t\t\t))\n\t\t\t\t\tthis.modalCloseHandler()\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\tconsole.log('Something went wrong-->', err)\n\t\t\t\ttoast.error((\n\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t))\n\t\t\t})\n\t\t}\n\t\t// For Group Gift\n\t\telse if (this.props.isGroupGift && !this.props.data.item.isCashFund) {\n\t\t\tif (!this.validCashFundData()) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tlet data = {\n\t\t\t\tquery: GIVE_GROUP_GIFT_GUEST,\n\t\t\t\tvariables: {\n\t\t\t\t\tregistryId: this.props.stateRegistryInfo.id,\n\t\t\t\t\tregistryItemId: this.props.data.id,\n\t\t\t\t\tcontributionAmount: Number(this.state.amount)\n\t\t\t\t},\n\t\t\t}\n\t\t\tawait graphQL(data).then(async res => {\n\t\t\t\tif (res.data.errors || res.data.error) {\n\t\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\t\tconsole.log('Something went wrong-->', res.data.errors)\n\t\t\t\t\ttoast.error((\n\t\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t\t))\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Getting Update Product\n\t\t\t\t\tawait this.props.dispatch(clearViewGuestPaginationInfo())\n\t\t\t\t\tawait this.props.updateGuestViewProduct(this.props.match.params.registrySlug, this.props.stateAddedProducts.length, true)\n\t\t\t\t\tthis.addProductToCartHandler(1, res.data.data.giveGroupGiftMa.variantId)\n\t\t\t\t\ttoast.success((\n\t\t\t\t\t\t<p><b>{this.props.data.title}</b> added to Cart!</p>\n\t\t\t\t\t))\n\t\t\t\t\t// this.modalCloseHandler()\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\tconsole.log('Something went wrong-->', err)\n\t\t\t\ttoast.error((\n\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t))\n\t\t\t})\n\t\t}\n\t\t// For Cash Fund\n\t\telse if (this.props.data.item.isCashFund && this.props.isGroupGift) {\n\t\t\tif (!this.validCashFundData()) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tlet data = {\n\t\t\t\tquery: CASH_FUND_GIFT_GUEST,\n\t\t\t\tvariables: {\n\t\t\t\t\tregistryId: this.props.stateRegistryInfo.id,\n\t\t\t\t\tregistryItemId: this.props.data.id,\n\t\t\t\t\tcontributionAmount: Number(this.state.amount)\n\t\t\t\t},\n\t\t\t}\n\t\t\tawait graphQL(data).then(async res => {\n\t\t\t\tif (res.data.errors || res.data.error) {\n\t\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\t\tconsole.log('Something went wrong-->', res.data.errors)\n\t\t\t\t\ttoast.error((\n\t\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t\t))\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Getting Update Product\n\t\t\t\t\tawait this.props.dispatch(clearViewGuestPaginationInfo())\n\t\t\t\t\tawait this.props.updateGuestViewProduct(this.props.match.params.registrySlug, this.props.stateAddedProducts.length, true)\n\t\t\t\t\tthis.addProductToCartHandler(1, res.data.data.cashFundGift.variantId)\n\t\t\t\t\ttoast.success((\n\t\t\t\t\t\t<p><b>{this.props.data.title}</b> added to Cart!</p>\n\t\t\t\t\t))\n\t\t\t\t\t// this.modalCloseHandler()\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\t// TODO: Add toast proper toast msg\n\t\t\t\tconsole.log('Something went wrong-->', err)\n\t\t\t\ttoast.error((\n\t\t\t\t\t<p>Something went wrong</p>\n\t\t\t\t))\n\t\t\t})\n\t\t}\n\t\t// If M-A product: Adding to cart\n\t\telse if (this.props.data.item.store.storeName === M_A_STORE_NAME &&\n\t\t\t!this.props.isGroupGift &&\n\t\t\t!this.props.isCashAcceptedOnly) {\n\t\t\tthis.addProductToCartHandler(this.state.quantity, this.props.data.item.shopifyItemId)\n\t\t}\n\t}\n\n\tsetModalData = () => {\n\t\tthis.clearModalData()\n\t\tthis.setState({\n\t\t\tmodalTitle: this.props.title\n\t\t})\n\t}\n\n\tclearModalData = () => {\n\t\tthis.state.modalTitle = \"\"\n\t\tthis.modalBody = \"\"\n\t\tthis.modalTitleContent = \"\"\n\t\tthis.modalFooterButtons = \"\"\n\t}\n\n\tcontributeRestHandler = (data) => {\n\t\tlet contributeAmount = data.groupGift ? data.item.price - data.groupGift.amountReceived : data.item.price\n\t\tthis.setState({\n\t\t\tamount: contributeAmount\n\t\t})\n\t}\n\n\trender() {\n\t\t// Body for modal\n\t\tlet modalBody = (\n\t\t\t<>\n\t\t\t\t{/* Give M+A Gift Model Body */}\n\t\t\t\t{!this.state.isBoughtThisAlready ?\n\t\t\t\t\t<div className=\"row add-gift-another-store\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className=\"col-5 py-4 add-gift-image-select\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"mr-3\">\n\t\t\t\t\t\t\t\t\t\t\t<ProductDetailsModel data={this.props.data} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{!this.props.isGroupGift ?\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-7 mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-body font-medium\">Buy this gift for {this.props.stateRegistryInfo.user.firstName} {this.props.stateRegistryInfo.user.partnerUser ? 'and' + this.props.stateRegistryInfo.user.partnerUser.firstName : ''}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm mt-1\">We’ll keep the gift available in the registry until you checkout of the cart{this.props.isCashAcceptedOnly ? \". This gift will be shipped to registrant at their convenience.\" : ''}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col m-a-input-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcounter={this.state.quantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tincrementHandler={this.incrementQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecrementHandler={this.decrementQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t// For group gift\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-7 mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-body font-medium\">How much do you want to contribute?</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.stateRegistryInfo.user.firstName} {this.props.stateRegistryInfo.user.partnerUser ? 'and' + this.props.stateRegistryInfo.user.partnerUser.firstName : ''} will be able to buy the gift themselves once they receive the funds.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.props.data.isGroupGift ?\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.data.item.hideTotal ? null :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col mt-4 give-gift-model\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium received-amount\">Received ${this.props.data.groupGift ? this.props.data.groupGift.amountReceived : 0} </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm total-amount\"> of ${this.props.data.item.price}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-background\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-progress mw-100\" style={{ width: `${this.props.data.groupGift ? this.props.data.groupGift.amountReceived / this.props.data.item.price * 100 : 0}%` }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mt-4 ml-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"m-a-input-container mr-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium add-gift-store-label\">Amount</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"price-input mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={[\"w-100 pl-2 pr-1 py-1 text-body pl-5\", this.state.errors.amount ? \"already-bought-input-error\" : \"\"].join(\" \")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.amount}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => this.amountChangeHandler(ev)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.errors.amount ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm already-bought-input-error-text\">{this.state.errors.amount}</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*<span className=\"price-input text-body\">$</span>*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.data.item.hideTotal ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull : <p className=\"mt-3 text-sm give-gift-text-link font-medium\" onClick={() => this.contributeRestHandler(this.props.data)}>Contribute the rest</p>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t: <AlreadyBoughtProduct\n\t\t\t\t\t\tdata={this.props.data}\n\t\t\t\t\t\tvalidBoughtThisAlreadyData={this.validBoughtThisAlreadyData}\n\t\t\t\t\t\tonFocusHandler={this.onFocusBoughtThisAlreadyHandler}\n\t\t\t\t\t\tfieldErrors={this.state.errors} />}\n\t\t\t</>\n\t\t)\n\n\t\t// Modal buttons\n\t\tlet modalFooterButtons = (\n\t\t\t<>\n\t\t\t\t{!this.state.isBoughtThisAlready || this.props.isGroupGift ?\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tclassName=\"MA-gift-footer-btn px-3 py-1 font-medium text-body\"\n\t\t\t\t\t\tonClick={() => this.iBoughtThisAlready()}\n\t\t\t\t\t>I Bought This Already</Button> : null}\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tclassName=\"MA-gift-footer-btn px-4 py-1 font-medium text-body\"\n\t\t\t\t\tdisabled={this.props.isGroupGift && Number(this.state.amount) === 0 ? true : false}\n\t\t\t\t\tonClick={() => this.submitDataHandler()}\n\t\t\t\t>{!this.state.isBoughtThisAlready ? this.props.isGroupGift ? 'Contribute' : 'Add To Cart' : 'Save & Close'}</Button>\n\t\t\t</>\n\t\t)\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.props.show}\n\t\t\t\t\tupdateModal={this.state.updateModal}\n\t\t\t\t\ttitle={this.state.modalTitle}\n\t\t\t\t\ttitleContent={this.modalTitleContent}\n\t\t\t\t\tfooter={modalFooterButtons}\n\t\t\t\t\tcloseModal={this.props.close}>\n\t\t\t\t\t{modalBody}\n\t\t\t\t</Modal>\n\t\t\t</>\n\t\t)\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\tstateRegistryInfo: state.guestView.info,\n\t\tproductBoughtAlreadyInfo: state.guestView.alreadyBoughtProduct,\n\t\tstateAddedProducts: state.guestView.product\n\t}\n}\n\nexport default connect(\n\tmapStateToProps\n)(withRouter(GiveMAGiftModel));","import React, { useState } from 'react'\nimport \"./GuestViewCard.scss\";\nimport MoreOption from \"../../commons/components/more-option/MoreOption\";\nimport {\n\tsortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../../commons/components/modal-component/ModalComponent\";\nimport CardItem from \"../../commons/components/card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../../commons/components/button-component/ButtonComponent\";\nimport GiftStatusPill from \"../../commons/components/gift-status-pill/GiftStatusPill\";\nimport PurchasedModal from \"modules/commons/components/purchased-modal/PurchasedModal\";\nimport GiveMAGiftModel from \"modules/commons/components/give-MA-gift-model/GiveMAGiftModel\";\nimport { clearAlreadyBoughtProductInfo } from '../GuestViewAction';\nimport { M_A_STORE_NAME } from 'utils/constants';\n\n\nconst GuestViewCard = (props) => {\n\n\tconst dispatch = useDispatch();\n\tconst stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n\tconst [showMAGiftmodel, setMAGiftModel] = useState(false)\n\tconst [isGroupGift, setIsGroupGift] = useState(false)\n\tconst [isCashAcceptedOnly, setIsCashAcceptedOnly] = useState(false)\n\tconst [modelTitle, setModelTitle] = useState('')\n\n\tconst modalCloseHandler = () => {\n\t\tdispatch(clearAlreadyBoughtProductInfo())\n\t\tsetMAGiftModel(false)\n\t}\n\n\t// Handle drag\n\t// TODO: Change Draggable icon\n\tconst DragHandle = sortableHandle(() => <i\n\t\tclassName={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n\t\t<div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n\t\t\t<p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n\t\t</div>\n\t</i>);\n\n\tconst openModelHandler = () => {\n\t\t// TODO: Conditions for different data model\n\t\t// For ma product which is not Grop Gift\n\t\tif (props.data.item.store.storeName === M_A_STORE_NAME && !props.data.isGroupGift) {\n\t\t\tsetMAGiftModel(true)\n\t\t}\n\t\t// For Group Gift\n\t\telse if (props.data.isGroupGift) {\n\t\t\tsetIsGroupGift(true)\n\t\t\tsetMAGiftModel(true)\n\t\t}\n\t\telse if (props.data.isCashAcceptedOnly) {\n\t\t\tsetIsCashAcceptedOnly(true)\n\t\t\tsetMAGiftModel(true)\n\t\t}\n\t\tsetModelTitle('Give This Gift')\n\t\t// modelTitle = 'Give This Gift'\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{!props.data.isPurchased ?\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"added-card py-5 pr-2\">\n\t\t\t\t\t\t<div className=\"row pl-3\">\n\t\t\t\t\t\t\t<div className=\"col-2 guest-card-image\">\n\t\t\t\t\t\t\t\t{props.data?.item.imageUrl ?\n\t\t\t\t\t\t\t\t\t<img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.title} />\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<div className=\"added-card-no-product-image\" />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{props.data.mostWanted ?\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center guest-must-have added-gift-must-have-btn px-1 added-gift-must-have-active\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"icon mr-1 d-block heart-fill\" />\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t: <></>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t{/* <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div> */}\n\t\t\t\t\t\t\t\t<h2>{props.data.title}</h2>\n\t\t\t\t\t\t\t\t<div className=\"d-flex mt-2\">\n\t\t\t\t\t\t\t\t\t<div className=\"\">${props.data.item.price}</div>\n\t\t\t\t\t\t\t\t\t{/*/!* TODO: Add Strikeout price dynamic *!/*/}\n\t\t\t\t\t\t\t\t\t{/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n\t\t\t\t\t\t\t\t\t{/* {props.data.quantity > 1 ?\n\t\t\t\t\t\t\t\t<div className=\"ml-4 text-body d-flex\">\n\t\t\t\t\t\t\t\t\tQty:{props.data.quantity}\n\t\t\t\t\t\t\t\t\t<div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n\t\t\t\t\t\t\t\t</div> : <></>} */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"d-flex mt-3\">\n\t\t\t\t\t\t\t\t\t{props.data.quantityStatus.purchased_quantity ?\n\t\t\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"purchased\" text={props.data.quantityStatus.purchased_quantity + \" Purchased\"} />\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t{props.data.quantityStatus.reserved_quantity ?\n\t\t\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"reserved\" text={props.data.quantityStatus.reserved_quantity + \"Reserved\"} />\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t{props.data.quantityStatus.still_needed ?\n\t\t\t\t\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"default\" text={`${props.data.quantityStatus.still_needed} ${props.data.quantityStatus.purchased_quantity === 0 ? \" Requested\" : \" Still Needed\"}`} />\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t{props.data.isGroupGift ?\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"guest-toggle-pills px-1 mr-3 d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"guest-icon-active mr-1\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm guest-icon-text\">Group Gift</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{props.data.item.hideTotal ? null :\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium received-amount\">Received ${props.data.groupGift ? props.data.groupGift.amountReceived : 0} </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm total-amount\">of ${props.data.item.price}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-background\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"group-gift-progress mw-100\" style={{ width: `${props.data.groupGift ? props.data.groupGift.amountReceived / props.data.item.price * 100 : 0}%` }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={[\n\t\t\t\t\t\t\t\tprops.draggable ? \"col-4\" : \"col-3\",\n\t\t\t\t\t\t\t].join(\" \")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n\t\t\t\t\t\t\t\t\t<Button variant=\"secondary\" className=\"give-this-gift-btn font-medium text-body py-1 px-3 mr-3\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => openModelHandler()}\n\t\t\t\t\t\t\t\t\t>Give This Gift</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* TODO: change category */}\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t{props.data.registryCategories.length > 1 ?\n\t\t\t\t\t\t\t\tprops.data.registryCategories.map(category =>\n\t\t\t\t\t\t\t\t\tprops.data.registryCategories[0].id !== category.id ?\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-body font-medium p-6 added-card-other-category\">\n\t\t\t\t\t\t\t\t\t\t\tYou have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabIndex=\"true\">{props.data.title}</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</> :\n\t\t\t\t<div className=\"guest-purchased-card py-3 pl-6\">\n\t\t\t\t\t<p className=\"guest-purchased-card-title font-medium\">{props.data.title}</p>\n\t\t\t\t\t{props.data.quantityStatus.purchased_quantity ?\n\t\t\t\t\t\t<GiftStatusPill className=\"mr-1\" variant=\"purchased\" text={props.data.quantityStatus.purchased_quantity + \" Purchased\"} />\n\t\t\t\t\t\t: null}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{showMAGiftmodel ?\n\t\t\t\t<GiveMAGiftModel\n\t\t\t\t\tshow={showMAGiftmodel}\n\t\t\t\t\tclose={modalCloseHandler}\n\t\t\t\t\ttitle={modelTitle}\n\t\t\t\t\tdata={props.data}\n\t\t\t\t\tisGroupGift={isGroupGift}\n\t\t\t\t\tisCashAcceptedOnly={isCashAcceptedOnly}\n\t\t\t\t\tupdateGuestViewProduct={props.updateGuestViewProduct}\n\t\t\t\t/> : null}\n\t\t</>\n\t)\n}\n\nexport default GuestViewCard","import React, { useEffect, useState } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition, getCategories } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\nimport ViewFilter from \"modules/view-registry/components/view-filter/ViewFilter\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport { FILTERS } from \"utils/constants\"\nimport { MEDIA_URL_PREFIX } from \"utils/constants\";\nimport { graphQL } from 'api/axios';\nimport { GET_PRODUCTS } from 'api/queries';\nimport GuestViewCard from \"modules/guest-view/components/GuestViewCard\";\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const [localAddedProductState, handleFilterProductChange] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  // Updating product count in filter categories\n  const updateFilterList = (registryItemsAnalysisCount, categoryData) => {\n\n    let newFilterList = [\n      {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: registryItemsAnalysisCount.totalAvailable\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: registryItemsAnalysisCount.totalReserved\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: registryItemsAnalysisCount.totalPurchased\n          }\n        ]\n      },\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        // limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          let id = category.category.id\n          let count = categoryData[id]\n          if (count > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          let id = category.category.id\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = categoryData[id]\n          return newCategory\n        })\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: registryItemsAnalysisCount.under50\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: registryItemsAnalysisCount.between50100\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: registryItemsAnalysisCount.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: registryItemsAnalysisCount.maStoreItems\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: registryItemsAnalysisCount.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  const getFiltersApplied = (stateFilterApplied, activeSortFilterState) => {\n    const childFilterArray = [...stateFilterApplied]\n    let filterApplied = {}\n    // For Gift Status\n    if (childFilterArray.includes(AVAILABLE)) {\n      filterApplied.isAvailable = true\n    }\n    if (childFilterArray.includes(RESERVED)) {\n      filterApplied.isReserved = true\n    }\n    if (childFilterArray.includes(PURCHASED)) {\n      filterApplied.isPurchased = true\n    }\n\n    // For Sort\n    if (activeSortFilterState.sortId === 2) {\n      filterApplied.sortBy = 'item__price'\n    } else if (activeSortFilterState.sortId === 3) {\n      filterApplied.sortBy = '-item__price'\n    }\n\n    // For Store\n    let store = []\n    if (childFilterArray.includes(MONICA_AND_ANDY)) {\n      store.push(MONICA_AND_ANDY)\n    }\n    if (childFilterArray.includes(ELSEWHERE)) {\n      store.push(ELSEWHERE)\n    }\n    if (store.length) {\n      filterApplied.store = store\n    }\n\n    let lessThanEqual = 0\n    let greaterThanEqual = 0\n    let hasPriceFilter = false\n    // For Price\n    if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_2) &&\n      childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 0\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_2)) {\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1) &&\n      childFilterArray.includes(PRICE_3)) {\n      lessThanEqual = 49\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_2) &&\n      childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 50\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_1)) {\n      lessThanEqual = 49\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_2)) {\n      greaterThanEqual = 50\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(PRICE_3)) {\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    if (hasPriceFilter) {\n      filterApplied.price_Lte = lessThanEqual\n      filterApplied.price_Gte = greaterThanEqual\n    }\n\n    let categories = []\n    // For categories\n    for (let cat of [...stateCategoriesInfo]) {\n      if (childFilterArray.includes(cat.category.id)) {\n        categories.push(cat.category.id)\n      }\n    }\n    if (categories.length) {\n      filterApplied.categories = categories\n    }\n\n    return filterApplied\n  }\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        isViewCard={true}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let itemsOldPosition = arrayMove([...stateViewRegistryProducts], oldIndex, oldIndex)\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    dispatch(setViewRegistryProducts(items))\n    updateViewRegistryPosition(stateRegistryInfo.id, items, itemsOldPosition, dispatch)\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedProductsByFilters = async (addedProducts, filterApplied) => {\n    let finalFilterProduct = []\n    let filtersApplied = getFiltersApplied(stateFilterApplied, activeSortFilterState)\n    let reqData = {\n      query: GET_PRODUCTS,\n      variables: {\n        registryId: stateRegistryInfo.id,\n        ...filtersApplied\n      }\n    }\n\n    await graphQL(reqData).then(res => {\n      if (res.data.data.registryItems) {\n        // Storing Product of GuestView\n        let responseData = [...res.data.data.registryItems.registryItems.edges].map(item => {\n          let newItemObj = { ...item.node }\n          delete newItemObj.registryitemImage;\n          if (item.node.registryitemImage.length > 0) {\n            newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n          }\n          return newItemObj;\n        })\n        let finalData = responseData.filter(product => product.registryCategories.length > 0)\n        updateFilterList({ ...res.data.data.registryItems.registryItemsAnalysisCount }, { ...res.data.data.registryItems.categoryData })\n\n        finalFilterProduct = finalData\n        return finalData\n      }\n    }).catch(err => {\n\n      if (err.response && err.response.data.errors) {\n        for (const error of err.response.data.errors) {\n          // TODO: Implement toast if necessary\n          console.log(error.message)\n        }\n      }\n    })\n    return finalFilterProduct\n  }\n\n  const getParentCategory = (id) => {\n    return [...stateCategoriesInfo].find((parentCategory) => parentCategory.subCategories.find((subCategory) => subCategory.id === id))\n  }\n\n  const getSortedFilteredProducts = async (addedProducts, activeSortFilterState, viewRegistryProducts, filterApplied, registryInfo) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    let newSortedProducts = null\n\n    if (filterApplied.length > 0) {\n      newSortedProducts = await getSortedProductsByFilters(addedProducts, filterApplied)\n    }\n    else {\n      newSortedProducts = [...addedProducts]\n    }\n\n    if (activeSortFilterState.sortId === 1) {\n      if (filterApplied.length > 0) {\n        sortedData = newSortedProducts\n      }\n      else if (registryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n      }\n      else {\n        sortedData = sortByMustHave([...newSortedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...newSortedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...newSortedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    // handleFilterProductChange(sortedProducts)\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n  }\n\n  const sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  //Clear filter state\n  const clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    dispatch(clearViewFilter())\n  }\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  useEffect(() => {\n    let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n    filteredSortProducts.then(product => {\n      handleFilterProductChange(product)\n    })\n  }, [stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo])\n\n  // updateFilterList(stateAddedProducts)\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <ViewFilter />\n          </div>\n          <div className=\"col\"></div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <SortFilterSection productCount={localAddedProductState.length} />\n            {/* Added Products */}\n            {!stateGuestViewRegistry ?\n              localAddedProductState.length > 0 ?\n                <div className=\"mt-5\">\n                  <SortableContainer onSortEnd={onSortEnd} helperClass=\"drag-add-card\" axis=\"y\" lockAxis=\"y\" useDragHandle>\n                    {localAddedProductState.map((card, index) =>\n                      <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1 || stateFilterApplied.length !== 0} />\n                    )}\n                  </SortableContainer>\n                </div> :\n                <div className=\"d-flex flex-column empty-filter mt-6 pb-8\">\n                  <div className=\"font-body empty-filter-title text-center mx-auto mt-10\">\n                    <p>We couldn’t find any gifts that matches your filters...</p>\n                    <p>Please try clearing ‘Filters’ to view gifts.</p>\n                  </div>\n                  <div className=\"mx-auto mt-3\">\n                    <Button\n                      variant=\"primary\"\n                      className=\"px-3 py-1 font-medium empty-filter-title text-body\"\n                      onClick={(ev) => clearFilterHandler(ev)}\n                    >\n                      Clear Filters\n                  </Button>\n                  </div>\n                </div> :\n              // Guest View Cards\n              localAddedProductState.length > 0 ?\n                localAddedProductState.map((card, index) =>\n                  <GuestViewCard\n                    data={card} key={\"addedCard\" + index}\n                  />) : null\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Toast.scss';\n\nconst Toast = () => {\n  const closeToastMessage = (parentId) => {\n    toast.dismiss(parentId);\n  }\n\n  return (\n    <ToastContainer\n      position=\"top-center\"\n      className=\"m-a-toast-container\"\n      toastClassName=\"m-a-toast\"\n      autoClose={4000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      draggable={false}\n      closeOnClick={false}\n      closeButton={<i className=\"icon-close m-a-toast-close\" onClick={(event) => closeToastMessage(event.target.parentElement.id)} />}\n    />\n  )\n}\n\nexport default Toast;","import React from \"react\";\nimport \"./TodoWidget.scss\";\nimport {connect} from \"react-redux\";\n\nclass TodoWidget extends React.Component {\n\n  performTodoAction = todo => {\n  //  Perform action related to to-do\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-todo-widget\">\n        {this.props.stateTodo.length > 0 ?\n          (\n            //  When there is To-do\n            <div className=\"baby-registry-todo-section\">\n              <button className=\"baby-steps-button d-flex align-items-center py-3 pl-4 pr-8\">\n                <i className=\"baby-steps-icon\"/>\n                <div className=\"ml-5\">\n                  <p className=\"text-body font-medium\">{this.props.stateTodo.length} Baby Steps</p>\n                  <p className=\"text-sm text-left\">to take next!</p>\n                </div>\n              </button>\n\n              <div className=\"baby-steps-todo-content p-2\">\n                {this.props.stateTodo.map(todo => (\n                  <div className=\"baby-step-todo d-flex justify-content-between py-2 align-items-center\">\n                    <p className=\"text-body mr-9\">{todo.text}</p>\n                    {/*TODO: Update below icon once updated*/}\n                    <button className=\"baby-step-action-btn p-2 icon-chevron-right float-right\" onClick={() => this.performTodoAction(todo)}/>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n          :\n          (\n            //  When there is no To-do\n            <div className=\"baby-registry-no-todo-section d-flex align-items-center py-4\">\n              <i className=\"no-todo-icon\"/>\n              <div className=\"ml-2\">\n                <p className=\"text-body font-medium\">Great job!</p>\n                <p className=\"text-sm\">More to come, soon.</p>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTodo: state.registry.todo\n})\n\nexport default connect(\n  mapStateToProps\n)(TodoWidget);","import React from \"react\";\nimport \"./Filters.scss\";\nimport {connect} from 'react-redux';\nimport CheckBox from \"../../../commons/components/check-box/CheckBox\";\nimport {setTrackGiftsFilters} from \"../../TrackGiftsAction\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport defaultData from \"data/ReducerDefaultData.json\"\n\nclass Filters extends React.Component {\n\n  filterChangeHandler = async filterId => {\n    let allUnselected = true\n    let newFilters = this.props.stateFilters.map(filter => {\n      let newFilter = {...filter}\n      if (newFilter.id === filterId) {\n        newFilter.selected = !newFilter.selected\n      }\n      if (newFilter.count > 0 && newFilter.selected) {\n        allUnselected = false\n      }\n      return newFilter\n    })\n\n    // Resetting filter to default when all filter are unselected\n    if (allUnselected){\n      newFilters = defaultData.trackGifts.filters\n    }\n\n    await this.props.dispatch(setTrackGiftsFilters(newFilters))\n    getTrackGiftsProduct(true, newFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n  }\n\n  render() {\n    return (\n      <div className=\"track-gifts-filters\">\n        <p className=\"text-sm\">Filters</p>\n        <div className=\"mt-3\">\n          {this.props.stateFilters.map(filter => (\n            filter.count > 0 ?\n              <CheckBox\n                display={filter.text}\n                count={filter.count}\n                checked={filter.selected ? \"checked\" : \"\"}\n                id={`trackGiftFilter-${filter.id}`}\n                className=\"mb-3\"\n                textClass=\"track-gifts-filter-text\"\n                changeHandler={() => this.filterChangeHandler(filter.id)}\n              />\n              :\n              null\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsSearch: state.trackGifts.search\n})\n\nexport default connect(\n  mapStateToProps\n)(Filters);","import React from \"react\";\nimport \"./ThankYouList.scss\"\n\nclass ThankYouList extends React.Component {\n  render() {\n    return (\n      <div className=\"track-gifts-thank-you-list p-4 mr-5\">\n        <img src=\"https://raw.githack.com/HetPatel-Aubergine/testCDNRepo/master/icons/file_heart.svg\" alt=\"Thank you list\"/>\n        <p className=\"mt-2 text-body font-medium\">Thank you list</p>\n        <p className=\"mt-1 text-sm track-gifts-thank-you-desc\">Let your gift-givers know that you are thankful to them.</p>\n        {/* TODO: Integrate API on Download Click */}\n        <a href=\"#\" className=\"mt-1 track-gifts-thank-you-link text-sm\">Download</a>\n      </div>\n    );\n  }\n}\n\nexport default ThankYouList;","import React from \"react\";\nimport ViewBy from \"../../components/view-by/ViewBy\";\nimport Filters from \"../../components/filters/Filters\";\nimport ThankYouList from \"../../components/thank-you-list/ThankYouList\";\n\nclass TrackGiftsSidebar extends React.Component {\n  render() {\n    return (\n      <>\n        <ViewBy/>\n        <div className=\"mt-4\">\n          <Filters/>\n        </div>\n        <div className=\"mt-4\">\n          <ThankYouList />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TrackGiftsSidebar;","import React from \"react\";\nimport \"./Search.scss\";\nimport {connect} from \"react-redux\";\nimport {setTrackGiftsSearch} from \"../../TrackGiftsAction\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\n\nclass Search extends React.Component {\n  inputRef = React.createRef()\n  inputContainer = React.createRef()\n\n  applySearch = () => {\n    let searchState = {...this.props.stateTrackGiftsSearch}\n    searchState.searched = true\n    getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n    this.props.dispatch(setTrackGiftsSearch(searchState))\n  }\n\n  searchInputChangeHandler = async () => {\n    if (this.inputRef.current && this.inputContainer.current) {\n      let searchInput = this.inputRef.current\n      if (searchInput.value.length > 0) {\n        if (!this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n          //Adding class to increase width\n          this.inputContainer.current.classList.add(\"track-gifts-search-container-focus\")\n        }\n      }\n\n      await this.props.dispatch(setTrackGiftsSearch({\n        searched: false,\n        searchText: searchInput.value\n      }))\n    }\n  }\n\n  searchInputFocusHandler = () => {\n    if (this.inputContainer.current) {\n      if (!this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n        //Adding class to increase width\n        this.inputContainer.current.classList.add(\"track-gifts-search-container-focus\")\n      }\n    }\n  }\n\n  searchInputBlurHandler = () => {\n    if (this.inputRef.current && this.inputContainer.current) {\n      let searchInput = this.inputRef.current\n      if (searchInput.value.length <= 0) {\n        if (this.inputContainer.current.classList.contains(\"track-gifts-search-container-focus\")) {\n          //Removing class to decrease width\n          this.inputContainer.current.classList.remove(\"track-gifts-search-container-focus\")\n        }\n      }\n\n      if (searchInput.value.length >= 3 && !this.props.stateTrackGiftsSearch.searched) {\n        this.applySearch()\n      }\n    }\n  }\n\n  clearClickHandler = async ev => {\n    ev.preventDefault()\n    await this.props.dispatch(setTrackGiftsSearch({\n      searched: false,\n      searchText: \"\"\n    }))\n    if (this.inputRef.current) {\n      this.inputRef.current.focus()\n    }\n\n    this.applySearch()\n  }\n\n  searchClickHandler = async ev => {\n    ev.preventDefault()\n    this.applySearch()\n  }\n\n  render() {\n    return (\n      <div className=\"ml-auto track-gifts-search-container\" ref={this.inputContainer}>\n        <input\n          type=\"text\"\n          ref={this.inputRef}\n          placeholder=\"Search\"\n          value={this.props.stateTrackGiftsSearch.searchText}\n          onChange={this.searchInputChangeHandler}\n          onFocus={this.searchInputFocusHandler}\n          onBlur={this.searchInputBlurHandler}\n          className={[\"track-gifts-search-input pl-6 text-body py-1 w-100 mw-100\", this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ? \"pr-10\": \"pr-12\"].join(\" \")}\n        />\n        <i className=\"icon-search track-gifts-search-icon\"/>\n        {!this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ?\n          <a className=\"track-gifts-search-input-link text-body\" href=\"#\"\n             onClick={(ev) => this.searchClickHandler(ev)}>Search</a>\n          : null}\n        {this.props.stateTrackGiftsSearch.searched && this.props.stateTrackGiftsSearch.searchText.length > 0 ?\n          <a className=\"track-gifts-search-input-link text-body\" href=\"#\"\n             onClick={(ev) => this.clearClickHandler(ev)}>Clear</a>\n          : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsSearch: state.trackGifts.search,\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info\n})\n\nexport default connect(\n  mapStateToProps\n)(Search);","import React from \"react\";\nimport \"./AddGift.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {connect} from 'react-redux'\nimport {TRACK_GIFTS_ADD_GIFT} from \"../../../../api/mutations\";\nimport {getTrackGiftsProduct} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst EMAIL_RE = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n\nclass AddGift extends React.Component {\n  state = {\n    show: false,\n    giftName: \"\",\n    storeName: \"\",\n    orderNumber: \"\",\n    userName: \"\",\n    userEmail: \"\",\n    errors: {}\n  }\n\n  openAddGiftModal = () => {\n\n    this.setState({\n      show: true,\n      giftName: \"\",\n      storeName: \"\",\n      orderNumber: \"\",\n      userName: \"\",\n      userEmail: \"\",\n      errors: {}\n    })\n  }\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  validData = () => {\n    let valid = true\n    let errors = {}\n\n    if (this.state.giftName.length <= 0) {\n      errors['giftName'] = \"Gift Name is required field\"\n      valid = false\n    }\n\n    if (this.state.userName.length <= 0) {\n      errors['userName'] = \"Name is required field\"\n      valid = false\n    }\n\n    if (this.state.userEmail.length <= 0) {\n      errors['userEmail'] = \"Email address is required field\"\n      valid = false\n    } else {\n      if (!this.state.userEmail.match(EMAIL_RE)) {\n        errors['userEmail'] = \"Invalid Email address\"\n        valid = false\n      }\n    }\n\n    this.setState({\n      errors: errors\n    })\n\n    return valid\n  }\n\n  addGiftClickHandler = () => {\n    if (!this.validData()) {\n      return false\n    }\n\n    let reqData = {\n      query: TRACK_GIFTS_ADD_GIFT,\n      variables: {\n        registryId: this.props.stateRegistryInfo?.id,\n        gifts: [{\n          guestName: this.state.userName ? this.state.userName : null,\n          guestEmail: this.state.userEmail ? this.state.userEmail : null,\n          items: [{\n            title: this.state.giftName ? this.state.giftName : null,\n            quantity: 1,\n            price: 0.0\n          }]\n        }]\n      }\n    }\n\n    if (this.state.storeName) {\n      reqData.variables.gifts['storeName'] = this.state.storeName\n    }\n\n    if (this.state.orderNumber) {\n      reqData.variables.gifts['orderNo'] = this.state.orderNumber\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data.addGift) {\n        toast.success(<p><b>{this.state.giftName} gift added.</b></p>)\n        getTrackGiftsProduct(true, this.props.stateTrackGiftsFilters, this.props.stateTrackGiftsProducts, this.props.stateTrackGiftsPagination, this.props.stateTrackGiftsView, this.props.stateRegistryInfo, this.props.stateTrackGiftsSearch, this.props.dispatch)\n        this.modalCloseHandler()\n      } else if (res.data.errors) {\n        toast.error(\"Some error occurred.\")\n        console.error({...res.data.errors})\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\")\n      console.error(err.response)\n    })\n\n  }\n\n  // Input Change Handlers\n  giftNameChangeHandler = ev => {\n    if (this.state.errors.giftName) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.giftName\n      this.setState({\n        errors: newErrorState\n      })\n    }\n\n    this.setState({\n      giftName: ev.target.value\n    })\n  }\n\n  storeNameChangeHandler = ev => {\n    this.setState({\n      storeName: ev.target.value\n    })\n  }\n\n  orderNumberChangeHandler = ev => {\n    this.setState({\n      orderNumber: ev.target.value\n    })\n  }\n\n  userNameChangeHandler = ev => {\n    if (this.state.errors.userName) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.userName\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    this.setState({\n      userName: ev.target.value\n    })\n  }\n\n  userEmailChangeHandler = ev => {\n    if (this.state.errors.userEmail) {\n      let newErrorState = {...this.state.errors}\n      delete newErrorState.userEmail\n      this.setState({\n        errors: newErrorState\n      })\n    }\n    this.setState({\n      userEmail: ev.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"track-gifts-add-gift-container\">\n\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 text-body font-medium track-gifts-add-gift-button\"\n          onClick={this.openAddGiftModal}\n        >Add Gift</Button>\n\n        <Modal\n          show={this.state.show}\n          title=\"Add Gift\"\n          size=\"md\"\n          footer={\n            <Button\n              variant=\"primary\"\n              onClick={this.addGiftClickHandler}\n              className=\"px-5 py-1 text-body font-medium track-gifts-add-gift-button\"\n            >Add & Close</Button>\n          }\n          closeModal={this.modalCloseHandler}>\n          <div className=\"track-gifts-add-gift-form\">\n\n            {/* Gift Name */}\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Gift\n                    Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"gift-name\"\n                    value={this.state.giftName}\n                    onChange={(ev) => this.giftNameChangeHandler(ev)}\n                    placeholder=\"Eg. Coming Home Blanket by Monica+Andy\"\n                    className={[\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.giftName ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}/>\n                  {this.state.errors.giftName ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.giftName}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row mt-2\">\n              {/* Store Name */}\n              <div className=\"col-6\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label className=\"track-gifts-add-gift-input-label text-sm font-medium mb-1\">Store Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"store-name\"\n                    value={this.state.storeName}\n                    onChange={(ev) => this.storeNameChangeHandler(ev)}\n                    className=\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\"\n                    placeholder=\"Eg. Target\"/>\n                </div>\n              </div>\n\n              {/* Order Number */}\n              <div className=\"col-6\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label className=\"track-gifts-add-gift-input-label text-sm font-medium mb-1\">Order number</label>\n                  <input\n                    type=\"text\"\n                    name=\"order-number\"\n                    value={this.state.orderNumber}\n                    onChange={(ev) => this.orderNumberChangeHandler(ev)}\n                    className=\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\"\n                    placeholder=\"00012345\"/>\n                </div>\n              </div>\n            </div>\n\n            {/* User Info */}\n            <div className=\"row mt-5\">\n              <div className=\"col\">\n                <p className=\"text-body font-medium\">Gifted By</p>\n              </div>\n            </div>\n\n            {/* User Name */}\n            <div className=\"row mt-2\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"user-name\"\n                    placeholder=\"John Doe\"\n                    value={this.state.userName}\n                    onChange={(ev) => this.userNameChangeHandler(ev)}\n                    className={[\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.userName ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}\n                  />\n                  {this.state.errors.userName ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.userName}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n            {/* User email */}\n            <div className=\"row mt-2 mb-1\">\n              <div className=\"col\">\n                <div className=\"track-gifts-add-gift-input-container\">\n                  <label\n                    className=\"track-gifts-add-gift-input-label track-gifts-add-gift-required text-sm font-medium mb-1\">Email\n                    address</label>\n                  <input\n                    type=\"text\"\n                    name=\"user-email\"\n                    placeholder=\"johndoe@email.com\"\n                    value={this.state.userEmail}\n                    onChange={(ev) => this.userEmailChangeHandler(ev)}\n                    className={[\"track-gifts-add-gift-input d-block w-100 mw-100 px-2 py-1 text-body\", this.state.errors.userEmail ? \"track-gifts-add-gift-input-error\" : \"\"].join(\" \")}\n                  />\n                  {this.state.errors.userEmail ?\n                    <label\n                      className=\"text-sm track-gifts-add-gift-input-error-text\">{this.state.errors.userEmail}</label>\n                    : null}\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTrackGiftsFilters: state.trackGifts.filters,\n  stateTrackGiftsView: state.trackGifts.activeView,\n  stateTrackGiftsProducts: state.trackGifts.products,\n  stateTrackGiftsPagination: state.trackGifts.paginationInfo,\n  stateRegistryInfo: state.registry.info,\n  stateTrackGiftsSearch: state.trackGifts.search\n})\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from \"react\";\nimport TrackGiftsSidebar from \"./containers/track-gifts-sidebar/TrackGiftsSidebar\";\nimport TrackGiftsContent from \"./containers/track-gifts-content/TrackGiftsContent\";\nimport Search from \"./components/search/Search\";\nimport AddGift from \"./components/add-gift/AddGift\";\n\nclass TrackGifts extends React.Component {\n  render() {\n    return (\n      <div className=\"container mt-8\">\n        <div className=\"row\">\n\n          {/* Sidebar content */}\n          <div className=\"col-2\">\n            <div className=\"row mb-5\">\n              <div className=\"col\">\n                <h4 className=\"font-medium\">View</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <TrackGiftsSidebar/>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"col-10\">\n            <div className=\"row mb-5\">\n              <div className=\"col\">\n                <h4 className=\"font-medium\">Gifts</h4>\n              </div>\n              <div className=\"col-5\">\n                <Search/>\n              </div>\n              <div className=\"col-2\">\n                <AddGift/>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <TrackGiftsContent/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrackGifts;","import React from \"react\";\nimport \"./RedirectionScreen.scss\";\n\nconst RedirectionScreen = props => {\n  return (\n    <div className=\"track-gifts-redirection-screen text-center pt-12 mx-auto\">\n      <h1 className=\"track-gifts-redirection-screen-title\">{`You’re on your way to ${props.store}`}</h1>\n      <h4 className=\"mt-1 track-gifts-redirection-screen-desc\">Don’t forget to come back to Monica+Andy to tell us if you bought this gift. We’ll make sure it doesn’t get bought twice.</h4>\n    </div>\n  )\n}\n\nexport default RedirectionScreen;","import React from 'react';\nimport {NavLink, Switch, Route, Redirect} from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport {useTranslation} from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport {useSelector} from 'react-redux';\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport TodoWidget from \"./component/todo-widget/TodoWidget\";\nimport TrackGifts from \"../track-gifts/TrackGifts\";\nimport RedirectionScreen from \"../track-gifts/components/redirection-screen/RedirectionScreen\";\n\nconst RegistryHero = (props) => {\n\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const stateTrackGiftsRedirectionInfo = useSelector(state => state.trackGifts.redirectionInfo)\n  const {t} = useTranslation();\n  const registryData = RegistryHeroData\n\n  if (!stateRegistryInfo.id && stateRegistryInfo.notFound) {\n    return <Redirect to={route.ONBOARDING.HOME}/>\n  }\n\n  return (\n    <>{stateTrackGiftsRedirectionInfo.store ?\n      <RedirectionScreen store={stateTrackGiftsRedirectionInfo.store}/>\n      :\n      <>\n        {!stateGuestViewRegistry ?\n          <div className=\"registry-hero\">\n            <div className=\"container pt-6\">\n              <div className=\"row\">\n                <div className=\"col d-flex justify-content-between align-items-start\">\n                  <div className=\"d-flex align-items-end\">\n                    <h1>{stateRegistryInfo.name}</h1>\n                    <span className=\"text-sm ml-1\">{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</span>\n                  </div>\n                  <div>\n                    <TodoWidget/>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex registry-hero-navigation-links\">\n                    <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n\n                    <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n\n                    <NavLink to={route.TRACK_GIFTS.HOME} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> : null}\n\n        {/* Registry Nav Routes */}\n        {stateRegistryInfo.id ?\n          <Switch>\n            <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME}/></Route>\n            <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry}/>\n            <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry}/>\n            <Route exact path={route.TRACK_GIFTS.HOME} component={TrackGifts}/>\n          </Switch>\n\n          : null}\n      </>\n    }\n\n\n      <Toast/>\n    </>\n  )\n}\n\nexport default RegistryHero;","import React from \"react\";\nimport \"./Option.scss\";\n\nconst Option = (props) => {\n  return (\n    <div\n      className={[\"px-4 py-3 baby-registry-question-option\", props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}>{props.children}</div>\n  );\n}\n\nexport default Option;","import React from \"react\";\nimport \"./Onboarding.scss\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport routes from \"utils/routes\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport {addQuestionAnswer, updateQuestionAnswer} from \"./OnboardingAction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  CREATE_REGISTRY,\n  SAVE_SINGLE_QUESTION_RESPONSE\n} from \"../../api/mutations\";\nimport {graphQLNoToken, graphQLNoHeader} from \"../../api/axios\";\nimport {Cookies} from \"react-cookie\";\nimport {setLoggingStatus, setOnboardingRegistry} from \"../registry/RegistryActions\";\nimport {getOnboardingQuestions} from \"../../utils/commonFunction\";\nimport {GET_REGISTRIES} from \"../../api/queries\";\nimport {M_A_FORGOT_PASSWORD_LINK} from \"../../utils/constants\";\n\nclass Onboarding extends React.Component {\n\n  //EMAIL PATTERN\n  MAIL_FORMAT = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  // Static titles\n  LOGIN_TITLE = \"Sign in for free gifts, free shipping, and exclusive access to our limited edition prints\"\n  SIGNUP_TITLE = \"Let’s make it official. Time to create your account.\"\n  PARTNER_TITLE = \"Your partner’s details please\"\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  LOGIN = \"Login\"\n  PARTNER = \"Partner\"\n\n  // Data to remove Both option\n  LITTLE_ONCE_ID = {\n    questionId: 5,\n    optionId: 7\n  }\n\n  BOTH_OPTION_ID = {\n    questionId: 6,\n    optionId: 13\n  }\n\n  SKIP_BOTH_OPTION = false\n\n  state = {\n    parentId: null,\n    question: {},\n    login: false,\n    toastMessage: \"\",\n    signUpErrors: {},\n    signInErrors: {},\n    submitAnswer: false,\n    bulkSaved: true\n  }\n\n  componentDidMount() {\n    window.onpopstate = () => {\n      if (this.props.location.pathname.search(routes.ONBOARDING.HOME) >= 0) {\n        this.setQuestionBasedOnId(this.props.match.params['questionId'])\n        this.clearToastMessage()\n      }\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      signUpErrors: {},\n      signInErrors: {}\n    })\n  }\n\n  createRegistry = () => {\n    let cookies = new Cookies();\n    graphQLNoHeader({query: CREATE_REGISTRY}, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data) {\n        let registryId = res.data.data.createRegistry.registry.id\n        if (registryId) {\n          this.props.dispatch(setOnboardingRegistry(registryId))\n          this.submitAllAnswers(registryId, true)\n        }\n      }\n    }).catch(err => {\n      console.error(err.response)\n    })\n  }\n\n  checkValidEmail = (email) => {\n    return email.match(this.MAIL_FORMAT)\n  }\n\n  submitAllAnswers = async (optionalRegistryId = null, submitBulk = false) => {\n    if (this.state.submitAnswer || submitBulk) {\n      if (this.props.stateOnboardingAnswers.length > 0 && (this.props.stateOnboardingRegistry || optionalRegistryId)) {\n        const registryId = optionalRegistryId ? optionalRegistryId : this.props.stateOnboardingRegistry;\n        let action = null;\n        let returnToURL = null;\n\n        const cookies = new Cookies();\n        const token = cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"\n\n        if (submitBulk) {\n          // Submitting all answers at once\n\n          const response = this.props.stateOnboardingAnswers.map(answer => {\n            return {\n              question: answer.question,\n              questionOptionInput: [\n                {\n                  option: answer.response.option,\n                  optionText: answer.response.optionText\n                }\n              ]\n            }\n          })\n          let reqData = {\n            query: SAVE_QUESTION_RESPONSE,\n            operationName: \"addRegistryQuestionOption\",\n            variables: {\n              registryId: registryId,\n              answers: response\n            }\n          }\n\n          await graphQLNoHeader(reqData, {\n            headers: {\"Authorization\": token}\n          }).then(res => {\n            if (res.data.data.addRegistryMultipleQuestionOption) {\n              console.log(\"Saved\")\n            }\n          }).catch(err => {\n            toast.error(\"Answer is not saved.\")\n            console.error(err.response);\n          }).finally(async () => {\n            await this.setState({\n              submitAnswer: false\n            })\n          })\n        } else {\n          //  Submitting single answer at once\n\n          let response = null\n\n          if (this.props.stateOnboardingAnswers.length > 0) {\n            const answer = this.props.stateOnboardingAnswers[this.props.stateOnboardingAnswers.length - 1]\n            action = answer.response.action ? answer.response.action : null;\n            response = {\n              question: answer.question,\n              questionOptionInput: [\n                {\n                  option: answer.response.option,\n                  optionText: answer.response.optionText\n                }\n              ]\n            }\n          }\n\n          if (action) {\n            switch (action) {\n              case \"build-registry\":\n                returnToURL = window.location.origin + routes.MY_REGISTRY.HOME\n                break\n              case \"registry-quiz\":\n                returnToURL = window.location.origin + routes.PERSONALIZE.HOME\n                break\n              default:\n                returnToURL = window.location.origin + routes.REGISTRY.HOME\n                break\n            }\n          }\n\n          if (response) {\n            let reqData = {\n              query: SAVE_SINGLE_QUESTION_RESPONSE,\n              operationName: \"updateOrCreateRegistrySingleQuestionOption\",\n              variables: {\n                registryId: registryId,\n                registryQuestionOptionInput: response\n              }\n            }\n\n            if (action && returnToURL) {\n              reqData.variables['returnTo'] = returnToURL\n            }\n\n            graphQLNoHeader(reqData, {\n              headers: {\"Authorization\": token}\n            }).then(res => {\n              if (res.data.data.updateOrCreateRegistrySingleQuestionOption) {\n                console.log(\"Saved\")\n                if (res.data.data.updateOrCreateRegistrySingleQuestionOption.redirectionUrl) {\n                  window.open(res.data.data.updateOrCreateRegistrySingleQuestionOption.redirectionUrl, \"_self\")\n                }\n              }\n            }).catch(err => {\n              console.error(err);\n            }).finally(() => {\n              this.setState({\n                submitAnswer: false\n              })\n            })\n          }\n        }\n\n      }\n    }\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    let nextFullQuestion = null;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.stateOnboardingQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          nextFullQuestion = ques\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      if (this.props.stateLoggedIn && this.state.redirectionUrl) {\n        // window.open(this.state.redirectionUrl, \"_self\")\n      }\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null\n      })\n\n      if (nextFullQuestion && nextFullQuestion.answers.length > 0 && (nextFullQuestion.options.length > 0 && !nextFullQuestion.options[0].action)) {\n        this.gotoNextQuestion(nextFullQuestion, null)\n        return;\n      } else {\n        this.setQuestionBasedOnId(nextQuestionId)\n        this.setToastMessage()\n        this.props.history.push(routes.ONBOARDING.HOME + `/${nextQuestionId}`)\n      }\n\n\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.stateOnboardingQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = async (questionId, response, option = null) => {\n    const alreadyAnswered = this.props.stateOnboardingAnswers.find(el => el.question === this.state.question.id)\n\n\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.stateOnboardingAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n          break;\n        }\n        newState.push(answer)\n      }\n      await this.props.dispatch(updateQuestionAnswer(newState))\n    } else {\n      await this.props.dispatch(addQuestionAnswer({question: questionId, response: response}))\n    }\n    await this.setState({\n      submitAnswer: true\n    })\n\n    if (option) {\n      if (option.toastMessage) {\n        this.setState({\n          toastMessage: option.toastMessage\n        })\n      }\n    }\n\n    this.submitAllAnswers(null, false)\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    if (Number(this.state.question.id) === this.LITTLE_ONCE_ID.questionId && Number(option.id) === this.LITTLE_ONCE_ID.optionId) {\n        this.SKIP_BOTH_OPTION = true\n    } else if (this.SKIP_BOTH_OPTION) {\n      this.SKIP_BOTH_OPTION = false\n    }\n    this.addAnswerToState(questionId, {option: option.id, optionText: option.value, action: option.action}, option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n  }\n\n  watchNextBtn = (ev) => {\n    this.setState({\n      nextBtnState: ev.target.value.length <= 0\n    })\n  }\n\n  answerDataQuestion = (questionId, response, dateCheck) => {\n    if (dateCheck) {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var currentDate = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n      if (currentDate <= response) {\n        this.addAnswerToState(questionId, {option: 0, optionText: response})\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Invalid date\")\n      }\n    } else {\n      this.addAnswerToState(questionId, {option: 0, optionText: response})\n      this.gotoNextQuestion(this.state.question, this.state.parentId);\n    }\n  }\n\n  textInputTypeChangeHandler = (ev, inputRefs) => {\n    let enableBtn = false;\n\n    for (const inputRef of inputRefs) {\n      if (inputRef.current.value.length <= 0) {\n        enableBtn = true\n        break\n      }\n    }\n\n    this.setState({\n      nextBtnState: enableBtn\n    })\n  }\n\n  changeLoginState = (ev, value, refs) => {\n    ev.preventDefault()\n    for (let ref of refs) {\n      if (ref.current) {\n        ref.current.value = \"\"\n      }\n    }\n    this.setState({\n      login: value\n    })\n  }\n\n  setErrorBasedOnResponse = (err, type) => {\n    if (err.response.data && err.response.data.errors) {\n      for (let error of err.response.data.errors) {\n        let parentErrors = err.response.data.errors\n\n        if (parentErrors.length > 0) {\n          for (const subErrors of parentErrors) {\n            if (subErrors.errors && (subErrors.errors instanceof Array ? subErrors.errors.length > 0 : true)) {\n              let newErrorState = {}\n              for (const error in subErrors.errors) {\n                newErrorState[error] = subErrors.errors[error].length > 0 ? subErrors.errors[error][0] : \"\"\n              }\n              switch (type) {\n                case \"signUp\":\n                  this.setState({\n                    signUpErrors: newErrorState\n                  })\n                  break\n                case \"signIn\":\n                  this.setState({\n                    signInErrors: newErrorState\n                  })\n                  break\n              }\n            } else {\n              toast.error(error.message)\n            }\n          }\n        }\n      }\n    }\n    console.error(err.response)\n  }\n\n  signInClickHandler = (emailRef, passwordRef) => {\n    if (emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signInErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    let reqData = {\n      query: LOGIN_USER,\n      operationName: \"login_user\",\n      variables: {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(async res => {\n      if (res.data.data.loginUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.loginUser.token, {path: \"/\"})\n\n        // Checking if user has registry\n        let data = {\n          query: GET_REGISTRIES\n        }\n        await graphQLNoHeader(data, {headers: {\"Authorization\": \"Token \" + res.data.data.loginUser.token}}).then(async registryRes => {\n          if (registryRes.data.data.registries.edges.length > 0) {\n            // TODO: Set currently active registry\n            let activeRegistry = registryRes.data.data.registries.edges[registryRes.data.data.registries.edges.length - 1]\n            let token = cookies.get(\"access_token\")\n            if (activeRegistry.node.id && token) {\n              await this.props.dispatch(setOnboardingRegistry(activeRegistry.node.id))\n              await getOnboardingQuestions(this.props.dispatch, activeRegistry.node.id, token)\n            }\n            if (res.data.data.loginUser.redirectionUrl) {\n              // window.open(res.data.data.loginUser.redirectionUrl, \"_self\")\n            }\n            // window.open(routes.MY_REGISTRY.HOME, \"_self\")\n            // updateRegistryDetailState(this.props.dispatch, registryRes.data.data.registries.edges);\n          } else {\n            // Creating Registry\n            this.createRegistry()\n          }\n\n        }).catch(err => {\n          console.error(err);\n        })\n        this.setState({\n          redirectionUrl: res.data.data.loginUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers(null, true)\n      }\n    }).catch(err => {\n      if (err.response.status === 401) {\n        toast.error(\"Invalid email or password\");\n        return;\n      }\n      this.setErrorBasedOnResponse(err, \"signIn\")\n    })\n  }\n\n  getSignInContent = () => {\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"signIn-email\"\n            ref={emailRef}\n            placeholder=\"johndoe@email.com\"\n          />\n          {this.state.signInErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-1\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"signIn-password\"\n            ref={passwordRef}\n            placeholder=\"Password\"\n          />\n          {this.state.signInErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.password}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <a className=\"text-body font-medium onboarding-link-text\" href={M_A_FORGOT_PASSWORD_LINK} target=\"_blank\">Forgot\n            Password</a>\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signInClickHandler(emailRef, passwordRef)}\n        >Sign In</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Don't have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                        onClick={(ev) => this.changeLoginState(ev, false, [emailRef, passwordRef])}\n        >Sign Up</a></h4>\n      </>\n    )\n  }\n\n  signUpClickHandler = (nameRef, emailRef, passwordRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signUpErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    // Clearing all error messages\n    this.clearErrorState()\n\n    let reqData = {\n      query: REGISTER_USER,\n      operationName: \"register_user\",\n      variables: {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.registerUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.registerUser.token, {path: \"/\"})\n        this.setState({\n          redirectionUrl: res.data.data.registerUser.redirectionUrl\n        })\n        this.createRegistry()\n        this.submitAllAnswers(null, true)\n        this.props.dispatch(setLoggingStatus(true))\n      }\n    }).catch(err => {\n      this.setErrorBasedOnResponse(err, \"signUp\")\n    })\n  }\n\n  getSignUpContent = () => {\n    let nameRef = React.createRef()\n    let emailRef = React.createRef()\n    let passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.name ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Doe\"\n            ref={nameRef}\n          />\n          {this.state.signUpErrors.name ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.name}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"johndoe@email.com\"\n            ref={emailRef}\n          />\n          {this.state.signUpErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n          />\n          {this.state.signUpErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.password}</p>\n            : null}\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signUpClickHandler(nameRef, emailRef, passwordRef)}\n        >Sign Up</Button>\n        <h4 className=\"mt-11\">Already have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\" tabindex\n                                                          onClick={(ev) => this.changeLoginState(ev, true, [nameRef, emailRef, passwordRef])}>Sign\n          In</a></h4>\n      </>\n    )\n  }\n\n  savePartnerDetail = (nameRef, emailRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      toast.error(\"Invalid email address\");\n      return;\n    }\n\n    const cookies = new Cookies();\n    let reqData = {\n      query: ADD_PARTNER_ACCOUNT,\n      operationName: \"addPartner\",\n      variables: {\n        partnerDetail: {\n          email: emailRef.current.value,\n          name: nameRef.current.value\n        }\n      }\n    }\n    graphQLNoHeader(reqData, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data.addPartnerAccount) {\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.response.data);\n    })\n  }\n\n  getPartnerContent = () => {\n    const nameRef = React.createRef()\n    const emailRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={nameRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1 mb-0\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={emailRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.savePartnerDetail(nameRef, emailRef)}\n        >Next</Button>\n      </>\n    )\n  }\n\n  render() {\n    // if (this.props.stateOnboardingAnswers) {\n    //   this.submitAllAnswers(null, false)\n    // }\n\n    // Redirecting user to registry home if registry found\n    if (this.props.stateRegistryInfo.id) {\n      return <Redirect to={routes.MY_REGISTRY.HOME}/>\n    }\n\n    // Redirecting to first question if not answered any\n    if (this.props.stateOnboardingQuestions.length > 0\n      && this.props.stateOnboardingAnswers.length <= 0\n      && this.props.location.pathname !== routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`) {\n      return <Redirect to={routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`}/>\n    }\n\n    if (!this.state.question.title && this.props.stateOnboardingQuestions.length > 0 && this.props.stateRouter.location.pathname !== routes.ONBOARDING.HOME + `/${this.state.question.id}`) {\n      this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    }\n\n    // Skipping Login Question if user is already logged in\n    if (this.props.stateLoggedIn && this.state.question.answerInputType === this.LOGIN) {\n      // If user already logged into M&A Store\n      this.setState((prevState, _) => ({\n        redirectionUrl: prevState.redirectionUrl ? prevState.redirectionUrl : routes.MY_REGISTRY.HOME\n      }))\n      this.gotoNextQuestion(this.state.question, null);\n    }\n\n    if (this.state.toastMessage) {\n      if (this.props.history.action === \"PUSH\") {\n        toast.dismiss()\n        toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n        setTimeout(() => this.setState({toastMessage: \"\"}), 4000)\n      }\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n    var now = new Date();\n    var day = (\"0\" + now.getDate()).slice(-2);\n    var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    var today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      for (const option of this.state.question.options) {\n        if (this.SKIP_BOTH_OPTION && Number(this.state.question.id) === this.BOTH_OPTION_ID.questionId && Number(option.id) === this.BOTH_OPTION_ID.optionId){\n          this.SKIP_BOTH_OPTION = true\n        } else {\n          options.push(\n            <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n              <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n              <span className=\"text-sm ml-1 onboarding-option-help-text\">{option.helpText}</span> : null}</Option>\n          )\n        }\n      }\n    } else if (this.state.question.answerInputType === \"Date\") {\n      let inputRef = React.createRef();\n      options.push(\n        <div className=\"d-flex flex-column\">\n          {/*TODO: Get placeholder from backend*/}\n          <input\n            type=\"date\"\n            className=\"onboarding-input py-1 px-2 text-body mb-0\"\n            placeholder=\"Date\"\n            ref={inputRef}\n            onChange={(ev) => this.watchNextBtn(ev)}\n            min={today}\n            max=\"9999-12-12\"\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(this.state.question.id, inputRef.current.value, true)}\n            className=\"px-3 py-1 font-medium mt-4 onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === \"Text\") {\n      let inputRefs = []\n      const inputRef = React.createRef()\n      inputRefs.push(inputRef)\n      options.push(\n        // TODO: Update this part if there is a Text type question\n        <div className=\"d-flex flex-column\">\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"Text\"\n            name=\"Answer\"\n            ref={inputRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(this.state.question.id, inputRef.current ? inputRef.current.value : \"\", false)}\n            className=\"mt-4 px-3 py-1 font-medium onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === this.LOGIN) {\n      let content = null;\n      if (this.state.login) {\n        staticQuestionTitle = this.LOGIN_TITLE\n        content = this.getSignInContent()\n      } else {\n        staticQuestionTitle = this.SIGNUP_TITLE\n        content = this.getSignUpContent()\n      }\n\n      options.push(content)\n    } else if (this.state.question.answerInputType === this.PARTNER) {\n      staticQuestionTitle = this.PARTNER_TITLE;\n      options.push(this.getPartnerContent())\n    }\n\n    return (\n      <>\n        <div className=\"baby-registry-onboarding container\">\n          <div className=\"row justify-content-center mt-24\">\n            <div className=\"col-12 col-md-6\">\n              <span\n                className=\"font-body onboading-question\">{[this.LOGIN, this.PARTNER].indexOf(this.state.question.answerInputType) !== -1 ? staticQuestionTitle : this.state.question.title}</span>\n            </div>\n          </div>\n          <div className=\"row justify-content-center mt-6\">\n            <div className=\"col-12 col-md-6\">\n              {options.map(option => option)}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          className=\"onboarding-toast-container\"\n          toastClassName=\"onboarding-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateOnboardingAnswers: state.onboarding.answers,\n    stateOnboardingRegistry: state.registry.onboardingRegistry,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Onboarding);","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from 'react';\nimport \"./PersonaliseHeader.scss\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\n\n\nconst PersonaliseHeader = (props) => {\n    const closePersonalise = (event) => {\n        event.preventDefault();\n        props.history.push(routes.REGISTRY.HOME)\n    }\n    \n    return (\n        <div className=\"personalise-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-between py-2\">\n                        <p className=\"text-body font-medium personalise-text\">My Registry Quiz</p>\n                        <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(PersonaliseHeader);","import React from 'react';\nimport \"./PersonaliseFooter.scss\";\n\n\nconst PersonaliseFooter = (props) => {\n  const closePersonalise = (event) => {\n    event.preventDefault();\n    // props.history.push(routes.REGISTRY.HOME)\n  }\n\n  return (\n    <div className=\"personalise-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4 justify-content-between pt-2 pb-4\">\n            <div className=\"mb-1\">\n              {props.percentage ? <p className=\"text-sm\">{props.percentage}% complete</p> : null}\n            </div>\n            <div className=\"personalise-progress-background\">\n              <div className=\"personalise-progress\" style={{ width: `${props.percentage}%` }} />\n            </div>\n          </div>\n          {/* <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} /> */}\n          <div className=\"col d-flex justify-content-end\">\n            <i className=\"icon-chevron-left align-self-center personalise-footer-icon p-2\" onClick={props.prevQuestion} />\n            <i className=\"icon-chevron-right align-self-center personalise-footer-icon p-2 ml-2\" onClick={props.nextQuestion} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonaliseFooter;","import React, { createRef } from \"react\";\n// import \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport PersonaliseHeader from \"./components/personalise-header/PersonaliseHeader\";\nimport { getPersonalizeQuestions } from \"utils/commonFunction\";\nimport { connect } from \"react-redux\";\nimport PersonaliseFooter from \"./components/personalise-footer/PersonaliseFooter\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport { updatePersonalizeQuestionAnswer, addPersonalizeQuestionAnswer, addPersonalizeQuestion } from \"./PersonaliseCheckListActions\";\nimport \"./PersonaliseChecklist.scss\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_SINGLE_QUESTION_RESPONSE } from 'api/mutations';\nimport { graphQL } from 'api/axios';\n\nclass PersonaliseChecklist extends React.Component {\n\n  state = {\n    parentId: null,\n    prevQuestionId: [],\n    question: {},\n    activeQuestionId: null,\n    toastMessage: \"\",\n    percentage: 0,\n    checkBoxSelected: []\n  }\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  CHECKBOX = \"Checkbox\"\n\n  componentDidMount() {\n    // getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    this.clearToastMessage()\n  }\n\n  calulatePercentage = (answerQuestionCount, totalQuestionCount) => {\n    let totalAnwer = 0;\n\n    const questions = [...this.props.statePersonaliseQuestions]\n    for (let question of questions) {\n      if (question.answers.length > 0) {\n        totalAnwer++;\n      }\n      if (questions.followUpQuestion) {\n        for (let subQuestion of question.followUpQuestions) {\n          if (subQuestion.answers.length > 0) {\n            totalAnwer++;\n          }\n        }\n      }\n    }\n    return this.props.statePersonaliseQuestions.length ? Math.ceil(totalAnwer * 100 / totalQuestionCount) : 0;\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    if (this.state.question.answerInputType === this.CHECKBOX) {\n      this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)\n    }\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.statePersonaliseQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null,\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        activeQuestionId: nextQuestionId\n      })\n      this.setQuestionBasedOnId(nextQuestionId)\n      // this.clearToastMessage();\n    }\n  }\n\n  gotoPrevQuestion = (prevQuestionId) => {\n    this.setQuestionBasedOnId(prevQuestionId);\n    if (this.state.prevQuestionId.length > 1) {\n      let popPrevQuestionId = [...this.state.prevQuestionId];\n      popPrevQuestionId.pop();\n      this.clearToastMessage();\n      this.setState({\n        prevQuestionId: popPrevQuestionId,\n        activeQuestionId: popPrevQuestionId.length > 0 ? popPrevQuestionId[popPrevQuestionId.length - 1] : this.state.activeQuestionId\n      })\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.statePersonaliseQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId,\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.statePersonaliseAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.statePersonaliseAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n        }\n        else {\n          newState.push(answer)\n        }\n      }\n      this.props.dispatch(updatePersonalizeQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addPersonalizeQuestionAnswer({ question: this.state.question.id, response: response }))\n    }\n  }\n\n  isActiveIdPresent = () => {\n    for (let prevQuestion of this.state.prevQuestionId) {\n      if (prevQuestion === this.state.activeQuestionId) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    this.addAnswerToState(option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    let finalAnswer = [{\n      option: option.id,\n      optionText: option.value\n    }]\n    this.submitQuestionAnswer(questionId, finalAnswer, option);\n  }\n\n  answerCheckBoxQuestion = (questionId, option) => {\n    this.addAnswerToState(option[0]);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    // let finalAnswer = [{\n    //   option: option.id,\n    //   optionText: option.value\n    // }]\n\n    let finalAnswer = []\n\n    for (let op of option) {\n      finalAnswer.push({option: op.id, optionText: op.value})\n    }\n    this.submitQuestionAnswer(questionId, finalAnswer, option);\n  }\n\n  selectCheckboxAnswer = (event, checkBoxRef, option) => {\n    checkBoxRef.current.classList.toggle(\"personalise-checkbox-selected\");\n    if (event.target.checked) {\n      this.setState({\n        // checkBoxSelected: selectedOption.push(option)\n        checkBoxSelected: [...this.state.checkBoxSelected, option]\n      })\n    }\n    else {\n      var removeIndex = this.state.checkBoxSelected.map(function (item) {return item.id;}).indexOf(option.id);\n      this.state.checkBoxSelected.splice(removeIndex, 1);\n    }\n  }\n\n  submitQuestionAnswer = (questionId, answer, option = null) => {\n\n    if (option?.toastMessage) {\n      this.setState({\n        toastMessage: option.toastMessage\n      })\n    } else {\n      this.setToastMessage()\n    }\n    let questionOptionInput = {\n      question: questionId,\n      questionOptionInput: answer\n    }\n    let reqData = {\n      query: SAVE_SINGLE_QUESTION_RESPONSE,\n      variables: {\n        registryId: this.props.stateRegistryInfo.id,\n        registryQuestionOptionInput: questionOptionInput\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data) {\n        console.log('Answer Done')\n        this.setStateQuestionWithSelectedAnswer(questionId, answer)\n      }\n    }).catch(err => {\n      toast.error(\"Error occurred while fetching questions\");\n      console.error(err);\n    })\n  }\n\n  setStateQuestionWithSelectedAnswer = (questionId, answer) => {\n    let answerOpt = []\n    for (let ans of answer) {\n      answerOpt.push({ questionOption: { id: ans.option }, optionText: ans.optionText })\n    }\n\n    // Setting question state with selected answer\n    const questions = [...this.props.statePersonaliseQuestions].map(question => {\n\n      if (question.id === questionId) {\n        question.answers = answerOpt\n      }\n      question.options = question.options.map(opt => {\n        if (opt.followUpQuestions.length > 0) {\n          opt.followUpQuestions.map(followUpQuestion => {\n            if (opt.id === questionId) {\n              opt.answers = answerOpt\n            }\n          })\n        }\n        return opt;\n      })\n      question.isAnswered = false;\n      return question;\n    })\n    this.props.dispatch(addPersonalizeQuestion(questions))\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    let question = { ...this.state.question }\n    if (question.toastMessage) {\n      this.setState({\n        toastMessage: question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  selectedColorSchemes = (data) => {\n    if (this.state.checkBoxSelected.length <= 0) {\n      this.setState({\n        checkBoxSelected: [...data]\n      })\n    }\n  }\n\n  render() {\n\n    if (!this.state.question.id && this.props.statePersonaliseQuestions.length > 0) {\n      let prevQuestionID = []\n      let currentQuestion = null\n      for (let question of this.props.statePersonaliseQuestions){\n        if (!question.isPersonalize) {\n          prevQuestionID.push(question.id)\n        }\n        else {\n          currentQuestion = question\n          break\n        }\n      }\n      this.setState({\n        prevQuestionId: prevQuestionID,\n        activeQuestionId: currentQuestion.id,\n        question: currentQuestion\n      })\n\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      const selectedOptionID = this.state.question.answers?.length > 0 ? this.state.question.answers[0].questionOption.id : null\n      options = this.state.question.options.map(option => (\n        <Option className={[\"mb-2 mr-4\", selectedOptionID === option.id ? \"answer-selected\" : \"\"].join(\" \")} onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n            <div className=\"text-sm onboarding-option-help-text\">{option.helpText}</div> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === this.CHECKBOX) {\n      // TODO: If it is selected\n      const selectedOptionID = []\n      if (this.state.question.answers?.length > 0) {\n        for (let ans of this.state.question.answers) {\n          if (!selectedOptionID.includes(ans.questionOption.id)) {\n            selectedOptionID.push(ans.questionOption.id)\n          }\n        }\n        const selectOptions = []\n        for (let selectedOption of this.state.question.options) {\n          if (selectedOptionID.includes(selectedOption.id)) {\n            selectOptions.push(selectedOption)\n          }\n        }\n        this.selectedColorSchemes(selectOptions);\n      }\n      options = this.state.question.options.map(option => {\n        let checkBoxRef = createRef();\n        return (\n          <div\n            className={[\"personalise-checkbox mr-3 mb-3\", selectedOptionID.includes(option.id) ? \"personalise-checkbox-selected\" : \"\"].join(\" \")} ref={checkBoxRef}>\n            <label className=\"checkbox d-flex align-items-center pb-0 mb-0\">\n              <span className=\"checkbox__input p-2\">\n                <input\n                  type=\"checkbox\"\n                  name={option.id}\n                  value={option.id}\n                  onChange={(e) => this.selectCheckboxAnswer(e, checkBoxRef, option)}\n                  defaultChecked={selectedOptionID.includes(option.id)}\n                />\n                <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                  <i className=\"icon-check\"></i>\n                </span>\n              </span>\n              <h4 className=\"radio__label pr-2\">{option.value}</h4>\n            </label>\n          </div>\n        )\n      })\n      options.push(\n        // <div>\n        //   <Button\n        //     variant=\"primary\"\n        //     className=\"px-3 py-1 font-medium onboarding-next-button\"\n        //     onClick={() => this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)}\n        //   >Done</Button>\n        // </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"personalise\">\n          {/* Personalise Header */}\n          <PersonaliseHeader />\n\n          {/* Personalise Body */}\n          <div className=\"baby-registry-onboarding container mb-15\">\n            <div className=\"row justify-content-center mt-24\">\n              <div className=\"col-12 col-md-6\">\n                <span\n                  className=\"font-body onboading-question\">{this.state.question.title}</span>\n              </div>\n            </div>\n            <div className=\"row justify-content-center mt-6\">\n              <div className=\"col-12 col-md-6\">\n                {options.map(option => option)}\n              </div>\n            </div>\n          </div>\n\n          {/* Personalise Footer */}\n          <PersonaliseFooter\n            percentage={this.calulatePercentage(this.props.statePersonaliseAnswers.length, this.props.statePersonaliseQuestions.length)}\n            prevQuestion={() => { this.gotoPrevQuestion(this.state.prevQuestionId[this.state.prevQuestionId.length - 1]) }}\n            nextQuestion={() => { this.gotoNextQuestion(this.state.question, this.state.parentId) }}\n          />\n        </div>\n\n        <ToastContainer\n          position=\"top-center\"\n          className=\"personalise-toast-container\"\n          toastClassName=\"personalise-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n    statePersonaliseAnswers: state.personaliseCheckList.answers,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React, { useState } from \"react\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { setPersonaliseCheckListItems } from \"../../PersonaliseCheckListActions\";\nimport { connect } from \"react-redux\";\nimport './EditChecklist.scss';\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {\n  incrementCheckListQuantity,\n  setIsActiveCheckList,\n  decrementCheckListQuantity\n} from \"../../PersonaliseCheckListActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_UPDATED_CHECKLIST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport { getAllCategories } from 'utils/commonFunction';\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\n\n// import {setCheckListItems} from \"../../../my-registry/MyRegistryActions\";\n\nclass PersonaliseChecklist extends React.Component {\n  state = {\n\t  showOverrideModal: false\n\t};\n\n  componentDidMount() {\n    this.getAllCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n  getAllCategories = (registryId, dispatch) => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryId)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.errors || res.data.error) {\n        // TODO: Add toast\n        console.log('Something went wrong-->', res.data.errors)\n        return;\n      } else {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  if (subProductType.isExcluded) {\n                    subProductType.totalItemsCount = 1\n                    subProductType['isAdded'] = false\n                  } else {\n                    subProductType['isAdded'] = true\n                  }\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                if (subCategory.isExcluded) {\n                  subCategory.totalItemsCount = 1\n                  subCategory['isAdded'] = false\n                } else {\n                  subCategory['isAdded'] = true\n                }\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = { ...category }\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n\n        }\n        dispatch(setPersonaliseCheckListItems(finalCheckList))\n      }\n    }).catch(err => {\n      console.error('Something went wrong-->', err);\n    })\n  }\n\n  closeAndSavePersonaliseCheckList = (event) => {\n    event.preventDefault();\n    let finalCheckListData = []\n    let tempStateCheckList = [...this.props.stateCheckList]\n    for (let category of tempStateCheckList) {\n      for (let subCategory of category.subCategories) {\n        // let tempData = null\n        let tempData = {\n          registryCategoryId: subCategory.id,\n          itemsCount: subCategory.totalItemsCount,\n          isExcluded: !subCategory.isAdded\n        }\n        finalCheckListData.push(tempData)\n      }\n    }\n\n    let registryId = this.props.stateRegistryInfo.id\n    let data = {\n      query: SAVE_UPDATED_CHECKLIST,\n      variables: {\n        registryId: registryId,\n        itemCountData: finalCheckListData\n      },\n    }\n\n    graphQL(data).then(res => {\n      if (res.data) {\n        toast.success((\n          <p>Personalise Checklist Updated Successfully</p>\n        ))\n        this.props.history.push(routes.REGISTRY.HOME)\n      }\n\n    }).catch(err => {\n      console.error(err.message)\n      toast.error((\n        <p>Some error occurred.</p>\n      ))\n    })\n  }\n\n  gotoPersonaliseQuestions = (event) => {\n    event.preventDefault();\n    this.props.history.push(routes.PERSONALIZE.HOME)\n  }\n\n  removeConfirmFooter = (\n    <>\n\t  <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => {\n\t  this.props.history.push(routes.REGISTRY.HOME)\n\t  this.setState({showOverrideModal:false})\n\t  }}>Do Not Override</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={(e) => {\n\t\tthis.closeAndSavePersonaliseCheckList(e)\n\t\tthis.setState({showOverrideModal:false});\n      }}>Yes, Please Override</Button>\n    </>\n  )\n\n  render() {\n    return (\n\t  // TODO: API call\n\t  <>\n      <div className=\"personalise-checklist\">\n        {/* Header */}\n        <div className=\"py-2 personalise-checklist-header font-body font-medium\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col \">Edit Checklist</div>\n              <div className=\"col d-flex align-items-center justify-content-end\">\n                <a className=\"mr-6 personalise-header-link\" tabindex onClick={(e) => { this.gotoPersonaliseQuestions(e) }}>Take our quiz</a>\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1  font-medium done-btn\"\n                    onClick={()=>this.setState({showOverrideModal:true})}\n                  >Save & Close</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* All categries selection body */}\n        {this.props.stateCheckList.map((parentCategories, i) => (\n          <div className=\"mt-6 container\" key={parentCategories.categoryName + \"-\" + i}>\n            <div className=\"checklist-title pb-4 body-text\">\n              {parentCategories.categoryName}\n            </div>\n            <div className=\"row mt-4\">\n              {parentCategories.subCategories.map((subCategories, i) => (\n                <div className=\"col-3 mb-5\" key={subCategories.id}>\n                  <div className={[\"checklist-card pl-2 pr-3 py-3\",\n                    !subCategories.isAdded ? \"add-checklist-bg\" : \"\"].join(' ')\n                  }>\n                    <div className=\"d-flex mb-4 checklist-action-btn\">\n                      <div className=\"text-body font-medium align-self-center\">{subCategories.categoryName}</div>\n                      {subCategories.addedItemsCount <= 0 ?\n                        <div className=\"ml-auto\">\n                          <button className={[\"checklist-add-btn\",\n                            !subCategories.isAdded ? \"checklist-icon-plus\" : \"icon-close\"].join(' ')}\n                            onClick={() => this.props.dispatch(setIsActiveCheckList(subCategories.id, !subCategories.isAdded))} />\n                        </div>\n                        : null\n                      }\n                    </div>\n                    <div className=\"d-flex align-items-center\">\n                      <Counter\n                        counter={subCategories.totalItemsCount}\n                        incrementHandler={() => this.props.dispatch(incrementCheckListQuantity(subCategories.id, 1))}\n                        decrementHandler={() => this.props.dispatch(decrementCheckListQuantity(subCategories.id, 1))}\n                      />\n                      {subCategories.addedItemsCount > 0 ?\n                        <span className=\"ml-auto text-sm item-count-label\">{subCategories.addedItemsCount} added</span>\n                        : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        <Toast />\n      </div>\n\t  <Modal\n        show={this.state.showOverrideModal}\n        size=\"lg\"\n        footer={this.removeConfirmFooter}\n      >\n        <h2 className=\"mb-1\">This will override your personalizd suggestions that came from registry quiz.</h2>\n\t\t    <label className=\"text-sm\">If you do not want to override, click on ‘Do Not Override’, which will take you to your registry. The changes you made in edit checklist will be discarded.</label>\n      </Modal>\n\t  </>\n    );\n  }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport \"./GuestViewHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\n\n\nclass GuestViewHeader extends React.Component {\n\n  state = {\n    showEditRegistryDetail: false,\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"view-registry-header\" style={{ backgroundImage: 'url(' + this.props.stateGuestViewRegistry.image.image + ')' }}>\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateGuestViewRegistry.displayName ? this.props.stateGuestViewRegistry.displayName : \"\"}</h2>\n                  </div>\n                  {this.props.stateGuestViewRegistry.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateGuestViewRegistry.greeting}</span>\n                    :\n                    null\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.guestView.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(GuestViewHeader);","import React from 'react';\nimport \"./GuestSortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeGuestSortFilter } from '../../GuestViewAction';\n\nconst GuestSortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.guestView.activeGuestSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeGuestSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GuestSortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport GuestSortFilter from \"../guest-sort-filter/GuestSortFilter\";\nimport './GuestSortSection.scss';\nimport { clearGuestViewFilter, setChildGuestViewFilter, setGuestViewProducts, clearViewGuestPaginationInfo } from \"../../GuestViewAction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass GuestSortSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = async (isParent, childId) => {\n    if (isParent) {\n      await this.props.dispatch(clearGuestViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      await this.props.dispatch(setChildGuestViewFilter(newChildArray))\n    }\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n    await this.props.dispatch(setGuestViewProducts([]))\n    await this.props.setFilterhandler()\n  }\n\n  //Clear filter state\n  clearFilterHandler = async (ev) => {\n    ev.preventDefault()\n    await this.props.dispatch(clearGuestViewFilter())\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n\t\tawait this.props.dispatch(setGuestViewProducts([]))\n    await this.props.setFilterhandler()\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <GuestSortFilter />\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.guestView.product,\n    stateActiveSortFilter: state.guestView.activeGuestSortFilter,\n    stateGuestViewRegistry: state.guestView.guestViewRegistry,\n    stateRegistryInfo: state.guestView.info,\n    stateFilterApplied: state.guestView.guestViewFilterApplied,\n    stateFilterCategory: state.guestView.guestFilterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestSortSection);\n","import React, { useState } from 'react'\nimport \"./GuestFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildGuestViewFilter, clearGuestViewFilter, setGuestViewFilterCategory, setGuestViewProducts, clearViewGuestPaginationInfo } from '../../GuestViewAction';\nimport { FILTERS } from \"utils/constants\";\n\nconst GuestFilter = (props) => {\n\n\tconst dispatch = useDispatch()\n\tlet tempParentFilterId = useSelector(state => state.guestView.guestViewFilterApplied.parentFilter)\n\tlet tempChildFilterIds = useSelector(state => state.guestView.guestViewFilterApplied.childFilter)\n\tlet stateAddedProducts = useSelector(state => state.guestView.product)\n\tconst stateCategoriesInfo = useSelector(state => state.guestView.checkList)\n\tlet stateFilterCategories = useSelector(state => state.guestView.guestFilterCategory)\n\tlet [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n\tconst childChangeHandler = async (childId, parentId) => {\n\n\t\tif (parentId !== tempParentFilterId) {\n\t\t\tif (tempChildFilterIds.length > 0) {\n\t\t\t\tawait dispatch(setChildGuestViewFilter([]))\n\t\t\t}\n\t\t}\n\n\t\tconst childIndex = tempChildFilterIds.indexOf(childId)\n\n\t\tif (childIndex === -1) {\n\t\t\tawait dispatch(setChildGuestViewFilter([...tempChildFilterIds, childId]))\n\t\t} else {\n\t\t\tlet newChildArray = [...tempChildFilterIds]\n\t\t\tnewChildArray.splice(childIndex, 1)\n\t\t\tawait dispatch(setChildGuestViewFilter(newChildArray))\n\t\t}\n\t\tawait dispatch(clearViewGuestPaginationInfo())\n\t\tawait dispatch(setGuestViewProducts([]))\n\t\tprops.setFilterhandler()\n\t}\n\n\tconst clearClickHandler = async () => {\n\t\tawait dispatch(clearGuestViewFilter())\n\t\tawait dispatch(clearViewGuestPaginationInfo())\n\t\tawait dispatch(setGuestViewProducts([]))\n\t\tawait props.setFilterhandler()\n\t}\n\n\tconst changeParentLimitHandler = (parentFilterID) => {\n\t\tlet limitLength = null\n\t\tlet filterCategory = [...stateFilterCategories].map(parentFilter => {\n\t\t\tif (parentFilter.id === parentFilterID) {\n\t\t\t\tparentFilter.limit = parentFilter.child.length\n\t\t\t\tlimitLength = parentFilter.child.length\n\t\t\t}\n\t\t\treturn parentFilter\n\t\t})\n\t\tdispatch(setGuestViewFilterCategory(filterCategory))\n\n\t\tlet isFound = false\n\t\tlet newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n\t\t\tif (categorylimit.id === parentFilterID) {\n\t\t\t\tcategorylimit.limit = limitLength\n\t\t\t\tisFound = true\n\t\t\t\treturn categorylimit\n\t\t\t}\n\t\t\treturn categorylimit\n\t\t})\n\n\t\tprops.categoryFilterLimit(newFilterCateoryLimit);\n\t\tif (!isFound) {\n\t\t\tnewFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n\t\t}\n\t\tsetFilterCategoryLimit(newFilterCateoryLimit)\n\t}\n\n\treturn (\n\t\t<div className=\"view-filter\">\n\t\t\t<div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n\t\t\t\t<h4 className=\"font-weight-bold\">Filters</h4>\n\t\t\t\t{tempChildFilterIds.length !== 0 ?\n\t\t\t\t\t<a tabindex='0' className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t{[...stateFilterCategories].map(parentFilter => (\n\t\t\t\t\t<div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n\t\t\t\t\t\t{/* Parent filter */}\n\t\t\t\t\t\t<div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n\t\t\t\t\t\t{/* Child filter */}\n\t\t\t\t\t\t{parentFilter.child ? (\n\t\t\t\t\t\t\t<div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n\t\t\t\t\t\t\t\t<div className=\"mt-3 fliter-checkbox-section\">\n\t\t\t\t\t\t\t\t\t{parentFilter.child.map((childFilter, index) => (\n\t\t\t\t\t\t\t\t\t\tchildFilter.count > 0 ?\n\t\t\t\t\t\t\t\t\t\t\tindex < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"checkbox__input mr-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={childFilter.display}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={childFilter.display}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-check\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"radio__label text-sm\">{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t: null\n\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GuestFilter;\n","import React from \"react\";\nimport \"./GuestView.scss\";\nimport { connect } from \"react-redux\";\nimport { updateGuestViewRegistry, getGuestCategories } from \"../../utils/commonFunction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport GuestViewHeader from \"./containers/guest-view-header/GuestViewHeader\";\nimport GuestSortSection from \"./containers/guest-sort/GuestSortSection\";\nimport GuestViewCard from \"./components/GuestViewCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { VIEW_GIFT_PRODUCTS_PER_REQUEST } from \"utils/constants\";\nimport { setGuestViewProducts, setViewGuestPaginationInfo, updateGuestViewInfo, setGuestViewFilterCategory, clearViewGuestPaginationInfo } from './GuestViewAction';\nimport { GET_GUEST_REGISTRY_PRODUCT } from 'api/queries';\nimport { MEDIA_URL_PREFIX } from \"utils/constants\";\nimport { graphQL } from 'api/axios';\nimport GuestFilter from './containers/guest-filter/GuestFilter';\nimport { FILTERS } from \"utils/constants\";\nimport Toast from \"modules/commons/components/toast/Toast\";\n\n\nclass GuestView extends React.Component {\n\n  state = {\n    isFirstTime: true,\n    filterCategoryLimit: []\n  }\n\n  BABY_GIFTS_URL = \"https://monicaandandy.com/collections/baby-gifts\"\n\n  // Constant variables for filters\n  AVAILABLE = \"available\"\n  RESERVED = \"reserved\"\n  PURCHASED = \"purchased\"\n  PRICE_1 = \"price-1\"\n  PRICE_2 = \"price-2\"\n  PRICE_3 = \"price-3\"\n  MONICA_AND_ANDY = \"monicaandandy\"\n  ELSEWHERE = \"elsewhere\"\n\n  getLimitOfFliter = (parentId) => {\n    let limit = null\n    const filterCategory = [...this.state.filterCategoryLimit]\n    for (let category of filterCategory) {\n      if (parentId === category.id && category.limit) {\n        limit = category.limit\n      }\n    }\n    return limit\n  }\n\n  // Updating product count in filter categories\n  updateFilterList = (registryItemsAnalysisCount, categoryData) => {\n\n    let newFilterList = [\n      {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: this.AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: registryItemsAnalysisCount.totalAvailable\n          },\n          {\n            id: this.RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: registryItemsAnalysisCount.totalReserved\n          },\n          {\n            id: this.PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: registryItemsAnalysisCount.totalPurchased\n          }\n        ]\n      },\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        limit: this.getLimitOfFliter(\"categories\") ? this.getLimitOfFliter(\"categories\") : 6,\n        child: [...this.props.stateCategoriesInfo].filter(category => {\n          let id = category.category.id\n          let count = categoryData[id]\n          if (count > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          let id = category.category.id\n          newCategory.id = category.category.id\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = categoryData[id]\n          return newCategory\n        })\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: this.PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: registryItemsAnalysisCount.under50\n          },\n          {\n            id: this.PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: registryItemsAnalysisCount.between50100\n          },\n          {\n            id: this.PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: registryItemsAnalysisCount.moreThan100\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: this.MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: registryItemsAnalysisCount.maStoreItems\n          },\n          {\n            id: this.ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: registryItemsAnalysisCount.otherStoreItems\n          },\n        ]\n      },\n\n    ]\n    this.props.dispatch(setGuestViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  getFiltersApplied = (stateFilterApplied, activeSortFilterState) => {\n    const childFilterArray = [...stateFilterApplied]\n    let filterApplied = {}\n    // For Gift Status\n    if (childFilterArray.includes(this.AVAILABLE)) {\n      filterApplied.isAvailable = true\n    }\n    if (childFilterArray.includes(this.RESERVED)) {\n      filterApplied.isReserved = true\n    }\n    if (childFilterArray.includes(this.PURCHASED)) {\n      filterApplied.isPurchased = true\n    }\n\n    // For Sort\n    if (activeSortFilterState.sortId === 2) {\n      filterApplied.sortBy = 'item__price'\n    } else if (activeSortFilterState.sortId === 3) {\n      filterApplied.sortBy = '-item__price'\n    }\n\n    // For Store\n    let store = []\n    if (childFilterArray.includes(this.MONICA_AND_ANDY)) {\n      store.push(this.MONICA_AND_ANDY)\n    }\n    if (childFilterArray.includes(this.ELSEWHERE)) {\n      store.push(this.ELSEWHERE)\n    }\n    if (store.length) {\n      filterApplied.store = store\n    }\n\n    let lessThanEqual = 0\n    let greaterThanEqual = 0\n    let hasPriceFilter = false\n    // For Price\n    if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_2) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 0\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_2)) {\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      lessThanEqual = 49\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_2) &&\n      childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 50\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_1)) {\n      lessThanEqual = 49\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_2)) {\n      greaterThanEqual = 50\n      lessThanEqual = 100\n      hasPriceFilter = true\n    }\n    else if (childFilterArray.includes(this.PRICE_3)) {\n      greaterThanEqual = 100\n      hasPriceFilter = true\n    }\n    if (hasPriceFilter) {\n      filterApplied.price_Lte = lessThanEqual\n      filterApplied.price_Gte = greaterThanEqual\n    }\n\n    let categories = []\n    // For categories\n    for (let cat of [...this.props.stateCategoriesInfo]) {\n      if (childFilterArray.includes(cat.category.id)) {\n        categories.push(cat.category.id)\n      }\n    }\n    if (categories.length) {\n      filterApplied.categories = categories\n    }\n\n    return filterApplied\n  }\n\n  updateGuestViewRegistryProduct = (urlSlug, first = VIEW_GIFT_PRODUCTS_PER_REQUEST, emptyAllProduct = false) => {\n    let filtersApplied = this.getFiltersApplied(this.props.stateFilterApplied, this.props.activeSortFilterState)\n    let reqData = {\n      query: GET_GUEST_REGISTRY_PRODUCT,\n      variables: {\n        urlSlug: urlSlug,\n        after: this.props.stateGuestViewPagination.endCursor,\n        first: first,\n        ...filtersApplied\n      }\n    }\n\n    graphQL(reqData).then(async res => {\n      if (res.data.data.registryAsGuest) {\n        if (emptyAllProduct) {\n          await this.props.dispatch(setGuestViewProducts([]))\n        }\n\n        // Storing Product of GuestView\n        let responseData = [...res.data.data.registryAsGuest.registryItems.edges].map(item => {\n          let newItemObj = { ...item.node }\n          delete newItemObj.registryitemImage;\n          if (item.node.registryitemImage.length > 0) {\n            newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n          }\n          return newItemObj;\n        })\n        let finalData = responseData.filter(product => product.registryCategories.length > 0)\n        await this.props.dispatch(setGuestViewProducts(finalData))\n\n        // Storing PagenationInfo\n        let pagenationInfo = { ...res.data.data.registryAsGuest.registryItems.pageInfo }\n        await this.props.dispatch(setViewGuestPaginationInfo(pagenationInfo))\n\n        this.updateFilterList({ ...res.data.data.registryAsGuest.registryItemsAnalysisCount }, { ...res.data.data.registryAsGuest.categoryData })\n      }\n    }).catch(err => {\n      this.props.dispatch(updateGuestViewInfo({ notFound: true }))\n      if (err.response && err.response.data.errors) {\n        for (const error of err.response.data.errors) {\n          // TODO: Implement toast if necessary\n          console.log(error.message)\n        }\n      }\n    })\n  }\n\n  filterCategoryLimitHandler = (limitData) => {\n    this.setState({ filterCategoryLimit: limitData })\n  }\n\n  sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  getSortedFilteredProducts = (guestProducts, activeSortFilterState, filterApplied) => {\n    let sortedProducts = [];\n    if (activeSortFilterState.sortId === 1) {\n      sortedProducts = [...guestProducts]\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedProducts = this.sortByLowToHigh([...guestProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedProducts = this.sortByHighToLow([...guestProducts])\n    }\n\n    return sortedProducts;\n  }\n\n  getdataForFirstTime = async () => {\n    await getGuestCategories(this.props.match.params.registrySlug, this.props.dispatch)\n    await this.props.dispatch(clearViewGuestPaginationInfo())\n    await this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug, VIEW_GIFT_PRODUCTS_PER_REQUEST, true)\n  }\n\n  render() {\n\n    if (this.props.stateGuestViewRegistry.urlSlug !== this.props.match.params.registrySlug) {\n      updateGuestViewRegistry(this.props.match.params.registrySlug, this.props.dispatch)\n    }\n\n    // When registry doesn't exists\n    if (this.props.stateGuestViewRegistry.notFound) {\n      return <h1>Registry not found</h1>;\n    }\n\n    if (this.props.stateGuestViewRegistry.id) {\n      // When registry exists and it is not public\n      if (this.props.stateGuestViewRegistry.isPublic === false) {\n        let registryUsers = [this.props.stateGuestViewRegistry.user.firstName]\n        if (this.props.stateGuestViewRegistry.user.partnerUser) {\n          registryUsers.push(this.props.stateGuestViewRegistry.user.partnerUser.firstName)\n        }\n        return (\n          <div className=\"container mt-17\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n                <h1>{this.props.stateGuestViewRegistry.displayName}</h1>\n                {/*TODO: Display partner name as well below*/}\n                {registryUsers.length === 1 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> is still curating their baby registry</h4> : null}\n                {registryUsers.length === 2 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> and <span className=\"text-capitalize\">{registryUsers[1]}</span> are still curating their baby registry</h4> : null}\n\n                <Button\n                  variant=\"primary\"\n                  className=\"py-1 px-2 mt-3 text-body font-medium\"\n                  onClick={() => window.location.href = this.BABY_GIFTS_URL}\n                >Shop baby Gifts</Button>\n              </div>\n            </div>\n          </div>\n        )\n      } else {\n\n        let filteredSortProducts = this.getSortedFilteredProducts(this.props.stateAddedProducts, this.props.activeSortFilterState, this.props.stateFilterApplied)\n\n        // Fetching product for first time \n        if (this.state.isFirstTime && this.props.stateAddedProducts.length <= 0 && this.props.stateGuestViewRegistry.urlSlug) {\n          this.setState({\n            isFirstTime: false\n          })\n          this.getdataForFirstTime()\n          // this.updateFilterList(this.props.stateAddedProducts)\n        }\n\n        // When registry exists and it is public\n        return (\n          <>\n            <GuestViewHeader />\n            <div className=\"container mt-7\">\n              <div className=\"row\">\n                <div className=\"col-2\">\n                  <GuestFilter setFilterhandler={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)} categoryFilterLimit={this.filterCategoryLimitHandler} />\n                </div>\n                <div className=\"col\"></div>\n                <div className=\"col-9\">\n                  <GuestSortSection\n                    productCount={filteredSortProducts.length}\n                    setFilterhandler={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)}\n                  />\n\n                  <div className=\"mt-5\">\n                    <InfiniteScroll\n                      next={() => this.updateGuestViewRegistryProduct(this.props.match.params.registrySlug)}\n                      hasMore={this.props.stateGuestViewPagination.hasNextPage}\n                      loader={<h4>Loading...</h4>}\n                      dataLength={this.props.stateAddedProducts.length}\n                      style={{ overflow: \"hidden\" }}\n                    >\n\n                      {filteredSortProducts.length > 0 ?\n                        filteredSortProducts.map((card, index) =>\n                          <GuestViewCard\n                            data={card}\n                            key={\"addedCard\" + index}\n                            updateGuestViewProduct={this.updateGuestViewRegistryProduct}\n                          />) : null}\n                    </InfiniteScroll>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <Toast />\n          </>\n        )\n      }\n    }\n\n\n    // Default return\n    return <></>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stateGuestViewRegistry: state.guestView.info,\n    stateAddedProducts: state.guestView.product,\n    activeSortFilterState: state.guestView.activeGuestSortFilter,\n    stateFilterApplied: state.guestView.guestViewFilterApplied.childFilter,\n    stateGuestViewPagination: state.guestView.paginationInfo,\n    stateCategoriesInfo: state.guestView.checkList,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestView);","import React, { useState } from \"react\";\nimport \"./FindRegistry.scss\";\nimport { FIND_REGISTRY } from \"api/queries\";\nimport { graphQL } from 'api/axios';\nimport moment from 'moment';\nimport { IMPORT_REGISTRY_EMAIL } from \"utils/constants\";\n\nconst FindRegistry = () => {\n  const [searchName, setSearchName] = useState('')\n  const [allRegistry, setAllRegistry] = useState([])\n  const [hasRegistry, setHasRegistry] = useState(true)\n\n  const findRegistry = (registryName) => {\n    let reqData = {\n      query: FIND_REGISTRY,\n      variables: {\n        registryName: registryName\n      }\n    }\n    graphQL(reqData).then(res => {\n      if (res.data.data.findRegistry) {\n        let registries = [...res.data.data.findRegistry.edges]\n        setAllRegistry(registries)\n        if (registries.length > 0) {\n          setHasRegistry(true)\n        } else {\n          setHasRegistry(false)\n        }\n      }\n    }).catch(err => {\n      setHasRegistry(false)\n    })\n  }\n\n  const handleClearSearch = () => {\n    setSearchName('')\n    setAllRegistry([])\n  }\n\n  const findRegistryHandler = async (ev) => {\n    ev.persist();\n    await setSearchName(ev.target.value)\n    if (ev.target.value.length <= 0) {\n      setAllRegistry([])\n    } else {\n      await findRegistry(ev.target.value)\n    }\n  }\n\n  const handleRegistryUrlSlug = (urlSlug) => {\n    window.open(urlSlug)\n  }\n\n  return (\n    <div className=\"mt-10 find-registry\">\n      <div className=\"row\">\n        <div className=\"col-4 offset-4\">\n          <div className=\"find-registry-header text-center\">Find a Baby Registry</div>\n          <div className=\"mt-6 find-registry-search-container mx-auto\">\n            <input\n              type=\"text\"\n              placeholder=\"Search registry...\"\n              value={searchName}\n              onChange={(ev) => findRegistryHandler(ev)}\n              className=\"find-registry-search-input pl-6 text-body py-1 w-100 mw-100 pr-10\"\n            />\n            <i className=\"icon-search find-registry-search-icon\" />\n            {searchName.length > 0 ?\n              <a className=\"find-registry-search-input-link text-body\" href=\"#\"\n                onClick={() => { handleClearSearch() }}>Clear</a>\n              : null}\n          </div>\n\n\n        </div>\n      </div>\n      <div className={[\"row\", allRegistry.length ? \"mb-4 mt-10\" : \"\"].join(\" \")}>\n        <div className=\"col-10 offset-1\">\n          {[...allRegistry].map(data => (\n            <div className=\"p-4 find-registry-card mx-5\" key={data.node.urlSlug}>\n              <div className=\"d-flex align-items-center\">\n                <div className=\"d-flex align-items-baseline\">\n                  <h3 className=\"find-registry-displayName\">{data.node.displayName}</h3>\n                  <p className=\"ml-2 find-registry-content\">{moment(data.node.dueDate).format('MMM DD, YYYY')}</p>\n                </div>\n                <div className=\"ml-auto\">\n                  <button className=\"find-registry-action-btn p-2\" onClick={() => handleRegistryUrlSlug(data.node.urlSlug)}/>\n                </div>\n              </div>\n              {data.node.user.defaultAddress ?\n                <p className=\"mt-1 find-registry-content\">{data.node.user.defaultAddress?.city}, {data.node.user.defaultAddress?.province}</p>\n                : null}\n            </div>\n          ))}\n\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"mt-6 text-center\">\n            {searchName.length > 0 ?\n              hasRegistry ?\n                // If has registries in list\n                <div className=\"find-registry-content\">\n                  <h4>Didn’t find the registry that you are looking for?</h4>\n                  <h4 className=\"mb-2\">Check with the family or shower host for <a href={\"mailto:\" + IMPORT_REGISTRY_EMAIL} className=\"find-registry-email-link\" tabIndex target='_blank'>direct link</a> or</h4>\n                  <a\n                    className=\"px-2 py-1 find-registry-help-disable-btn text-body font-medium\"\n                    href={\"mailto:\" + IMPORT_REGISTRY_EMAIL}\n                    target='_blank'\n                    tabIndex\n                  >Email Us For Help</a>\n                </div>\n                :\n                // If has no registries in list\n                <div className=\"find-registry-content\">\n                  <h4>We couldn’t find any registries that match your search...</h4>\n                  <h4 className=\"mb-2\">Check with the family or shower host for <a href={\"mailto:\" + IMPORT_REGISTRY_EMAIL} className=\"find-registry-email-link\" tabIndex target='_blank'>direct link</a> or</h4>\n                  <a\n                    className=\"px-2 py-1 find-registry-help-primary-btn text-body font-medium\"\n                    href={\"mailto:\" + IMPORT_REGISTRY_EMAIL}\n                    target='_blank'\n                    tabIndex\n                  >Email Us For Help</a>\n                </div>\n              :\n              // Search is not been started yet\n              <div className=\"font-medium find-registry-content\">\n                <p>Looking for Monica+Andy baby registry?</p>\n                <p>Begin typing to search</p>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FindRegistry;","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport Onboarding from \"../onboarding/Onboarding\";\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {\n  updateRegistryDetail,\n  getOnboardingQuestions,\n  createRegistry,\n  getPersonalizeQuestions,\n  getCategories,\n  getProducts\n} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport {verifyAccessToken} from \"../../api/axios\";\nimport {setLoggingStatus, updateRegistryInfo} from \"../registry/RegistryActions\";\nimport PersonaliseChecklist from \"../personalise-checklist/PersonaliseChecklist\";\nimport EditChecklist from \"modules/personalise-checklist/components/edit-checklist/EditChecklist\";\nimport GuestView from \"../guest-view/GuestView\";\nimport MyRegistry from \"../my-registry/MyRegistry\";\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport FindRegistry from \"modules/find-registry/FindRegistry\";\n\nclass ViewsContainer extends React.Component {\n\n  state = {\n    displayContent: false,\n    foundRegistry: false\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    const access_token = cookies.get(\"access_token\")\n    if (access_token) {\n      verifyAccessToken(access_token).then(res => {\n        if (res.data.data.customer) {\n          this.props.dispatch(setLoggingStatus(true))\n          if (res.data.data.registries.length > 0) {\n            this.setState({\n              foundRegistry: true\n            })\n            updateRegistryDetail(this.props.dispatch);\n            // TODO: Get products of active registry\n            getCategories(res.data.data.registries[res.data.data.registries.length - 1].id, this.props.dispatch);\n            // TODO: Get categories of active registry\n            getProducts(res.data.data.registries[res.data.data.registries.length - 1].id, this.props.dispatch);\n          } else {\n            this.props.dispatch(updateRegistryInfo({notFound: true}))\n\n            //  Creating New Registry\n            createRegistry(this.props.dispatch)\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n        this.props.dispatch(setLoggingStatus(false))\n        this.props.dispatch(updateRegistryInfo({notFound: true}))\n      }).finally(() => {\n        this.setState({\n          displayContent: true\n        })\n      })\n    } else {\n      this.setState({\n        displayContent: true\n      })\n      this.props.dispatch(updateRegistryInfo({notFound: true}))\n    }\n  }\n\n  render() {\n\n    // if (this.props.stateRouter.location.pathname.search(route.GUEST_VIEW.HOME) !== -1) {\n    //   console.log(route.GUEST_VIEW.HOME+\"/:registryName\")\n    //   return <Redirect to={this.props.stateRouter.location.pathname}/>\n    // }\n\n    // Redirecting user to onboarding is no registry found\n    // if (this.props.stateRouter.location.pathname.search(route.ONBOARDING.HOME) === -1 && !this.props.stateRegistryInfo.id && !this.state.foundRegistry && this.state.displayContent) {\n    //   console.log(this.props.stateRouter.location.pathname)\n    //   return <Redirect to={route.ONBOARDING.HOME}/>\n    // }\n\n    if (this.props.stateOnboardingQuestions.length <= 0) {\n      getOnboardingQuestions(this.props.dispatch)\n    }\n\n    if (this.props.stateRegistryInfo.id && this.props.statePersonaliseQuestions.length <= 0) {\n      getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    }\n\n    return (\n      <>\n        {this.state.displayContent ?\n          <Switch>\n            <Route exact path={route.PERSONALIZE.CHECKLIST} component={EditChecklist}/>\n            <Route exact path={route.PERSONALIZE.HOME} component={PersonaliseChecklist}/>\n            <Route exact path={route.FIND_REGISTRY.HOME} component={FindRegistry}/>\n            <Route exact path={route.ONBOARDING.HOME + \"/:questionId?\"} component={Onboarding}/>\n            <Route exact path={route.MY_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.VIEW_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.TRACK_GIFTS.HOME} component={RegistryHero}/>\n            <Route exact path={route.GUEST_VIEW.HOME + \"/:registrySlug\"} component={GuestView}/>\n            <Route path={route.REGISTRY.HOME} component={RegistryHero}/>\n            <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n            <Route render={() => <div>DEFAULT</div>}/>\n          </Switch>\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateRouter: state.router,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}