{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","modules/personalise-checklist/PersonaliseCheckListActions.js","modules/personalise-checklist/PersonaliseCheckListReducer.js","modules/onboarding/OnboardingAction.js","modules/onboarding/OnboardingReducer.js","modules/guest-view/GuestViewAction.js","modules/guest-view/GuestViewReducer.js","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/modal-component/ModalComponent.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","api/queries.js","api/config.js","api/axios.js","utils/constants.js","api/mutations.js","utils/commonFunction.js","modules/commons/components/button-component/ButtonComponent.jsx","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/import-registry/category-pill/CategoryPill.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/import-registry/ImportRegistry.jsx","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/components/view-filter/ViewFilter.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/commons/components/toast/Toast.jsx","modules/registry-hero/component/todo-widget/TodoWidget.jsx","modules/registry-hero/RegistryHero.jsx","modules/commons/components/questions/option/Option.jsx","modules/onboarding/Onboarding.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/personalise-checklist/components/personalise-header/PersonaliseHeader.jsx","modules/personalise-checklist/components/personalise-footer/PersonaliseFooter.jsx","modules/personalise-checklist/PersonaliseChecklist.jsx","modules/personalise-checklist/components/edit-checklist/EditChecklist.jsx","modules/guest-view/GuestView.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","SET_ANOTHER_STORE_REGISTRY_ITEMS","addRecommendedProduct","params","toggleMustHaveProduct","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","setAnotherStoreRegistryItems","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","anotherStoreRegistry","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","setguestViewRegistry","setViewFilterCategory","setChildViewFilter","clearViewFilter","viewRegistryProducts","activeSortFilter","sortId","sortTitle","guestViewRegistry","viewFilterApplied","REGISTRY_ACTION_TYPES","updateRegistryInfo","setLoggingStatus","setOnboardingRegistry","info","loggedIn","todo","onboardingRegistry","PERSONALISE_CHECKLIST_ACTION_TYPES","setPersonaliseCheckListItems","addPersonalizeQuestion","addPersonalizeQuestionAnswer","updatePersonalizeQuestionAnswer","newSubCategory","subCategories","subCategory","totalItemsCount","setIsAddedCheckList","isAdded","editedPersonaliseCheckList","questions","answers","ONBOARDING_ACTION_TYPES","addQuestionAnswer","updateQuestionAnswer","GUEST_VIEW_ACTION_TYPES","updateGuestViewInfo","updated","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","personaliseCheckList","PersonaliseCheckListReducer","onboarding","Onboarding","guestView","GuestViewReducer","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","trackGifts","shower","announcements","more","toDos","es","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","TRACK_GIFTS","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","ONBOARDING","PERSONALIZE","CHECKLIST","GUEST_VIEW","MoreOption","props","className","join","iconClass","buttonClass","data","map","option","index","key","onClick","name","ModalComponent","Modal","show","size","titleContent","Header","headerContent","closeModal","Body","children","footer","Footer","Counter","decrementHandler","counter","incrementHandler","CardItem","src","image","originalSrc","alt","href","productLink","tabindex","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","gql","GET_CATEGORIES","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","GET_REGISTRIES","GET_PERSONALIZE_QUESTIONS","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","axiosInstanceNoToken","axiosInstanceNoHeader","graphQLNoToken","post","graphQLNoHeader","graphQL","getAnotherRegistryProducts","axiosInstanceMultipart","graphQLMultipart","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","FILTERS","BOOKMARKLET_SCRIPT","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","REGISTER_USER","SAVE_QUESTION_RESPONSE","LOGIN_USER","ADD_PARTNER_ACCOUNT","SAVE_UPDATED_CHECKLIST","SAVE_SINGLE_QUESTION_RESPONSE","CREATE_REGISTRY","getProducts","registryId","dispatch","query","variables","parseInt","then","res","finalData","registryItems","newItemObj","registryitemImage","imageUrl","registryCategories","catch","err","console","error","response","removeProductFromCartHandler","card","registryItemId","getCategories","toast","message","getRefinedCategory","categoryName","isDesired","isExcluded","isDefaultVisible","addedItemsCount","isParent","getAllCategories","getAll","parentCategory","newParentCategory","registrySubCategories","newSubCategories","cat","refinedSubCate","subProductTypes","registrySubProductTypes","subProduct","operationName","errors","log","finalCategories","allCategories","updateRegistryDetail","registries","registryData","currentRegistryInfo","notFound","updateRegistryDetailState","e","getOnboardingQuestions","isPersonalize","question","followUpQuestions","followUpQuestion","isAnswered","ButtonComponent","React","forwardRef","ref","btnVariantClass","variant","disabled","AddedCard","useDispatch","stateGuestViewRegistry","useSelector","stateRecommendedProducts","stateFilterApplied","stateAddedProducts","stateRegistryInfo","useState","setRecommendedProducts","setShow","modalTitle","showRemoveModel","setShowRemoveModel","moreOptionsData","categoryRecommended","Number","jsonObject","JSON","stringify","uniqueSet","Set","Array","from","parse","showRecommendation","removeConfirmFooter","DragHandle","sortableHandle","disabledDrag","draggable","cardId","newRecommended","incrementQuantity","decrementQuantity","existingProduct","sku","storeItemUrl","parseFloat","shopifyItemId","tags","success","CheckList","gotoPersonalize","event","preventDefault","isQuizPending","editablePersonalizeQuestions","this","t","style","width","percentage","Component","withTranslation","withRouter","CheckListItems","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","subProductType","handleToggleEvent","checkListIconEl","checkListHeader","current","firstChild","classList","toggle","createRef","subListItem","Accordion","Card","Toggle","as","eventKey","Collapse","connect","BookmarkletSection","updateModal","modalBody","modalTitleContent","modalFooterButtons","modalCloseHandler","setState","openAddBookmarkletModal","prevState","addItemToRegistry","TogglePills","activeClass","text","RadioButton","checked","onChange","changeHandler","textClass","display","count","CheckBox","value","SelectCategory","categories","setCategories","searchedCategories","setSearchedCategories","currentCategory","selectedCategory","setSelectedCategory","useEffect","resData","finalCheckList","finalSubCategory","tempSubCategory","tempCategory","getCategoriesToDisplay","find","allSelectedCategory","handleSelectionCategory","categorySelectBody","saveButton","changeCurrentCategory","searchInputRef","changeLinkRef","placeholder","target","searchMatched","toLowerCase","match","searchCategoryInputChangeHandler","onFocus","contains","add","searchInputFocusHandler","onBlur","remove","searchInputBlurHandler","focus","changeLinkClickHandler","showModal","CategoryPill","removeCategory","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","hideProductDetails","setHideProductDetails","showLoading","setshowLoading","productInfo","productImage","productName","howToGift","note","mustHave","groupGift","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","ev","persist","changeProductName","noteChangeHandler","changeNote","selectFileHandler","files","file","includes","reader","FileReader","onload","changeProductImage","result","fileType","fileName","readAsDataURL","alert","submitStoreUrl","keyCode","URL","url","productUrl","changeProductUrl","reqData","item_url","img","newPrice","char","isInteger","getRefinedPrice","onKeyUp","class","role","click","accept","rows","defaultValue","priceChangeHandler","addMyOwn","openCategorySelect","categoryId","finalcategory","removeSelectedCategory","toggleGroupGift","togglePurchased","changeHowToGift","ViewRecommend","cardRef","clearModalData","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","childCategory","commonGetProducts","commonGetCategories","checkDataValidity","storeProduct","stateAnotherStoreProduct","storeUrl","storeName","hostname","split","formData","FormData","ADD_REGISTRY_ITEM_MUTATION","input","items","append","images","dataURItoBlob","status","anotherStoreItemViewDetail","open","addOnMyOwnClickHandler","newCategory","displayName","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","products","height","offsetHeight","Filter","filterData","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","childId","parentId","childIndex","indexOf","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ImportGiftCard","ImportRegistry","registryUrl","errorMessage","loading","activeCategoryProductIndex","currentRegistryLink","inputHasFocus","inputRef","changeLoadingState","registryUrlChangeHandler","checkUrlAndGetRegistryItems","getAnotherRegistryProductsInfo","registryUrlKeyUpHandler","store_name","store_url","newProducts","finally","openSelectCategoryModal","productIndex","stateAnotherStoreRegistry","setProductCategories","newProductState","changeRegistryUrl","bind","AddGift","categoryList","dataURI","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","openAddGiftModal","importGiftAnotherStoreHandler","importRegistry","validImportRegistryData","getCleanedRegistryItems","cleanedRegistryItems","itemStore","stores","newStore","importRegistryClickHandler","jsonGraphQL","addRegistryItems","FilterSection","deleteChipHandler","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","productCount","stateFilteredProducts","Everything","updateFilterList","newFilterList","isPurchased","isReserved","productId","mustHaveValue","setAllRecommendation","a","recommendedCategory","parentCat","recommendedCat","productType","rData","getSortedProducts","stateCategories","allProducts","added","total","recommendations","childFilterArray","addedRecommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","stateProducts","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","modalFooter","registryImages","defaultImages","fileChangeHandler","imageId","updateRegistry","closeCoverImagePicker","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","siteHostName","location","host","urlSlug","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","setRegistryUrl","registryError","setRegistryError","inputContainerRef","changeRegistryVisibility","newRegistry","readOnly","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","handleGuestView","handleDisableViewGuest","COVER_PIC_OPTIONS","backgroundImage","activeOptionClass","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","filterCat","childCat","stateActiveSortFilter","stateViewRegistryProducts","ViewFilter","stateCategoriesInfo","filterCategoryLimit","setFilterCategoryLimit","getLimitOfFliter","limit","localFilterCategories","giftStatus","parentFilterID","limitLength","isFound","newFilterCateoryLimit","categorylimit","changeParentLimitHandler","ViewRegistryHome","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","getParentCategory","sortByMustHave","productList","sort","b","sortByLowToHigh","sortByHighToLow","isFeatured","productData","filteredSortProducts","sortedProducts","sortedData","newSortedProducts","appliedCategoryProduct","tempNewSortedProducts","temp","prod","getSortedProductsByFilters","viewRegistryProductsId","addProduct","getSortedFilteredProducts","onSortEnd","oldIndex","newIndex","itemsOldPosition","arrayMove","position","oldPosition","updateViewRegistryPosition","helperClass","axis","lockAxis","useDragHandle","ViewRegistry","Toast","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","closeButton","parentElement","dismiss","TodoWidget","performTodoAction","stateTodo","RegistryHero","useTranslation","RegistryHeroData","to","babyArrival","Option","MAIL_FORMAT","LOGIN_TITLE","SIGNUP_TITLE","PARTNER_TITLE","RADIO","PARTNER","login","toastMessage","signUpErrors","signInErrors","clearErrorState","createRegistry","submitAllAnswers","checkValidEmail","email","optionalRegistryId","stateOnboardingAnswers","stateOnboardingRegistry","returnToURL","answer","questionOptionInput","optionText","origin","addRegistryMultipleQuestionOption","redirectionUrl","clearToastMessage","setToastMessage","gotoNextQuestion","nextQuestionId","returnNext","idToMatch","stateOnboardingQuestions","ques","stateLoggedIn","setQuestionBasedOnId","questionId","finalQuestion","foundQuestion","parentQuestion","addAnswerToState","answerRadioQuestion","watchNextBtn","nextBtnState","answerDataQuestion","textInputTypeChangeHandler","inputRefs","enableBtn","changeLoginState","refs","setErrorBasedOnResponse","parentErrors","subErrors","newErrorState","signInClickHandler","emailRef","passwordRef","password","loginUser","set","token","registryRes","getSignInContent","signUpClickHandler","nameRef","registerUser","getSignUpContent","savePartnerDetail","partnerDetail","firstName","addPartnerAccount","getPartnerContent","undefined","onpopstate","pathname","search","stateRouter","answerInputType","setTimeout","staticQuestionTitle","helpText","content","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","customer","redirectVerifyToken","VerifyToken","verifyToken","PersonaliseFooter","prevQuestion","nextQuestion","PersonaliseChecklist","prevQuestionId","activeQuestionId","checkBoxSelected","CHECKBOX","calulatePercentage","answerQuestionCount","totalQuestionCount","totalAnwer","statePersonaliseQuestions","Math","ceil","isActiveIdPresent","gotoPrevQuestion","popPrevQuestionId","pop","statePersonaliseAnswers","finalAnswer","submitQuestionAnswer","answerCheckBoxQuestion","op","selectCheckboxAnswer","checkBoxRef","registryQuestionOptionInput","setStateQuestionWithSelectedAnswer","answerOpt","ans","questionOption","opt","prevQuestionID","currentQuestion","selectedOptionID","closeAndSavePersonaliseCheckList","finalCheckListData","tempStateCheckList","tempData","registryCategoryId","itemsCount","itemCountData","gotoPersonaliseQuestions","parentCategories","GuestView","BABY_GIFTS_URL","registrySlug","registryAsGuest","registryUsers","user","partnerUser","ViewsContainer","displayContent","foundRegistry","access_token","EditChecklist","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3550b26d.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\",\n\n  // ANOTHER STORE REGISTRY\n  SET_ANOTHER_STORE_REGISTRY_ITEMS: \"SET_ANOTHER_STORE_REGISTRY_ITEMS\"\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}\n\n//Another store Registry Items\nexport const setAnotherStoreRegistryItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS,\n\t\tpayload: params\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreRegistry = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct,\n  anotherStoreRegistry\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_GUEST_VIEW: \"IS_GUEST_VIEW\",\n  SET_VIEW_FILTER_CATEGORY: \"SET_VIEW_FILTER_CATEGORY\",\n\n  // Filter\n\tSET_VIEW_PARENT_FILTER: \"SET_VIEW_PARENT_FILTER\",\n\tSET_VIEW_CHILD_FILTER: \"SET_VIEW_CHILD_FILTER\",\n\tCLEAR_VIEW_FILTER: \"CLEAR_VIEW_FILTER\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setguestViewRegistry = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW,\n    payload: params\n  }\n}\n\n// View Filter Category Section\nexport const setViewFilterCategory = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n\n// Filter Section\n\nexport const setParentViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildViewFilter = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearViewFilter = () => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER,\n\t}\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst guestViewRegistry = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_FILTER_CATEGORY:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst viewFilterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.SET_VIEW_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case VIEW_REGISTRY_ACTION_TYPES.CLEAR_VIEW_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    guestViewRegistry,\n    filterCategory,\n    viewFilterApplied\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\",\n  SET_LOGGING_STATUS: \"SET_LOGGING_STATUS\",\n  SET_TODO : \"SET_TODO\",\n  SET_ONBOARDING_REGISTRY: \"SET_ONBOARDING_REGISTRY\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}\n\nexport const setLoggingStatus = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS,\n    payload: params\n  }\n}\n\nexport const setTodo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_TODO,\n    payload: params\n  }\n}\n\nexport const setOnboardingRegistry = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY,\n    payload: params\n  }\n}\n","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst todo = (state = defaultData.todo, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_TODO:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst onboardingRegistry = (state = \"\", action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_ONBOARDING_REGISTRY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo,\n  loggedIn,\n  todo,\n  onboardingRegistry\n});","export const PERSONALISE_CHECKLIST_ACTION_TYPES = {\n\n\tGET_ALL_CHECKLIST_ITEMS: \"GET_ALL_CHECKLIST_ITEMS\",\n\tINCREMENT_CHECKLIST_QUANTITY: \"INCREMENT_CHECKLIST_QUANTITY\",\n\tDECREMENT_CHECKLIST_QUANTITY: \"DECREMENT_CHECKLIST_QUANTITY\",\n\tCHECKLIST_ADDED: \"CHECKLIST_ADDED\",\n\n\tPERSONALISE_ADD_QUESTION: \"PERSONALISE_ADD_QUESTION\",\n    PERSONALISE_ADD_ANSWER: \"PERSONALISE_ADD_ANSWER\",\n    PERSONALISE_UPDATE_ANSWER: \"PERSONALISE_UPDATE_ANSWER\"\n}\n\nexport const incrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\n\nexport const setPersonaliseCheckListItems = params => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\nexport const setIsActiveCheckList = (id, isAdded) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED,\n\t\tpayload: { id, isAdded }\n\t}\n}\n\nexport const addPersonalizeQuestion = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION,\n\t  payload: params\n\t}\n  }\n  \n  export const addPersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER,\n\t  payload: params\n\t}\n  }\n  \n  export const updatePersonalizeQuestionAnswer = (params) => {\n\treturn {\n\t  type: PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER,\n\t  payload: params\n\t}\n  }","import {PERSONALISE_CHECKLIST_ACTION_TYPES} from \"./PersonaliseCheckListActions\";\nimport {combineReducers} from \"redux\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.totalItemsCount += quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id && subCategory.totalItemsCount > 1) {\n        subCategory.totalItemsCount -= quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst setIsAddedCheckList = (state, payload) => {\n  let {\n    id,\n    isAdded\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.isAdded = isAdded;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\n// Reducers\nconst editedPersonaliseCheckList = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS:\n      return [...action.payload];\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n      case PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED:\n        return setIsAddedCheckList(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_QUESTION:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_ADD_ANSWER:\n      return [...state, action.payload]\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.PERSONALISE_UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  editedPersonaliseCheckList,\n  questions,\n  answers\n})","export const ONBOARDING_ACTION_TYPES = {\n  ADD_QUESTION: \"ADD_QUESTION\",\n  ADD_ANSWER: \"ADD_ANSWER\",\n  UPDATE_ANSWER: \"UPDATE_ANSWER\"\n}\n\nexport const addOnboardingQuestion = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_QUESTION,\n    payload: params\n  }\n}\n\nexport const addQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_ANSWER,\n    payload: params\n  }\n}\n\nexport const updateQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.UPDATE_ANSWER,\n    payload: params\n  }\n}","import {ONBOARDING_ACTION_TYPES} from \"./OnboardingAction\";\nimport {combineReducers} from \"redux\";\n\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_QUESTION:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_ANSWER:\n      return [...state, action.payload]\n    case ONBOARDING_ACTION_TYPES.UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  questions,\n  answers\n});","export const GUEST_VIEW_ACTION_TYPES = {\n  UPDATE_GUEST_VIEW_INFO: \"UPDATE_GUEST_VIEW_INFO\"\n}\n\nexport const updateGuestViewInfo = (params) => {\n  return {\n    type: GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO,\n    payload: params\n  }\n}\n","import {GUEST_VIEW_ACTION_TYPES} from \"./GuestViewAction\";\nimport {combineReducers} from \"redux\";\n\nconst guestViewRegistry = (state = {updated:false}, action) => {\n  switch (action.type) {\n    case GUEST_VIEW_ACTION_TYPES.UPDATE_GUEST_VIEW_INFO:\n      return {...action.payload}\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: guestViewRegistry\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\nimport PersonaliseCheckListReducer from \"../modules/personalise-checklist/PersonaliseCheckListReducer\";\nimport Onboarding from \"../modules/onboarding/OnboardingReducer\";\nimport GuestViewReducer from \"../modules/guest-view/GuestViewReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  personaliseCheckList: PersonaliseCheckListReducer,\n  onboarding: Onboarding,\n  guestView: GuestViewReducer,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n  LOGIN: {\n    VERIFY_TOKEN: APP_HOME_ROUTE + \"/verify-token/:token\"\n  },\n  REGISTRY: {\n    HOME: APP_HOME_ROUTE\n  },\n\n  MY_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/home\",\n    GIFTS_ADDED: APP_HOME_ROUTE + \"/~/gifts-added\",\n    GIFT_TO_ADD: APP_HOME_ROUTE + \"/~/gifts-to-add\",\n    GIFT_VIEW: APP_HOME_ROUTE + \"/guest-view\",\n    TRACK_GIFTS: APP_HOME_ROUTE + \"/track_gifts\",\n    SHOWER: APP_HOME_ROUTE + \"/~/shower\",\n    ANNOUNCEMENTS: APP_HOME_ROUTE + \"/~/announcements\",\n    MORE: APP_HOME_ROUTE + \"/~/more\",\n    TO_DOS: APP_HOME_ROUTE + \"/~/to_dos\"\n  },\n\n  VIEW_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/view-registry\"\n  },\n\n  ONBOARDING: {\n    HOME: APP_HOME_ROUTE + \"/onboarding\"\n  },\n\n  PERSONALIZE:{\n    HOME: APP_HOME_ROUTE + \"/personalize-quiz\",\n    CHECKLIST: APP_HOME_ROUTE + \"/personalize-checklist\"\n  },\n\n  GUEST_VIEW: {\n    HOME: APP_HOME_ROUTE+\"\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")} />\n      <div className={[\"more-option-dropdown\"].join(\" \")}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;\n","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      {props.title || props.titleContent ?\n        <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n          <div>\n            <div className=\"d-flex justify-content-between\">\n              <h1>{props.title}</h1>\n              <div className=\"d-flex\">\n                {props.headerContent ? props.headerContent : null}\n                <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n              </div>\n            </div>\n          </div>\n\n          {/* OPTIONAL CONTENT IN TITLE PORTION */}\n          {props.titleContent ? props.titleContent : null}\n\n        </Modal.Header> : null}\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n        {/* MODAL CONTENT GOES HERE */}\n        {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image text-center\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image?.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink} tabindex>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import { gql } from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  registryCategories(registryId:$registryId){\n    id,\n    isExcluded,\n    itemsCount,\n    \n    addedItemsCount,\n    totalItemsCount,\n    category{\n      id,\n      categoryName,\n      isParent,\n    },\n    registrySubCategories{\n      id,\n      isExcluded,\n      itemsCount,\n      addedItemsCount,\n      totalItemsCount,\n      category{\n        id,\n        categoryName,\n        isParent,\n      },\n      registrySubProductTypes{\n        id,\n        isExcluded,\n        itemsCount,\n        addedItemsCount,\n        totalItemsCount,\n        category{\n          id,\n          categoryName,\n          isParent,\n        },\n      }\n    }\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems($registryId:Int!){\n    registryItems(registryId:$registryId){\n      edges{\n        node{\n          id,\n          registryitemImage{\n            image\n          }\n          isGroupGift,\n          isReserved,\n          quantity,\n          mostWanted,\n          featuredOrder,\n          orderNo,\n          giftMessage,\n          isReserved,\n          isAmountReceived,\n          isPurchased,\n          title,\n          registryCategories {\n            id,\n            category{\n              categoryName,\n            }\n          }\n          note,\n          item{\n            store{\n              id,\n              storeName\n            }\n            id,\n            shopifyItemId,\n            sku,\n            price,\n            imageUrl,\n          }\n        }\n      }\n    }\n  }\n\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:[Int]!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      registryCategories:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nconst GET_QUESTIONS = `\n  query getQuestions($registryId: Int, $isPersonalize: Boolean!){\n  questions(registryId: $registryId, isPersonalize: $isPersonalize){\n    id,\n    title,\n    answerInputType,\n    fields,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      action,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          options{\n            id\n            value\n            toastMessage\n            action\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nconst GET_GUEST_REGISTRY = `\n  query getGuestRegistry($urlSlug: String!){\n    registryAsGuest(urlSlug: $urlSlug){\n      id,\n      name,\n      displayName,\n      isPublic,\n      urlSlug,\n      user {\n        firstName,\n        partnerUser {\n          firstName\n        }\n      },\n      registryItems{\n        edges{\n          node{\n            id\n          }\n        }\n      }\n    }\n  }\n`\n\nconst GET_PERSONALIZE_QUESTIONS = `\nquery editablePersonalizeQuestions($registryId: Int!){\n  editablePersonalizeQuestions(registryId: $registryId){\n    id,\n    title,\n    answerInputType,\n    fields,\n    isPersonalize,\n    toastMessage,\n    answers{\n      questionOption{\n        id\n      },\n      optionText\n    },\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          isPersonalize,\n          options{\n            id\n            value\n            toastMessage\n          },\n          answers{\n            questionOption{\n              id\n            },\n            optionText\n          },\n        }\n      }\n    }\n  }\n}\n`\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS\n};\n\n// Example to use queries added in home.jsx","const backendId = \"https://3.12.191.197\";\n// const backendId = \"http://localhost:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport { Cookies } from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: { \"Authorization\": cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\" }\n});\n\nconst axiosInstanceNoToken = axios.create({\n  baseURL: apiURL\n});\n\nconst axiosInstanceNoHeader = axios.create({\n  baseURL: apiURL\n});\n\nexport function graphQLNoToken(data) {\n  return axiosInstanceNoToken.post(\"/graphql\", data);\n}\n\nexport function graphQLNoHeader(data, options) {\n  return axiosInstanceNoHeader.post(\"/graphql\", data, options);\n}\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nexport function verifyAccessToken(data) {\n  return axiosInstanceNoToken.post(\"/user/verify/token\", data);\n}\n\nexport function getAnotherRegistryProducts(data) {\n  return axiosInstance.post(\"/registry/import\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n    VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL+\"/media/\"\n}\n\nexport const FILTERS = {\n  CATEGORIES_DISPLAY : \"Categories\",\n  PRICE_DISPLAY: \"Price\",\n  PRICE_DISPLAY_1: \"Under $50\",\n  PRICE_DISPLAY_2: \"$50 - $100\",\n  PRICE_DISPLAY_3: \"more than $100\",\n  STORE_DISPLAY: \"Store\",\n  MONICA_AND_ANDY_DISPLAY: \"Monica + Andy\",\n  ELSEWHERE_DISPLAY: \"Elsewhere\",\n  AVAILABLE_DISPLAY: \"Available\",\n  RESERVED_DISPLAY: \"Reserved\",\n  PURCHASED_DISPLAY: \"Purchased\",\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'http%3A%2F%2Flocalhost%3A5500%2Fbaby_registry_bookmarklet%2Fbookmarklet.html%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"\n\nexport const IMPORT_REGISTRY_EMAIL = \"storks@monicaandandy.com\"","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    }\n  }\n}\n`\n\nconst REGISTER_USER = `\nmutation register_user($name: String!, $email: String!, $password: String!){\n  registerUser(registerInput:{\n      firstName:$name,\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\nconst SAVE_QUESTION_RESPONSE = `\nmutation addRegistryQuestionOption($registryId: Int!, $answers: [RegistryQuestionOptionInput]!, $returnTo: String){\n  addRegistryMultipleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $answers, returnTo: $returnTo){\n    message,\n    redirectionUrl\n  }\n}\n`\n\nconst SAVE_REGISTRY_DATA = `\nmutation saveRegistryData($registryData:RegistryInput!, $registryItems:[StoreInput]){\n  importRegistry(registryData: $registryData, registryItems: $registryItems) {\n    message\n  }\n}\n`\n\nconst LOGIN_USER = `\nmutation login_user($email: String!, $password: String!){\n  loginUser(loginInput:{\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\n\nconst ADD_PARTNER_ACCOUNT = `\nmutation addPartner($partnerDetail: AddPartnerAccountInput!){\n  addPartnerAccount(addPartnerAccountInput:$partnerDetail){\n    message\n  }\n}\n`\n\nconst SAVE_UPDATED_CHECKLIST = `\nmutation addDesiredChecklistItemCount($registryId:Int!, $itemCountData:[DesiredItemCountInput]!){\n  addDesiredChecklistItemCount(registryId: $registryId, itemCountData: $itemCountData){\n    message\n  }\n}\n`\n\nconst SAVE_SINGLE_QUESTION_RESPONSE = `\nmutation updateOrCreateRegistrySingleQuestionOption($registryId:Int!, $registryQuestionOptionInput: RegistryQuestionOptionInput!){\n  updateOrCreateRegistrySingleQuestionOption(registryId: $registryId, registryQuestionOptionInput: $registryQuestionOptionInput){\n    message\n  }\n}\n`\n\nconst CREATE_REGISTRY = `\nmutation{\n  createRegistry{\n    registry{\n      id\n    },\n    message,\n    status\n  }\n}\n`\n\nexport {\n  TOGGLE_MUST_HAVE,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY,\n  UPDATE_VIEW_REGISTRY_POISTION,\n  UPDATE_REGISTRY_URL,\n  SAVE_REGISTRY_DATA,\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  SAVE_UPDATED_CHECKLIST,\n  SAVE_SINGLE_QUESTION_RESPONSE,\n  CREATE_REGISTRY\n};\n","import React from \"react\";\nimport {\n  GET_PRODUCTS,\n  REMOVE_REGISTRY_ITEM,\n  GET_CATEGORIES,\n  GET_REGISTRIES,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  GET_QUESTIONS,\n  GET_GUEST_REGISTRY,\n  GET_PERSONALIZE_QUESTIONS\n} from \"../api/queries\";\nimport {graphQL, graphQLNoToken} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX} from \"./constants\";\nimport {\n  setRegistryProducts,\n  setCheckListItems,\n  toggleMustHaveProduct as toggleMustHaveProductAction\n} from \"../modules/my-registry/MyRegistryActions\";\nimport {CREATE_REGISTRY, TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION} from \"../api/mutations\";\nimport {setOnboardingRegistry, updateRegistryInfo} from \"../modules/registry/RegistryActions\";\nimport {setViewRegistryProducts} from \"../modules/view-registry/ViewRegistryActions\";\nimport {addOnboardingQuestion} from \"../modules/onboarding/OnboardingAction\";\nimport {addPersonalizeQuestion} from \"../modules/personalise-checklist/PersonaliseCheckListActions\";\nimport {updateGuestViewInfo} from \"../modules/guest-view/GuestViewAction\";\nimport {toast} from \"react-toastify\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    let responseData = res.data.data.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = {...item.node}\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n    // TODO: change category\n    let finalData = responseData.filter(product => product.registryCategories.length > 0)\n    dispatch(setRegistryProducts(finalData))\n\n  }).catch(err => {\n    console.error(err.response)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch,) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n\n      toast.error((\n        <p><b>{card.title}</b> removed from your registry!</p>\n      ))\n\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n    toast.error((\n      <p>Some error occurred.</p>\n    ))\n  })\n}\n\nexport const getRefinedCategory = (category) => {\n  return ({\n    id: category.id,\n    categoryName: category.category.categoryName,\n    isDesired: category.isDesired,\n    isExcluded: category.isExcluded,\n    isDefaultVisible: category.isDefaultVisible,\n    addedItemsCount: category.addedItemsCount,\n    totalItemsCount: category.totalItemsCount,\n    isParent: category.category.isParent,\n  })\n}\n\n\n// Get all categories\nexport const getAllCategories = (registryCategories, getAll) => {\n  let parentCategories = registryCategories.filter(category => getAll ? true : !category.isExcluded)\n  let finalCategories = parentCategories.map(parentCategory => {\n    let newParentCategory = getRefinedCategory(parentCategory)\n    let subCategory = parentCategory.registrySubCategories;\n    delete parentCategory.registrySubCategories\n    let newSubCategories = subCategory.filter(cat => getAll ? true : !cat.isExcluded)\n    newSubCategories = newSubCategories.map(cat => {\n      let refinedSubCate = getRefinedCategory(cat)\n      let subProductTypes = cat.registrySubProductTypes.map(subProduct => getRefinedCategory(subProduct))\n      refinedSubCate['subProductTypes'] = subProductTypes.filter(category => getAll ? true : !category.isExcluded)\n      return refinedSubCate\n    })\n    newParentCategory['subCategories'] = newSubCategories\n    return newParentCategory\n  })\n\n  return finalCategories\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    operationName: \"getCategories\",\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n      let finalCategories = getAllCategories(res.data.data.registryCategories, false)\n      if (finalCategories.length === 0) {\n        let allCategories = getAllCategories(res.data.data.registryCategories, true)\n        dispatch(setCheckListItems(allCategories))\n      } else {\n        dispatch(setCheckListItems(finalCategories))\n      }\n    }\n  })\n}\n\nexport const updateRegistryDetailState = (dispatch, registryData) => {\n  let currentRegistryInfo = null;\n\n  currentRegistryInfo = registryData[0].node;\n  if (currentRegistryInfo.image) {\n    currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n  }\n\n  if (currentRegistryInfo) {\n    dispatch(updateRegistryInfo({...currentRegistryInfo}))\n  } else {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.log(\"No registry found!\");\n  }\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        updateRegistryDetailState(dispatch, res.data.data.registries.edges)\n      } else {\n        dispatch(updateRegistryInfo({notFound: true}))\n      }\n    } catch (e) {\n      dispatch(updateRegistryInfo({notFound: true}))\n      console.error(e)\n    }\n  }).catch(err => {\n    dispatch(updateRegistryInfo({notFound: true}))\n    console.error(err.response ? err.response.data : null)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, oldPosition, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      dispatch(setViewRegistryProducts(oldPosition))\n      toast.error(\"Somerhing went wrong while re-arranging Products\")\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    }\n\n  }).catch(err => {\n    dispatch(setViewRegistryProducts(oldPosition))\n    console.error(err.message)\n  })\n}\n\nexport const addProductHandler = (card, stateAddedProducts, stateRegistryInfo, dispatch) => {\n  let existingProduct = stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n  const registryId = parseInt(stateRegistryInfo.id)\n  if (existingProduct.length === 0) {\n    const title = card.title\n    const category = card.category.id\n    const storeItemUrl = card.onlineStoreUrl\n    const sku = card.variants.edges[0].node.sku\n    const price = parseFloat(card.variants.edges[0].node.price)\n    const quantity = parseInt(card.quantity)\n    const shopifyItemId = card.id\n    const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      variables: {\n        registryId: registryId,\n        title: title,\n        category: category,\n        tags: [],\n        storeItemUrl: storeItemUrl ? storeItemUrl : '',\n        sku: sku,\n        price: price,\n        quantity: quantity,\n        shopifyItemId: shopifyItemId,\n        imageUrl: imageUrl,\n      }\n    }\n    graphQL(data).then(_ => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  } else {\n    let data = {\n      query: UPDATE_REGISTRY_ITEM,\n      variables: {\n        registryItemId: existingProduct[0].id,\n        quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n      }\n    }\n    graphQL(data).then(res => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  }\n}\n\nexport const getOnboardingQuestions = (dispatch) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: false\n    }\n  }\n\n  graphQLNoToken(reqData).then(res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addOnboardingQuestion(questions))\n    }\n  }).catch(err => {\n    // toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\n\nexport const getPersonalizeQuestions = (registryId, dispatch) => {\n  let reqData = {\n    query: GET_PERSONALIZE_QUESTIONS,\n    variables: {\n      registryId: registryId,\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.editablePersonalizeQuestions) {\n      const questions = res.data.data.editablePersonalizeQuestions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0) {\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addPersonalizeQuestion(questions))\n    }\n  }).catch(err => {\n    toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}\n\nexport const updateGuestViewRegistry = (urlSlug, dispatch) => {\n  let reqData = {\n    query: GET_GUEST_REGISTRY,\n    variables: {\n      urlSlug: urlSlug\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.registryAsGuest) {\n      dispatch(updateGuestViewInfo(res.data.data.registryAsGuest))\n    }\n  }).catch(err => {\n    dispatch(updateGuestViewInfo({notFound: true}))\n    if (err.response && err.response.data.errors) {\n      for (const error of err.response.data.errors) {\n        // TODO: Implement toast if necessary\n        console.log(error.message)\n      }\n    }\n  })\n}\n\nexport const createRegistry = dispatch => {\n  graphQL({query: CREATE_REGISTRY}).then(res => {\n    if (res.data.data) {\n      let registryId = res.data.data.createRegistry.registry.id\n      if (registryId) {\n        dispatch(setOnboardingRegistry(registryId))\n      }\n    }\n  }).catch(err => {\n    console.log(err.response)\n  })\n}","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = React.forwardRef((props, ref) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n    ref={ref}\n    disabled={props.disabled ? props.disabled : false}\n  >{props.children}</button>\n})\n\nexport default ButtonComponent;","import React, {useState} from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport CardItem from \"../card-item/CardItem\";\nimport {addProductHandler} from 'utils/commonFunction';\nimport Button from \"../button-component/ButtonComponent\";\n\nconst AddedCard = (props) => {\n\n  const dispatch = useDispatch();\n  let stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRecommendedProducts = useSelector(state => state.myRegistry.recommendedProducts)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const [recommendedProducts, setRecommendedProducts] = useState([])\n  const [show, setShow] = useState(false);\n  const modalTitle = `Recommended ${props.data.registryCategories[0].category.categoryName}`\n  const [showRemoveModel, setShowRemoveModel] = useState(false);\n\n  const showRecommendation = (category) => {\n    // Fetching all recommendations for that particular product category\n    let categoryRecommended = [...stateRecommendedProducts.filter(product => Number(category.id) === Number(product.category.id))]\n\n    // Removing duplicate products if found any\n    let jsonObject = categoryRecommended.map(JSON.stringify);\n    let uniqueSet = new Set(jsonObject);\n    categoryRecommended = Array.from(uniqueSet).map(JSON.parse);\n\n    setRecommendedProducts(categoryRecommended.map(product => {\n      // Resetting recommended product quantity\n      product.quantity = 1;\n      return product;\n    }));\n\n    setShow(true);\n  }\n\n  const moreOptionsData = [\n    {\n      name: \"View Recommendations\",\n      action: () => showRecommendation(props.data.item.category)\n    },\n    {\n      name: \"Remove\",\n      action: () => setShowRemoveModel(true)\n    }\n  ]\n\n  const removeConfirmFooter = (\n    <>\n      <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => setShowRemoveModel(false)}>Do not\n        remove</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={() => {\n        props.removeProductFromCartHandler();\n        setShowRemoveModel(false);\n      }}>Remove</Button>\n    </>\n  )\n\n  // Incrementing quantity of local recommended product\n  const incrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        product.quantity += quantity;\n      }\n      newRecommended.push(product)\n    }\n    setRecommendedProducts(newRecommended)\n  }\n\n  // Decrementing quantity of local recommended product\n  const decrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    let updated = false;\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        if (product.quantity - quantity <= 0) {\n          break;\n        } else {\n          product.quantity -= quantity;\n          updated = true;\n        }\n      }\n      newRecommended.push(product)\n    }\n\n    if (updated) {\n      setRecommendedProducts(newRecommended)\n    }\n  }\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i\n    className={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", (props.disabledDrag || stateFilterApplied.length !== 0) ? \"disabled-drag\" : \"\"].join(\" \")}>\n    <div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n      <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n    </div>\n  </i>);\n\n  return (\n    <>\n      <div className=\"added-card py-5 pr-2\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.title}/>\n          </div>\n          <div className=\"col\">\n          {/* TODO: change category */}\n            <div className=\"text-sm category\">{props.data.registryCategories[0].category.categoryName}</div>\n            <h2>{props.data.title}</h2>\n            <div className=\"d-flex mt-2\">\n              <div className=\"\">${props.data.item.price}</div>\n              {/*/!* TODO: Add Strikeout price dynamic *!/*/}\n              {/*<div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>*/}\n              {props.data.quantity > 1 ?\n                <div className=\"ml-4 text-body d-flex\">\n                  Qty:{props.data.quantity}\n                  <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n                </div> : <></>}\n            </div>\n          </div>\n          <div className={[\n            props.draggable ? \"col-4\" : \"col-3\",\n          ].join(\" \")}\n          >\n            <div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n              {!stateGuestViewRegistry ?\n                <button\n                  className={[\n                    \"mr-4 d-flex align-items-center added-gift-must-have-btn px-2\",\n                    props.data.mostWanted ? \"added-gift-must-have-active\" : \"added-gift-must-have-not-active\"\n                  ].join(\" \")}\n                  onClick={props.toggleMustHave}\n                >\n                  <i className={[\"icon mr-1 d-block\", props.data.mostWanted ? \"heart-fill\" : \"heart\"].join(\" \")}/>\n                  <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                </button> :\n                props.data.mostWanted ?\n                  <button\n                    className=\"mr-4 d-flex align-items-center added-gift-must-have-btn px-2 added-gift-must-have-active\">\n                    <i className=\"icon mr-1 d-block heart-fill\"/>\n                    <p className=\"text-sm added-gift-must-have-text\">Must Have</p>\n                  </button>\n                  : <></>\n              }\n              {!stateGuestViewRegistry ?\n                <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\"/>\n                : <></>}\n              {/* TODO: Add icon/rearrange icon */}\n              {props.draggable && !stateGuestViewRegistry ?\n                <DragHandle/> : <></>}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* TODO: change category */}\n      <div className=\"row\">\n        <div className=\"col\">\n          {props.data.registryCategories.length > 1 ?\n            props.data.registryCategories.map(category =>\n              props.data.registryCategories[0].id !== category.id ?\n                <div className=\"text-body font-medium p-6 added-card-other-category\">\n                  You have added {props.data.item.quantity > 1 ? props.data.item.quantity : null} {category.category.categoryName} as part of <a className=\"title-link\" tabindex>{props.data.title}</a>\n                </div>\n                : null\n            )\n            : null}\n        </div>\n      </div>\n      <Modal\n        show={show}\n        closeModal={() => setShow(false)}\n        title={modalTitle}\n        size=\"xl\"\n      >\n        <div className=\"position-relative added-card-recommended\">\n          <div className=\"row category-recommended-products\">\n            {recommendedProducts.map((card, index) => (\n              <div className=\"col-4 mb-5\" key={\"CardItem-\" + index}>\n                <CardItem\n                  data={card}\n                  incrementQuantityHandler={() => incrementQuantity(card.id, 1)}\n                  decrementQuantityHandler={() => decrementQuantity(card.id, 1)}\n                  addProductHandler={() => addProductHandler(card, stateAddedProducts, stateRegistryInfo, dispatch)}\n                />\n              </div>\n            ))}\n            {recommendedProducts.length <= 0 ?\n              <div className=\"col text-center py-4\"><h4>No recommendation found</h4></div> : null}\n          </div>\n          {recommendedProducts.length > 0 ? <div className=\"added-card-recommends-bottom-gradient\" /> : null}\n        </div>\n      </Modal>\n      <Modal\n        show={showRemoveModel}\n        size=\"md\"\n        footer={removeConfirmFooter}\n      >\n        <h2>Do you want to remove {props.data.title}? </h2>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddedCard","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\nimport { GET_PERSONALIZE_QUESTIONS } from \"api/queries\";\nimport { graphQL } from \"api/axios\";\nimport { toast } from \"react-toastify\";\n\nclass CheckList extends React.Component {\n\n    gotoPersonalize = (event) => {\n        event.preventDefault();\n        // this.props.history.push(routes.PERSONALIZE.HOME)\n        \n        // If user has given answer or not\n        let isQuizPending = false\n        let reqData = {\n            query: GET_PERSONALIZE_QUESTIONS,\n            variables: {\n                registryId: 1,\n            }\n        }\n        // To route to edit-checklist or Quiz\n        graphQL(reqData).then(res => {\n            if (res.data.data.editablePersonalizeQuestions) {\n                const questions = res.data.data.editablePersonalizeQuestions\n                for (let question of questions) {\n                    if (question.answers.length > 0) {\n                        isQuizPending = false\n                        break;\n                    } \n                }\n                if(isQuizPending){\n                    this.props.history.push(routes.PERSONALIZE.HOME)\n                } else {\n                    this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n                }\n                \n            }\n        }).catch(err => {\n            toast.error(\"Error occurred while fetching questions\");\n            console.error(err);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"mb-6\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <a href=\"#\" className=\"ml-2 text-sm checklist-personalize\" tabindex onClick={(e) => this.gotoPersonalize(e)}>{this.props.t(\"checkList.personalize\")}</a>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\">\n                          <div className=\"check-list-progress mw-100\" style={{width: `${this.props.percentage}%`}}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nexport default withTranslation()(withRouter(CheckList));","import React, { Component } from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport { connect } from 'react-redux';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({ id, categoryName, addedItemsCount, totalItemsCount, subProductTypes }) => {\n      return (\n        <>\n          {subProductTypes.length === 0 ?\n            <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n              onClick={() => this.scrollToCategory(categoryName)}>\n              <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n\n              <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                {(addedItemsCount >= totalItemsCount) && (totalItemsCount !== 0) ?\n                  <div className=\"icon-done\" /> :\n                  (totalItemsCount > 0 ?\n                    <div className='ml-auto mb-auto align-self-end card-progress'>\n                      {addedItemsCount}/{totalItemsCount}\n                    </div>\n                    : null)}\n              </div>\n            </div> :\n            // Todo handle scroll\n            <>\n              <div className=\"card-body-contain align-items-center py-2\" key={categoryName + id}\n                onClick={() => this.scrollToCategory(categoryName)}>\n                <p className=\"mb-0 card-body-header text-sm\">{categoryName}</p>\n              </div>\n              <div className=\"text-sm\">\n                {subProductTypes.map((subProductType, index) => (\n                  <div className=\"sub-product-list d-flex py-2 ml-3 align-items-center\" key={subProductType.categoryName + subProductType.id}>\n                    <div>{subProductType.categoryName}</div>\n                    <div className='ml-auto mb-0 align-self-end text-sm progess-divison'>\n                      {(subProductType.addedItemsCount >= subProductType.totalItemsCount) && (subProductType.totalItemsCount !== 0) ?\n                        <div className=\"icon-done\" /> :\n                        (totalItemsCount > 0 ?\n                          <div className='ml-auto mb-auto align-self-end card-progress'>\n                            {subProductType.addedItemsCount}/{subProductType.totalItemsCount}\n                          </div>\n                          : null)}\n\n                    </div>\n                  </div>\n                ))}\n\n              </div>\n            </>}\n        </>\n      )\n\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        {this.props.item.categoryName && this.props.item.isParent ?\n          <Card>\n            <Accordion.Toggle\n              onClick={this.handleToggleEvent}\n              as={Card.Header}\n              id={this.props.item.categoryName}\n              eventKey={this.props.item.categoryName}\n            >\n              <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n                <span className=\"checklist-icon-arrow\" />\n                <div className=\"ml-3 mb-0 w-100\">\n                  <div className=\"text-body\">{this.props.item.categoryName}</div>\n                  <div className=\"d-flex\">\n                    <div className=\"check-list-hearder-background\">\n                      <div className=\"check-list-hearder-progress mw-100\" style={{ width: `${(this.props.item.addedItemsCount / this.props.item.totalItemsCount) * 100}%` }} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Accordion.Toggle>\n            <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n              <Card.Body>\n                {subListItem}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          :\n          <p className=\"pl-6 mr-3 text-body others-cat\" onClick={() => this.scrollToCategory(this.props.item.categoryName)}>{this.props.item.categoryName}</p>\n        }\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              tabindex\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" tabindex className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a tabindex className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className=\"checkbox d-flex align-items-center mb-4\">\n      <span className=\"checkbox__input mr-2\">\n        <input \n          type=\"checkbox\" \n          name={props.id} \n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n          />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n        <i className=\"icon-check\"></i>                          \n        </span>\n      </span>\n      <span className=\"radio__label text-sm\">{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React, { useState, useEffect } from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport { useSelector } from \"react-redux\";\nimport { getAllCategories } from \"../../../../utils/commonFunction\";\nimport CheckBox from \"../check-box/CheckBox\";\n\n// TODO: Change this Component to handle multiple categories\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [searchedCategories, setSearchedCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(props.currentCategory ? props.currentCategory : []);\n  // const [selectedCategory, setSelectedCategory] = useState([]);\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.registryCategories) {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = { ...category }\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n        }\n        setCategories(finalCheckList);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    props.changeCurrentCategory(selectedCategory)\n    props.closeModal(false);\n  }\n\n  const handleSelectionCategory = (subCategory) => {\n    let sameCatagory = [...selectedCategory].find(category => subCategory.id === category.id)\n    if (sameCatagory) {\n      let allSelectedCategory = selectedCategory.filter(category => subCategory.id !== category.id)\n      setSelectedCategory(allSelectedCategory)\n    }\n    else {\n      let allSelectedCategory = [...selectedCategory, subCategory]\n      setSelectedCategory(allSelectedCategory)\n    }\n  }\n\n  useEffect(() => {\n    if (props.currentCategory) {\n      setSelectedCategory(props.currentCategory)\n    } else {\n      setSelectedCategory([])\n    }\n  }, [props.currentCategory])\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const getCategoriesToDisplay = (cat) => {\n    return (\n      <div className=\"col\">\n        {cat.map(category => {\n          return (\n            <div className=\"mb-6\" key={\"select-\" + category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              <div className=\"category-columns\">\n                {category.subCategories ?\n                  category.subCategories.map(subCategory =>\n                    <div className=\"w-100 category-column\">\n                      <label className=\"checkbox d-flex align-items-center py-1 px-2 m-0\">\n                        <span className=\"checkbox__input mr-2\">\n                          <input\n                            type=\"checkbox\"\n                            name={subCategory.id}\n                            value={subCategory.id}\n                            checked={selectedCategory.find(category => category.id === subCategory.id) ? \"checked\" : \"\"}\n                            onChange={() => handleSelectionCategory(subCategory)}\n                          />\n                          <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                            <i className=\"icon-check\"></i>\n                          </span>\n                        </span>\n                        <span className=\"select_category_radio__label text-body\">{subCategory.categoryName}</span>\n                      </label>\n                    </div>\n                  )\n                  : null}\n              </div>\n\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      {searchedCategories.length > 0 ? getCategoriesToDisplay(searchedCategories) : getCategoriesToDisplay(categories)}\n    </div>\n  )\n\n  const saveButton = (\n    <Button\n      variant=\"primary\"\n      className=\"font-medium p-1\"\n      onClick={saveSelectedCategory}\n    >Done</Button>\n  )\n\n  // Search Category Section\n  const searchInputRef = React.createRef()\n  const changeLinkRef = React.createRef()\n\n  const focusSearchCategoryInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }\n\n  const searchInputFocusHandler = (e) => {\n    if (!e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.add(\"search-category-input-focus\");\n    }\n  }\n\n  const searchInputBlurHandler = (e) => {\n    if (e.target.value.length > 0) {\n      return\n    }\n\n    if (e.target.classList.contains(\"search-category-input-focus\")) {\n      e.target.classList.remove(\"search-category-input-focus\");\n    }\n  }\n\n  const searchCategoryInputChangeHandler = (e) => {\n    if (e.target.value.length > 0) {\n      changeLinkRef.current.style.display = \"block\";\n\n      //  Searching through the category\n      let finalCategories = []\n      for (const parentCategory of categories) {\n        let newParentCategory = { ...parentCategory }\n        newParentCategory.subCategories = []\n        let searchMatched = false\n\n        for (const subCategory of parentCategory.subCategories) {\n          if (subCategory.categoryName.toLowerCase().match(e.target.value.toLowerCase())) {\n            searchMatched = true\n            newParentCategory.subCategories.push(subCategory)\n          }\n        }\n\n        if (searchMatched) {\n          finalCategories.push(newParentCategory)\n          searchMatched = false\n        }\n      }\n      setSearchedCategories(finalCategories)\n    } else {\n      changeLinkRef.current.style.display = \"none\";\n    }\n  }\n\n  const changeLinkClickHandler = (e) => {\n    e.preventDefault();\n    if (searchInputRef.current) {\n      if (searchInputRef.current.value.length > 0) {\n        searchInputRef.current.value = \"\"\n      }\n      changeLinkRef.current.style.display = \"none\";\n      searchInputRef.current.focus()\n      setSearchedCategories([])\n    }\n  }\n\n  const headerContent = (\n    <div className=\"align-self-center d-flex position-relative select-category-search-section mr-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Search category...\"\n        className=\"search-category-input pl-5 py-1 pr-1 text-body m-0\"\n        ref={searchInputRef}\n        onChange={(e) => searchCategoryInputChangeHandler(e)}\n        onFocus={(e) => searchInputFocusHandler(e)}\n        onBlur={(e) => searchInputBlurHandler(e)}\n      />\n      <i className=\"icon-search search-category-icon\" onClick={focusSearchCategoryInput} />\n      <a\n        tabindex\n        className=\"search-category-clear-link text-sm font-medium\"\n        href=\"#\"\n        onClick={(e) => changeLinkClickHandler(e)}\n        ref={changeLinkRef}>Clear all</a>\n    </div>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={saveButton}\n      headerContent={headerContent}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React from \"react\";\nimport \"./CategoryPill.scss\";\n\nconst CategoryPill = (props) => {\n  return (\n    <span className={[\"import-registry-category-pill text-sm p-1\", props.className ? props.className : \"\"].join(\" \")}>\n      {props.name}\n      <i className=\"icon-close remove-category-pill-icon ml-2\" onClick={props.removeCategory}/>\n    </span>\n  );\n}\n\nexport default CategoryPill;\n","import React, { createRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport { setAnotherStoreProductInfo } from \"modules/my-registry/MyRegistryActions\";\nimport { getScrapedProduct } from \"api/axios\";\nimport { toast } from 'react-toastify';\nimport CategoryPill from \"../import-registry/category-pill/CategoryPill\";\n\nconst AddGiftAnotherStore = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n  const [hideProductDetails, setHideProductDetails] = useState(true);\n  const [showLoading, setshowLoading] = useState(false);\n\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          alert(\"File size exceeds the limit\");\n        }\n      } else {\n        alert(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      try {\n        new URL(ev.target.value);\n      } catch {\n        toast.error(\"Invalid Store Url\")\n        return;\n      }\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      setshowLoading(true);\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = { ...productInfo };\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n          setshowLoading(false);\n          setHideProductDetails(false);\n        }\n      }).catch(err => {\n        setshowLoading(false);\n        try {\n          new URL(productInfo.productUrl);\n        } catch {\n          toast.error(\"Invalid Store Url\")\n          return false;\n        }\n      })\n    }\n  }\n\n  const removeSelectedCategory = (categoryId) => {\n    if (productInfo.category.length) {\n      let finalcategory = productInfo.category.filter(category => category.id !== categoryId);\n      let prodInfo = { ...productInfo };\n      prodInfo.category = finalcategory;\n      dispatch(setAnotherStoreProductInfo(prodInfo));\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm font-medium add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                onKeyUp={(ev) => submitStoreUrl(ev)}\n                placeholder=\"Paste a product link that you want to add in your Monica and Andy Registry\" />\n              {/* <a className=\"text-sm\" href=\"#\">Change</a> */}\n            </div>\n          </div>\n\n          <div className={[\"row mt-4\", hideProductDetails ? \"\" : \"pt-6\"].join(\" \")}>\n            {hideProductDetails ? showLoading ?\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                  <h4 className=\"hide-product-details m-auto\">Please wait while we fetch the product details</h4>\n                </div>\n              </div>\n              :\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <h4 className=\"hide-product-details m-auto\">Please paste product link above to view details here</h4>\n                </div>\n              </div>\n              :\n              <>\n                <div className=\"col-5 add-gift-image-select\">\n                  <div className=\"mr-3\">\n                    {productImage.value ?\n                      <img\n                        src={productImage.value}\n                        alt=\"Product Image\"\n                      />\n                      : null}\n\n                    <i className=\"icon-preview p-1\" onClick={() => {\n                      imageInput.current.click()\n                    }} />\n                    {/* TODO: Change above icon to camera icon */}\n\n                    <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                      onChange={(ev) => selectFileHandler(ev)} />\n                  </div>\n                </div>\n                <div className=\"col-7\">\n                  <div className=\"ml-3\">\n                    <div className=\"row\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Product Name</p>\n                        <textarea\n                          className=\"w-100 mt-1 h1 p-2\"\n                          rows=\"2\"\n                          defaultValue={productName}\n                          onChange={(ev) => productNameChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container mr-2\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Price</p>\n                          <div className=\"price-input mt-1\">\n                            <input\n                              type=\"text\"\n                              className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                              value={price}\n                              onChange={(ev) => priceChangeHandler(ev)}\n                            />\n                          </div>\n                          {/*<span className=\"price-input text-body\">$</span>*/}\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container\">\n                          <p className=\"text-sm font-medium add-gift-store-label\">Quantity</p>\n                          <Counter\n                            className=\"mt-2\"\n                            counter={quantity}\n                            incrementHandler={incrementQuantity}\n                            decrementHandler={decrementQuantity}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    {!props.addMyOwn ?\n                      <>\n                        <div className=\"row mt-5\">\n                          <div className=\"col d-flex\">\n                            <p className=\"text-sm add-gift-store-label font-medium mb-1\">Category</p>\n                            <a className=\"text-sm ml-2 add-gift-link font-medium\" href=\"#\" tabindex onClick={(ev) => openCategorySelect(ev)}>Add</a>\n                            {/* <div className=\"position-relative\">\n                            <input type=\"text\" value={category.displayName} readOnly={true}\n                                   className=\"w-100 pl-2 pr-12 py-1 text-body input-background change-link-input\"/>\n                          </div> */}\n                          </div>\n                        </div>\n                        <div className=\"row mt-2\">\n                          <div className=\"col\">\n                            {category.map(cat => (\n                              <CategoryPill\n                                key={cat.id}\n                                name={cat.categoryName}\n                                removeCategory={() => removeSelectedCategory(cat.id)}\n                                className=\"mt-2 mr-3\"\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      </>\n                      : null}\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col d-flex\">\n                        <TogglePills\n                          iconClass=\"icon-heart\"\n                          activeClass={mustHave ? \"active-must-have\" : null}\n                          onClick={() => toggleMustHave(!mustHave)}\n                          text=\"Must Have\"\n                          className=\"mr-2\" />\n                        <TogglePills\n                          iconClass=\"icon-guest\"\n                          activeClass={groupGift ? \"active-group-gift\" : null}\n                          onClick={() => toggleGroupGift(!groupGift)}\n                          text=\"Group Gift\"\n                          className=\"mr-2\" />\n                        {/* TODO: Change above guest icon one added */}\n                        <TogglePills\n                          iconClass=\"icon-shopping-cart\"\n                          activeClass={purchased ? \"active-purchased\" : null}\n                          onClick={() => togglePurchased(!purchased)}\n                          text=\"Purchased\"\n                          className=\"mr-2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">How to gift?</p>\n                        {howToGiftOptions.map((option, index) => (\n                          <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                            <RadioButton\n                              name=\"how-to-gift\"\n                              textClass=\"text-sm\"\n                              display={option.text}\n                              checked={option.id === howToGift.id ? true : null}\n                              changeHandler={() => changeHowToGift(option)} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm font-medium add-gift-store-label\">Notes</p>\n                        <textarea className=\"w-100 mt-1 text-body p-1\"\n                          rows=\"2\"\n                          placeholder=\"Write a note for your friends and family\"\n                          defaultValue={note}\n                          onChange={(ev) => noteChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","import React, {Component} from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  clearAnotherStoreProductInfo, setAnotherStoreProductInfo,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport {connect} from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {ADD_REGISTRY_ITEM, UPDATE_REGISTRY_ITEM} from 'api/queries';\nimport {graphQL} from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport {toast} from \"react-toastify\";\nimport {ADD_REGISTRY_ITEM as ADD_REGISTRY_ITEM_MUTATION} from 'api/mutations';\nimport BookmarkletSection from \"../add-gift/bookmarklet-section/BookmarkletSection\";\nimport AddGiftAnotherStore from \"../add-gift/add-gift-another-store/AddGiftAnotherStore\";\nimport Button from \"../button-component/ButtonComponent\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {getProducts as commonGetProducts, getCategories as commonGetCategories} from \"../../../../utils/commonFunction\";\n\nclass ViewRecommend extends Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n  cardRef = React.createRef()\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const shopifyItemId = card.id\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          // TODO: change category\n          category: [Number(category)],\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          imageUrl: imageUrl,\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    }\n  }\n\n  // Checking if product data is valid or not\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // // Valid Category\n    // if (!storeProduct.category.id) {\n    //   alert(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  // Adding Add on my own product to registry\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM_MUTATION,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            // TODO: change category\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  // Popping up Add on my own modal\n  addOnMyOwnClickHandler = (category) => {\n    this.clearModalData()\n    let newCategory = [{\n      ...category,\n      displayName: category.parentCategory + \" : \" + category.categoryName\n    }]\n    let prodInfo = {...this.props.stateAnotherStoreProduct};\n    prodInfo.category = newCategory;\n    this.props.dispatch(setAnotherStoreProductInfo(prodInfo));\n\n    this.modalTitle = `Add my own ${category ? category.categoryName.toLowerCase() : \"\"}`\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore addMyOwn={true}/>\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      show: !prevState.show\n    }))\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\"/>\n      </button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\"/>\n      </button>\n    };\n    return (\n      <>\n        <div className=\"recommended-cart my-6\">\n          <div className=\"row\">\n            <div className=\"col title\"><h2>{this.props.title}\n              {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n            </h2>\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Slider {...settings}>\n              {this.props.products.map((card, index) =>\n                // <div><>{index}</></div>\n                <div className=\"cart-view\" ref={this.cardRef}>\n                  <CardItem\n                    className=\"mr-4\"\n                    data={card}\n                    key={\"CardItem-\" + index}\n                    incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                    decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                    addProductHandler={() => this.addProductHandler(card)}\n                  />\n                </div>\n              )}\n              <div>\n                <div className=\"add-my-own-card mr-4 d-flex flex-column align-items-center justify-content-center\"\n                     style={{height: this.cardRef.current ? this.cardRef.current.offsetHeight + 'px' : '200px'}}\n                     onClick={() => this.addOnMyOwnClickHandler(this.props.category)}\n                >\n                    <button className=\"add-my-own-button\"/>\n                    <p className=\"text-body font-medium mt-5\">Add my own</p>\n                </div>\n              </div>\n            </Slider>\n          </div>\n          <div className=\"mt-6 card-buttom d-flex\">\n            {/* TODO: Change text to dynamic */}\n            <div>\n              <img className=\"blog-img\"\n                   src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\"\n                   alt={this.props.title}/>\n            </div>\n            <div className=\"pl-4 my-auto\">\n              <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n              <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n            </div>\n            <div className=\"text-sm my-auto mr-6 ml-auto\">\n              <a href=\"\" className=\"read-more\" tabindex>Read more</a>\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n      ;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info,\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {setParentFilter, setChildFilter, clearFilter} from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\"/>\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                  <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                    {parentFilter.child.map(childFilter => (\n                      <CheckBox\n                        {...childFilter}\n                        key={childFilter.id}\n                        checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                        changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                      />\n                    ))}\n                  </div>\n                )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n                  onClick={clearClickHandler}\n                  variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./ImportRegistry.scss\";\nimport { getAnotherRegistryProducts } from \"../../../../../api/axios\";\nimport { toast } from \"react-toastify\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport CategoryPill from \"./category-pill/CategoryPill\";\nimport { connect } from \"react-redux\";\nimport { setAnotherStoreRegistryItems } from \"../../../../my-registry/MyRegistryActions\";\n\nclass ImportRegistry extends React.Component {\n  state = {\n    registryUrl: \"\",\n    errorMessage: \"\",\n    loading: false,\n    categoryModalShow: false,\n    activeCategoryProductIndex: null,\n    currentRegistryLink: \"\",\n    inputHasFocus: false,\n    currentCategory: [],\n  }\n\n  inputRef = React.createRef()\n\n  setCategoryModalVisible = () => {\n    this.setState({ categoryModalShow: false, currentCategory:[] })\n  }\n\n  changeLoadingState = (value) => {\n    this.setState({\n      loading: value\n    })\n  }\n\n  registryUrlChangeHandler = (ev) => {\n    this.setState({\n      registryUrl: ev.target.value,\n      errorMessage: \"\"\n    })\n  }\n\n  checkUrlAndGetRegistryItems = () => {\n    // Checking for valid url\n    try {\n      new URL(this.state.registryUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return;\n    }\n\n    this.getAnotherRegistryProductsInfo();\n  }\n\n  registryUrlKeyUpHandler = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      this.checkUrlAndGetRegistryItems()\n    }\n  }\n\n  getAnotherRegistryProductsInfo = () => {\n\n    this.setState({\n      currentRegistryLink: this.state.registryUrl\n    })\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = true;\n    }\n\n    const registryUrl = new URL(this.state.registryUrl);\n    const storeName = registryUrl.hostname.split(\".\")[1]\n\n    const reqData = {\n      store_name: storeName,\n      store_url: this.state.registryUrl\n    }\n\n    this.changeLoadingState(true);\n\n    getAnotherRegistryProducts(reqData).then(res => {\n      try {\n        if (res.data) {\n          const products = res.data.products;\n          const registry = res.data.registry;\n\n          if (products && registry) {\n            let newProducts = products.filter(product => product.title)\n            newProducts = newProducts.map(product => {\n              product.categories = [];\n              return product;\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n            // this.setState({\n            //   products: newProducts\n            // })\n          } else {\n            this.setState({\n              errorMessage: \"No registry found. Please check url or make sure that registry is publicly accessible\"\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems([]))\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        toast.error(\"Some error occurred while reading registry products.\")\n      }\n\n    }).catch(err => {\n      toast.error(\"Some error occurred while fetching registry.\")\n      console.error(err);\n    }).finally(() => {\n      this.changeLoadingState(false)\n    })\n  }\n\n  openSelectCategoryModal = (ev, productIndex) => {\n    ev.preventDefault()\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      this.setState({\n        activeCategoryProductIndex: productIndex,\n        categoryModalShow: true,\n        currentCategory: this.props.stateAnotherStoreRegistry[productIndex].categories\n      })\n    } else {\n      console.log(\"Invalid Product Index\");\n    }\n  }\n\n  setProductCategories = (categories) => {\n    // Saving categories passed from SelectCategory Modal\n    if (Number.isInteger(this.state.activeCategoryProductIndex) && this.props.stateAnotherStoreRegistry[this.state.activeCategoryProductIndex]) {\n      let newProductState = [...this.props.stateAnotherStoreRegistry];\n      // TODO: Change this to support multiple categories\n      newProductState[this.state.activeCategoryProductIndex].categories = categories;\n      this.props.dispatch(setAnotherStoreRegistryItems(newProductState))\n      this.setState({\n        activeCategoryProductIndex: null\n      })\n    }\n  }\n\n  removeSelectedCategory = (productIndex, categoryId) => {\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      let newProducts = [...this.props.stateAnotherStoreRegistry]\n      newProducts[productIndex].categories = newProducts[productIndex].categories.filter(category => category.id !== categoryId);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n      // this.setState({\n      //   products: newProducts\n      // })\n    }\n  }\n\n  changeRegistryUrl = (e) => {\n    e.preventDefault();\n    if (this.inputRef.current) {\n      this.inputRef.current.disabled = false;\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"baby-registry-import-registry\">\n          <div className=\"row mt-5\">\n            <div className=\"col d-flex flex-column\">\n              <span className=\"baby-registry-required-field text-sm font-medium\">Registry URL</span>\n              <div className=\"position-relative mt-1\">\n                <input type=\"text\"\n                  className={[\"import-registry-input-field w-100 mb-0 mw-100 text-body pl-2 py-1 pr-14\", this.state.errorMessage ? \"import-registry-error-field\" : \"\"].join(\" \")}\n                  placeholder=\"Paste your registry URL here to import.  Please ensure it's publicly accessible.\"\n                  value={this.state.registryUrl}\n                  ref={this.inputRef}\n                  onChange={this.registryUrlChangeHandler.bind(this)}\n                  onFocus={() => this.setState({ inputHasFocus: true })}\n                  onBlur={() => this.setState({ inputHasFocus: false })}\n                />\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink === this.state.registryUrl && !this.state.inputHasFocus ?\n                  <a tabindex className=\"import-registry-change-link text-sm font-medium import-registry-category-link\" href=\"#\"\n                    onClick={(e) => this.changeRegistryUrl(e, this.inputRef)}>Change</a> : null}\n\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink !== this.state.registryUrl ?\n                  <div className=\"import-registry-submit-url-section\">\n                    {/*TODO: Change icons once added to global icons*/}\n                    <button className=\"icon-close mr-3\"\n                      onClick={() => this.setState({ registryUrl: \"\" })} />\n                    <button className=\"icon-check\" onClick={this.checkUrlAndGetRegistryItems} />\n                  </div>\n                  : null}\n              </div>\n              {this.state.errorMessage ?\n                <span className=\"import-registry-input-error-message text-body mt-1\">{this.state.errorMessage}</span>\n                : null}\n            </div>\n          </div>\n\n          <div className=\"row baby-registry-import-section mt-6\">\n            <div className=\"col\">\n              {this.props.stateAnotherStoreRegistry.length <= 0 || this.state.loading ?\n                // When no product exists\n                <div className=\"py-20 text-center import-registry-main-content\">\n                  {this.state.loading ?\n                    <>\n                      <div className=\"spinner-border import-registry-spinner\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                      <h4 className=\"mt-1 mx-auto import-registry-loading-text\">Please wait while we’re importing your\n                        registry</h4>\n                    </>\n                    :\n                    <h4 className=\"mx-auto import-registry-no-content-text\">\n                      Please paste your publicly accessible\n                      registry URL above to import items\n                      to M+A.\n                    </h4>\n                  }\n                </div>\n                :\n                // When products is filled\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"import-registry-main-content d-flex flex-column import-registry-products\">\n                      <div className=\"d-flex import-registry-products-column \">\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Items</p>\n                        </div>\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Category: Item</p>\n                        </div>\n                      </div>\n\n\n                      {this.props.stateAnotherStoreRegistry.map((product, index) => (\n                        <div className=\"d-flex import-registry-products-column\" key={\"Product-\" + index}>\n                          <div className=\"w-50 px-3\">\n                            <p className=\"py-3 text-body\">{product.title}</p>\n                          </div>\n                          <div className=\"w-50 px-3\">\n                            {product.categories.length <= 0 ?\n                              <div className=\"py-3\">\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Select category</a>\n                              </div>\n                              :\n                              <div className=\"pb-2\">\n                                {product.categories.map(category => (\n                                  <CategoryPill\n                                    key={category.id}\n                                    name={category.categoryName}\n                                    removeCategory={() => this.removeSelectedCategory(index, category.id)}\n                                    className=\"mt-2 mr-3\"\n                                  />\n                                ))}\n\n                                <a tabindex href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                  onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Add</a>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n          <SelectCategory\n            showModal={this.state.categoryModalShow}\n            closeModal={this.setCategoryModalVisible}\n            changeCurrentCategory={this.setProductCategories}\n            currentCategory={this.state.currentCategory}\n          />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ImportRegistry);","import React from 'react';\nimport \"./AddGift.scss\";\nimport { connect } from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport ImportRegistry from \"./import-registry/ImportRegistry\";\nimport { clearAnotherStoreProductInfo, setAnotherStoreRegistryItems } from \"modules/my-registry/MyRegistryActions\";\nimport { ADD_REGISTRY_ITEM, SAVE_REGISTRY_DATA } from \"../../../../api/mutations\";\nimport { graphQLMultipart as graphQL, graphQL as jsonGraphQL } from \"../../../../api/axios\";\nimport { getProducts, getCategories } from \"utils/commonFunction\";\nimport { toast } from \"react-toastify\";\nimport {IMPORT_REGISTRY_EMAIL} from \"../../../../utils/constants\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n    this.props.dispatch(setAnotherStoreRegistryItems([]));\n  }\n\n  dataURItoBlob = (dataURI, fileType, fileName) => {\n    let byteString = atob(dataURI.split(',')[1]);\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    let blob = new Blob([ab], { type: fileType });\n    return new File([blob], fileName, {\n      type: fileType\n    })\n  }\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      toast.error(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      toast.error(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      toast.error(\"Invalid Quantity\");\n      return false;\n    }\n\n    // TODO: if necessary Valid Category\n    // if (!storeProduct.category.id) {\n    //   toast.error(\"Invalid Category\");\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"registryCategories\": storeProduct.category.length > 0 ? storeProduct.category.map(category => Number(category.id)) : null,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.clearModalData()\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Cash Funds</h4></div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name} />\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection />\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n                onClick={this.importRegistry}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  validImportRegistryData = (registryItems) => {\n    if (registryItems.length <= 0) {\n      toast.error(\"No Item found\");\n      return false;\n    }\n    // TODO: if necessary Valid Category\n    // for (const item of registryItems) {\n    //   if (item.categories.length <= 0) {\n    //     toast.error(\"Please select category for all product\");\n    //     return false;\n    //   }\n    // }\n    return true;\n  }\n\n  getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  getCleanedRegistryItems = (registryItems) => {\n    let cleanedRegistryItems = []\n    for (const item of registryItems) {\n      // TODO: Handle multiple store for single product\n      const itemStore = item.stores[0]\n      if (cleanedRegistryItems.find(el => el.storeName ? el.storeName === itemStore.name : false)) {\n        cleanedRegistryItems = cleanedRegistryItems.map(el => {\n          if (el.storeName === itemStore.name) {\n            if (el.items) {\n              el.items.push({\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              })\n            } else {\n              el['items'] = [{\n                title: item.title,\n                // TODO: change category\n                registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              }]\n            }\n            if (item.img) {\n              el.items[el.items.length - 1]['imageUrl'] = item.img\n            }\n          }\n          return el;\n        })\n      } else {\n        let newStore = {\n          storeName: itemStore.name,\n          items: [{\n            title: item.title,\n            // TODO: change category\n            registryCategories: item.categories.length > 0 ? item.categories.map(category => Number(category.id)) : null,\n            quantity: 1,\n            tags: [],\n            price: this.getRefinedPrice(itemStore.price)\n          }]\n        }\n\n        if (item.img) {\n          newStore.items[newStore.items.length - 1]['imageUrl'] = item.img\n        }\n        cleanedRegistryItems.push(newStore)\n      }\n    }\n\n    return cleanedRegistryItems;\n  }\n\n  importRegistryClickHandler = () => {\n    if (!this.validImportRegistryData(this.props.stateAnotherStoreRegistry)) {\n      return;\n    }\n\n    const registryItems = this.getCleanedRegistryItems(this.props.stateAnotherStoreRegistry)\n    if (registryItems.length > 0) {\n      const reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          \"registryId\": this.props.stateRegistryInfo.id,\n          \"input\": registryItems\n        }\n      }\n      jsonGraphQL(reqData).then(res => {\n        if (res.data.data.addRegistryItems) {\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n          toast.success(\"Registry items imported successfully\");\n          this.clearModalData();\n          this.modalCloseHandler();\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection />\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore />\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  importRegistry = () => {\n    this.clearModalData()\n    this.modalTitle = \"Import Registry\"\n    this.modalBody = <ImportRegistry />\n\n    this.modalFooterButtons = (\n      <>\n        {/*TODO: change href of email us link*/}\n        <a href={\"mailto:\"+IMPORT_REGISTRY_EMAIL} tabindex target='_blank' className=\"mr-auto import-registry-email-link text-sm font-medium\">Email Us For Help</a>\n        {/*TODO: Integrate API when multiple category is supported*/}\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.importRegistryClickHandler}\n        >Import</Button>\n      </>\n    )\n\n    this.setState((prevState, _) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n            <span className=\"font-medium text-sm\">What is Add Gift?</span>\n            <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save\n              in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport { graphQL, getRecommendation } from 'api/axios';\nimport { GET_RECOMMENDATIONS } from 'api/queries';\nimport { TOGGLE_MUST_HAVE } from 'api/mutations';\nimport { getProducts, removeProductFromCartHandler, getCategories } from \"utils/commonFunction\";\nimport { Cookies } from \"react-cookie\";\nimport config from \"api/config\";\nimport axios from \"axios\";\n\n\nclass Everything extends Component {\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n\n\n  setAllRecommendation = async (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          ...category,\n          parentCategory: parentCat.categoryName,\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      // for (let i = 0; i <= 5; i++) {\n      // let recommendedCat = recommendedCategory[i]\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.categoryName\n        }\n      }\n      const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\n      const cookies = new Cookies();\n\n      await axios.get(apiURL + 'items', {\n        params: data,\n        headers: { \"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\" }\n      })\n        .then(res => {\n          let rData = res.data.data.products.edges.map(item => {\n            let resData = { ...item.node }\n            resData['quantity'] = 1\n            resData['category'] = recommendedCat\n            return resData\n          })\n          // count = count + 1;\n          if (rData.length !== 0) {\n            this.props.dispatch(addRecommendedProduct(rData))\n          }\n        }).catch(err => {\n          console.error(err.message)\n        })\n\n\n      // getRecommendation({ params: data }).then(res => {\n      //   let rData = res.data.data.products.edges.map(item => {\n      //     let resData = { ...item.node }\n      //     resData['quantity'] = 1\n      //     resData['category'] = recommendedCat\n      //     return resData\n      //   })\n      //   // count = count + 1;\n      //   this.props.dispatch(addRecommendedProduct(rData))\n      // }).catch(err => {\n      //   console.error(err.message)\n      // })\n      //   )\n      // ))\n      // count = count + 1;\n      // }\n      // else {\n      //   break;\n      // }\n    }\n  }\n\n  getSortedProducts = (addedProducts, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    let allProducts = []\n    let productCount = 0;\n    let categories = []\n    for (let parentCat of stateCategories) {\n      if (!parentCat.isParent) {\n        categories.push({\n          id: parentCat.id,\n          name: parentCat.categoryName,\n          added: parentCat.addedItemsCount,\n          total: parentCat.totalItemsCount\n        })\n      } else {\n        for (let category of parentCat.subCategories) {\n          if (category.subProductTypes.length) {\n            for (let subProduct of category.subProductTypes) {\n              categories.push({\n                id: subProduct.id,\n                name: subProduct.categoryName,\n                added: subProduct.addedItemsCount,\n                total: subProduct.totalItemsCount\n              })\n            }\n          } else {\n            categories.push({\n              id: category.id,\n              name: category.categoryName,\n              added: category.addedItemsCount,\n              total: category.totalItemsCount\n            })\n          }\n        }\n      }\n    }\n\n\n    for (let category of categories) {\n      let products = []\n      let recommendations = []\n\n      // Getting filtered Products and recommendations\n      if (stateFilterApplied.parentFilter) {\n        if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n          if (stateFilterApplied.childFilter.length > 0) {\n            const childFilterArray = stateFilterApplied.childFilter\n\n            for (let product of addedProducts) {\n              if (\n                ((childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n                  (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n                  // TODO: change category\n                  (childFilterArray.includes(\"reserved\") && product.isReserved)) && product.registryCategories[0].id === category.id\n              ) {\n                products.push(product)\n                // filteredProductsId.push(product.id)\n              }\n            }\n          } else {\n            // TODO: change category\n            products.push(...addedProducts.filter(el => el.registryCategories[0].id === category.id))\n          }\n        } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n          let addedRecommendations = []\n          recommendations = stateRecommendedProducts.filter(el => {\n            if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n              addedRecommendations.push(el.id)\n              return true;\n            }\n            return false;\n          })\n        }\n      } else {\n        // TODO: Change this condition(el.item.category.length)\n        // TODO: change category\n        products.push(...addedProducts.filter(el => el.registryCategories.length && el.registryCategories[0].id === category.id))\n        let addedRecommendations = []\n        recommendations = stateRecommendedProducts.filter(el => {\n          if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n            addedRecommendations.push(el.id)\n            return true;\n          }\n          return false;\n        })\n      }\n\n      productCount += products.length;\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: (category.added < category.total || category.total === 0) ? recommendations : []\n      })\n    }\n\n    return { allProducts, productCount };\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for (let category of checklistItems) {\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems / totalItems) * 100;\n  }\n\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let { allProducts, productCount } = this.getSortedProducts(this.props.stateAddedProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-6\">\n          {/* View CheckList */}\n          <div className=\"col-3\">\n            <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)} />\n            {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n              dispatch={this.props.dispatch} />)}\n          </div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <FilterSection productCount={productCount} />\n            <div className=\"mt-5\">\n              {allProducts.map((product, i) => (\n                <div id={product.category.name}>\n                  {product.products.map((card, index) => (\n                    <AddedCard\n                      data={card} key={\"addedCard\" + index}\n                      toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                      removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                    />\n                  ))}\n                  {product.recommendations.length > 0 ?\n                    <ViewRecommend\n                      title={product.recommendations[0].category.categoryName}\n                      category={product.recommendations[0].category}\n                      products={product.recommendations} />\n                    : null}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 7\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          console.log(defaultImages);\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      toast.error(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          toast.error(\"Some error occurred\");\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n\n  }\n\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={props.closeCoverImagePicker}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"utils/commonFunction\";\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      alert(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          alert(\"Successfully changed\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          alert(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        alert(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\"/>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\"/>\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n              onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\nimport routes from \"../../../../utils/routes\";\n\nconst ShareRegistry = (props) => {\n\n  const siteHostName = window.location.host + routes.REGISTRY.HOME;\n  // const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      toast.error(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      if (err.response.status === 400) {\n        setRegistryError(`${registryUrl} is not available. Please try something else.`)\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n      console.error(err.response.data)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toast.success(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section d-flex text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2 d-flex\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram .svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter.svg\"/>\n              </>\n              :\n              <>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook_disabled.svg\"/>\n                <img className=\"mr-3 social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram _disabled.svg\"/>\n                <img className=\"social-btn\"\n                     src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter_disabled.svg\"/>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport {connect} from \"react-redux\";\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport {setguestViewRegistry} from \"modules/view-registry/ViewRegistryActions\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({showCoverImagePicker: false})\n  }\n\n  closeShareRegistry = () => {\n    this.setState({showShareRegistry: false})\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({showEditRegistryDetail: false})\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({showEditRegistryDetail: true})\n  }\n\n  handleGuestView = () => {\n    this.props.dispatch(setguestViewRegistry(true))\n  }\n\n  handleDisableViewGuest = () => {\n    this.props.dispatch(setguestViewRegistry(false))\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({showCoverImagePicker: true})\n      }\n    }\n  ]\n\n\n  render() {\n    // const style = {\n    //   backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'\n    // }\n    return (\n      <>\n        {this.props.stateGuestViewRegistry ?\n          <div className=\"view-guest-header text-body py-2\">\n            <div className=\"container d-flex justify-content-between\" onClick={this.handleDisableViewGuest}>\n              <div className=\"d-flex align-items-center view-guest-link\">\n                <i className=\"icon-chevron-left view-guest-text mr-2\"/>\n                <a className=\"view-guest-text\" tabindex>Back To View Registry</a>\n              </div>\n              <div className=\"view-guest-text\">This is how your guests will see your registry</div>\n              <a className=\"view-guest-text view-guest-link\">Share</a>\n            </div>\n          </div> : null\n        }\n        <div className=\"view-registry-header\" style={{backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'}}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          {!this.props.stateGuestViewRegistry ?\n            <div className=\"cover-pic-update-options\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-end\">\n                    <MoreOption\n                      data={this.COVER_PIC_OPTIONS}\n                      iconClass=\"icon-preview\"\n                      activeOptionClass=\"view-registry-cover-option-active\"\n                      buttonClass=\"update-cover-options p-1\"/>\n                  </div>\n                </div>\n              </div>\n            </div> : null\n          }\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    {!this.props.stateGuestViewRegistry ?\n                      <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)}/>\n                      : null\n                    }\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span\n                      className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    !this.props.stateGuestViewRegistry ?\n                      <a className=\"add-greeting-link text-sm font-medium\" href=\"#\" tabindex\n                         onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a> : null\n                  }\n                </div>\n                {!this.props.stateGuestViewRegistry ?\n                  <div className=\"col-12 col-md-3 header-buttons\">\n                    <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\"\n                            onClick={this.handleGuestView}>View as Guest</Button>\n                    <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\"\n                            onClick={() => this.setState({showShareRegistry: true})}>Share</Button>\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n        <EditViewRegistryDetail\n          show={this.state.showEditRegistryDetail}\n          closeEditRegistryDetail={this.closeEditRegistryDetail}\n          info={this.props.stateRegistryInfo}\n        />\n\n        <ShareRegistry\n          show={this.state.showShareRegistry}\n          closeShareRegistry={this.closeShareRegistry}\n          registryInfo={this.props.stateRegistryInfo}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt, clearViewFilter, setChildViewFilter } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\nimport FilterItemChip from \"modules/my-registry/components/filter/filter-item-chip/FilterItemChip\"\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearViewFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearViewFilter())\n  }\n\n  render() {\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      for (let filterCat of this.props.stateFilterCategory) {\n        for (let childCat of filterCat.child) {\n          allChild.push(childCat)\n        }\n      }\n\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"Gift\" : \"Gifts\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              {this.props.stateGuestViewRegistry ?\n                <></> :\n                <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>}\n            </div>\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7\">\n            <div className=\"filtered-items\">\n              {filterChips.childFilter ?\n                filterChips.childFilter.map(item =>\n                  <FilterItemChip\n                    text={item.display}\n                    className=\"mr-2\"\n                    key={filterChips.id + \"-\" + item.id}\n                    deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n                : null}\n              {this.props.stateFilterApplied.childFilter.length > 0 ?\n                <a className=\"font-medium text-sm filter-clear-link\" href=\"#\" tabindex\n                  onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n                : null}\n            </div>\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 && !this.props.stateGuestViewRegistry ?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    stateRegistryInfo: state.registry.info,\n    stateFilterApplied: state.viewRegistry.viewFilterApplied,\n    stateFilterCategory: state.viewRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);\n","import React, { useState } from 'react'\nimport \"./ViewFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setChildViewFilter, clearViewFilter, setViewFilterCategory } from '../../ViewRegistryActions';\nimport { FILTERS } from \"utils/constants\"\n\nconst ViewFilter = () => {\n\n  const dispatch = useDispatch()\n  let tempParentFilterId = useSelector(state => state.viewRegistry.viewFilterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  let [filterCategoryLimit, setFilterCategoryLimit] = useState([])\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  const getLimitOfFliter = (parentId) => {\n    let limit = null\n    const filterCategory = [...filterCategoryLimit]\n    for (let category of filterCategory) {\n      if (parentId === category.id && category.limit) {\n        limit = category.limit\n      }\n    }\n    return limit\n  }\n\n  // Updating product count in filter categories\n  const updateFilterList = (addedProducts) => {\n\n    let newFilterList = [\n      {\n        id: \"categories\",\n        display: FILTERS.CATEGORIES_DISPLAY,\n        limit: getLimitOfFliter(\"categories\") ? getLimitOfFliter(\"categories\") : 6,\n        child: [...stateCategoriesInfo].filter(category => {\n          if (category.addedItemsCount > 0) {\n            return true\n          }\n        }).map(category => {\n          let newCategory = { ...category }\n          newCategory['display'] = newCategory.categoryName\n          newCategory['count'] = newCategory.addedItemsCount\n          return newCategory\n        })\n        // count: 0\n      },\n      {\n        id: \"price\",\n        display: FILTERS.PRICE_DISPLAY,\n        child: [\n          {\n            id: PRICE_1,\n            display: FILTERS.PRICE_DISPLAY_1,\n            count: addedProducts.filter((product) => product.item.price < 50).length\n          },\n          {\n            id: PRICE_2,\n            display: FILTERS.PRICE_DISPLAY_2,\n            count: addedProducts.filter(product => (product.item.price >= 50 && product.item.price <= 100)).length\n          },\n          {\n            id: PRICE_3,\n            display: FILTERS.PRICE_DISPLAY_3,\n            count: addedProducts.filter(product => (product.item.price > 100)).length\n          }\n        ]\n      },\n      {\n        id: \"store\",\n        display: FILTERS.STORE_DISPLAY,\n        child: [\n          {\n            id: MONICA_AND_ANDY,\n            display: FILTERS.MONICA_AND_ANDY_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName === MONICA_AND_ANDY).length\n          },\n          {\n            id: ELSEWHERE,\n            display: FILTERS.ELSEWHERE_DISPLAY,\n            count: addedProducts.filter(product => product.item.store.storeName !== MONICA_AND_ANDY).length\n          },\n        ]\n      },\n\n    ]\n    if (!stateGuestViewRegistry) {\n      const giftStatus = {\n        id: \"giftStatus\",\n        display: \"Gift Status\",\n        child: [\n          {\n            id: AVAILABLE,\n            display: FILTERS.AVAILABLE_DISPLAY,\n            count: addedProducts.filter(product => !product.isReserved || !product.isPurchased).length\n          },\n          {\n            id: RESERVED,\n            display: FILTERS.RESERVED_DISPLAY,\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: PURCHASED,\n            display: FILTERS.PURCHASED_DISPLAY,\n            count: addedProducts.filter(product => product.isPurchased).length\n          }\n        ]\n      }\n      newFilterList.splice(0, 0, giftStatus)\n    }\n    dispatch(setViewFilterCategory(newFilterList))\n    return newFilterList\n  }\n\n  let localFilterCategories = updateFilterList(stateAddedProducts)\n\n\n  // Change event handlers\n\n  // TDOD: Add this if needed\n  // const parentChangeHandler = (parent) => {\n  //   dispatch(setParentViewFilter(parent.id))\n  //   if (parent.child) {\n  //     dispatch(setChildViewFilter(parent.child.map(child => child.id)))\n  //   } else {\n  //     dispatch(setChildViewFilter([]))\n  //   }\n  // }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildViewFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildViewFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildViewFilter(newChildArray))\n    }\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearViewFilter())\n  }\n\n  const changeParentLimitHandler = (parentFilterID) => {\n    let limitLength = null\n    let filterCategory = [...localFilterCategories].map(parentFilter => {\n      if (parentFilter.id === parentFilterID) {\n        parentFilter.limit = parentFilter.child.length\n        limitLength = parentFilter.child.length\n      }\n      return parentFilter\n    })\n    dispatch(setViewFilterCategory(filterCategory))\n\n    let isFound = false\n    let newFilterCateoryLimit = [...filterCategoryLimit].map(categorylimit => {\n      if (categorylimit.id === parentFilterID) {\n        categorylimit.limit = limitLength\n        isFound = true\n        return categorylimit\n      }\n      return categorylimit\n    })\n\n    if (!isFound) {\n      newFilterCateoryLimit.push({ 'id': parentFilterID, 'limit': limitLength })\n    }\n    setFilterCategoryLimit(newFilterCateoryLimit)\n  }\n\n  return (\n    <div className=\"view-filter\">\n      <div className=\"view-filter-heading pb-1 d-flex align-items-baseline\">\n        <h4 className=\"font-weight-bold\">Filters</h4>\n        {tempChildFilterIds.length !== 0 ?\n          <a tabindex className=\"filter-clear-all text-sm font-medium ml-auto\" onClick={() => clearClickHandler()}>Clear all</a> : null\n        }\n      </div>\n      <div className=\"d-flex flex-column\">\n        {localFilterCategories.map(parentFilter => (\n          <div className=\"filter-item\" key={\"filter-\" + parentFilter.id}>\n            {/* Parent filter */}\n            <div className=\"text-body filter-title pt-5 d-flex\">{parentFilter.display}</div>\n\n            {/* Child filter */}\n            {parentFilter.child ? (\n              <div className=\"d-flex flex-column mt-2\" key={\"child-filter-\" + parentFilter.id}>\n                <div className=\"mt-3 fliter-checkbox-section\">\n                  {parentFilter.child.map((childFilter, index) => (\n                    childFilter.count > 0 ?\n                      index < (parentFilter.limit ? parentFilter.limit : parentFilter.child.length) ?\n                        <label class=\"view-fliter-checkbox d-flex align-items-center mb-4\" key={childFilter.id}>\n                          <span class=\"checkbox__input mr-2\">\n                            <input type=\"checkbox\"\n                              name={childFilter.display}\n                              value={childFilter.display}\n                              checked={tempChildFilterIds.includes(childFilter.id) ? \"checked\" : \"\"}\n                              onChange={() => childChangeHandler(childFilter.id, parentFilter.id)} />\n                            <span class=\"checkbox__control d-flex justify-content-center align-items-center\">\n                              <i class=\"icon-check\"></i>\n                            </span>\n                          </span>\n                          <p class=\"radio__label text-sm\"><div>{childFilter.display} {childFilter.count > 0 ? <>({childFilter.count})</> : null}</div></p>\n                        </label>\n                        : null\n                      : null\n\n                  ))}\n                  {(parentFilter.limit && (parentFilter.limit !== parentFilter.child.length) && (parentFilter.child.length - parentFilter.limit) > 0) ?\n                    <div className=\"filter-clear-all text-sm font-medium ml-4 pb-3\" onClick={() => changeParentLimitHandler(parentFilter.id)}>Show {parentFilter.child.length - parentFilter.limit} more</div>\n                    : null\n                  }\n                </div>\n              </div>\n            )\n              : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewFilter;\n","import React, { useEffect } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition, getCategories } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, clearViewFilter } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\nimport ViewFilter from \"modules/view-registry/components/view-filter/ViewFilter\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFilterApplied = useSelector(state => state.viewRegistry.viewFilterApplied.childFilter)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const stateCategoriesInfo = useSelector(state => state.myRegistry.checkList)\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n\n  // Constant variables for filters\n  const AVAILABLE = \"available\"\n  const RESERVED = \"reserved\"\n  const PURCHASED = \"purchased\"\n  const PRICE_1 = \"price-1\"\n  const PRICE_2 = \"price-2\"\n  const PRICE_3 = \"price-3\"\n  const MONICA_AND_ANDY = \"monicaandandy\"\n  const ELSEWHERE = \"elsewhere\"\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let itemsOldPosition = arrayMove([...stateViewRegistryProducts], oldIndex, oldIndex)\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    dispatch(setViewRegistryProducts(items))\n    updateViewRegistryPosition(stateRegistryInfo.id, items, itemsOldPosition, dispatch)\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedProductsByFilters = (addedProducts, filterApplied) => {\n    let newSortedProducts = [...addedProducts]\n    const childFilterArray = [...filterApplied]\n\n    // For Gift Status\n    if ((childFilterArray.includes(AVAILABLE)) ||\n      (childFilterArray.includes(PURCHASED)) ||\n      (childFilterArray.includes(RESERVED))) {\n      newSortedProducts = newSortedProducts.filter(product => {\n        // (!product.isReserved || !product.isPurchased) || product.isPurchased || product.isReserved)\n        if ((childFilterArray.includes(AVAILABLE) && (!product.isReserved || !product.isPurchased))) {\n          return true\n        }\n        if ((childFilterArray.includes(PURCHASED) && product.isPurchased)) {\n          return true\n        }\n        if ((childFilterArray.includes(RESERVED) && product.isReserved)) {\n          return true\n        }\n      })\n    }\n\n    // For Store name\n    if ((childFilterArray.includes(MONICA_AND_ANDY) ||\n      (childFilterArray.includes(ELSEWHERE)))) {\n\n      newSortedProducts = newSortedProducts.filter(product => {\n        if ((childFilterArray.includes(MONICA_AND_ANDY) && product.item.store.storeName === MONICA_AND_ANDY)) {\n          return true\n        }\n        if ((childFilterArray.includes(ELSEWHERE) && product.item.store.storeName !== MONICA_AND_ANDY)) {\n          return true\n        }\n      })\n    }\n\n    // For Price\n    if ((childFilterArray.includes(PRICE_1) ||\n      (childFilterArray.includes(PRICE_2)) ||\n      (childFilterArray.includes(PRICE_3)))) {\n\n      newSortedProducts = newSortedProducts.filter(product => {\n        if ((childFilterArray.includes(PRICE_1) && product.item.price < 50)) {\n          return true\n        }\n        if ((childFilterArray.includes(PRICE_2) && (product.item.price >= 50 && product.item.price <= 100))) {\n          return true\n        }\n        if ((childFilterArray.includes(PRICE_3) && product.item.price > 100)) {\n          return true\n        }\n      })\n    }\n\n    // For Checklist category\n    let appliedCategoryProduct = []\n    for (let product of newSortedProducts) {\n      // TODO: change category\n      let parentCat = getParentCategory(product.registryCategories[0].id)\n      if (childFilterArray.includes(parentCat ? parentCat.id : '')) {\n        appliedCategoryProduct.push(product)\n        // appliedCategory.push(getParentCategory(product.item.category.id).id)\n      }\n    }\n    if (appliedCategoryProduct.length) {\n      let tempNewSortedProducts = []\n      for (let product of appliedCategoryProduct) {\n        let temp = newSortedProducts.filter(prod => prod.id === product.id)\n        if (temp.length) {\n          tempNewSortedProducts.push(...temp)\n        }\n      }\n      if (tempNewSortedProducts.length) {\n        newSortedProducts = tempNewSortedProducts\n      }\n    }\n\n    // Return Filtered Product list\n    return newSortedProducts\n  }\n\n  const getParentCategory = (id) => {\n    return [...stateCategoriesInfo].find((parentCategory) => parentCategory.subCategories.find((subCategory) => subCategory.id === id))\n  }\n\n  const getSortedFilteredProducts = (addedProducts, activeSortFilterState, viewRegistryProducts, filterApplied, registryInfo) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    let newSortedProducts = null\n\n    if (filterApplied.length > 0) {\n      newSortedProducts = getSortedProductsByFilters(addedProducts, filterApplied)\n    }\n    else {\n      newSortedProducts = [...addedProducts]\n    }\n\n    if (activeSortFilterState.sortId === 1) {\n      if (filterApplied.length > 0) {\n        sortedData = newSortedProducts\n      }\n      else if (registryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n      }\n      else {\n        sortedData = sortByMustHave([...newSortedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...newSortedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...newSortedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n  }\n\n  const sortByLowToHigh = (productList) => {\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  //Clear filter state\n  const clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    dispatch(clearViewFilter())\n  }\n\n  useEffect(() => {\n    if(stateCategoriesInfo.length === 0){\n      getCategories(stateRegistryInfo.id, dispatch);\n    }\n    if (stateAddedProducts.length === 0) {\n      getProducts(stateRegistryInfo.id, dispatch);\n    }\n    // if (stateAddedProducts.length > 0 && stateViewRegistryProducts.length === 0) {\n    //   let sortedData = sortByFeatured([...stateAddedProducts])\n    //   let viewRegistryProducts = sortedData.map((productData, index) => {\n    //     return { 'id': productData.id }\n    //   })\n    //   dispatch(setViewRegistryProducts(viewRegistryProducts))\n    // }\n  })\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  // updateFilterList(stateAddedProducts)\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts, stateFilterApplied, stateRegistryInfo)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <ViewFilter />\n          </div>\n          <div className=\"col\"></div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <SortFilterSection productCount={filteredSortProducts.length} />\n\n            {/* Added Products */}\n            {filteredSortProducts.length > 0 ?\n              <div className=\"mt-5\">\n                <SortableContainer onSortEnd={onSortEnd} helperClass=\"drag-add-card\" axis=\"y\" lockAxis=\"y\" useDragHandle>\n                  {filteredSortProducts.map((card, index) =>\n                    <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1 || stateFilterApplied.length !== 0} />\n                  )}\n                </SortableContainer>\n              </div> :\n              <div className=\"d-flex flex-column empty-filter mt-6\">\n                <div className=\"font-body empty-filter-title text-center mx-auto mt-10\">\n                  <p>We couldn’t find any gifts that matches your filters...</p>\n                  <p>Please try clearing ‘Filters’ to view gifts.</p>\n                </div>\n                <div className=\"mx-auto mt-3\">\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1 font-medium empty-filter-title text-body\"\n                    onClick={(ev) => clearFilterHandler(ev)}\n                  >\n                    Clear Filters\n                  </Button>\n                </div>\n              </div>}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Toast.scss';\n\nconst Toast = () => {\n  const closeToastMessage = (parentId) => {\n    toast.dismiss(parentId);\n  }\n\n  return (\n    <ToastContainer\n      position=\"top-center\"\n      className=\"m-a-toast-container\"\n      toastClassName=\"m-a-toast\"\n      autoClose={4000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      draggable={false}\n      closeOnClick={false}\n      closeButton={<i className=\"icon-close m-a-toast-close\" onClick={(event) => closeToastMessage(event.target.parentElement.id)} />}\n    />\n  )\n}\n\nexport default Toast;","import React from \"react\";\nimport \"./TodoWidget.scss\";\nimport {connect} from \"react-redux\";\n\nclass TodoWidget extends React.Component {\n\n  performTodoAction = todo => {\n  //  Perform action related to to-do\n  }\n\n  render() {\n    return (\n      <div className=\"baby-registry-todo-widget\">\n        {this.props.stateTodo.length > 0 ?\n          (\n            //  When there is To-do\n            <div className=\"baby-registry-todo-section\">\n              <button className=\"baby-steps-button d-flex align-items-center py-3 pl-4 pr-8\">\n                <i className=\"baby-steps-icon\"/>\n                <div className=\"ml-5\">\n                  <p className=\"text-body font-medium\">{this.props.stateTodo.length} Baby Steps</p>\n                  <p className=\"text-sm text-left\">to take next!</p>\n                </div>\n              </button>\n\n              <div className=\"baby-steps-todo-content p-2\">\n                {this.props.stateTodo.map(todo => (\n                  <div className=\"baby-step-todo d-flex justify-content-between py-2 align-items-center\">\n                    <p className=\"text-body mr-9\">{todo.text}</p>\n                    {/*TODO: Update below icon once updated*/}\n                    <button className=\"baby-step-action-btn p-2 icon-chevron-right float-right\" onClick={() => this.performTodoAction(todo)}/>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n          :\n          (\n            //  When there is no To-do\n            <div className=\"baby-registry-no-todo-section d-flex align-items-center py-4\">\n              <i className=\"no-todo-icon\"/>\n              <div className=\"ml-2\">\n                <p className=\"text-body font-medium\">Great job!</p>\n                <p className=\"text-sm\">More to come, soon.</p>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stateTodo: state.registry.todo\n})\n\nexport default connect(\n  mapStateToProps\n)(TodoWidget);","import React from 'react';\nimport {NavLink, Switch, Route, Redirect} from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport {useTranslation} from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {useSelector} from 'react-redux';\nimport {toast} from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport TodoWidget from \"./component/todo-widget/TodoWidget\";\n\nconst RegistryHero = (props) => {\n\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const {t} = useTranslation();\n  const registryData = RegistryHeroData\n\n  if (!stateRegistryInfo.id && stateRegistryInfo.notFound) {\n    return <Redirect to={route.ONBOARDING.HOME}/>\n  }\n\n  return (\n    <>\n      {!stateGuestViewRegistry ?\n        <div className=\"registry-hero\">\n          <div className=\"container pt-6\">\n            <div className=\"row\">\n              <div className=\"col d-flex justify-content-between align-items-start\">\n                <div className=\"d-flex align-items-end\">\n                  <h1>{stateRegistryInfo.name}</h1>\n                  <span className=\"text-sm ml-1\">{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</span>\n                </div>\n                <div>\n                  <TodoWidget/>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-flex registry-hero-navigation-links\">\n                  <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n\n                  <NavLink to={route.MY_REGISTRY.TRACK_GIFTS} className=\"registry-header-link\">\n                    <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> : null}\n\n      {/* Registry Nav Routes */}\n      {stateRegistryInfo.id ?\n        <Switch>\n          <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME}/></Route>\n          <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry}/>\n          <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry}/>\n        </Switch>\n        : null}\n\n      <Toast />\n    </>\n  )\n}\n\nexport default RegistryHero;","import React from \"react\";\nimport \"./Option.scss\";\n\nconst Option = (props) => {\n  return (\n    <div\n      className={[\"px-4 py-3 baby-registry-question-option\", props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}>{props.children}</div>\n  );\n}\n\nexport default Option;","import React from \"react\";\nimport \"./Onboarding.scss\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport routes from \"utils/routes\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport {addQuestionAnswer, updateQuestionAnswer} from \"./OnboardingAction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {\n  REGISTER_USER,\n  SAVE_QUESTION_RESPONSE,\n  LOGIN_USER,\n  ADD_PARTNER_ACCOUNT,\n  CREATE_REGISTRY\n} from \"../../api/mutations\";\nimport {graphQLNoToken, graphQLNoHeader} from \"../../api/axios\";\nimport {Cookies} from \"react-cookie\";\nimport {setLoggingStatus, setOnboardingRegistry} from \"../registry/RegistryActions\";\nimport {updateRegistryDetailState} from \"../../utils/commonFunction\";\nimport {GET_REGISTRIES} from \"../../api/queries\";\n\nclass Onboarding extends React.Component {\n\n  //EMAIL PATTERN\n  MAIL_FORMAT = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  // Static titles\n  LOGIN_TITLE = \"Sign in for free gifts, free shipping, and exclusive access to our limited edition prints\"\n  SIGNUP_TITLE = \"Let’s make it official. Time to create your account.\"\n  PARTNER_TITLE = \"Your partner’s details please\"\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  LOGIN = \"Login\"\n  PARTNER = \"Partner\"\n\n  state = {\n    parentId: null,\n    question: {},\n    login: false,\n    toastMessage: \"\",\n    signUpErrors: {},\n    signInErrors: {}\n  }\n\n  componentDidMount() {\n    window.onpopstate = () => {\n      if (this.props.location.pathname.search(routes.ONBOARDING.HOME) >= 0) {\n        this.setQuestionBasedOnId(this.props.match.params['questionId'])\n        this.clearToastMessage()\n      }\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      signUpErrors: {},\n      signInErrors: {}\n    })\n  }\n\n  createRegistry = () => {\n    let cookies = new Cookies();\n    graphQLNoHeader({query: CREATE_REGISTRY}, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data) {\n        let registryId = res.data.data.createRegistry.registry.id\n        if (registryId) {\n          this.props.dispatch(setOnboardingRegistry(registryId))\n          this.submitAllAnswers(registryId)\n        }\n      }\n    }).catch(err => {\n      console.error(err.response)\n    })\n  }\n\n  checkValidEmail = (email) => {\n    return email.match(this.MAIL_FORMAT)\n  }\n\n  submitAllAnswers = (optionalRegistryId = null) => {\n    if (this.props.stateOnboardingAnswers.length > 0 && (this.props.stateOnboardingRegistry || optionalRegistryId)) {\n      const registryId = optionalRegistryId ? optionalRegistryId : this.props.stateOnboardingRegistry;\n      let action = null;\n      let returnToURL = null;\n\n      const response = this.props.stateOnboardingAnswers.map(answer => {\n        action = answer.response.action ? answer.response.action : null;\n        return {\n          question: answer.question,\n          questionOptionInput: [\n            {\n              option: answer.response.option,\n              optionText: answer.response.optionText\n            }\n          ]\n        }\n      })\n\n      if (action) {\n        switch (action) {\n          case \"build-registry\":\n            returnToURL = window.location.origin + routes.MY_REGISTRY.HOME\n            break\n          case \"registry-quiz\":\n            returnToURL = window.location.origin + routes.PERSONALIZE.HOME\n            break\n          default:\n            returnToURL = window.location.origin + routes.REGISTRY.HOME\n            break\n        }\n      }\n\n      const cookies = new Cookies();\n      let reqData = {\n        query: SAVE_QUESTION_RESPONSE,\n        operationName: \"addRegistryQuestionOption\",\n        variables: {\n          registryId: registryId,\n          answers: response\n        }\n      }\n\n      if (action && returnToURL) {\n        reqData.variables['returnTo'] = returnToURL\n      }\n      graphQLNoHeader(reqData, {\n        headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n      }).then(res => {\n        if (res.data.data.addRegistryMultipleQuestionOption) {\n          if (res.data.data.addRegistryMultipleQuestionOption.redirectionUrl) {\n            window.open(res.data.data.addRegistryMultipleQuestionOption.redirectionUrl, \"_self\")\n          }\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n    }\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.stateOnboardingQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      if (this.props.stateLoggedIn && this.state.redirectionUrl) {\n        // window.open(this.state.redirectionUrl, \"_self\")\n      }\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null\n      })\n\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.setToastMessage()\n      this.props.history.push(routes.ONBOARDING.HOME + `/${nextQuestionId}`)\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.stateOnboardingQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.stateOnboardingAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.stateOnboardingAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n          break;\n        }\n        newState.push(answer)\n      }\n      this.props.dispatch(updateQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addQuestionAnswer({question: this.state.question.id, response: response}))\n    }\n\n    // this.submitAllAnswers()\n  }\n\n  answerRadioQuestion = (option) => {\n    this.addAnswerToState({option: option.id, optionText: option.value, action: option.action});\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n  }\n\n  watchNextBtn = (ev) => {\n    this.setState({\n      nextBtnState: ev.target.value.length <= 0\n    })\n  }\n\n  answerDataQuestion = (response) => {\n    this.addAnswerToState({option: 0, optionText: response})\n    this.gotoNextQuestion(this.state.question, this.state.parentId);\n  }\n\n  textInputTypeChangeHandler = (ev, inputRefs) => {\n    let enableBtn = false;\n\n    for (const inputRef of inputRefs) {\n      if (inputRef.current.value.length <= 0) {\n        enableBtn = true\n        break\n      }\n    }\n\n    this.setState({\n      nextBtnState: enableBtn\n    })\n  }\n\n  changeLoginState = (ev, value, refs) => {\n    ev.preventDefault()\n    for (let ref of refs){\n      if (ref.current){\n        ref.current.value = \"\"\n      }\n    }\n    this.setState({\n      login: value\n    })\n  }\n\n  setErrorBasedOnResponse = (err, type) => {\n    if (err.response.data && err.response.data.errors) {\n      for (let error of err.response.data.errors) {\n        let parentErrors = err.response.data.errors\n\n        if (parentErrors.length > 0) {\n          for (const subErrors of parentErrors) {\n            if (subErrors.errors && (subErrors.errors instanceof Array ? subErrors.errors.length > 0 : true)) {\n              let newErrorState = {}\n              for (const error in subErrors.errors) {\n                newErrorState[error] = subErrors.errors[error].length > 0 ? subErrors.errors[error][0] : \"\"\n              }\n              switch (type) {\n                case \"signUp\":\n                  this.setState({\n                    signUpErrors: newErrorState\n                  })\n                  break\n                case \"signIn\":\n                  this.setState({\n                    signInErrors: newErrorState\n                  })\n                  break\n              }\n            } else {\n              toast.error(error.message)\n            }\n          }\n        }\n      }\n    }\n    console.error(err.response)\n  }\n\n  signInClickHandler = (emailRef, passwordRef) => {\n    if (emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      toast.error(\"Invalid email address\");\n      return;\n    }\n\n    let reqData = {\n      query: LOGIN_USER,\n      operationName: \"login_user\",\n      variables: {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.loginUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.loginUser.token, {path: \"/\"})\n\n        // Checking if user has registry\n        let data = {\n          query: GET_REGISTRIES\n        }\n        graphQLNoHeader(data, {headers: {\"Authorization\": \"Token \" + res.data.data.loginUser.token}}).then(registryRes => {\n          if (registryRes.data.data.registries.edges.length > 0) {\n            window.open(routes.MY_REGISTRY.HOME, \"_self\")\n            // updateRegistryDetailState(this.props.dispatch, registryRes.data.data.registries.edges);\n          } else {\n\n            // Creating Registry\n            this.createRegistry()\n          }\n\n        }).catch(err => {\n          console.error(err);\n        })\n        this.setState({\n          redirectionUrl: res.data.data.loginUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers()\n      }\n    }).catch(err => {\n      if (err.response.status === 401) {\n        toast.error(\"Invalid email or password\");\n        return;\n      }\n      this.setErrorBasedOnResponse(err, \"signIn\")\n    })\n  }\n\n  getSignInContent = () => {\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"signIn-email\"\n            ref={emailRef}\n            placeholder=\"johndoe@email.com\"\n          />\n          {this.state.signInErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signInErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"signIn-password\"\n            ref={passwordRef}\n            placeholder=\"Password\"\n          />\n          {this.state.signInErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signInErrors.password}</p>\n            : null}\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signInClickHandler(emailRef, passwordRef)}\n        >Sign In</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Don't have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                        onClick={(ev) => this.changeLoginState(ev, false, [emailRef, passwordRef])}\n        >Sign Up</a></h4>\n      </>\n    )\n  }\n\n  signUpClickHandler = (nameRef, emailRef, passwordRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return;\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      this.setState({\n        signUpErrors: {\n          email: \"Invalid email address\"\n        }\n      })\n      return;\n    }\n\n    // Clearing all error messages\n    this.clearErrorState()\n\n    let reqData = {\n      query: REGISTER_USER,\n      operationName: \"register_user\",\n      variables: {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.registerUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.registerUser.token, {path: \"/\"})\n        this.setState({\n          redirectionUrl: res.data.data.registerUser.redirectionUrl\n        })\n        this.createRegistry()\n        this.submitAllAnswers()\n        this.props.dispatch(setLoggingStatus(true))\n      }\n    }).catch(err => {\n      this.setErrorBasedOnResponse(err, \"signUp\")\n    })\n  }\n\n  getSignUpContent = () => {\n    let nameRef = React.createRef()\n    let emailRef = React.createRef()\n    let passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.name ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Doe\"\n            ref={nameRef}\n          />\n          {this.state.signUpErrors.name ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.name}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.email ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"johndoe@email.com\"\n            ref={emailRef}\n          />\n          {this.state.signUpErrors.email ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.email}</p>\n            : null}\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className={[\"onboarding-input py-1 px-2 text-body mb-0 mt-1\", this.state.signUpErrors.password ? \"onboarding-input-error\" : \"\"].join(\" \")}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n          />\n          {this.state.signUpErrors.password ?\n            <p className=\"text-sm onboarding-error-message mt-1\">{this.state.signUpErrors.password}</p>\n            : null}\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signUpClickHandler(nameRef, emailRef, passwordRef)}\n        >Sign Up</Button>\n        <h4 className=\"mt-11\">Already have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\" tabindex\n                                                          onClick={(ev) => this.changeLoginState(ev, true, [nameRef, emailRef, passwordRef])}>Sign\n          In</a></h4>\n      </>\n    )\n  }\n\n  savePartnerDetail = (nameRef, emailRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0) {\n      toast.error(\"Please enter all fields\")\n      return\n    }\n\n    // Checking for valid email\n    if (!this.checkValidEmail(emailRef.current.value)) {\n      toast.error(\"Invalid email address\");\n      return;\n    }\n\n    const cookies = new Cookies();\n    let reqData = {\n      query: ADD_PARTNER_ACCOUNT,\n      operationName: \"addPartner\",\n      variables: {\n        partnerDetail: {\n          email: emailRef.current.value,\n          firstName: nameRef.current.value\n        }\n      }\n    }\n    graphQLNoHeader(reqData, {\n      headers: {\"Authorization\": cookies.get(\"access_token\") ? \"Token \" + cookies.get(\"access_token\") : \"\"}\n    }).then(res => {\n      if (res.data.data.addPartnerAccount) {\n        this.gotoNextQuestion(this.state.question, this.state.parentId);\n      } else {\n        toast.error(\"Some error occurred\");\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.response.data);\n    })\n  }\n\n  getPartnerContent = () => {\n    const nameRef = React.createRef()\n    const emailRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={nameRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1 mb-0\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={emailRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, [nameRef, emailRef])}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.savePartnerDetail(nameRef, emailRef)}\n        >Next</Button>\n      </>\n    )\n  }\n\n  render() {\n    if (this.props.stateOnboardingAnswers) {\n      this.submitAllAnswers()\n    }\n\n    // Redirecting user to registry home if registry found\n    if (this.props.stateRegistryInfo.id) {\n      return <Redirect to={routes.MY_REGISTRY.HOME}/>\n    }\n\n    // Redirecting to first question if not answered any\n    if (this.props.stateOnboardingQuestions.length > 0\n      && this.props.stateOnboardingAnswers.length <= 0\n      && this.props.location.pathname !== routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`) {\n      return <Redirect to={routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`}/>\n    }\n\n    if (!this.state.question.title && this.props.stateOnboardingQuestions.length > 0 && this.props.stateRouter.location.pathname !== routes.ONBOARDING.HOME + `/${this.state.question.id}`) {\n      this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    }\n\n    // Skipping Login Question if user is already logged in\n    if (this.props.stateLoggedIn && this.state.question.answerInputType === this.LOGIN) {\n      // If user already logged into M&A Store\n      this.setState((prevState, _) => ({\n        redirectionUrl: prevState.redirectionUrl ? prevState.redirectionUrl : routes.MY_REGISTRY.HOME\n      }))\n      this.gotoNextQuestion(this.state.question, null);\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n      setTimeout(() => this.setState({toastMessage: \"\"}), 4000)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      options = this.state.question.options.map(option => (\n        <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n          <span className=\"text-sm ml-1 onboarding-option-help-text\">{option.helpText}</span> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === \"Date\") {\n      let inputRef = React.createRef();\n      options.push(\n        <div className=\"d-flex flex-column\">\n          {/*TODO: Get placeholder from backend*/}\n          <input\n            type=\"date\"\n            className=\"onboarding-input py-1 px-2 text-body mb-0\"\n            placeholder=\"Date\"\n            ref={inputRef}\n            onChange={(ev) => this.watchNextBtn(ev)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(inputRef.current.value)}\n            className=\"px-3 py-1 font-medium mt-4 onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === \"Text\") {\n      let inputRefs = []\n      const inputRef = React.createRef()\n      inputRefs.push(inputRef)\n      options.push(\n        // TODO: Update this part if there is a Text type question\n        <div className=\"d-flex flex-column\">\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mb-0 mt-1\"\n            type=\"Text\"\n            name=\"Answer\"\n            ref={inputRef}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(inputRef.current ? inputRef.current.value : \"\")}\n            className=\"mt-4 px-3 py-1 font-medium onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === this.LOGIN) {\n      let content = null;\n      if (this.state.login) {\n        staticQuestionTitle = this.LOGIN_TITLE\n        content = this.getSignInContent()\n      } else {\n        staticQuestionTitle = this.SIGNUP_TITLE\n        content = this.getSignUpContent()\n      }\n\n      options.push(content)\n    } else if (this.state.question.answerInputType === this.PARTNER) {\n      staticQuestionTitle = this.PARTNER_TITLE;\n      options.push(this.getPartnerContent())\n    }\n\n    return (\n      <>\n        <div className=\"baby-registry-onboarding container\">\n          <div className=\"row justify-content-center mt-24\">\n            <div className=\"col-12 col-md-6\">\n            <span\n              className=\"font-body onboading-question\">{[this.LOGIN, this.PARTNER].indexOf(this.state.question.answerInputType) !== -1 ? staticQuestionTitle : this.state.question.title}</span>\n            </div>\n          </div>\n          <div className=\"row justify-content-center mt-6\">\n            <div className=\"col-12 col-md-6\">\n              {options.map(option => option)}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          className=\"onboarding-toast-container\"\n          toastClassName=\"onboarding-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateOnboardingAnswers: state.onboarding.answers,\n    stateOnboardingRegistry: state.registry.onboardingRegistry,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Onboarding);","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from 'react';\nimport \"./PersonaliseHeader.scss\";\nimport { withRouter } from \"react-router\";\nimport routes from \"utils/routes\";\n\n\nconst PersonaliseHeader = (props) => {\n    const closePersonalise = (event) => {\n        event.preventDefault();\n        props.history.push(routes.REGISTRY.HOME)\n    }\n    \n    return (\n        <div className=\"personalise-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-between py-2\">\n                        <p className=\"text-body font-medium personalise-text\">My Registry Quiz</p>\n                        <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(PersonaliseHeader);","import React from 'react';\nimport \"./PersonaliseFooter.scss\";\n\n\nconst PersonaliseFooter = (props) => {\n  const closePersonalise = (event) => {\n    event.preventDefault();\n    // props.history.push(routes.REGISTRY.HOME)\n  }\n\n  return (\n    <div className=\"personalise-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4 justify-content-between pt-2 pb-4\">\n            <div className=\"mb-1\">\n              <p className=\"text-sm\">{props.percentage}% complete</p>\n            </div>\n            <div className=\"personalise-progress-background\">\n              <div className=\"personalise-progress\" style={{ width: `${props.percentage}%` }} />\n            </div>\n          </div>\n          {/* <i className=\"icon-close align-self-center personalise-close\" onClick={(e) => { closePersonalise(e) }} /> */}\n          <div className=\"col d-flex justify-content-end\">\n            <i className=\"icon-chevron-left align-self-center personalise-footer-icon p-2\" onClick={props.prevQuestion} />\n            <i className=\"icon-chevron-right align-self-center personalise-footer-icon p-2 ml-2\" onClick={props.nextQuestion} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonaliseFooter;","import React, { createRef } from \"react\";\n// import \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport PersonaliseHeader from \"./components/personalise-header/PersonaliseHeader\";\nimport { getPersonalizeQuestions } from \"utils/commonFunction\";\nimport { connect } from \"react-redux\";\nimport PersonaliseFooter from \"./components/personalise-footer/PersonaliseFooter\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport { updatePersonalizeQuestionAnswer, addPersonalizeQuestionAnswer, addPersonalizeQuestion } from \"./PersonaliseCheckListActions\";\nimport \"./PersonaliseChecklist.scss\";\nimport Button from \"modules/commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_SINGLE_QUESTION_RESPONSE } from 'api/mutations';\nimport { graphQL } from 'api/axios';\n\nclass PersonaliseChecklist extends React.Component {\n\n  state = {\n    parentId: null,\n    prevQuestionId: [],\n    question: {},\n    activeQuestionId: null,\n    toastMessage: \"\",\n    percentage: 0,\n    checkBoxSelected: []\n  }\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  CHECKBOX = \"Checkbox\"\n\n  componentDidMount() {\n    this.setState({\n      prevQuestionId: [],\n      activeQuestionId: null\n    })\n    getPersonalizeQuestions(this.props.stateRegistryInfo.id, this.props.dispatch)\n    this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    this.clearToastMessage()\n  }\n\n  calulatePercentage = (answerQuestionCount, totalQuestionCount) => {\n    let totalAnwer = 0;\n\n    const questions = [...this.props.statePersonaliseQuestions]\n    for (let question of questions) {\n      if (question.answers.length > 0) {\n        totalAnwer++;\n      }\n      if (questions.followUpQuestion) {\n        for (let subQuestion of question.followUpQuestions) {\n          if (subQuestion.answers.length > 0) {\n            totalAnwer++;\n          }\n        }\n      }\n    }\n    return Math.ceil(totalAnwer * 100 / totalQuestionCount);\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.statePersonaliseQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      this.props.history.push(routes.PERSONALIZE.CHECKLIST)\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null,\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        activeQuestionId: nextQuestionId\n      })\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.clearToastMessage();\n    }\n  }\n\n  gotoPrevQuestion = (prevQuestionId) => {\n    this.setQuestionBasedOnId(prevQuestionId);\n    if (this.state.prevQuestionId.length > 1) {\n      let popPrevQuestionId = [...this.state.prevQuestionId];\n      popPrevQuestionId.pop();\n      this.clearToastMessage();\n      this.setState({\n        prevQuestionId: popPrevQuestionId,\n        activeQuestionId: popPrevQuestionId.length > 0 ? popPrevQuestionId[popPrevQuestionId.length - 1] : this.state.activeQuestionId\n      })\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.statePersonaliseQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId,\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.statePersonaliseAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.statePersonaliseAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n        }\n        else {\n          newState.push(answer)\n        }\n      }\n      this.props.dispatch(updatePersonalizeQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addPersonalizeQuestionAnswer({ question: this.state.question.id, response: response }))\n    }\n  }\n\n  isActiveIdPresent = () => {\n    for (let prevQuestion of this.state.prevQuestionId) {\n      if (prevQuestion === this.state.activeQuestionId) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  answerRadioQuestion = (questionId, option) => {\n    this.addAnswerToState(option);\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n    // this.calulatePercentage();\n    if (this.isActiveIdPresent) {\n      this.setState({\n        prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n      })\n    }\n\n    let finalAnswer = [{\n      option: option.id,\n      optionText: option.value\n    }]\n\n    this.submitQuestionAnswer(questionId, finalAnswer);\n  }\n\n  answerCheckBoxQuestion = (questionId, option) => {\n    if (option.length) {\n      this.addAnswerToState(option[0]);\n      this.gotoNextQuestion(this.state.question, this.state.parentId, option[0]);\n      // this.calulatePercentage();\n      if (this.isActiveIdPresent) {\n        this.setState({\n          prevQuestionId: this.isActiveIdPresent() ? [...this.state.prevQuestionId, this.state.activeQuestionId] : this.state.prevQuestionId,\n        })\n      }\n\n      // let finalAnswer = [{\n      //   option: option.id,\n      //   optionText: option.value\n      // }]\n      let finalAnswer = []\n\n      for (let op of option) {\n        finalAnswer.push({ option: op.id, optionText: op.value })\n      }\n\n      this.submitQuestionAnswer(questionId, finalAnswer);\n    } else {\n      toast.error(\"Please select one option\");\n    }\n  }\n\n  selectCheckboxAnswer = (event, checkBoxRef, option) => {\n    checkBoxRef.current.classList.toggle(\"personalise-checkbox-selected\");\n    this.setState({\n      // checkBoxSelected: selectedOption.push(option)\n      checkBoxSelected: [...this.state.checkBoxSelected, option]\n\n    })\n  }\n\n  submitQuestionAnswer = (questionId, answer) => {\n    this.setToastMessage()\n    let questionOptionInput = {\n      question: questionId,\n      questionOptionInput: answer\n    }\n    let reqData = {\n      query: SAVE_SINGLE_QUESTION_RESPONSE,\n      variables: {\n        registryId: this.props.stateRegistryInfo.id,\n        registryQuestionOptionInput: questionOptionInput\n      }\n    }\n\n    graphQL(reqData).then(res => {\n      if (res.data.data) {\n        console.log('Answer Done')\n        this.setStateQuestionWithSelectedAnswer(questionId, answer)\n      }\n    }).catch(err => {\n      toast.error(\"Error occurred while fetching questions\");\n      console.error(err);\n    })\n  }\n\n  setStateQuestionWithSelectedAnswer = (questionId, answer) => {\n    let answerOpt = []\n    for (let ans of answer) {\n      answerOpt.push({ questionOption: { id: ans.option }, optionText: ans.optionText })\n    }\n\n    // Setting question state with selected answer\n    const questions = [...this.props.statePersonaliseQuestions].map(question => {\n\n      if (question.id === questionId) {\n        question.answers = answerOpt\n      }\n      question.options = question.options.map(opt => {\n        if (opt.followUpQuestions.length > 0) {\n          opt.followUpQuestions.map(followUpQuestion => {\n            if (opt.id === questionId) {\n              opt.answers = answerOpt\n            }\n          })\n        }\n        return opt;\n      })\n      question.isAnswered = false;\n      return question;\n    })\n    this.props.dispatch(addPersonalizeQuestion(questions))\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  render() {\n\n    if (!this.state.question.id && this.props.statePersonaliseQuestions.length > 0) {\n      let prevQuestionID = []\n      let currentQuestion = null\n      for (let question of this.props.statePersonaliseQuestions){\n        if (!question.isPersonalize) {\n          prevQuestionID.push(question.id)\n        }\n        else {\n          currentQuestion = question\n          break\n        }\n      }\n      this.setState({\n        prevQuestionId: prevQuestionID,\n        activeQuestionId: currentQuestion.id,\n        question: currentQuestion\n      })\n\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      const selectedOptionID = this.state.question.answers?.length > 0 ? this.state.question.answers[0].questionOption.id : null\n      options = this.state.question.options.map(option => (\n        <Option className={[\"mb-2 mr-4\", selectedOptionID === option.id ? \"answer-selected\" : \"\"].join(\" \")} onClick={() => this.answerRadioQuestion(this.state.question.id, option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n            <div className=\"text-sm onboarding-option-help-text\">{option.helpText}</div> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === this.CHECKBOX) {\n      // TODO: If it is selected\n      // const selectedOptionID = []\n      // if(this.state.question.answers?.length > 0){\n      //   for (let ans of this.state.question.answers){\n      //     selectedOptionID.push(ans.questionOption.id)\n      //   }\n      // }\n      options = this.state.question.options.map(option => {\n        let checkBoxRef = createRef();\n        return (\n          <div\n            className=\"personalise-checkbox mr-3 mb-3\" ref={checkBoxRef}>\n            <label className=\"checkbox d-flex align-items-center pb-0 mb-0\">\n              <span className=\"checkbox__input p-2\">\n                <input\n                  type=\"checkbox\"\n                  name={option.id}\n                  value={option.id}\n                  onChange={(e) => this.selectCheckboxAnswer(e, checkBoxRef, option)}\n                />\n                <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n                  <i className=\"icon-check\"></i>\n                </span>\n              </span>\n              <h4 className=\"radio__label pr-2\">{option.value}</h4>\n            </label>\n          </div>\n        )\n      })\n      options.push(\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"px-3 py-1 font-medium onboarding-next-button\"\n            onClick={() => this.answerCheckBoxQuestion(this.state.question.id, this.state.checkBoxSelected)}\n          >Done</Button>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"personalise\">\n          {/* Personalise Header */}\n          <PersonaliseHeader />\n\n          {/* Personalise Body */}\n          <div className=\"baby-registry-onboarding container mb-15\">\n            <div className=\"row justify-content-center mt-24\">\n              <div className=\"col-12 col-md-6\">\n                <span\n                  className=\"font-body onboading-question\">{this.state.question.title}</span>\n              </div>\n            </div>\n            <div className=\"row justify-content-center mt-6\">\n              <div className=\"col-12 col-md-6\">\n                {options.map(option => option)}\n              </div>\n            </div>\n          </div>\n\n          {/* Personalise Footer */}\n          <PersonaliseFooter\n            percentage={this.calulatePercentage(this.props.statePersonaliseAnswers.length, this.props.statePersonaliseQuestions.length)}\n            prevQuestion={() => { this.gotoPrevQuestion(this.state.prevQuestionId[this.state.prevQuestionId.length - 1]) }}\n            nextQuestion={() => { this.gotoNextQuestion(this.state.question, this.state.parentId) }}\n          />\n        </div>\n\n        <ToastContainer\n          position=\"top-center\"\n          className=\"personalise-toast-container\"\n          toastClassName=\"personalise-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    statePersonaliseQuestions: state.personaliseCheckList.questions,\n    statePersonaliseAnswers: state.personaliseCheckList.answers,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport { GET_CATEGORIES } from \"../../../../api/queries\";\nimport { graphQL } from \"../../../../api/axios\";\nimport { setPersonaliseCheckListItems } from \"../../PersonaliseCheckListActions\";\nimport { connect } from \"react-redux\";\nimport './EditChecklist.scss';\nimport Counter from \"../../../commons/components/counter/Counter\";\nimport {\n  incrementCheckListQuantity,\n  setIsActiveCheckList,\n  decrementCheckListQuantity\n} from \"../../PersonaliseCheckListActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport routes from \"utils/routes\";\nimport { SAVE_UPDATED_CHECKLIST } from \"api/mutations\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"modules/commons/components/toast/Toast\";\nimport { getAllCategories } from 'utils/commonFunction';\n\n// import {setCheckListItems} from \"../../../my-registry/MyRegistryActions\";\n\nclass PersonaliseChecklist extends React.Component {\n  componentDidMount() {\n    this.getAllCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n  getAllCategories = (registryId, dispatch) => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryId)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.errors || res.data.error) {\n        // TODO: Add toast\n        console.log('Something went wrong-->', res.data.errors)\n        return;\n      } else {\n        let resData = getAllCategories(res.data.data.registryCategories, true)\n        let finalCheckList = []\n        // For Parent categories\n        for (let category of resData) {\n          let finalSubCategory = []\n\n          if (category.subCategories.length) {\n            // For Sub-Categories\n            for (let subCategory of category.subCategories) {\n              let tempSubCategory = []\n              if (subCategory.subProductTypes.length) {\n\n                // For subProductType\n                for (let subProductType of subCategory.subProductTypes) {\n                  subProductType.categoryName = subCategory.categoryName + ' (' + subProductType.categoryName + ')'\n                  if (subProductType.isExcluded) {\n                    subProductType.totalItemsCount = 1\n                    subProductType['isAdded'] = false\n                  } else {\n                    subProductType['isAdded'] = true\n                  }\n                  tempSubCategory.push(subProductType)\n                }\n              }\n              else {\n                if (subCategory.isExcluded) {\n                  subCategory.totalItemsCount = 1\n                  subCategory['isAdded'] = false\n                } else {\n                  subCategory['isAdded'] = true\n                }\n                tempSubCategory.push(subCategory)\n              }\n              finalSubCategory.push(...tempSubCategory)\n            }\n            let tempCategory = { ...category }\n            tempCategory.subCategories = finalSubCategory\n            finalCheckList.push(tempCategory)\n          }\n\n        }\n        dispatch(setPersonaliseCheckListItems(finalCheckList))\n      }\n    }).catch(err => {\n      console.error('Something went wrong-->', err);\n    })\n  }\n\n  closeAndSavePersonaliseCheckList = (event) => {\n    event.preventDefault();\n    let finalCheckListData = []\n    let tempStateCheckList = [...this.props.stateCheckList]\n    for (let category of tempStateCheckList) {\n      for (let subCategory of category.subCategories) {\n        // let tempData = null\n        let tempData = {\n          registryCategoryId: subCategory.id,\n          itemsCount: subCategory.totalItemsCount,\n          isExcluded: !subCategory.isAdded\n        }\n        finalCheckListData.push(tempData)\n      }\n    }\n\n    let registryId = this.props.stateRegistryInfo.id\n    let data = {\n      query: SAVE_UPDATED_CHECKLIST,\n      variables: {\n        registryId: registryId,\n        itemCountData: finalCheckListData\n      },\n    }\n\n    graphQL(data).then(res => {\n      if (res.data) {\n        toast.success((\n          <p>Personalise Checklist Updated Successfully</p>\n        ))\n        this.props.history.push(routes.REGISTRY.HOME)\n      }\n\n    }).catch(err => {\n      console.error(err.message)\n      toast.error((\n        <p>Some error occurred.</p>\n      ))\n    })\n  }\n\n  gotoPersonaliseQuestions = (event) => {\n    event.preventDefault();\n    this.props.history.push(routes.PERSONALIZE.HOME)\n  }\n\n  render() {\n    return (\n      // TODO: API call\n      <div className=\"personalise-checklist\">\n        {/* Header */}\n        <div className=\"py-2 personalise-checklist-header font-body font-medium\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col \">Edit Checklist</div>\n              <div className=\"col d-flex align-items-center justify-content-end\">\n                <a className=\"mr-6 personalise-header-link\" tabindex onClick={(e) => { this.gotoPersonaliseQuestions(e) }}>Take our quiz</a>\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    className=\"px-3 py-1  font-medium done-btn\"\n                    onClick={(e) => { this.closeAndSavePersonaliseCheckList(e) }}\n                  >I’m Done</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* All categries selection body */}\n        {this.props.stateCheckList.map((parentCategories, i) => (\n          <div className=\"mt-6 container\" key={parentCategories.categoryName + \"-\" + i}>\n            <div className=\"checklist-title pb-4 body-text\">\n              {parentCategories.categoryName}\n            </div>\n            <div className=\"row mt-4\">\n              {parentCategories.subCategories.map((subCategories, i) => (\n                <div className=\"col-3 mb-5\" key={subCategories.id}>\n                  <div className={[\"checklist-card pl-2 pr-3 py-3\",\n                    !subCategories.isAdded ? \"add-checklist-bg\" : \"\"].join(' ')\n                  }>\n                    <div className=\"d-flex mb-4 checklist-action-btn\">\n                      <div className=\"text-body font-medium align-self-center\">{subCategories.categoryName}</div>\n                      {subCategories.addedItemsCount <= 0 ?\n                        <div className=\"ml-auto\">\n                          <button className={[\"checklist-add-btn\",\n                            !subCategories.isAdded ? \"checklist-icon-plus\" : \"icon-close\"].join(' ')}\n                            onClick={() => this.props.dispatch(setIsActiveCheckList(subCategories.id, !subCategories.isAdded))} />\n                        </div>\n                        : null\n                      }\n                    </div>\n                    <div className=\"d-flex align-items-center\">\n                      <Counter\n                        counter={subCategories.totalItemsCount}\n                        incrementHandler={() => this.props.dispatch(incrementCheckListQuantity(subCategories.id, 1))}\n                        decrementHandler={() => this.props.dispatch(decrementCheckListQuantity(subCategories.id, 1))}\n                      />\n                      {subCategories.addedItemsCount > 0 ?\n                        <span className=\"ml-auto text-sm item-count-label\">{subCategories.addedItemsCount} added</span>\n                        : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        <Toast />\n      </div>\n    );\n  }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateCheckList: state.personaliseCheckList.editedPersonaliseCheckList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(PersonaliseChecklist);","import React from \"react\";\nimport \"./GuestView.scss\";\nimport {connect} from \"react-redux\";\nimport {updateGuestViewRegistry} from \"../../utils/commonFunction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\n\nclass GuestView extends React.Component {\n  BABY_GIFTS_URL = \"https://monicaandandy.com/collections/baby-gifts\"\n  render() {\n\n    if (this.props.stateGuestViewRegistry.urlSlug !== this.props.match.params.registrySlug) {\n      updateGuestViewRegistry(this.props.match.params.registrySlug, this.props.dispatch)\n    }\n\n    // When registry doesn't exists\n    if (this.props.stateGuestViewRegistry.notFound) {\n      return <h1>Registry not found</h1>;\n    }\n\n    if (this.props.stateGuestViewRegistry.id) {\n      // WHen registry exists and it is not public\n      if (this.props.stateGuestViewRegistry.isPublic === false) {\n        let registryUsers = [this.props.stateGuestViewRegistry.user.firstName]\n        if (this.props.stateGuestViewRegistry.user.partnerUser){\n          registryUsers.push(this.props.stateGuestViewRegistry.user.partnerUser.firstName)\n        }\n        return (\n          <div className=\"container mt-17\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n                <h1>{this.props.stateGuestViewRegistry.displayName}</h1>\n                {/*TODO: Display partner name as well below*/}\n                {registryUsers.length === 1 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> is still curating their baby registry</h4> : null}\n                {registryUsers.length === 2 ? <h4 className=\"guest-view-curator-names mt-2\"><span className=\"text-capitalize\">{registryUsers[0]}</span> and <span className=\"text-capitalize\">{registryUsers[1]}</span> are still curating their baby registry</h4> : null}\n\n                <Button\n                  variant=\"primary\"\n                  className=\"py-1 px-2 mt-3 text-body font-medium\"\n                  onClick={() => window.location.href = this.BABY_GIFTS_URL}\n                >Shop baby Gifts</Button>\n              </div>\n            </div>\n          </div>\n        )\n      } else {\n        // When registry exists and it is public\n        return <h1>Registry is public</h1>\n      }\n    }\n\n\n    // Default return\n    return <></>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stateGuestViewRegistry: state.guestView.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GuestView);","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport Onboarding from \"../onboarding/Onboarding\";\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {updateRegistryDetail, getOnboardingQuestions, createRegistry} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport {verifyAccessToken} from \"../../api/axios\";\nimport {setLoggingStatus, updateRegistryInfo} from \"../registry/RegistryActions\";\nimport PersonaliseChecklist from \"../personalise-checklist/PersonaliseChecklist\";\nimport EditChecklist from \"modules/personalise-checklist/components/edit-checklist/EditChecklist\";\nimport GuestView from \"../guest-view/GuestView\";\nimport MyRegistry from \"../my-registry/MyRegistry\";\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\n\nclass ViewsContainer extends React.Component {\n\n  state = {\n    displayContent: false,\n    foundRegistry: false\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    const access_token = cookies.get(\"access_token\")\n    if (access_token) {\n      verifyAccessToken({token: access_token}).then(res => {\n        if (res.data.data.customer) {\n          this.props.dispatch(setLoggingStatus(true))\n          if (res.data.data.registries.length > 0) {\n            this.setState({\n              foundRegistry: true\n            })\n            updateRegistryDetail(this.props.dispatch);\n          } else {\n            this.props.dispatch(updateRegistryInfo({notFound: true}))\n\n            //  Creating New Registry\n            createRegistry(this.props.dispatch)\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n        this.props.dispatch(setLoggingStatus(false))\n        this.props.dispatch(updateRegistryInfo({notFound: true}))\n      }).finally(() => {\n        this.setState({\n          displayContent: true\n        })\n      })\n    } else {\n      this.setState({\n        displayContent: true\n      })\n      this.props.dispatch(updateRegistryInfo({notFound: true}))\n    }\n  }\n\n  render() {\n\n    // if (this.props.stateRouter.location.pathname.search(route.GUEST_VIEW.HOME) !== -1) {\n    //   console.log(route.GUEST_VIEW.HOME+\"/:registryName\")\n    //   return <Redirect to={this.props.stateRouter.location.pathname}/>\n    // }\n\n    // Redirecting user to onboarding is no registry found\n    // if (this.props.stateRouter.location.pathname.search(route.ONBOARDING.HOME) === -1 && !this.props.stateRegistryInfo.id && !this.state.foundRegistry && this.state.displayContent) {\n    //   console.log(this.props.stateRouter.location.pathname)\n    //   return <Redirect to={route.ONBOARDING.HOME}/>\n    // }\n\n    if (this.props.stateOnboardingQuestions.length <= 0) {\n      getOnboardingQuestions(this.props.dispatch)\n    }\n\n    return (\n      <>\n        {this.state.displayContent ?\n          <Switch>\n            <Route exact path={route.PERSONALIZE.CHECKLIST} component={EditChecklist}/>\n            <Route exact path={route.PERSONALIZE.HOME} component={PersonaliseChecklist}/>\n            <Route exact path={route.ONBOARDING.HOME + \"/:questionId?\"} component={Onboarding}/>\n            <Route exact path={route.MY_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.VIEW_REGISTRY.HOME} component={RegistryHero}/>\n            <Route exact path={route.GUEST_VIEW.HOME + \"/:registrySlug\"} component={GuestView}/>\n            <Route path={route.REGISTRY.HOME} component={RegistryHero}/>\n            <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n            <Route render={() => <div>DEFAULT</div>}/>\n          </Switch>\n          : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}