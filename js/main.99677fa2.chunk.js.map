{"version":3,"sources":["modules/home/HomeActions.js","modules/home/HomeReducer.js","modules/my-registry/MyRegistryActions.js","modules/my-registry/MyRegistryReducer.js","modules/view-registry/ViewRegistryActions.js","modules/view-registry/ViewRegistryReducer.js","modules/registry/RegistryActions.js","modules/registry/RegistryReducer.js","modules/personalise-checklist/PersonaliseCheckListActions.js","modules/personalise-checklist/PersonaliseCheckListReducer.js","modules/onboarding/OnboardingAction.js","modules/onboarding/OnboardingReducer.js","store/Store.js","utils/i18n.js","locales/index.js","locales/en.js","locales/es.js","utils/routes.js","modules/commons/components/more-option/MoreOption.jsx","modules/commons/components/modal-component/ModalComponent.jsx","modules/commons/components/counter/Counter.jsx","modules/commons/components/card-item/CardItem.jsx","api/queries.js","api/config.js","api/axios.js","utils/constants.js","api/mutations.js","utils/commonFunction.js","modules/commons/components/button-component/ButtonComponent.jsx","modules/commons/components/added-card/AddedCard.jsx","modules/my-registry/components/checkList/CheckList.jsx","modules/commons/components/circular-progress/CircularProgress.jsx","modules/my-registry/components/checkList/CheckListItems.jsx","modules/commons/components/add-gift/bookmarklet-section/BookmarkletSection.jsx","modules/commons/components/add-gift/toggle-pills/TogglePills.jsx","modules/commons/components/radio-button/RadioButton.jsx","modules/commons/components/select-category/SelectCategory.jsx","modules/commons/components/add-gift/add-gift-another-store/AddGiftAnotherStore.jsx","modules/commons/components/view-recommend/ViewRecommend.jsx","modules/commons/components/check-box/CheckBox.jsx","modules/my-registry/components/filter/Filter.jsx","modules/my-registry/components/filter/filter-item-chip/FilterItemChip.jsx","modules/commons/components/add-gift/import-gift-card/ImportGiftCard.jsx","modules/commons/components/add-gift/import-registry/category-pill/CategoryPill.jsx","modules/commons/components/add-gift/import-registry/ImportRegistry.jsx","modules/commons/components/add-gift/AddGift.jsx","modules/my-registry/components/filter-section/FilterSection.jsx","modules/my-registry/containers/Everything/Everything.jsx","modules/my-registry/containers/MainContent/MainContent.jsx","modules/my-registry/MyRegistry.jsx","modules/view-registry/components/cover-image-picker/crop-image/CropImage.jsx","modules/view-registry/components/cover-image-picker/upload-image-card/UploadImageCard.jsx","modules/view-registry/components/cover-image-picker/default-image/DefaultImage.jsx","modules/view-registry/components/cover-image-picker/CoverImagePicker.jsx","modules/view-registry/components/edit-view-registry-detail/EditViewRegistryDetail.jsx","modules/view-registry/components/share-registry/ShareRegistry.jsx","modules/view-registry/containers/view-registry-header/ViewRegistryHeader.jsx","modules/view-registry/components/sort-filter/SortFilter.jsx","modules/view-registry/components/sort-filter-section/SortFilterSection.jsx","modules/view-registry/containers/view-registry-home/ViewRegistryHome.jsx","modules/view-registry/ViewRegistry.jsx","modules/registry-hero/RegistryHero.jsx","modules/commons/components/questions/option/Option.jsx","modules/onboarding/Onboarding.jsx","modules/Login/VerifyToken/VerifyTokenActions.js","modules/Login/VerifyToken/VerifyToken.jsx","modules/commons/ViewsContainer.jsx","api/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["HOME_ACTION_TYPES","EXAMPLE_ACTION","combineReducers","values","state","action","type","payload","date","Date","SET_DATE","MY_REGISTRY_ACTION_TYPES","ADD_RECOMMENDED_PRODUCT","INCREMENT_QUANTITY","DECREMENT_QUANTITY","SET_REGISTRY_PRODUCTS","TOGGLE_MUST_HAVE_PRODUCT","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","SET_ACTIVE_RECOMMANDATION","SET_FILTER_CATEGORY","SET_PARENT_FILTER","SET_CHILD_FILTER","CLEAR_FILTER","SET_FILTERED_PRODUCTS","GET_CHECKLIST_ITEMS","SET_ANOTHER_STORE_PRODUCT_INFO","CLEAR_ANOTHER_STORE_PRODUCT_INFO","SET_ANOTHER_STORE_REGISTRY_ITEMS","addRecommendedProduct","params","toggleMustHaveProduct","setRegistryProducts","setFilterCategory","setParentFilter","setChildFilter","clearFilter","setCheckListItems","setAnotherStoreProductInfo","clearAnotherStoreProductInfo","setAnotherStoreRegistryItems","incrementProductQuantity","id","quantity","stateInc","newState","product","push","decrementProductQuantity","stateDec","toggleMustHave","item","mostWanted","addProductToCart","length","title","variants","edges","node","price","category","parentFilter","childFilter","recommendedProducts","addedProducts","filter","_","activeRecommandation","filterCategory","filteredProducts","filterApplied","defaultData","myRegistry","defaultFilter","checkList","anotherStoreProduct","defaultAnotherStoreProductInfo","anotherStoreRegistry","VIEW_REGISTRY_ACTION_TYPES","setViewRegistryProducts","setguestViewRegistry","viewRegistryProducts","activeSortFilter","sortId","sortTitle","featuredSortApplied","guestViewRegistry","REGISTRY_ACTION_TYPES","updateRegistryInfo","setLoggingStatus","info","loggedIn","PERSONALISE_CHECKLIST_ACTION_TYPES","newSubCategory","subCategories","subCategory","totalItemsCount","setIsAddedCheckList","isAdded","editedPersonaliseCheckList","ONBOARDING_ACTION_TYPES","addQuestionAnswer","updateQuestionAnswer","questions","answers","history","createBrowserHistory","rootReducer","home","registry","registryInfo","MyRegistryReducers","viewRegistry","ViewRegistryReducers","personaliseCheckList","PersonaliseCheckListReducer","onboarding","Onboarding","router","connectRouter","middlewares","routerMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","options","interpolation","escapeValue","resources","en","translation","redirect","today","button","getUser","another","personalize","registryHeader","subTitle","visible","link","trackGifts","shower","announcements","more","toDos","es","guestView","i18next","use","LanguageDetector","init","APP_HOME_ROUTE","routes","LOGIN","VERIFY_TOKEN","REGISTRY","HOME","MY_REGISTRY","GIFTS_ADDED","GIFT_TO_ADD","GIFT_VIEW","TRACK_GIFTS","SHOWER","ANNOUNCEMENTS","MORE","TO_DOS","VIEW_REGISTRY","ONBOARDING","MoreOption","props","className","join","iconClass","buttonClass","data","map","option","index","key","onClick","name","ModalComponent","Modal","show","size","titleContent","Header","closeModal","Body","children","footer","Footer","Counter","decrementHandler","counter","incrementHandler","CardItem","src","image","originalSrc","alt","href","productLink","description","onlineStoreUrl","strikedPrice","incrementQuantityHandler","decrementQuantityHandler","addProductHandler","gql","GET_CATEGORIES","GET_PRODUCTS","GET_RECOMMENDATIONS","ADD_REGISTRY_ITEM","UPDATE_REGISTRY_ITEM","backendId","cookies","Cookies","apiURL","config","PRODUCTION_API_URL","AuthToken","get","axios","require","axiosInstance","create","baseURL","headers","axiosInstanceNoToken","graphQLNoToken","post","graphQL","getRecommendation","getAnotherRegistryProducts","axiosInstanceMultipart","graphQLMultipart","API_END_POINTS","API_URL","BACKEND_URL","MEDIA_URL_PREFIX","BOOKMARKLET_SCRIPT","TOGGLE_MUST_HAVE","UPDATE_REGISTRY","REGISTER_USER","SAVE_QUESTION_RESPONSE","getProducts","registryId","dispatch","query","variables","parseInt","then","res","responseData","registryItems","newItemObj","registryitemImage","imageUrl","catch","err","console","error","message","removeProductFromCartHandler","card","registryItemId","getCategories","toast","errors","log","finalCategories","categories","parentCategory","newSubCategories","cat","updateRegistryDetail","registries","currentRegistryInfo","e","getOnboardingQuestions","isPersonalize","question","followUpQuestions","followUpQuestion","isAnswered","ButtonComponent","React","forwardRef","ref","btnVariantClass","variant","disabled","AddedCard","useDispatch","stateGuestViewRegistry","useSelector","stateRecommendedProducts","stateAddedProducts","stateRegistryInfo","useState","setRecommendedProducts","setShow","modalTitle","categoryName","showRemoveModel","setShowRemoveModel","moreOptionsData","categoryRecommended","Number","jsonObject","JSON","stringify","uniqueSet","Set","Array","from","parse","showRecommendation","removeConfirmFooter","DragHandle","sortableHandle","disabledDrag","draggable","cardId","newRecommended","incrementQuantity","updated","decrementQuantity","existingProduct","sku","storeItemUrl","parseFloat","shopifyItemId","tags","success","CheckList","this","t","style","width","percentage","Component","withTranslation","CircularProgress","value","text","strokeWidth","styles","buildStyles","textSize","textColor","pathColor","trailColor","CheckListItems","getOffset","el","rect","getBoundingClientRect","left","scrollX","top","scrollY","scrollToCategory","categorySection","document","getElementById","offset","scrollTo","getSubList","addedItemsCount","handleToggleEvent","checkListIconEl","checkListHeader","current","firstChild","classList","toggle","createRef","subListItem","Accordion","Card","Toggle","as","eventKey","Collapse","connect","BookmarkletSection","updateModal","modalBody","modalTitleContent","modalFooterButtons","modalCloseHandler","setState","openAddBookmarkletModal","prevState","addItemToRegistry","TogglePills","activeClass","RadioButton","checked","onChange","changeHandler","textClass","display","count","SelectCategory","setCategories","currentCategory","selectedCategory","setSelectedCategory","newCategories","newParentCategory","childCategory","displayName","categorySelectBody","saveButton","changeCurrentCategory","showModal","AddGiftAnotherStore","ACCEPTED_IMAGE_TYPE","categoryModalShow","setCategoryModalVisible","hideProductDetails","setHideProductDetails","showLoading","setshowLoading","productInfo","productImage","productName","howToGift","note","mustHave","groupGift","purchased","imageInput","setQuantity","prodInfo","changePrice","productNameChangeHandler","ev","persist","changeProductName","target","noteChangeHandler","changeNote","selectFileHandler","files","file","includes","reader","FileReader","onload","changeProductImage","result","fileType","fileName","readAsDataURL","alert","submitStoreUrl","preventDefault","keyCode","URL","url","productUrl","changeProductUrl","reqData","item_url","resData","img","newPrice","char","isInteger","getRefinedPrice","onKeyUp","placeholder","class","role","click","accept","rows","defaultValue","priceChangeHandler","readOnly","openCategorySelect","toggleGroupGift","togglePurchased","changeHowToGift","ViewRecommend","cardRef","clearModalData","getCategoryId","currentRecommendation","stateActiveRecommandation","stateChecklist","checkDataValidity","storeProduct","stateAnotherStoreProduct","storeUrl","storeName","hostname","split","formData","FormData","ADD_REGISTRY_ITEM_MUTATION","operationName","input","items","append","images","dataURItoBlob","status","commonGetProducts","commonGetCategories","anotherStoreItemViewDetail","open","addOnMyOwnClickHandler","newCategory","toLowerCase","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","products","height","offsetHeight","CheckBox","Filter","filterData","tempParentFilterId","tempChildFilterIds","filterContentRef","toggleFilterContent","parent","child","childId","parentId","childIndex","indexOf","newChildArray","splice","childChangeHandler","FilterItemChip","deleteHandler","ImportGiftCard","CategoryPill","removeCategory","ImportRegistry","registryUrl","errorMessage","loading","activeCategoryProductIndex","currentRegistryLink","inputHasFocus","inputRef","changeLoadingState","registryUrlChangeHandler","checkUrlAndGetRegistryItems","getAnotherRegistryProductsInfo","registryUrlKeyUpHandler","blur","store_name","store_url","newProducts","finally","openSelectCategoryModal","productIndex","stateAnotherStoreRegistry","setProductCategories","newProductState","removeSelectedCategory","categoryId","changeRegistryUrl","focus","bind","onFocus","onBlur","AddGift","categoryList","dataURI","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","blob","Blob","File","openAddGiftModal","importGiftAnotherStoreHandler","importRegistry","validImportRegistryData","getCleanedRegistryItems","cleanedRegistryItems","itemStore","stores","find","newStore","importRegistryClickHandler","jsonGraphQL","addRegistryItems","FilterSection","deleteChipHandler","isParent","stateFilterApplied","element","clearFilterHandler","filterChips","allChild","stateFilterCategory","productCount","stateFilteredProducts","Everything","updateFilterList","newFilterList","isPurchased","isReserved","productId","mustHaveValue","setAllRecommendation","recommendedCategory","parentCat","recommendedCat","productType","rData","getSortedProducts","stateCategories","allProducts","added","total","recommendations","childFilterArray","addedRecommendations","getChecklistPercentage","checklistItems","totalItems","addedItems","stateCheckList","stateProducts","MainContent","exact","path","route","component","MyRegistry","CropImage","ASPECT_RATIO","imgRef","useRef","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","useEffect","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","getCroppedImg","setCroppedImage","crossorigin","onImageLoaded","newCrop","onComplete","c","UploadImageCard","DefaultImage","data-selected","selected","CoverImagePicker","fileRef","croppedImage","uploadImage","setUploadImage","defaultImage","setDefaultImage","customImage","setCustomImage","modalFooter","registryImages","defaultImages","fileChangeHandler","imageId","updateRegistry","closeCoverImagePicker","registryImage","EditViewRegistryDetail","registryName","changeRegistryName","greeting","changeGreeting","maxLength","greetingChangeHandler","closeEditRegistryDetail","dueDate","ShareRegistry","urlSlug","registryInfoUrl","setRegistryInfoUrl","isPublic","registryVisibility","setRegistryVisibility","setRegistryUrl","registryError","setRegistryError","inputContainerRef","changeRegistryVisibility","newRegistry","siteHostName","add","remove","checkUpdateRegistryUrlSlug","body","appendChild","select","execCommand","removeChild","closeShareRegistry","ViewRegistryHeader","showCoverImagePicker","showEditRegistryDetail","showShareRegistry","changeRegistryDetail","handleGuestView","handleDisableViewGuest","COVER_PIC_OPTIONS","backgroundImage","activeOptionClass","SortFilter","activeSortFilterState","handleSortSelection","sortItem","SortFilterSection","handleIsGotIt","isFeaturedNoticeRead","stateViewRegistryProducts","stateActiveSortFilter","ViewRegistryHome","SortableItem","sortableElement","toggleMustHaveProductAction","SortableContainer","sortableContainer","sortByMustHave","productList","sort","a","b","sortByFeatured","isFeatured","sortByLowToHigh","sortByHighToLow","productData","filteredSortProducts","sortedProducts","sortedData","viewRegistryProductsId","addProduct","getSortedFilteredProducts","onSortEnd","oldIndex","newIndex","itemsOldPosition","arrayMove","position","oldPosition","updateViewRegistryPosition","helperClass","axis","lockAxis","useDragHandle","ViewRegistry","RegistryHero","useTranslation","registryData","RegistryHeroData","babyArrival","Navbar","expand","aria-controls","Nav","to","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","closeButton","event","parentElement","dismiss","Option","LOGIN_TITLE","SIGNUP_TITLE","PARTNER_TITLE","RADIO","PARTNER","login","toastMessage","submitAllAnswers","stateOnboardingAnswers","response","answer","optionText","method","addRegistryQuestionOption","clearToastMessage","setToastMessage","gotoNextQuestion","nextQuestionId","returnNext","idToMatch","stateOnboardingQuestions","ques","stateLoggedIn","redirectionUrl","setQuestionBasedOnId","questionId","finalQuestion","foundQuestion","parentQuestion","addAnswerToState","answerRadioQuestion","watchNextBtn","nextBtnState","answerDataQuestion","textInputTypeChangeHandler","inputRefs","enableBtn","changeLoginState","getSignInContent","signUpClickHandler","nameRef","emailRef","passwordRef","email","password","registerUser","set","token","getSignUpContent","getPartnerContent","undefined","onpopstate","location","pathname","search","match","stateRouter","answerInputType","staticQuestionTitle","helpText","fields","field","content","VERIFY_TOKEN_ACTION_TYPES","verifyTokenRequest","customer","redirectVerifyToken","VerifyToken","verifyToken","ViewsContainer","access_token","render","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","locations","httpLink","HttpLink","uri","ApolloLink","ApolloClient","App","I18nextProvider","i18n","client","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","process","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.99677fa2.chunk.js","sourcesContent":["import { push } from \"connected-react-router\";\n\nexport const HOME_ACTION_TYPES = {\n  EXAMPLE_ACTION: \"EXAMPLE_ACTION\"\n};\n\nconst exampleActionCreator = param => ({\n  type: HOME_ACTION_TYPES.EXAMPLE_ACTION,\n  payload: param\n});\n\nexport const exampleAction = param => dispatch => {\n  dispatch(exampleActionCreator(param));\n};\n\nexport const redirectExample = () => dispatch => {\n  dispatch(push(\"/another\"));\n};\n","import { combineReducers } from \"redux\";\nimport { HOME_ACTION_TYPES } from \"./HomeActions\";\n\nconst values = (state = [], action) => {\n  switch (action.type) {\n    case HOME_ACTION_TYPES.EXAMPLE_ACTION:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst date = (state = new Date(), action) => {\n  //initialize state with today date\n  switch (action.type) {\n    case HOME_ACTION_TYPES.SET_DATE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  values,\n  date\n});\n","export const MY_REGISTRY_ACTION_TYPES = {\n\t// Recommended Product\n\tADD_RECOMMENDED_PRODUCT: \"ADD_RECOMMENDED_PRODUCT\",\n\tINCREMENT_QUANTITY: \"INCREMENT_QUANTITY\",\n\tDECREMENT_QUANTITY: \"DECREMENT_QUANTITY\",\n\n\t// Registry product\n\tSET_REGISTRY_PRODUCTS: \"SET_REGISTRY_PRODUCTS\",\n\tTOGGLE_MUST_HAVE_PRODUCT: \"TOGGLE_MUST_HAVE_PRODUCT\",\n\tADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n\tREMOVE_PRODUCT_FROM_CART: \"REMOVE_PRODUCT_FROM_CART\",\n\n\t// CheckList\n\tSET_ACTIVE_RECOMMANDATION : \"SET_ACTIVE_RECOMMANDATION\",\n\n\t// Filter Category\n\tSET_FILTER_CATEGORY: \"SET_FILTER_CATEGORY\",\n\n\t// Filter\n\tSET_PARENT_FILTER: \"SET_PARENT_FILTER\",\n\tSET_CHILD_FILTER: \"SET_CHILD_FILTER\",\n\tCLEAR_FILTER: \"CLEAR_FILTER\",\n\n\t// Filtered Products\n\tSET_FILTERED_PRODUCTS : \"SET_FILTERED_PRODUCTS\",\n\tGET_CHECKLIST_ITEMS: \"GET_CHECKLIST_ITEMS\",\n\n  //ANOTHER STORE PRODUCT\n  SET_ANOTHER_STORE_PRODUCT_INFO : \"SET_ANOTHER_STORE_PRODUCT_INFO\",\n  CLEAR_ANOTHER_STORE_PRODUCT_INFO : \"CLEAR_ANOTHER_STORE_PRODUCT_INFO\",\n\n  // ANOTHER STORE REGISTRY\n  SET_ANOTHER_STORE_REGISTRY_ITEMS: \"SET_ANOTHER_STORE_REGISTRY_ITEMS\"\n}\n\nexport const addRecommendedProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const incrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const toggleMustHaveProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const setRegistryProducts = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS,\n\t\tpayload: params\n\t}\n}\n\nexport const addProductToCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProduct = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT,\n\t\tpayload: params\n\t}\n}\n\nexport const removeProductFromCart = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART,\n\t\tpayload: params\n\t}\n}\n\nexport const setActiveRecommandation = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION,\n\t\tpayload: params\n\t}\n}\n\n// Filter Category Section\nexport const setFilterCategory = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY,\n\t\tpayload: params\n\t}\n}\n\n// Filter Section\n\nexport const setParentFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const setChildFilter = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER,\n\t\tpayload: params\n\t}\n}\n\nexport const clearFilter = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER,\n\t}\n}\n\n// Filtered Products\nexport const setFilteredProduct = (params) => {\n  return {\n    type: MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const setCheckListItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\n// Another store product info\nexport const setAnotherStoreProductInfo = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO,\n\t\tpayload: params\n\t}\n}\n\nexport const clearAnotherStoreProductInfo = () => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO,\n\t}\n}\n\n//Another store Registry Items\nexport const setAnotherStoreRegistryItems = params => {\n\treturn {\n\t\ttype: MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS,\n\t\tpayload: params\n\t}\n}","import {MY_REGISTRY_ACTION_TYPES} from \"./MyRegistryActions\";\nimport {combineReducers} from \"redux\";\nimport defaultData from \"data/ReducerDefaultData.json\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let product of stateInc) {\n    if (product.id === id) {\n      product.quantity += quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n  let stateDec = [...state];\n  let newState = [];\n  for (let product of stateDec) {\n    if (product.id === id && product.quantity - quantity > 0) {\n      product.quantity -= quantity;\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst toggleMustHave = (state, payload) => {\n  let newState = [];\n  for (let product of state) {\n    if (product.item.id === payload) {\n      product.mostWanted = !product.mostWanted\n    }\n    newState.push(product);\n  }\n  return newState;\n}\n\nconst addProductToCart = (state, payload) => {\n  for (let product of state) {\n    if (product.item.id === payload.id) {\n      return state\n    }\n  }\n\n  let product = {}\n  product['id'] = payload.id;\n  product['isGroupGift'] = false;\n  product['isReserved'] = false;\n  product['quantity'] = payload.quantity;\n  product['mostWanted'] = false;\n  product['orderNo'] = null;\n  product['giftMessage'] = null;\n  product['isAmountReceived'] = false;\n  product['isPurchased'] = false;\n  product['featuredOrder'] = state.length;\n\n  // TODO: Make item_id dynamic after calling POST API for adding it\n  let item = {}\n  item['id'] = payload.id;\n  item['title'] = payload.title;\n  item['shopifyItemId'] = product['id'];\n  item['note'] = null;\n  item['price'] = payload.variants.edges[0].node.price;\n\n  // TODO: Make category dynamic after POST API call\n  let category = {}\n  category['id'] = 2;\n  category['categoryName'] = 'Bassinet';\n  category['isRoot'] = false;\n\n  item['category'] = category;\n  product['item'] = item;\n\n\n  return [...state, product];\n}\n\n\nconst setParentFilter = (state, payload) => {\n  let newState = {...state}\n  newState.parentFilter = payload\n  newState.childFilter = [...state.childFilter]\n\n  return newState\n}\n\n\nconst setChildFilter = (state, payload) => {\n  let newState = {...state}\n  newState.childFilter = [...payload]\n\n  return newState\n}\n\n\n// Reducers\n\n// const products = (state = defaultData.myRegistry.defaultProduct, action) => {\nconst recommendedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.ADD_RECOMMENDED_PRODUCT:\n      return state.length === 0 ? [...action.payload] : [...state, ...action.payload];\n    case MY_REGISTRY_ACTION_TYPES.INCREMENT_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case MY_REGISTRY_ACTION_TYPES.DECREMENT_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n// const addedProducts = (state = defaultData.myRegistry.defaultAddedProduct, action) => {\nconst addedProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_REGISTRY_PRODUCTS:\n      return action.payload;\n    case MY_REGISTRY_ACTION_TYPES.TOGGLE_MUST_HAVE_PRODUCT:\n      return toggleMustHave([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.ADD_PRODUCT_TO_CART:\n      return addProductToCart([...state], action.payload);\n    case MY_REGISTRY_ACTION_TYPES.REMOVE_PRODUCT_FROM_CART:\n      return state.filter((product, _) => {\n        return product.item.id !== action.payload\n      })\n    default:\n      return state;\n  }\n}\n\nconst activeRecommandation = (state = \"\", action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ACTIVE_RECOMMANDATION:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst filteredProducts = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTERED_PRODUCTS:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nconst filterCategory = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_FILTER_CATEGORY:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst filterApplied = (state = defaultData.myRegistry.defaultFilter, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_PARENT_FILTER:\n      return setParentFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.SET_CHILD_FILTER:\n      return setChildFilter(state, action.payload)\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_FILTER:\n      return defaultData.myRegistry.defaultFilter\n    default:\n      return state;\n  }\n}\n\nconst checkList = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.GET_CHECKLIST_ITEMS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreProduct = (state = defaultData.myRegistry.defaultAnotherStoreProductInfo, action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_PRODUCT_INFO:\n      return {...action.payload};\n    case MY_REGISTRY_ACTION_TYPES.CLEAR_ANOTHER_STORE_PRODUCT_INFO:\n      return defaultData.myRegistry.defaultAnotherStoreProductInfo;\n    default:\n      return state;\n  }\n}\n\nconst anotherStoreRegistry = (state = [], action) => {\n  switch (action.type) {\n    case MY_REGISTRY_ACTION_TYPES.SET_ANOTHER_STORE_REGISTRY_ITEMS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  recommendedProducts,\n  addedProducts,\n  activeRecommandation,\n  filterCategory,\n  filteredProducts,\n  filterApplied,\n  checkList,\n  anotherStoreProduct,\n  anotherStoreRegistry\n})","export const VIEW_REGISTRY_ACTION_TYPES = {\n\t// View Registry product\n  VIEW_REGISTRY_PRODUCTS: \"VIEW_REGISTRY_PRODUCTS\",\n  \n  // Filtered Products\n  SET_SORTED_PRODUCTS: \"SET_SORTED_PRODUCTS\",   \n  ACTIVE_SORT_FILTER: \"ACTIVE_SORT_FILTER\",\n  IS_FEATURED_SORT_APPLIED: \"IS_FEATURED_SORT_APPLIED\",\n  IS_GUEST_VIEW: \"IS_GUEST_VIEW\",\n}\n\nexport const setViewRegistryProducts = params => {\n\treturn {\n\t\ttype: VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS,\n\t\tpayload: params\n    }\n}\n\nexport const setSortedFilteredProduct = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.SET_SORTED_PRODUCTS,\n    payload: params\n  }\n}\n\nexport const activeSortFilter = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER,\n    payload: params\n  }\n}\n\nexport const setFeaturedSortApplied = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_FEATURED_SORT_APPLIED,\n    payload: params\n  }\n}\n\nexport const setguestViewRegistry = (params) => {\n  return {\n    type: VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW,\n    payload: params\n  }\n}","import {VIEW_REGISTRY_ACTION_TYPES} from \"./ViewRegistryActions\";\nimport {combineReducers} from \"redux\";\n\nconst viewRegistryProducts = (state = [], action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.VIEW_REGISTRY_PRODUCTS:\n          return [...action.payload];\n      default:\n          return state;\n    }\n}\n\nconst activeSortFilter = (state = {sortId: 1, sortTitle: 'Featured'}, action) => {\n    switch (action.type) {\n      case VIEW_REGISTRY_ACTION_TYPES.ACTIVE_SORT_FILTER:\n        return {...action.payload};\n      default:\n        return state;\n    }\n  }\n\nconst featuredSortApplied = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_FEATURED_SORT_APPLIED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst guestViewRegistry = (state = false, action) => {\n  switch (action.type) {\n    case VIEW_REGISTRY_ACTION_TYPES.IS_GUEST_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n    viewRegistryProducts,\n    activeSortFilter,\n    featuredSortApplied,\n    guestViewRegistry\n})\n","export const REGISTRY_ACTION_TYPES = {\n  UPDATE_REGISTRY_INFO: \"UPDATE_REGISTRY_INFO\",\n  SET_LOGGING_STATUS: \"SET_LOGGING_STATUS\"\n}\n\nexport const updateRegistryInfo = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO,\n    payload: params\n  }\n}\n\nexport const setLoggingStatus = (params) => {\n  return {\n    type: REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS,\n    payload: params\n  }\n}","import {REGISTRY_ACTION_TYPES} from \"./RegistryActions\"\nimport {combineReducers} from \"redux\";\n\nconst registryInfo = (state = {}, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.UPDATE_REGISTRY_INFO:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case REGISTRY_ACTION_TYPES.SET_LOGGING_STATUS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  info: registryInfo,\n  loggedIn\n});","export const PERSONALISE_CHECKLIST_ACTION_TYPES = {\n\n\tGET_ALL_CHECKLIST_ITEMS: \"GET_ALL_CHECKLIST_ITEMS\",\n\tINCREMENT_CHECKLIST_QUANTITY: \"INCREMENT_CHECKLIST_QUANTITY\",\n\tDECREMENT_CHECKLIST_QUANTITY: \"DECREMENT_CHECKLIST_QUANTITY\",\n\tCHECKLIST_ADDED: \"CHECKLIST_ADDED\",\n}\n\nexport const incrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\nexport const decrementCheckListQuantity = (id, quantity) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY,\n\t\tpayload: { id, quantity }\n\t}\n}\n\n\nexport const setPersonaliseCheckListItems = params => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS,\n\t\tpayload: params\n\t}\n}\n\nexport const setIsActiveCheckList = (id, isAdded) => {\n\treturn {\n\t\ttype: PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED,\n\t\tpayload: { id, isAdded }\n\t}\n}","import {PERSONALISE_CHECKLIST_ACTION_TYPES} from \"./PersonaliseCheckListActions\";\nimport {combineReducers} from \"redux\";\n\n// Functions\nconst incrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.totalItemsCount += quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst decrementProductQuantity = (state, payload) => {\n  let {\n    id,\n    quantity\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id && subCategory.totalItemsCount > 1) {\n        subCategory.totalItemsCount -= quantity;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\nconst setIsAddedCheckList = (state, payload) => {\n  let {\n    id,\n    isAdded\n  } = payload;\n\n  let stateInc = [...state];\n  let newState = [];\n  for (let category of stateInc) {\n    let newSubCategory = []\n    for (let subCategory of category.subCategories) {\n      if (subCategory.id === id) {\n        subCategory.isAdded = isAdded;\n      }\n      newSubCategory.push(subCategory)\n    }\n    category.subCategories = newSubCategory\n    newState.push(category)\n  }\n  return newState;\n}\n\n\n// Reducers\nconst editedPersonaliseCheckList = (state = [], action) => {\n  switch (action.type) {\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.GET_ALL_CHECKLIST_ITEMS:\n      return [...action.payload];\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.INCREMENT_CHECKLIST_QUANTITY:\n      return incrementProductQuantity(state, action.payload);\n    case PERSONALISE_CHECKLIST_ACTION_TYPES.DECREMENT_CHECKLIST_QUANTITY:\n      return decrementProductQuantity(state, action.payload);\n      case PERSONALISE_CHECKLIST_ACTION_TYPES.CHECKLIST_ADDED:\n        return setIsAddedCheckList(state, action.payload);\n    default:\n      return state;\n  }\n}\n\n\nexport default combineReducers({\n  editedPersonaliseCheckList,\n})","export const ONBOARDING_ACTION_TYPES = {\n  ADD_QUESTION: \"ADD_QUESTION\",\n  ADD_ANSWER: \"ADD_ANSWER\",\n  UPDATE_ANSWER: \"UPDATE_ANSWER\"\n}\n\nexport const addOnboardingQuestion = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_QUESTION,\n    payload: params\n  }\n}\n\nexport const addQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.ADD_ANSWER,\n    payload: params\n  }\n}\n\nexport const updateQuestionAnswer = (params) => {\n  return {\n    type: ONBOARDING_ACTION_TYPES.UPDATE_ANSWER,\n    payload: params\n  }\n}","import {ONBOARDING_ACTION_TYPES} from \"./OnboardingAction\";\nimport {combineReducers} from \"redux\";\n\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_QUESTION:\n      return [...state, ...action.payload]\n    default:\n      return state\n  }\n}\n\nconst answers = (state = [], action) => {\n  switch (action.type) {\n    case ONBOARDING_ACTION_TYPES.ADD_ANSWER:\n      return [...state, action.payload]\n    case ONBOARDING_ACTION_TYPES.UPDATE_ANSWER:\n      return [...action.payload]\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  questions,\n  answers\n});","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from \"history\";\nimport home from \"../modules/home/HomeReducer\";\nimport MyRegistryReducers from \"../modules/my-registry/MyRegistryReducer\";\nimport ViewRegistryReducers from \"modules/view-registry/ViewRegistryReducer\";\nimport registryInfo from \"../modules/registry/RegistryReducer\";\nimport PersonaliseCheckListReducer from \"../modules/personalise-checklist/PersonaliseCheckListReducer\";\nimport Onboarding from \"../modules/onboarding/OnboardingReducer\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  home,\n  registry: registryInfo,\n  myRegistry: MyRegistryReducers,\n  viewRegistry: ViewRegistryReducers,\n  personaliseCheckList: PersonaliseCheckListReducer,\n  onboarding: Onboarding,\n  router: connectRouter(history)\n})\n\nconst middlewares = [routerMiddleware(history), thunk];\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18next from 'i18next';\nimport { en, es } from '../locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false\n  },\n  resources: { en, es }\n};\n\ni18next.use(LanguageDetector).init(options);\n\nexport default i18next;\n","import enLocale from \"./en\";\nimport esLocale from \"./es\";\n\nexport const en = { translation: enLocale };\nexport const es = { translation: esLocale };\n","export default {\n  home: {\n    title: \"HOME\",\n    redirect: \"Redirect\",\n    today: \"Today is the day\",\n    button: \"Dispatch an example action\",\n    values: \"Values from the store (dispatch an action to load more)\",\n    getUser: \"Get Users by Apollo GraphQL queries:\"\n  },\n  another: {\n    title: \"ANOTHER VIEW\"\n  },\n  checkList: {\n    title: \"Checklist\",\n    personalize: \"Personalize\"\n  },\n  registryHeader: {\n    subTitle: \"Due on \",\n    visible: \"Visible\",\n    link:{\n      myRegistry: \"Build Registry\",\n      viewRegistry: \"View Registry\",\n      trackGifts: \"Track Gifts\",\n      shower: \"Baby Shower\",\n      announcements: \"Announcements\",\n      more: \"More\",\n      toDos: \"Here are your top to-dos\"\n    }\n  }\n};\n","export default {\n  home: {\n    title: \"INICIO\",\n    redirect: \"REDIRIGIR\",\n    today: \"Hoy es el día\",\n    button: \"Disparar acción de ejemplo\",\n    values: \"Resultado del store (disparar una acción para cargar más)\",\n    getUser: \"Obtener usuarios mediante consultas de Apollo GraphQL:\"\n  },\n  another: {\n    title: \"OTRA VISTA\"\n  },\n  checkList: {\n    title: \"\",\n    personalize: \"\"\n  },\n  registryHeader: {\n    subTitle: \"\",\n    visible: \"\",\n    link:{\n      myRegistry: \"\",\n      guestView: \"\",\n      trackGifts: \"\",\n      shower: \"\",\n      announcements: \"\",\n      more: \"\",\n      toDos: \"\"\n    }\n  }\n};\n","let APP_HOME_ROUTE = \"/pages/registry\";\n\nlet routes = {\n  LOGIN: {\n    VERIFY_TOKEN: APP_HOME_ROUTE + \"/verify-token/:token\"\n  },\n  REGISTRY: {\n    HOME: APP_HOME_ROUTE\n  },\n\n  MY_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/home\",\n    GIFTS_ADDED: APP_HOME_ROUTE + \"/gifts-added\",\n    GIFT_TO_ADD: APP_HOME_ROUTE + \"/gifts-to-add\",\n    GIFT_VIEW: APP_HOME_ROUTE + \"/guest-view\",\n    TRACK_GIFTS: APP_HOME_ROUTE + \"/track_gifts\",\n    SHOWER: APP_HOME_ROUTE + \"/shower\",\n    ANNOUNCEMENTS: APP_HOME_ROUTE + \"/announcements\",\n    MORE: APP_HOME_ROUTE + \"/more\",\n    TO_DOS: APP_HOME_ROUTE + \"/to_dos\"\n  },\n\n  VIEW_REGISTRY: {\n    HOME: APP_HOME_ROUTE + \"/view-registry\"\n  },\n\n  ONBOARDING: {\n    HOME: APP_HOME_ROUTE + \"/onboarding\"\n  }\n}\nexport default routes;","import React from 'react';\nimport \"./MoreOption.scss\";\n\nconst MoreOption = (props) => {\n  return (\n    <div className={[\"more-option\", props.className ? props.className : null].join(\" \")}>\n      <button className={[\"more-option-dropbtn my-auto\", props.iconClass, props.buttonClass ? props.buttonClass : \"\"].join(\" \")} />\n      <div className={[\"more-option-dropdown\"].join(\" \")}>\n        <div className=\"more-option-content py-1\">\n          <ul className=\"p-0 m-0\">\n            {props.data ?\n              props.data.map((option, index) =>\n                <li className=\"py-2 px-4 text-sm\" key={\"option-\" + index}>\n                  <button className=\"more-option-item\" onClick={() => {\n                    option.action();\n                  }}>{option.name}</button>\n                </li>\n              )\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoreOption;\n","import React from 'react';\nimport \"./ModalComponent.scss\";\nimport {Modal} from 'react-bootstrap';\n\nconst ModalComponent = (props) => {\n  return (\n    <Modal show={props.show} size={props.size ? props.size : \"xl\"} className=\"m-a-modal\">\n      {props.title || props.titleContent ?\n        <Modal.Header className=\"px-3 pt-3 pb-1 d-block\">\n          <div>\n            <div className=\"d-flex justify-content-between\">\n              <h1>{props.title}</h1>\n              <i className=\"icon-close m-a-modal-close align-self-center\" onClick={props.closeModal}/>\n            </div>\n          </div>\n\n          {/* OPTIONAL CONTENT IN TITLE PORTION */}\n          {props.titleContent ? props.titleContent : null}\n\n        </Modal.Header> : null}\n      <Modal.Body className=\"p-3 m-a-modal-content\">\n        {/*<div className=\"row\">*/}\n        {/*  <div className=\"col\">*/}\n        {/* MODAL CONTENT GOES HERE */}\n        {props.children}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </Modal.Body>\n      {props.footer ?\n        <Modal.Footer className=\"px-3 py-3 m-a-modal-footer\">\n          {/*  MODAL FOOTER BUTTONS GOES HERE*/}\n          {props.footer}\n        </Modal.Footer>\n        : null}\n    </Modal>\n\n\n  )\n}\n\nexport default ModalComponent;","import React from 'react'\nimport \"./Counter.scss\";\n\nconst Counter = (props) => {\n\treturn (\n\t\t<div className={[\"counter\", \"d-flex\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<button className=\"icon-btn icon-circle-minus pl-0\" onClick={props.decrementHandler}></button>\n\t\t\t<span className=\"mx-2\">{props.counter}</span>\n\t\t\t<button className=\"icon-btn icon-circle-plus pr-0\" onClick={props.incrementHandler}></button>\n\t\t</div >\n\t);\n}\n\nexport default Counter;","import React from 'react';\nimport \"./CardItem.scss\";\nimport Counter from \"modules/commons/components/counter/Counter\";\n\nconst CardItem = (props) => {\n\n\treturn (\n\t\t<div className={[\"card-item\", props.className ? props.className : \"\"].join(\" \")}>\n\t\t\t<div className=\"product-image text-center\">\n\t\t\t\t<img className=\"mx-auto\" src={props.data.variants.edges[0].node.image.originalSrc} alt={props.data.title} />\n\t\t\t</div>\n\t\t\t<div className=\"product-bottom mt-3 px-2 pb-2\">\n\t\t\t\t<div className=\"product-title font-medium text-body\">\n\t\t\t\t\t<span><a href={props.data.productLink}>{props.data.title}</a></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-heading mt-3 text-sm font-medium\">\n\t\t\t\t\t<span>Why we love it?</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"product-sub-text-description text-sm text-sm\">\n\t\t\t\t\t<span>{props.data.description} <a href={props.data.onlineStoreUrl}>Read more</a></span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"product-price d-flex mt-3\">\n\t\t\t\t\t\t<h5>${props.data.variants.edges[0].node.price}</h5>\n\t\t\t\t\t\t{props.data.strikedPrice ? <span className=\"strike-price ml-1\">{props.data.strikedPrice}</span> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex align-items-center mt-3\">\n\t\t\t\t\t\t<Counter\n\t\t\t\t\t\t\tcounter={props.data.quantity}\n\t\t\t\t\t\t\tincrementHandler={props.incrementQuantityHandler}\n\t\t\t\t\t\t\tdecrementHandler={props.decrementQuantityHandler} />\n\n\t\t\t\t\t\t<button className=\"add-btn ml-auto\" onClick={props.addProductHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CardItem;","import {gql} from '@apollo/client';\n\n// Add queries\n\nconst GET_USERS = gql`\nquery getUsers {\n    users {\n        id,\n        email\n    }\n}\n`;\n\nconst GET_CATEGORIES = `\nquery getCategories($registryId: Int!){\n  categories(registryId:$registryId){\n    id,\n    categoryName,\n    isRoot\n    subCategories{\n      id,\n      categoryName,\n      addedItemsCount,\n      totalItemsCount\n    }\n    addedItemsCount,\n    totalItemsCount\n  }\n }\n`;\n\nconst GET_PRODUCTS = `\nquery registryItems($registryId:Int!){\n    registryItems(registryId:$registryId){\n      edges{\n        node{\n          id,\n          registryitemImage{\n            image\n          }\n          isGroupGift,\n          isReserved,\n          quantity,\n          mostWanted,\n          featuredOrder,\n          orderNo,\n          giftMessage,\n          isReserved,\n          isAmountReceived,\n          isPurchased,\n          item{\n            id,\n            title,\n            shopifyItemId,\n            note,\n            sku,\n            price,\n            imageUrl,\n            category {\n              id,\n              categoryName,\n              isRoot,\n\n            }\n          }\n        }\n      }\n    }\n  }\n\n`\n\nconst GET_RECOMMENDATIONS = `\nquery recommendation($productCount: Int!, $productType: String!){\n  products(first:$productCount,\n    query:$productType){\n      edges{\n        node{\n          id,\n          handle,\n          title,\n          description,\n          vendor,\n          onlineStoreUrl,\n          variants (first:1){\n            edges {\n              node {\n                price,\n                sku,\n                image{\n                  originalSrc\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_REGISTRY_ITEM = `\nmutation addRegistryItems(\n    $registryId:Int!,\n    $title:String!,\n    $category:Int!,\n    $tags:[Int]!,\n    $storeItemUrl:String!,\n    $sku:String!,\n    $price:Float!,\n    $quantity:Int!,\n    $shopifyItemId:String,\n    $imageUrl: String){\n  addRegistryItems(registryId:$registryId,\n  registryItems:[{\n    storeName:\"monicaandandy\",\n    items: [{\n      title:$title,\n      category:$category,\n      tags:$tags,\n      storeItemUrl:$storeItemUrl,\n      sku:$sku,\n      price:$price,\n      quantity:$quantity,\n      shopifyItemId: $shopifyItemId,\n      imageUrl: $imageUrl\n    },]\n  }])\n  {\n    message\n  }\n}\n`;\n\nconst UPDATE_REGISTRY_ITEM = `\nmutation updateRegistryItems($registryItemId: Int!, $quantity: Int!){\n  updateRegistryItems(registryItemId:$registryItemId, registryItemData:{\n    quantity:$quantity,\n    isReserved:false,\n  }){\n    message\n  }\n}\n`;\n\nconst REMOVE_REGISTRY_ITEM = `\nmutation deleteRegistryItems($registryItemId: Int!){\n  deleteRegistryItems(registryItemId:$registryItemId){\n    message\n  }\n}\n`;\n\nconst GET_REGISTRIES = `\nquery {\n  registries {\n    edges {\n      node {\n        id\n        name\n        urlSlug\n        greeting\n        displayName\n        isFeaturedNoticeRead\n        isFeatured\n        image {\n          id\n          image\n        }\n        dueDate\n        isPublic\n      }\n    }\n  }\n}\n`;\n\nconst GET_REGISTRY_IMAGES = `\n  query registryImages($registryId: Int!){\n    registryImages(registryId: $registryId) {\n      id\n      image\n      isDefault\n    }\n  }\n`;\n\nconst GET_QUESTIONS = `\n  query getQuestions($isPersonalize: Boolean!){\n  questions(isPersonalize: $isPersonalize){\n    id,\n    title,\n    answerInputType,\n    fields,\n    toastMessage,\n    options {\n      id,\n      value,\n      toastMessage,\n      helpText,\n      followUpQuestions{\n         question{\n          id,\n          title,\n          fields,\n          answerInputType,\n          toastMessage,\n          options{\n            id\n            value\n            toastMessage\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport {\n  GET_USERS,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  GET_RECOMMENDATIONS,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  REMOVE_REGISTRY_ITEM,\n  GET_REGISTRIES,\n  GET_REGISTRY_IMAGES,\n  GET_QUESTIONS\n};\n\n// Example to use queries added in home.jsx","const backendId = \"https://3.12.191.197\";\n// const backendId = \"http://localhost:8000\";\n// const backendId = \"http://192.168.0.106:8000\";\n\nexport default {\n  \"BACKEND_URL\": backendId,\n  \"LOCAL_API_URL\": backendId + \"/api/\",\n  \"PRODUCTION_API_URL\": backendId + \"/api/\"\n}","import config from './config';\nimport { Cookies } from 'react-cookie';\n\n\nconst cookies = new Cookies();\n// For axios\nexport const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\nconst AuthToken = cookies.get('access_token') ? \"Token \" + cookies.get('access_token') : \"\"\n\nconst axios = require(\"axios\");\n\nconst axiosInstance = axios.create({\n  baseURL: apiURL,\n  // TODO: Change Auth Token dyanamic\n  // headers : cookies.get('header')\n  headers: { \"Authorization\": AuthToken }\n});\n\nconst axiosInstanceNoToken = axios.create({\n  baseURL: apiURL\n});\n\nexport function graphQLNoToken(data) {\n  return axiosInstanceNoToken.post(\"/graphql\", data);\n}\n\nexport function graphQL(data) {\n  return axiosInstance.post(\"/graphql\", data);\n}\n\nexport function getRecommendation(data) {\n  return axiosInstance.get(\"/items\", data);\n}\n\nexport function getScrapedProduct(data) {\n  return axiosInstance.post(\"/items/import_item/\", data);\n}\n\nexport function verifyAccessToken(data) {\n  return axiosInstanceNoToken.post(\"/user/verify/token\", data);\n}\n\nexport function getAnotherRegistryProducts(data) {\n  return axiosInstance.post(\"/registry/import\", data);\n}\n\nconst axiosInstanceMultipart = axios.create({\n  baseURL: apiURL,\n  headers: {\n    \"Authorization\": AuthToken,\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\nexport function graphQLMultipart(data) {\n  return axiosInstanceMultipart.post(\"/graphql\", data);\n}","import config from \"api/config\";\n\nexport const API_END_POINTS = {\n    VERIFY_TOKEN: \"/api/user/verify/token\"\n}\n\nexport const API_URL = config.BACKEND_URL\n\nexport const MEDIA_URL_PREFIX = {\n  LOCAL_MEDIA_URL: config.BACKEND_URL+\"/media/\"\n}\n\nexport const BOOKMARKLET_SCRIPT = \"javascript:(function()%7Bif%20(!(!typeof%20url)%20)%7Bvar%20NO_JQUERY%3D%7B%7D%3B!function(e%2Ct%2Ca)%7Bif(!(%22console%22in%20e))%7Bvar%20r%3De.console%3D%7B%7D%3Br.log%3Dr.warn%3Dr.error%3Dr.debug%3Dfunction()%7B%7D%7Dt%3D%3D%3DNO_JQUERY%26%26(t%3D%7Bfn%3A%7B%7D%2Cextend%3Afunction()%7Bfor(var%20e%3Darguments%5B0%5D%2Ct%3D1%2Ca%3Darguments.length%3Bt%3Ca%3Bt%2B%2B)%7Bvar%20r%3Darguments%5Bt%5D%3Bfor(var%20n%20in%20r)e%5Bn%5D%3Dr%5Bn%5D%7Dreturn%20e%7D%7D)%2Ct.fn.pm%3Dfunction()%7Breturn%20console.log(%22usage%3A%20%5Cnto%20send%3A%20%20%20%20%24.pm(options)%5Cnto%20receive%3A%20%24.pm.bind(type%2C%20fn%2C%20%5Borigin%5D)%22)%2Cthis%7D%2Ct.pm%3De.bufferpm%3Dfunction(e)%7Bn.send(e)%7D%2Ct.pm.bind%3De.bufferpm.bind%3Dfunction(e%2Ct%2Ca%2Cr)%7Bn.bind(e%2Ct%2Ca%2Cr)%7D%2Ct.pm.unbind%3De.bufferpm.unbind%3Dfunction(e%2Ct)%7Bn.unbind(e%2Ct)%7D%2Ct.pm.origin%3De.bufferpm.origin%3Dnull%2Ct.pm.poll%3De.bufferpm.poll%3D200%3Bvar%20n%3D%7Bsend%3Afunction(e)%7Bvar%20a%3Dt.extend(%7B%7D%2Cn.defaults%2Ce)%2Cr%3Da.target%3Bif(a.target)if(a.type)%7Bvar%20s%3D%7Bdata%3Aa.data%2Ctype%3Aa.type%7D%3Ba.success%26%26(s.callback%3Dn._callback(a.success))%2Ca.error%26%26(s.errback%3Dn._callback(a.error))%2C%22postMessage%22in%20r%26%26!a.hash%3F(n._bind()%2Cr.postMessage(JSON.stringify(s)%2Ca.origin%7C%7C%22*%22))%3A(n.hash._bind()%2Cn.hash.send(a%2Cs))%7Delse%20console.warn(%22postmessage%20type%20required%22)%3Belse%20console.warn(%22postmessage%20target%20window%20required%22)%7D%2Cbind%3Afunction(a%2Cr%2Cs%2Co)%7B%22postMessage%22in%20e%26%26!o%3Fn._bind()%3An.hash._bind()%3Bvar%20i%3Dn.data(%22listeners.postmessage%22)%3Bi%7C%7C(i%3D%7B%7D%2Cn.data(%22listeners.postmessage%22%2Ci))%3Bvar%20u%3Di%5Ba%5D%3Bu%7C%7C(u%3D%5B%5D%2Ci%5Ba%5D%3Du)%2Cu.push(%7Bfn%3Ar%2Corigin%3As%7C%7Ct.pm.origin%7D)%7D%2Cunbind%3Afunction(e%2Ct)%7Bvar%20a%3Dn.data(%22listeners.postmessage%22)%3Bif(a)if(e)if(t)%7Bvar%20r%3Da%5Be%5D%3Bif(r)%7Bfor(var%20s%3D%5B%5D%2Co%3D0%2Ci%3Dr.length%3Bo%3Ci%3Bo%2B%2B)%7Bvar%20u%3Dr%5Bo%5D%3Bu.fn!%3D%3Dt%26%26s.push(u)%7Da%5Be%5D%3Ds%7D%7Delse%20delete%20a%5Be%5D%3Belse%20for(var%20o%20in%20a)delete%20a%5Bo%5D%7D%2Cdata%3Afunction(e%2Ct)%7Breturn%20t%3D%3D%3Da%3Fn._data%5Be%5D%3A(n._data%5Be%5D%3Dt%2Ct)%7D%2C_data%3A%7B%7D%2C_CHARS%3A%220123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%22.split(%22%22)%2C_random%3Afunction()%7Bfor(var%20e%3D%5B%5D%2Ct%3D0%3Bt%3C32%3Bt%2B%2B)e%5Bt%5D%3Dn._CHARS%5B0%7C32*Math.random()%5D%3Breturn%20e.join(%22%22)%7D%2C_callback%3Afunction(e)%7Bvar%20t%3Dn.data(%22callbacks.postmessage%22)%3Bt%7C%7C(t%3D%7B%7D%2Cn.data(%22callbacks.postmessage%22%2Ct))%3Bvar%20a%3Dn._random()%3Breturn%20t%5Ba%5D%3De%2Ca%7D%2C_bind%3Afunction()%7Bn.data(%22listening.postmessage%22)%7C%7C(e.addEventListener%3Fe.addEventListener(%22message%22%2Cn._dispatch%2C!1)%3Ae.attachEvent%26%26e.attachEvent(%22onmessage%22%2Cn._dispatch)%2Cn.data(%22listening.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(e)%7Btry%7Bvar%20t%3DJSON.parse(e.data)%7Dcatch(l)%7Breturn%20void%20console.warn(%22postmessage%20data%20invalid%20json%3A%20%22%2Cl)%7Dif(t.type)%7Bvar%20a%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%3Bif(a)a(t.data)%3Belse%20for(var%20r%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Bt.type%5D%7C%7C%5B%5D%2Cs%3D0%2Co%3Dr.length%3Bs%3Co%3Bs%2B%2B)%7Bvar%20i%3Dr%5Bs%5D%3Bif(i.origin%26%26e.origin!%3D%3Di.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Ce.origin%2Ci.origin)%2Ct.errback)%7Bvar%20u%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Be.origin%2Ci.origin%5D%7D%3Bn.send(%7Btarget%3Ae.source%2Cdata%3Au%2Ctype%3At.errback%7D)%7D%7Delse%20try%7Bvar%20c%3Di.fn(t.data)%3Bt.callback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Ac%2Ctype%3At.callback%7D)%7Dcatch(l)%7Bt.errback%26%26n.send(%7Btarget%3Ae.source%2Cdata%3Al%2Ctype%3At.errback%7D)%7D%7D%7Delse%20console.warn(%22postmessage%20message%20type%20required%22)%7D%7D%3Bn.hash%3D%7Bsend%3Afunction(t%2Ca)%7Bvar%20r%3Dt.target%2Cs%3Dt.url%3Bif(s)%7Bs%3Dn.hash._url(s)%3Bvar%20o%2Ci%3Dn.hash._url(e.location.href)%3Bif(e%3D%3Dr.parent)o%3D%22parent%22%3Belse%20try%7Bfor(var%20u%3D0%2Cc%3Dparent.frames.length%3Bu%3Cc%3Bu%2B%2B)%7Bif(parent.frames%5Bu%5D%3D%3De)%7Bo%3Du%3Bbreak%7D%7D%7Dcatch(p)%7Bo%3De.name%7Dif(null!%3Do)%7Bvar%20l%3D%7B%22x-requested-with%22%3A%22postmessage%22%2Csource%3A%7Bname%3Ao%2Curl%3Ai%7D%2Cpostmessage%3Aa%7D%2Cf%3D%22%23x-postmessage-id%3D%22%2Bn._random()%3Br.location%3Ds%2Bf%2BencodeURIComponent(JSON.stringify(l))%7Delse%20console.warn(%22postmessage%20windows%20must%20be%20direct%20parent%2Fchild%20windows%20and%20the%20child%20must%20be%20available%20through%20the%20parent%20window.frames%20list%22)%7Delse%20console.warn(%22postmessage%20target%20window%20url%20is%20required%22)%7D%2C_regex%3A%2F%5E%5C%23x%5C-postmessage%5C-id%5C%3D(%5Cw%7B32%7D)%2F%2C_regex_len%3A%22%23x-postmessage-id%3D%22.length%2B32%2C_bind%3Afunction()%7Bn.data(%22polling.postmessage%22)%7C%7C(setInterval(function()%7Bvar%20t%3D%22%22%2Be.location.hash%2Ca%3Dn.hash._regex.exec(t)%3Bif(a)%7Bvar%20r%3Da%5B1%5D%3Bn.hash._last!%3D%3Dr%26%26(n.hash._last%3Dr%2Cn.hash._dispatch(t.substring(n.hash._regex_len)))%7D%7D%2Ct.pm.poll%7C%7C200)%2Cn.data(%22polling.postmessage%22%2C1))%7D%2C_dispatch%3Afunction(t)%7Bif(t)%7Btry%7Bif(!(%22postmessage%22%3D%3D%3D(t%3DJSON.parse(decodeURIComponent(t)))%5B%22x-requested-with%22%5D%26%26t.source%26%26null!%3Dt.source.name%26%26t.source.url%26%26t.postmessage))return%7Dcatch(g)%7Breturn%7Dvar%20a%3Dt.postmessage%2Cr%3D(n.data(%22callbacks.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%3Bif(r)r(a.data)%3Belse%7Bvar%20s%3Bs%3D%22parent%22%3D%3D%3Dt.source.name%3Fe.parent%3Ae.frames%5Bt.source.name%5D%3Bfor(var%20o%3D(n.data(%22listeners.postmessage%22)%7C%7C%7B%7D)%5Ba.type%5D%7C%7C%5B%5D%2Ci%3D0%2Cu%3Do.length%3Bi%3Cu%3Bi%2B%2B)%7Bvar%20c%3Do%5Bi%5D%3Bif(c.origin)%7Bvar%20l%3D%2Fhttps%3F%5C%3A%5C%2F%5C%2F%5B%5E%5C%2F%5D*%2F.exec(t.source.url)%5B0%5D%3Bif(l!%3D%3Dc.origin)%7Bif(console.warn(%22postmessage%20message%20origin%20mismatch%22%2Cl%2Cc.origin)%2Ca.errback)%7Bvar%20f%3D%7Bmessage%3A%22postmessage%20origin%20mismatch%22%2Corigin%3A%5Bl%2Cc.origin%5D%7D%3Bn.send(%7Btarget%3As%2Cdata%3Af%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcontinue%7D%7Dtry%7Bvar%20p%3Dc.fn(a.data)%3Ba.callback%26%26n.send(%7Btarget%3As%2Cdata%3Ap%2Ctype%3Aa.callback%2Chash%3A!0%2Curl%3At.source.url%7D)%7Dcatch(g)%7Ba.errback%26%26n.send(%7Btarget%3As%2Cdata%3Ag%2Ctype%3Aa.errback%2Chash%3A!0%2Curl%3At.source.url%7D)%7D%7D%7D%7D%7D%2C_url%3Afunction(e)%7Breturn(%22%22%2Be).replace(%2F%23.*%24%2F%2C%22%22)%7D%7D%2Ct.extend(n%2C%7Bdefaults%3A%7Btarget%3Anull%2Curl%3Anull%2Ctype%3Anull%2Cdata%3Anull%2Csuccess%3Anull%2Cerror%3Anull%2Corigin%3A%22*%22%2Chash%3A!1%7D%7D)%7D(this%2C%22undefined%22%3D%3Dtypeof%20jQuery%3FNO_JQUERY%3AjQuery)%2C%22JSON%22in%20window%26%26window.JSON%7C%7C(JSON%3D%7B%7D)%2Cfunction()%7Bfunction%20f(e)%7Breturn%20e%3C10%3F%220%22%2Be%3Ae%7Dfunction%20quote(e)%7Breturn%20escapable.lastIndex%3D0%2Cescapable.test(e)%3F'%22'%2Be.replace(escapable%2Cfunction(e)%7Bvar%20t%3Dmeta%5Be%5D%3Breturn%22string%22%3D%3Dtypeof%20t%3Ft%3A%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D)%2B'%22'%3A'%22'%2Be%2B'%22'%7Dfunction%20str(e%2Ct)%7Bvar%20a%2Cr%2Cn%2Cs%2Co%2Ci%3Dgap%2Cu%3Dt%5Be%5D%3Bswitch(u%26%26%22object%22%3D%3Dtypeof%20u%26%26%22function%22%3D%3Dtypeof%20u.toJSON%26%26(u%3Du.toJSON(e))%2C%22function%22%3D%3Dtypeof%20rep%26%26(u%3Drep.call(t%2Ce%2Cu))%2Ctypeof%20u)%7Bcase%22string%22%3Areturn%20quote(u)%3Bcase%22number%22%3Areturn%20isFinite(u)%3FString(u)%3A%22null%22%3Bcase%22boolean%22%3Acase%22null%22%3Areturn%20String(u)%3Bcase%22object%22%3Aif(!u)return%22null%22%3Bif(gap%2B%3Dindent%2Co%3D%5B%5D%2C%22%5Bobject%20Array%5D%22%3D%3D%3DObject.prototype.toString.apply(u))%7Bfor(s%3Du.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)o%5Ba%5D%3Dstr(a%2Cu)%7C%7C%22null%22%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%5B%5D%22%3Agap%3F%22%5B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%5D%22%3A%22%5B%22%2Bo.join(%22%2C%22)%2B%22%5D%22%2Cgap%3Di%2Cn%7Dif(rep%26%26%22object%22%3D%3Dtypeof%20rep)for(s%3Drep.length%2Ca%3D0%3Ba%3Cs%3Ba%2B%3D1)%22string%22%3D%3Dtypeof(r%3Drep%5Ba%5D)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Belse%20for(r%20in%20u)Object.hasOwnProperty.call(u%2Cr)%26%26(n%3Dstr(r%2Cu))%26%26o.push(quote(r)%2B(gap%3F%22%3A%20%22%3A%22%3A%22)%2Bn)%3Breturn%20n%3D0%3D%3D%3Do.length%3F%22%7B%7D%22%3Agap%3F%22%7B%5Cn%22%2Bgap%2Bo.join(%22%2C%5Cn%22%2Bgap)%2B%22%5Cn%22%2Bi%2B%22%7D%22%3A%22%7B%22%2Bo.join(%22%2C%22)%2B%22%7D%22%2Cgap%3Di%2Cn%7D%7D%22function%22!%3Dtypeof%20Date.prototype.toJSON%26%26(Date.prototype.toJSON%3Dfunction()%7Breturn%20this.getUTCFullYear()%2B%22-%22%2Bf(this.getUTCMonth()%2B1)%2B%22-%22%2Bf(this.getUTCDate())%2B%22T%22%2Bf(this.getUTCHours())%2B%22%3A%22%2Bf(this.getUTCMinutes())%2B%22%3A%22%2Bf(this.getUTCSeconds())%2B%22Z%22%7D%2CString.prototype.toJSON%3DNumber.prototype.toJSON%3DBoolean.prototype.toJSON%3Dfunction()%7Breturn%20this.valueOf()%7D)%3Bvar%20cx%3D%2F%5B%5Cu0000%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cescapable%3D%2F%5B%5C%5C%5C%22%5Cx00-%5Cx1f%5Cx7f-%5Cx9f%5Cu00ad%5Cu0600-%5Cu0604%5Cu070f%5Cu17b4%5Cu17b5%5Cu200c-%5Cu200f%5Cu2028-%5Cu202f%5Cu2060-%5Cu206f%5Cufeff%5Cufff0-%5Cuffff%5D%2Fg%2Cgap%2Cindent%2Cmeta%3D%7B%22%5Cb%22%3A%22%5C%5Cb%22%2C%22%5Ct%22%3A%22%5C%5Ct%22%2C%22%5Cn%22%3A%22%5C%5Cn%22%2C%22%5Cf%22%3A%22%5C%5Cf%22%2C%22%5Cr%22%3A%22%5C%5Cr%22%2C'%22'%3A'%5C%5C%22'%2C%22%5C%5C%22%3A%22%5C%5C%5C%5C%22%7D%2Crep%3B%22function%22!%3Dtypeof%20JSON.stringify%26%26(JSON.stringify%3Dfunction(e%2Ct%2Ca)%7Bvar%20r%3Bif(gap%3D%22%22%2Cindent%3D%22%22%2C%22number%22%3D%3Dtypeof%20a)for(r%3D0%3Br%3Ca%3Br%2B%3D1)indent%2B%3D%22%20%22%3Belse%22string%22%3D%3Dtypeof%20a%26%26(indent%3Da)%3Bif(rep%3Dt%2Ct%26%26%22function%22!%3Dtypeof%20t%26%26(%22object%22!%3Dtypeof%20t%7C%7C%22number%22!%3Dtypeof%20t.length))throw%20new%20Error(%22JSON.stringify%22)%3Breturn%20str(%22%22%2C%7B%22%22%3Ae%7D)%7D)%2C%22function%22!%3Dtypeof%20JSON.parse%26%26(JSON.parse%3Dfunction(text%2Creviver)%7Bfunction%20walk(e%2Ct)%7Bvar%20a%2Cr%2Cn%3De%5Bt%5D%3Bif(n%26%26%22object%22%3D%3Dtypeof%20n)for(a%20in%20n)Object.hasOwnProperty.call(n%2Ca)%26%26((r%3Dwalk(n%2Ca))!%3D%3Dundefined%3Fn%5Ba%5D%3Dr%3Adelete%20n%5Ba%5D)%3Breturn%20reviver.call(e%2Ct%2Cn)%7Dvar%20j%3Bif(cx.lastIndex%3D0%2Ccx.test(text)%26%26(text%3Dtext.replace(cx%2Cfunction(e)%7Breturn%22%5C%5Cu%22%2B(%220000%22%2Be.charCodeAt(0).toString(16)).slice(-4)%7D))%2C%2F%5E%5B%5C%5D%2C%3A%7B%7D%5Cs%5D*%24%2F.test(text.replace(%2F%5C%5C(%3F%3A%5B%22%5C%5C%5C%2Fbfnrt%5D%7Cu%5B0-9a-fA-F%5D%7B4%7D)%2Fg%2C%22%40%22).replace(%2F%22%5B%5E%22%5C%5C%5Cn%5Cr%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-%3F%5Cd%2B(%3F%3A%5C.%5Cd*)%3F(%3F%3A%5BeE%5D%5B%2B%5C-%5D%3F%5Cd%2B)%3F%2Fg%2C%22%5D%22).replace(%2F(%3F%3A%5E%7C%3A%7C%2C)(%3F%3A%5Cs*%5C%5B)%2B%2Fg%2C%22%22)))return%20j%3Deval(%22(%22%2Btext%2B%22)%22)%2C%22function%22%3D%3Dtypeof%20reviver%3Fwalk(%7B%22%22%3Aj%7D%2C%22%22)%3Aj%3Bthrow%20new%20SyntaxError(%22JSON.parse%22)%7D)%7D()%3Bvar%20url%20%3D%20window.location.href%3Bvar%20isOpen%20%3D%20true%3Bvar%20iframe%20%3D%20document.createElement('iframe')%3Biframe.setAttribute('allowtransparency'%2C%20'true')%3Biframe.setAttribute('src'%2C%20'http%3A%2F%2Flocalhost%3A5500%2Fbaby_registry_bookmarklet%2Fbookmarklet.html%3Furl%3D'%2Burl)%3Biframe.setAttribute('name'%2C%20'm-a-iframe')%3Biframe.setAttribute('id'%2C%20'm-a-iframe')%3Biframe.setAttribute('scrolling'%2C%20'no')%3Biframe.style.border%20%3D%20'none'%3Biframe.style.height%20%3D%20'100%25'%3Biframe.style.width%20%20%3D%20'100%25'%3Biframe.style.position%20%3D%20(document.doctype%20%3D%3D%20null%20%26%26%20navigator.appName.match('Microsoft'))%20%3F%20'absolute'%20%3A%20'fixed'%3Biframe.style.zIndex%20%3D%20'99999999999'%3Biframe.style.top%20%3D%20'0'%3Biframe.style.left%20%3D%20'0'%3Biframe.style%5B'background-color'%5D%20%3D%20'transparent'%3Biframe.style.clip%20%3D%20'auto'%3Biframe.style.overflow%20%3D%20'hidden'%3Biframe.style.opacity%20%3D%201%3Biframe.style.setProperty%20('display'%2C%20'block'%2C%20'important')%3Biframe.style.visibility%20%3D%20'visible'%3Bdocument.body.appendChild(iframe)%3B%7Dbufferpm.bind(%22buffermessage%22%2C%20function(data)%20%7Bvar%20iframe%20%3D%20document.getElementById(%22m-a-iframe%22)%3Biframe.parentNode.removeChild(iframe)%3Breturn%20false%3B%7D)%7D)()\"","const TOGGLE_MUST_HAVE = `\n   mutation ToggleMustHaveProduct($productId: Int!, $mustHaveValue: Boolean! $quantity: Int!) {\n    updateRegistryItems(registryItemId:$productId, registryItemData:{\n    quantity: $quantity,\n    mostWanted:$mustHaveValue,\n     }){\n      message\n    }\n   }\n`\n\nconst ADD_REGISTRY_ITEM = `\n   mutation addRegistryItems($registryId:Int!,$input: [StoreInput])\n   { addRegistryItems(registryId:$registryId,registryItems: $input) {\n     message\n     }\n   }\n`\n\nconst UPDATE_REGISTRY = `\n  mutation updateRegistryDetail($registryId: Int!, $input: RegistryInput!){\n    updateRegistry(registryId: $registryId, registryData: $input) {\n      registry{\n      name,\n      image{\n            id,image\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_VIEW_REGISTRY_POISTION = `\n  mutation registryItemsOrder($registryId:Int!, $registryItems: [RegistryItemOrderInput]){\n    registryItemsOrder(registryId: $registryId,registryItems: $registryItems){\n      message\n    }\n  }\n`;\n\nconst UPDATE_REGISTRY_URL = `\nmutation updateRegistryUrl($registryId:Int!, $urlSlug:String!){\n  checkUpdateRegistryUrlSlug(registryId:$registryId,urlSlugInput:{\n    urlSlug:$urlSlug\n  }){\n    message,\n    registry{\n      id\n    }\n  }\n}\n`\n\nconst REGISTER_USER = `\nmutation register_user($name: String!, $email: String!, $password: String!){\n  registerUser(registerInput:{\n      firstName:$name,\n      email:$email,\n      password:$password\n  }\n ){\n    user{\n      id\n    },\n    token,\n    redirectionUrl\n  }\n}\n`\nconst SAVE_QUESTION_RESPONSE = `\nmutation addRegistryQuestionOption($response: [RegistryQuestionOptionInput]!){\n  addRegistryQuestionOption(questionOptionInput: $response){\n    message\n  }\n}\n`\n\nconst SAVE_REGISTRY_DATA = `\nmutation saveRegistryData($registryData:RegistryInput!, $registryItems:[StoreInput]){\n  importRegistry(registryData: $registryData, registryItems: $registryItems) {\n    message\n  }\n}\n`\n\nexport { TOGGLE_MUST_HAVE, ADD_REGISTRY_ITEM, UPDATE_REGISTRY, UPDATE_VIEW_REGISTRY_POISTION, UPDATE_REGISTRY_URL, SAVE_REGISTRY_DATA, REGISTER_USER, SAVE_QUESTION_RESPONSE };\n","import React from \"react\";\nimport {\n  GET_PRODUCTS,\n  REMOVE_REGISTRY_ITEM,\n  GET_CATEGORIES,\n  GET_REGISTRIES,\n  ADD_REGISTRY_ITEM,\n  UPDATE_REGISTRY_ITEM,\n  GET_QUESTIONS\n} from \"../api/queries\";\nimport {graphQL} from \"../api/axios\";\nimport {MEDIA_URL_PREFIX} from \"./constants\";\nimport {\n  setRegistryProducts,\n  setCheckListItems,\n  toggleMustHaveProduct as toggleMustHaveProductAction\n} from \"../modules/my-registry/MyRegistryActions\";\nimport {TOGGLE_MUST_HAVE, UPDATE_VIEW_REGISTRY_POISTION} from \"../api/mutations\";\nimport {updateRegistryInfo} from \"../modules/registry/RegistryActions\";\nimport {setViewRegistryProducts} from \"../modules/view-registry/ViewRegistryActions\";\nimport {addOnboardingQuestion} from \"../modules/onboarding/OnboardingAction\";\nimport {toast} from \"react-toastify\";\n\nexport const getProducts = (registryId, dispatch) => {\n  let data = {\n    query: GET_PRODUCTS,\n    variables: {\n      registryId: parseInt(registryId)\n    }\n  }\n  graphQL(data).then(res => {\n    let responseData = res.data.data.registryItems.edges.map(item => {\n      // return { ...item.node }\n      let newItemObj = {...item.node}\n      delete newItemObj.registryitemImage;\n      if (item.node.registryitemImage.length > 0) {\n        newItemObj.item.imageUrl = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + item.node.registryitemImage[0].image;\n      }\n      return newItemObj;\n    })\n    dispatch(setRegistryProducts(responseData))\n\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const toggleMustHaveProduct = (product, dispatch) => {\n  let data = {\n    query: TOGGLE_MUST_HAVE,\n    variables: {\n      productId: product.id,\n      mustHaveValue: !product.mostWanted,\n      quantity: product.quantity\n    }\n  }\n  graphQL(data).then(res => {\n    if (res.status === 200) {\n      dispatch(toggleMustHaveProductAction(product.item.id))\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const removeProductFromCartHandler = (card, registryId, dispatch,) => {\n  let registryItemId = card.id\n  let data = {\n    query: REMOVE_REGISTRY_ITEM,\n    variables: {\n      registryItemId: registryItemId\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      return;\n    } else {\n      // this.props.dispatch(removeProductFromCart(card.item.id))\n      // this.getProducts();\n      getProducts(registryId, dispatch);\n      getCategories(registryId, dispatch);\n\n      toast.error((\n        <p><b>{card.item.title}</b> removed from your registry!</p>\n      ))\n\n      // getCategories()\n    }\n\n  }).catch(err => {\n    console.error(err.message)\n    toast.error((\n      <p>Some error occurred.</p>\n    ))\n  })\n}\n\nexport const getCategories = (registryId, dispatch) => {\n  let data = {\n    query: GET_CATEGORIES,\n    variables: {\n      registryId: parseInt(registryId)\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.errors || res.data.error) {\n      // TODO: Add toast\n      console.log('Something went wrong-->', res.data.errors)\n      return;\n    } else {\n      let parentCategories = res.data.data.categories.filter(category => category.totalItemsCount > 0)\n      let finalCategories = []\n      finalCategories = parentCategories.map(parentCategory => {\n        let subCategory = parentCategory.subCategories\n        delete parentCategory.subCategories\n        let newSubCategories = subCategory.filter(cat => cat.totalItemsCount > 0)\n        parentCategory['subCategories'] = newSubCategories\n        return parentCategory\n      })\n      dispatch(setCheckListItems(finalCategories))\n    }\n  })\n}\n\nexport const updateRegistryDetail = (dispatch) => {\n  let data = {\n    query: GET_REGISTRIES\n  }\n\n  graphQL(data).then(res => {\n    try {\n      if (res.data.data.registries.edges) {\n        let currentRegistryInfo = null;\n        const allUserRegistries = res.data.data.registries.edges;\n\n        currentRegistryInfo = allUserRegistries[0].node;\n        if (currentRegistryInfo.image) {\n          currentRegistryInfo.image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + currentRegistryInfo.image.image;\n        }\n\n        if (currentRegistryInfo) {\n          dispatch(updateRegistryInfo({...currentRegistryInfo}))\n        } else {\n          console.log(\"No registry found!\");\n        }\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }).catch(err => {\n    console.error(err.message)\n  })\n}\n\nexport const updateViewRegistryPosition = (registryId, position, oldPosition, dispatch) => {\n  let data = {\n    query: UPDATE_VIEW_REGISTRY_POISTION,\n    variables: {\n      registryId: registryId,\n      registryItems: position\n    },\n  }\n  graphQL(data).then(res => {\n    if (res.data.error) {\n      // TODO: Add toast\n      dispatch(setViewRegistryProducts(oldPosition))\n      toast.error(\"Somerhing went wrong while re-arranging Products\")\n      console.log('Something went wrong-->', res.data.error)\n      return;\n    }\n\n  }).catch(err => {\n    dispatch(setViewRegistryProducts(oldPosition))\n    console.error(err.message)\n  })\n}\n\nexport const addProductHandler = (card, stateAddedProducts, stateRegistryInfo, dispatch) => {\n  let existingProduct = stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n  const registryId = parseInt(stateRegistryInfo.id)\n  if (existingProduct.length === 0) {\n    const title = card.title\n    const category = card.category.id\n    const storeItemUrl = card.onlineStoreUrl\n    const sku = card.variants.edges[0].node.sku\n    const price = parseFloat(card.variants.edges[0].node.price)\n    const quantity = parseInt(card.quantity)\n    const shopifyItemId = card.id\n    const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      variables: {\n        registryId: registryId,\n        title: title,\n        category: category,\n        tags: [],\n        storeItemUrl: storeItemUrl ? storeItemUrl : '',\n        sku: sku,\n        price: price,\n        quantity: quantity,\n        shopifyItemId: shopifyItemId,\n        imageUrl: imageUrl,\n      }\n    }\n    graphQL(data).then(_ => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  } else {\n    let data = {\n      query: UPDATE_REGISTRY_ITEM,\n      variables: {\n        registryItemId: existingProduct[0].id,\n        quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n      }\n    }\n    graphQL(data).then(res => {\n      getProducts(registryId, dispatch)\n      getCategories(registryId, dispatch)\n\n      toast.success((\n        <p><b>{card.title}</b> added to your registry!</p>\n      ))\n    }).catch(err => {\n      console.error(err.message)\n\n      toast.error((\n        <p>Some error occurred!</p>\n      ))\n    })\n  }\n}\n\nexport const getOnboardingQuestions = (dispatch) => {\n  let reqData = {\n    query: GET_QUESTIONS,\n    variables: {\n      isPersonalize: false\n    }\n  }\n\n  graphQL(reqData).then(res => {\n    if (res.data.data.questions) {\n      const questions = res.data.data.questions.map(question => {\n        question.options = question.options.map(option => {\n          if (option.followUpQuestions.length > 0){\n            option.followUpQuestions.map(followUpQuestion => {\n              followUpQuestion['parentQuestion'] = question.id\n              return followUpQuestion;\n            })\n          }\n          return option;\n        })\n        question.isAnswered = false;\n        return question;\n      })\n      dispatch(addOnboardingQuestion(questions))\n    }\n  }).catch(err => {\n    // toast.error(\"Error occurred while fetching questions\");\n    console.error(err);\n  })\n}","import React from 'react';\nimport \"./ButtonComponent.scss\";\n\nconst ButtonComponent = React.forwardRef((props, ref) => {\n  let btnVariantClass = \"\"\n  if (props.variant === 'primary') {\n    btnVariantClass = \"m-a-primary-btn\";\n  } else if (props.variant === 'secondary') {\n    btnVariantClass = \"m-a-secondary-btn\";\n  }\n\n  return <button\n    className={[\"m-a-btn\", btnVariantClass, props.className].join(\" \")}\n    onClick={props.onClick}\n    ref={ref}\n    disabled={props.disabled ? props.disabled : false}\n  >{props.children}</button>\n})\n\nexport default ButtonComponent;","import React, { useState } from 'react'\nimport \"./AddedCard.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {\n  sortableHandle,\n} from 'react-sortable-hoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from \"../modal-component/ModalComponent\";\nimport CardItem from \"../card-item/CardItem\";\nimport { addProductHandler } from 'utils/commonFunction';\nimport Button from \"../button-component/ButtonComponent\";\n\nconst AddedCard = (props) => {\n\n  const dispatch = useDispatch();\n  let stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n  const stateRecommendedProducts = useSelector(state => state.myRegistry.recommendedProducts)\n  const stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n  const [recommendedProducts, setRecommendedProducts] = useState([])\n  const [show, setShow] = useState(false);\n  const modalTitle = `Recommended ${props.data.item.category.categoryName}`\n  const [showRemoveModel, setShowRemoveModel] = useState(false);\n\n  const showRecommendation = (category) => {\n    // Fetching all recommendations for that particular product category\n    let categoryRecommended = [...stateRecommendedProducts.filter(product => Number(category.id) === Number(product.category.id))]\n\n    // Removing duplicate products if found any\n    let jsonObject = categoryRecommended.map(JSON.stringify);\n    let uniqueSet = new Set(jsonObject);\n    categoryRecommended = Array.from(uniqueSet).map(JSON.parse);\n\n    setRecommendedProducts(categoryRecommended.map(product => {\n      // Resetting recommended product quantity\n      product.quantity = 1;\n      return product;\n    }));\n\n    setShow(true);\n  }\n\n  const moreOptionsData = [\n    {\n      name: \"View Recommendations\",\n      action: () => showRecommendation(props.data.item.category)\n    },\n    {\n      name: \"Remove\",\n      action: () => setShowRemoveModel(true)\n    }\n  ]\n\n  const removeConfirmFooter = (\n    <>\n      <Button className='py-1 px-3 font-medium' variant='secondary' onClick={() => setShowRemoveModel(false)}>Do not remove</Button>\n      <Button className='py-1 px-3 font-medium' variant='primary' onClick={() => {props.removeProductFromCartHandler();setShowRemoveModel(false);}}>Remove</Button>\n    </>\n  )\n\n  // Incrementing quantity of local recommended product\n  const incrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        product.quantity += quantity;\n      }\n      newRecommended.push(product)\n    }\n    setRecommendedProducts(newRecommended)\n  }\n\n  // Decrementing quantity of local recommended product\n  const decrementQuantity = (cardId, quantity) => {\n    let newRecommended = [];\n    let updated = false;\n    for (let product of [...recommendedProducts]) {\n      if (product.id === cardId) {\n        if (product.quantity - quantity <= 0) {\n          break;\n        } else {\n          product.quantity -= quantity;\n          updated = true;\n        }\n      }\n      newRecommended.push(product)\n    }\n\n    if (updated) {\n      setRecommendedProducts(newRecommended)\n    }\n  }\n\n  // Handle drag\n  // TODO: Change Draggable icon\n  const DragHandle = sortableHandle(() => <i className={[\"ml-4 drag-icon m-a-popover m-a-popover-top-right\", props.disabledDrag ? \"disabled-drag\" : \"\"].join(\" \")}>\n    <div className=\"m-a-popover-content drag-drop-popover w-auto px-3 py-2\">\n      <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">Rearrange</p>\n    </div>\n  </i>);\n\n  return (\n    <>\n      <div className=\"added-card py-5\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <img className=\"product-img d-block mx-auto\" src={props.data?.item.imageUrl} alt={props.data?.item.title} />\n          </div>\n          <div className=\"col\">\n            <div className=\"text-sm category\">{props.data.item.category.categoryName}</div>\n            <h2 className=\"\">{props.data.item.title}</h2>\n            <div className=\"d-flex mt-2\">\n              <div className=\"\">${props.data.item.price}</div>\n              {/* TODO: Add Strikeout price dynamic */}\n              <div className=\"text-sm my-auto ml-1 strick-price\">$257.99</div>\n              {props.data.quantity > 1 ?\n                <div className=\"ml-4 text-body d-flex\">\n                  Qty:{props.data.quantity}\n                  <div className=\"quantity-mul-text\"> (${props.data.item.price} * {props.data.quantity})</div>\n                </div> : <></>}\n            </div>\n          </div>\n          <div className={[\n            props.draggable ? \"col-3\" : \"col-2\",\n          ].join(\" \")}\n          >\n            <div className=\"d-flex align-items-baseline justify-content-end mr-1\">\n              {!stateGuestViewRegistry ?\n                <MoreOption data={moreOptionsData} iconClass=\"icon-more-hori\" />\n                : <></>}\n              {!stateGuestViewRegistry ?\n                <button\n                  className={[\n                    \"icon\",\n                    \"ml-4\",\n                    props.data.mostWanted ? \"heart-fill\" : \"heart\",\n                  ].join(\" \")}\n                  onClick={props.toggleMustHave}\n                /> :\n                props.data.mostWanted ? <button className=\"icon ml-4 heart-fill\" /> : <></>\n              }\n              {/* TODO: Add icon/rearrange icon */}\n              {props.draggable && !stateGuestViewRegistry ?\n                <DragHandle /> : <></>}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal\n        show={show}\n        closeModal={() => setShow(false)}\n        title={modalTitle}\n        size=\"xl\"\n      >\n        <div className=\"position-relative added-card-recommended\">\n          <div className=\"row category-recommended-products\">\n            {recommendedProducts.map((card, index) => (\n              <div className=\"col-4 mb-5\" key={\"CardItem-\" + index}>\n                <CardItem\n                  data={card}\n                  incrementQuantityHandler={() => incrementQuantity(card.id, 1)}\n                  decrementQuantityHandler={() => decrementQuantity(card.id, 1)}\n                  addProductHandler={() => addProductHandler(card, stateAddedProducts, stateRegistryInfo, dispatch)}\n                />\n              </div>\n            ))}\n\n          </div>\n          {recommendedProducts.length>0 ?<div className=\"added-card-recommends-bottom-gradient\" /> : null}\n        </div>\n      </Modal>\n      <Modal\n        show={showRemoveModel}\n        size=\"md\"\n        footer={removeConfirmFooter}\n      >\n        <h2>Do you want to remove {props.data.item.title}? </h2>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddedCard","import React from \"react\";\nimport \"./CheckListItems.scss\";\nimport { withTranslation } from \"react-i18next\";\n\nclass CheckList extends React.Component {\n\n    render() {\n        return (\n            <div className=\"mb-6\">\n                <div className=\"row check-list-header\">\n                    <div className=\"col d-flex align-items-baseline pb-1\">\n                        <p className=\"checklist-title mb-0\">{this.props.t(\"checkList.title\")}</p>\n                        <p className=\"ml-2 text-sm checklist-personalize\">{this.props.t(\"checkList.personalize\")}</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col d-flex\">\n                        <div className=\"check-list-background\">\n                          <div className=\"check-list-progress mw-100\" style={{width: `${this.props.percentage}%`}}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nexport default withTranslation()(CheckList);","import React from \"react\";\nimport {buildStyles, CircularProgressbar} from \"react-circular-progressbar\";\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst CircularProgress = (props) => {\n  return (\n    <CircularProgressbar\n      value={props.percentage}\n      text={props.text}\n      strokeWidth={10}\n      className={props.className}\n      styles={buildStyles({\n        textSize: '40px',\n        textColor: '#000',\n        pathColor: '#afe3e4',\n        trailColor: '#ededee'\n      })}/>\n  )\n}\n\nexport default CircularProgress;","import React, {Component} from \"react\";\nimport \"./CheckListItems.scss\";\nimport CircularProgress from \"modules/commons/components/circular-progress/CircularProgress\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport {connect} from 'react-redux';\n\nclass CheckListItems extends Component {\n\n  constructor(props) {\n    super(props);\n    // create a ref to store the checkList header DOM element\n    this.checkListHeader = React.createRef();\n  }\n\n  getOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  }\n\n  scrollToCategory = (category) => {\n    const categorySection = document.getElementById(category)\n    if (categorySection) {\n      let offset = this.getOffset(categorySection);\n      window.scrollTo(0, offset.top)\n    }\n  }\n\n  getSubList = (getSubList) => {\n    let subItems = getSubList.map(({id, categoryName, addedItemsCount, totalItemsCount}) => {\n      return (\n        <div className=\"d-flex card-body-contain align-items-center py-2\" key={categoryName + id}\n             onClick={() => this.scrollToCategory(categoryName)}>\n          <p\n            className=\"mb-0 card-body-header text-sm\">{categoryName} {totalItemsCount > 1 ? `(${totalItemsCount})` : null}</p>\n          <div className='ml-auto mb-0 align-self-end card-progress'>\n            {(addedItemsCount >= totalItemsCount) ?\n              <div className=\"icon-done\"/> :\n              (totalItemsCount > 1 && addedItemsCount > 0 ?\n                <CircularProgress\n                  percentage={(addedItemsCount / totalItemsCount) * 100}\n                  text={addedItemsCount}\n                  className=\"checklist-circular-progress\"\n                />\n                : null)}\n          </div>\n        </div>\n      )\n    });\n    return subItems;\n  }\n\n  handleToggleEvent = () => {\n    const checkListIconEl = this.checkListHeader.current.firstChild;\n    checkListIconEl.classList.toggle(\"closed\");\n    checkListIconEl.classList.toggle(\"opened\");\n  }\n\n  render() {\n\n    let subListItem = this.getSubList(this.props.item.subCategories)\n    // TODO: For calculation for subitem\n    // let parentTotal = 10;\n    // let parentAdded = 16;\n\n    // for (let subItems of this.props.item.subCategories) {\n    //     if (subItems.added !== subItems.total) {\n    //         parentAdded += Number(subItems.added);\n    //         parentTotal += Number(subItems.total);\n    //     }\n    // }\n\n    return (\n      <Accordion className=\"accordion-list mb-5\" key={this.props.item.categoryName}>\n        <Card>\n          <Accordion.Toggle\n            onClick={this.handleToggleEvent}\n            as={Card.Header}\n            id={this.props.item.categoryName}\n            eventKey={this.props.item.categoryName}\n          >\n            <div ref={this.checkListHeader} className='d-flex icon-checklist'>\n              <span className=\"mr-3 checklist-icon-arrow closed\"/>\n              <p className=\"mb-0 body-text\">{this.props.item.categoryName}</p>\n              <div className='ml-auto mb-auto align-self-end card-progress'>\n                {this.props.item.addedItemsCount}/{this.props.item.totalItemsCount}\n              </div>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse className=' mt-1 ml-6' eventKey={this.props.item.categoryName}>\n            <Card.Body>\n              {subListItem}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n\n  }\n}\n\nexport default connect()(CheckListItems);","import React from \"react\";\nimport \"./BookmarkletSection.scss\";\nimport Modal from \"../../modal-component/ModalComponent\";\nimport Button from '../../button-component/ButtonComponent';\nimport { BOOKMARKLET_SCRIPT } from \"utils/constants\";\n\nclass BookmarkletSection extends React.Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  // Event Handlers\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddBookmarkletModal = () => {\n    this.modalTitle = \"Get M+A Button\"\n    this.modalTitleContent = (\n      <div className=\"py-2 text-sm\">\n        M+A Button lets you add product from any store directly to Monica+Andy Baby Registry.\n      </div>\n    )\n    this.setState((prevState, props) => ({\n      show: true,\n    }))\n\n    this.modalBody = (\n      <div className=\"row bookmarlet-model justify-content-center\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center mb-6\">\n            <div className=\"text-body m-a-heading mr-5\">\n              <div>Drag the button the your</div> <div>browser’s Bookmarks bar</div>\n            </div>\n            <a\n              href={BOOKMARKLET_SCRIPT}\n              className=\"m-a-btn m-a-primary-btn primary-btn px-3 py-2 font-weight-bold font-medium text-body\"\n            >Add to M+A</a>\n          </div>\n          <div className=\"bookmarklet-steps\">\n            <ol className=\"my-5\">\n              <li className=\"steps-title pl-4\">\n                <div className=\"text-body font-medium\">Make sure your bookmarks bar is visible</div>\n                <div className=\"mt-1 text-sm steps-details\">In Chrome browser, top right menu, <span className=\"font-weight-bold\">go in Settings.</span> On the left navigation you will see <span className=\"font-weight-bold\">Appearance</span>. Inside it find <span className=\"font-weight-bold\">Show bookmarks bar</span> then turn on toggle.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Add to your Bookmarks bar</div>\n                <div className=\"mt-1 text-sm steps-details\">Click and Drag the “Add to M+A” button to your browsers bookmarks bar.</div>\n              </li>\n              <li className=\"steps-title pl-4 mt-5\">\n                <div className=\"text-body font-medium\">Now try it out!</div>\n                <div className=\"mt-1 text-sm steps-details\">Visit <a className=\"bookmarklet-link\">Sophie the Giraffe Teether</a> on Amazon and click your new M+A button.</div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n    this.modalFooterButtons = (\n      <>\n        <a href=\"\" className=\"bookmarklet-link mr-auto\">I Already Have M+A Button</a>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => {\n          }}\n        >Email Us For Help</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Done</Button>\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"py-2 bookmarklet-section\" onClick={this.openAddBookmarkletModal}>\n          <div className=\"row\">\n            <div className=\"col flex-grow-0\">\n              {/* TODO: Add M$A Icon once added */}\n            </div>\n            <div className=\"col\">\n              <h4>Get M+A Button</h4>\n              <p className=\"text-sm mt-1\">M+A Button lets you add product from any store directly to Monica+Andy Baby\n            Registry.</p>\n              <a className=\"bookmarklet-link mt-1 text-sm\">I already have it</a>\n            </div>\n          </div>\n        </div>\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default BookmarkletSection;","import React from \"react\";\nimport \"./TogglePills.scss\";\n\nconst TogglePills = (props) => {\n  return (\n    <div\n      className={[\"toggle-pills p-2 d-flex align-items-end\", props.activeClass, props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}\n    >\n      <i className={[props.iconClass, \"mr-2\"].join(\" \")}/>\n      <span className=\"text-sm\">{props.text}</span>\n    </div>\n  )\n}\n\nexport default TogglePills;","import React from 'react';\nimport \"./RadioButton.scss\";\n\nconst RadioButton = (props) => {\n  return (\n    <label className=\"radio d-flex align-items-center mb-0\">\n      <span className=\"radio__input mr-2\">\n      <input\n        type=\"radio\"\n        name={props.name}\n        checked={props.checked ? \"checked\" : \"\"}\n        onChange={props.changeHandler}\n        />\n      <span className=\"radio__control\"></span>\n      </span>\n      <span className={[\"radio__label\", props.textClass ? props.textClass : null].join(\" \")}>{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default RadioButton;","import React, {useState} from \"react\";\nimport \"./SelectCategory.scss\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {GET_CATEGORIES} from \"../../../../api/queries\";\nimport {graphQL} from \"../../../../api/axios\";\nimport Button from \"../button-component/ButtonComponent\";\nimport {useSelector} from \"react-redux\";\n\n// TODO: Change this Component to handle multiple categories\nconst SelectCategory = (props) => {\n  const registryInfo = useSelector(state => state.registry.info)\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(props.currentCategory ? props.currentCategory : {});\n\n  const getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(registryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      if (res.data.data.categories) {\n        let newCategories = res.data.data.categories.map(parentCategory => {\n          let newParentCategory = {...parentCategory}\n          newParentCategory['displayName'] = parentCategory.categoryName;\n          newParentCategory.subCategories = parentCategory.subCategories.map(childCategory => (\n            {\n              ...childCategory,\n              displayName: parentCategory.categoryName + \" : \"+ childCategory.categoryName\n            }\n          ))\n          return newParentCategory;\n        })\n        setCategories(newCategories);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  const closeModal = () => {\n    setSelectedCategory(props.currentCategory);\n    props.closeModal(false);\n  }\n\n  const saveSelectedCategory = () => {\n    if (selectedCategory && selectedCategory.id) {\n      props.changeCurrentCategory(selectedCategory)\n    }\n    props.closeModal(false);\n  }\n\n  if (categories.length === 0) {\n    getCategories();\n  }\n\n  const categorySelectBody = (\n    <div className=\"row select-category-body\">\n      <div className=\"col category-columns\">\n        {categories.map(category => {\n          return (\n            <div className=\"mb-6\" key={\"select-\"+category.categoryName}>\n              <h4 className=\"parent-category mb-3 font-medium px-2\">{category.categoryName}</h4>\n              {category.subCategories ?\n                category.subCategories.map(subCategory =>\n                  <p\n                    key={\"select-child-\"+subCategory.categoryName}\n                    className={[\"px-2 py-1 child-category\", (selectedCategory && selectedCategory.id) && (selectedCategory.id === subCategory.id) ? \"selected-category\" : \"\"].join(\" \")}\n                    onClick={() => setSelectedCategory(subCategory)}\n                  >{subCategory.categoryName}</p>)\n                : null}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n\n  const saveButton = (\n    <Button\n      variant=\"primary\"\n      className=\"font-medium p-1\"\n      onClick={saveSelectedCategory}\n    >Done</Button>\n  )\n\n  return (\n    <Modal\n      show={props.showModal}\n      title=\"Select Category\"\n      footer={saveButton}\n      closeModal={closeModal}>\n      {categorySelectBody}\n    </Modal>\n  )\n}\n\nexport default SelectCategory;","import React, { createRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./AddGiftAnotherStore.scss\";\nimport Counter from \"../../counter/Counter\";\nimport TogglePills from \"../toggle-pills/TogglePills\";\nimport RadioButton from \"../../radio-button/RadioButton\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport { setAnotherStoreProductInfo } from \"modules/my-registry/MyRegistryActions\";\nimport { getScrapedProduct } from \"api/axios\";\nimport { toast } from 'react-toastify';\n\nconst AddGiftAnotherStore = () => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n\n  const [categoryModalShow, setCategoryModalVisible] = useState(false);\n  const [hideProductDetails, setHideProductDetails] = useState(true);\n  const [showLoading, setshowLoading] = useState(false);\n\n\n\n  const dispatch = useDispatch();\n  const productInfo = useSelector(state => state.myRegistry.anotherStoreProduct)\n\n  const productImage = useSelector(state => state.myRegistry.anotherStoreProduct.productImage)\n  const productName = useSelector(state => state.myRegistry.anotherStoreProduct.productName)\n  const category = useSelector(state => state.myRegistry.anotherStoreProduct.category)\n  const quantity = useSelector(state => state.myRegistry.anotherStoreProduct.quantity)\n  const price = useSelector(state => state.myRegistry.anotherStoreProduct.price)\n  const howToGift = useSelector(state => state.myRegistry.anotherStoreProduct.howToGift)\n  const note = useSelector(state => state.myRegistry.anotherStoreProduct.note)\n  const mustHave = useSelector(state => state.myRegistry.anotherStoreProduct.mustHave)\n  const groupGift = useSelector(state => state.myRegistry.anotherStoreProduct.groupGift)\n  const purchased = useSelector(state => state.myRegistry.anotherStoreProduct.purchased)\n\n  const imageInput = createRef()\n\n  const howToGiftOptions = [\n    {\n      id: 1,\n      text: \"Get cash equivalent for this gift\"\n    },\n    {\n      id: 2,\n      text: \"Direct guest to store website to buy and ship themselves\"\n    }\n  ]\n\n  // Update state function\n  const changeProductUrl = (url) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productUrl = url;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductImage = (image) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productImage = image;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeProductName = (name) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.productName = name;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setCategory = (category) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.category = category;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const setQuantity = (quantity) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.quantity = quantity;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changePrice = (price) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.price = price;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeHowToGift = (howToGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.howToGift = howToGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const changeNote = (note) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.note = note;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleMustHave = (mustHave) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.mustHave = mustHave;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const toggleGroupGift = (groupGift) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.groupGift = groupGift;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const togglePurchased = (purchased) => {\n    let prodInfo = { ...productInfo };\n    prodInfo.purchased = purchased;\n    dispatch(setAnotherStoreProductInfo(prodInfo));\n  }\n\n  const openCategorySelect = (ev) => {\n    ev.preventDefault();\n    setCategoryModalVisible(true);\n  }\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const decrementQuantity = () => {\n    if (quantity - 1 > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  const priceChangeHandler = (ev) => {\n    ev.persist();\n\n    if (ev.target.value.length > 0) {\n      const newPrice = Number(ev.target.value);\n\n      if (newPrice) {\n        changePrice(ev.target.value);\n      }\n    } else {\n      changePrice(\"\")\n    }\n  }\n\n  const productNameChangeHandler = (ev) => {\n    ev.persist();\n    changeProductName(ev.target.value)\n  }\n\n  const noteChangeHandler = (ev) => {\n    ev.persist();\n    changeNote(ev.target.value);\n  }\n\n\n  const selectFileHandler = (ev) => {\n    if (imageInput.current && imageInput.current.files.length > 0) {\n      const file = imageInput.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            const newProductImage = {\n              type: \"custom\",\n              value: e.target.result,\n              file: file,\n              fileType: file.type,\n              fileName: file.name\n            }\n            changeProductImage(newProductImage);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          alert(\"File size exceeds the limit\");\n        }\n      } else {\n        alert(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  const submitStoreUrl = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      try {\n        new URL(ev.target.value);\n      } catch {\n        toast.error(\"Invalid Store Url\")\n        return;\n      }\n      changeProductUrl(ev.target.value);\n      const reqData = {\n        item_url: ev.target.value\n      }\n      setshowLoading(true);\n      getScrapedProduct(reqData).then(res => {\n        const resData = res.data;\n        if (resData) {\n          let prodInfo = { ...productInfo };\n          prodInfo.productUrl = ev.target.value;\n          prodInfo.productImage = {\n            type: \"url\",\n            value: resData.img\n          };\n          prodInfo.productName = resData.title;\n          prodInfo.price = getRefinedPrice(resData.price);\n          dispatch(setAnotherStoreProductInfo(prodInfo));\n          setshowLoading(false);\n          setHideProductDetails(false);\n        }\n      }).catch(err => {\n        setshowLoading(false);\n        try {\n          new URL(productInfo.productUrl);\n        } catch {\n          toast.error(\"Invalid Store Url\")\n          return false;\n        }\n      })\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row add-gift-another-store\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col m-a-input-container\">\n              <p className=\"text-sm add-gift-store-label\">Store</p>\n              <input type=\"text\" className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"\n                onKeyUp={(ev) => submitStoreUrl(ev)} placeholder=\"Paste a product link that you want to add in your Monica and Andy Registry\" />\n              {/* <a className=\"text-sm\" href=\"#\">Change</a> */}\n            </div>\n          </div>\n\n          <div className={[\"row mt-4\", hideProductDetails ? \"\" : \"pt-6\"].join(\" \")}>\n            {hideProductDetails ? showLoading ?\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                  <h4 className=\"hide-product-details m-auto\">Please wait while we fetch the product details</h4>\n                </div>\n              </div>\n              :\n              <div className=\"col text-center\">\n                <div className=\"hide-product-view py-13\">\n                  <h4 className=\"hide-product-details m-auto\">Please paste product link above to view details here</h4>\n                </div>\n              </div>\n              :\n              <>\n                <div className=\"col-5 add-gift-image-select\">\n                  <div className=\"mr-3\">\n                    {productImage.value ?\n                      <img\n                        src={productImage.value}\n                        alt=\"Product Image\"\n                      />\n                      : null}\n\n                    <i className=\"icon-preview p-1\" onClick={() => {\n                      imageInput.current.click()\n                    }} />\n                    {/* TODO: Change above icon to camera icon */}\n\n                    <input type=\"file\" className=\"d-none\" accept={ACCEPTED_IMAGE_TYPE.join(\",\")} ref={imageInput}\n                      onChange={(ev) => selectFileHandler(ev)} />\n                  </div>\n                </div>\n                <div className=\"col-7\">\n                  <div className=\"ml-3\">\n                    <div className=\"row\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm add-gift-store-label\">Product Name</p>\n                        <textarea\n                          className=\"w-100 mt-1 h1 p-2\"\n                          rows=\"2\"\n                          defaultValue={productName}\n                          onChange={(ev) => productNameChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container mr-2\">\n                          <p className=\"text-sm add-gift-store-label\">Price</p>\n                          <div className=\"price-input mt-1\">\n                            <input\n                              type=\"text\"\n                              className=\"w-100 pl-2 pr-1 py-1 text-body pl-5\"\n                              value={price}\n                              onChange={(ev) => priceChangeHandler(ev)}\n                            />\n                          </div>\n                          {/*<span className=\"price-input text-body\">$</span>*/}\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"m-a-input-container\">\n                          <p className=\"text-sm add-gift-store-label\">Quantity</p>\n                          <Counter\n                            className=\"mt-2\"\n                            counter={quantity}\n                            incrementHandler={incrementQuantity}\n                            decrementHandler={decrementQuantity}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                <div className=\"row mt-5\">\n                  <div className=\"col m-a-input-container\">\n                    <p className=\"text-sm add-gift-store-label\">Category: Item</p>\n                    <input type=\"text\" value={category.displayName} readOnly={true}\n                           className=\"w-100 pl-2 pr-12 py-1 text-body mt-1 input-background change-link-input\"/>\n                    <a className=\"text-sm\" href=\"#\" onClick={(ev) => openCategorySelect(ev)}>Change</a>\n                  </div>\n                </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col d-flex\">\n                        <TogglePills\n                          iconClass=\"icon-heart\"\n                          activeClass={mustHave ? \"active-must-have\" : null}\n                          onClick={() => toggleMustHave(!mustHave)}\n                          text=\"Must Have\"\n                          className=\"mr-2\" />\n                        <TogglePills\n                          iconClass=\"icon-guest\"\n                          activeClass={groupGift ? \"active-group-gift\" : null}\n                          onClick={() => toggleGroupGift(!groupGift)}\n                          text=\"Group Gift\"\n                          className=\"mr-2\" />\n                        {/* TODO: Change above guest icon one added */}\n                        <TogglePills\n                          iconClass=\"icon-shopping-cart\"\n                          activeClass={purchased ? \"active-purchased\" : null}\n                          onClick={() => togglePurchased(!purchased)}\n                          text=\"Purchased\"\n                          className=\"mr-2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm add-gift-store-label\">How to gift?</p>\n                        {howToGiftOptions.map((option, index) => (\n                          <div className={index === 0 ? \"mt-1\" : \"mt-3\"} key={\"how-to-gift-option-\" + option.id}>\n                            <RadioButton\n                              name=\"how-to-gift\"\n                              textClass=\"text-sm\"\n                              display={option.text}\n                              checked={option.id === howToGift.id ? true : null}\n                              changeHandler={() => changeHowToGift(option)} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"row mt-5\">\n                      <div className=\"col m-a-input-container\">\n                        <p className=\"text-sm add-gift-store-label\">Notes</p>\n                        <textarea className=\"w-100 mt-1 text-body p-1\"\n                          rows=\"2\"\n                          placeholder=\"Write a note for your friends and family\"\n                          defaultValue={note}\n                          onChange={(ev) => noteChangeHandler(ev)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n      <SelectCategory\n        showModal={categoryModalShow}\n        closeModal={setCategoryModalVisible}\n        currentCategory={category}\n        changeCurrentCategory={setCategory}\n      />\n    </>\n  )\n}\n\nexport default AddGiftAnotherStore;","import React, {Component} from 'react';\nimport {\n  incrementQuantity,\n  decrementQuantity,\n  setRegistryProducts,\n  setCheckListItems,\n  clearAnotherStoreProductInfo, setAnotherStoreProductInfo,\n} from \"../../../my-registry/MyRegistryActions\";\nimport CardItem from \"modules/commons/components/card-item/CardItem\";\nimport {connect} from \"react-redux\";\nimport \"./ViewRecommend.scss\";\nimport MoreOption from \"../more-option/MoreOption\";\nimport {ADD_REGISTRY_ITEM, GET_PRODUCTS, GET_CATEGORIES, UPDATE_REGISTRY_ITEM} from 'api/queries';\nimport {graphQL} from 'api/axios';\nimport Slider from \"react-slick\";\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport {toast} from \"react-toastify\";\nimport {ADD_REGISTRY_ITEM as ADD_REGISTRY_ITEM_MUTATION} from 'api/mutations';\nimport BookmarkletSection from \"../add-gift/bookmarklet-section/BookmarkletSection\";\nimport AddGiftAnotherStore from \"../add-gift/add-gift-another-store/AddGiftAnotherStore\";\nimport Button from \"../button-component/ButtonComponent\";\nimport Modal from \"../modal-component/ModalComponent\";\nimport {getProducts as commonGetProducts, getCategories as commonGetCategories} from \"../../../../utils/commonFunction\";\n\nclass ViewRecommend extends Component {\n\n  state = {\n    show: false,\n    updateModal: false,\n  }\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n  cardRef = React.createRef()\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n  }\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  getProducts = () => {\n    let data = {\n      query: GET_PRODUCTS,\n      variables: {\n        registryId: parseInt(this.props.stateRegistryInfo.id)\n      }\n    }\n    graphQL(data).then(res => {\n      let responseData = res.data.data.registryItems.edges.map(item => {\n        return {...item.node}\n      })\n      this.props.dispatch(setRegistryProducts(responseData))\n\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  getCategories = () => {\n    let data = {\n      query: GET_CATEGORIES,\n      variables: {\n        registryId: parseInt(this.props.stateRegistryInfo.id)\n      },\n    }\n    graphQL(data).then(res => {\n      let parentCategories = res.data.data.categories.filter(category => category.totalItemsCount > 0)\n      let finalCategories = []\n      finalCategories = parentCategories.map(parentCategory => {\n        let subCategory = parentCategory.subCategories\n        delete parentCategory.subCategories\n        let newSubCategories = subCategory.filter(cat => cat.totalItemsCount > 0)\n        parentCategory['subCategories'] = newSubCategories\n        return parentCategory\n      })\n      this.props.dispatch(setCheckListItems(finalCategories))\n\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  moreOptionsData = [\n    // TODO add option list\n    {\n      name: \"View Item\",\n      action: () => alert(\"Clicked\")\n    },\n  ]\n  getCategoryId = () => {\n    const currentRecommendation = this.props.stateActiveRecommandation;\n    for (let parentCategory of this.props.stateChecklist) {\n      if (parentCategory.categoryName === currentRecommendation) {\n        return parentCategory.id\n      }\n      for (let childCategory of parentCategory.subCategories) {\n        if (childCategory.categoryName === currentRecommendation) {\n          return childCategory.id\n        }\n      }\n    }\n  }\n\n  addProductHandler = (card) => {\n    let existingProduct = this.props.stateAddedProducts.filter(product => product.item.sku === card.variants.edges[0].node.sku)\n    if (existingProduct.length === 0) {\n      const registryId = parseInt(this.props.stateRegistryInfo.id)\n      const title = card.title\n      const category = card.category.id\n      const storeItemUrl = card.onlineStoreUrl\n      const sku = card.variants.edges[0].node.sku\n      const price = parseFloat(card.variants.edges[0].node.price)\n      const quantity = parseInt(card.quantity)\n      const shopifyItemId = card.id\n      const imageUrl = card.variants.edges[0].node.image.originalSrc\n\n      let data = {\n        query: ADD_REGISTRY_ITEM,\n        variables: {\n          registryId: registryId,\n          title: title,\n          category: category,\n          tags: [],\n          storeItemUrl: storeItemUrl ? storeItemUrl : '',\n          sku: sku,\n          price: price,\n          quantity: quantity,\n          shopifyItemId: shopifyItemId,\n          imageUrl: imageUrl,\n        }\n      }\n      graphQL(data).then(res => {\n        this.getProducts()\n        this.getCategories()\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    } else {\n      let data = {\n        query: UPDATE_REGISTRY_ITEM,\n        variables: {\n          registryItemId: existingProduct[0].id,\n          quantity: parseInt(card.quantity) + parseInt(existingProduct[0].quantity),\n        }\n      }\n      graphQL(data).then(res => {\n        this.getProducts()\n        this.getCategories()\n\n        toast.success((\n          <p><b>{card.title}</b> added to your registry!</p>\n        ))\n      }).catch(err => {\n        console.error(err.message)\n\n        toast.error((\n          <p>Some error occurred!</p>\n        ))\n      })\n    }\n  }\n\n  // Checking if product data is valid or not\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      alert(\"Invalid Store Url\");\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      alert(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      alert(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      alert(\"Invalid Quantity\");\n      return false;\n    }\n\n    // Valid Category\n    if (!storeProduct.category.id) {\n      alert(\"Invalid Category\");\n      return false;\n    }\n\n    return true;\n  }\n\n  // Adding Add on my own product to registry\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    console.log(\"Product info: \", storeProduct)\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM_MUTATION,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"category\": storeProduct.category.id,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        commonGetProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        commonGetCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  // Popping up Add on my own modal\n  addOnMyOwnClickHandler = (category) => {\n    this.clearModalData()\n    console.log(category)\n    let newCategory = {\n      ...category,\n      displayName: category.parentCategory.categoryName + \" : \" + category.categoryName\n    }\n    let prodInfo = {...this.props.stateAnotherStoreProduct};\n    prodInfo.category = newCategory;\n    this.props.dispatch(setAnotherStoreProductInfo(prodInfo));\n\n    this.modalTitle = `Add my own ${category ? category.categoryName.toLowerCase() : \"\"}`\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore/>\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      show: !prevState.show\n    }))\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3.2,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class=\"slick-prev slick-prev-btn\"><i className=\"icon-chevron-left slick-icon\"/>\n      </button>,\n      nextArrow: <button type=\"button\" class=\"slick-next slick-next-btn\"><i className=\"icon-chevron-right slick-icon\"/>\n      </button>\n    };\n    return (\n      <>\n        <div className=\"recommended-cart my-6\">\n          <div className=\"row\">\n            <div className=\"col title\"><h2>{this.props.title}\n              {/* <span className=\"text-sm sub-title\">Recommended </span> */}\n            </h2>\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Slider {...settings}>\n              {this.props.products.map((card, index) =>\n                // <div><>{index}</></div>\n                <div className=\"cart-view\" ref={this.cardRef}>\n                  <CardItem\n                    className=\"mr-4\"\n                    data={card}\n                    key={\"CardItem-\" + index}\n                    incrementQuantityHandler={() => this.props.dispatch(incrementQuantity(card.id, 1))}\n                    decrementQuantityHandler={() => this.props.dispatch(decrementQuantity(card.id, 1))}\n                    addProductHandler={() => this.addProductHandler(card)}\n                  />\n                </div>\n              )}\n              <div>\n                <div className=\"add-my-own-card mr-4 d-flex flex-column align-items-center justify-content-center\"\n                     style={{height: this.cardRef.current ? this.cardRef.current.offsetHeight + 'px' : '200px'}}\n                     onClick={() => this.addOnMyOwnClickHandler(this.props.category)}\n                >\n                    <button className=\"add-my-own-button\"/>\n                    <p className=\"text-body font-medium mt-5\">Add my own</p>\n                </div>\n              </div>\n            </Slider>\n          </div>\n          <div className=\"mt-6 card-buttom d-flex\">\n            {/* TODO: Change text to dynamic */}\n            <div>\n              <img className=\"blog-img\"\n                   src=\"https://cdn.shopify.com/s/files/1/2338/2917/files/maedit_submenu.jpg?v=1588207400\"\n                   alt={this.props.title}/>\n            </div>\n            <div className=\"pl-4 my-auto\">\n              <div className=\"text-body\">How to pick up a perfect crib mattress?</div>\n              <div className=\"card-buttom-subtext text-sm\">by Joanna Lee, March 13, 2020</div>\n            </div>\n            <div className=\"text-sm my-auto mr-6 ml-auto\">\n              <a href=\"\" className=\"read-more\">Read more</a>\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n      ;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateChecklist: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info,\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n  }\n}\n\nexport default connect(mapStateToProps)(ViewRecommend)","import React from 'react';\nimport \"./CheckBox.scss\";\n\nconst CheckBox = (props) => {\n  return (\n    <label className=\"checkbox d-flex align-items-center mb-4\">\n      <span className=\"checkbox__input mr-2\">\n        <input \n          type=\"checkbox\" \n          name={props.id} \n          value={props.id}\n          checked={props.checked ? \"checked\" : \"\"}\n          onChange={props.changeHandler}\n          />\n        <span className=\"checkbox__control d-flex justify-content-center align-items-center\">\n        <i className=\"icon-check\"></i>                          \n        </span>\n      </span>\n      <span className=\"radio__label text-sm\">{props.display} {props.count ? \"(\"+props.count+\")\" : null}</span>\n    </label>\n  )\n}\n\nexport default CheckBox;","import React from 'react'\nimport \"./Filter.scss\";\nimport RadioButton from 'modules/commons/components/radio-button/RadioButton';\nimport CheckBox from 'modules/commons/components/check-box/CheckBox';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {setParentFilter, setChildFilter, clearFilter} from '../../MyRegistryActions.js';\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const filterData = useSelector(state => state.myRegistry.filterCategory)\n  let tempParentFilterId = useSelector(state => state.myRegistry.filterApplied.parentFilter)\n  let tempChildFilterIds = useSelector(state => state.myRegistry.filterApplied.childFilter)\n\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  // Change event handlers\n\n  const parentChangeHandler = (parent) => {\n    dispatch(setParentFilter(parent.id))\n    if (parent.child) {\n      dispatch(setChildFilter(parent.child.map(child => child.id)))\n    } else {\n      dispatch(setChildFilter([]))\n    }\n  }\n\n  const childChangeHandler = (childId, parentId) => {\n\n    if (parentId !== tempParentFilterId) {\n      dispatch(setParentFilter(parentId))\n      if (tempChildFilterIds.length > 0) {\n        dispatch(setChildFilter([]))\n      }\n    }\n\n    const childIndex = tempChildFilterIds.indexOf(childId)\n\n    if (childIndex === -1) {\n      dispatch(setChildFilter([...tempChildFilterIds, childId]))\n    } else {\n      let newChildArray = [...tempChildFilterIds]\n      newChildArray.splice(childIndex, 1)\n      dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  // Click Handler\n\n  const doneClickHandler = () => {\n    toggleFilterContent()\n  }\n\n  const clearClickHandler = () => {\n    dispatch(clearFilter())\n    toggleFilterContent()\n  }\n\n  return (\n    <div className=\"filter-section-filter\">\n      <Button className=\"px-3 py-1\" variant=\"secondary\" onClick={toggleFilterContent}>\n        <div className=\"d-flex\">\n          <i className=\"icon-filter-1 mr-1 filter-icon\"/>\n          <span className=\"font-medium\">Filter</span>\n        </div>\n      </Button>\n      <div className=\"filter-content py-4\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column px-5\">\n          {filterData.map(parentFilter => (\n            <div className=\"filter-item mb-3\" key={\"filter-\" + parentFilter.id}>\n              {/* Parent filter */}\n              <RadioButton\n                {...parentFilter}\n                textClass=\"text-body\"\n                name=\"parentFilter\"\n                key={parentFilter.id}\n                checked={parentFilter.id === tempParentFilterId ? true : null}\n                changeHandler={() => parentChangeHandler(parentFilter)}\n              />\n\n              {/* Child filter */}\n              {parentFilter.child ? (\n                  <div className=\"d-flex flex-column mt-2 pl-5\" key={\"child-filter-\" + parentFilter.id}>\n                    {parentFilter.child.map(childFilter => (\n                      <CheckBox\n                        {...childFilter}\n                        key={childFilter.id}\n                        checked={tempChildFilterIds.includes(childFilter.id) ? true : null}\n                        changeHandler={() => childChangeHandler(childFilter.id, parentFilter.id)}\n                      />\n                    ))}\n                  </div>\n                )\n                : null}\n            </div>\n          ))}\n        </div>\n        <div className=\"d-flex filter-content-bottom-buttons px-5 pt-4\">\n          <Button className=\"text-body py-1 px-5 mr-2 font-medium\"\n                  onClick={clearClickHandler}\n                  variant=\"secondary\"\n          >Clear\n          </Button>\n          <Button\n            className=\"text-body py-1 px-3 font-medium\"\n            onClick={doneClickHandler}\n            variant=\"primary\"\n          >Done\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\nimport \"./FilterItemChip.scss\";\n\nconst FilterItemChip = (props) => {\n  return (\n    <span className={[\"filter-item-chip px-2 mb-1\", props.className ? props.className : ''].join(\" \")}><span className=\"text-sm\">{props.text}</span><i className=\"icon-close ml-1\" onClick={props.deleteHandler}></i></span>\n  )\n}\n\nexport default FilterItemChip;","import React from \"react\";\nimport \"./ImportGiftCard.scss\";\n\nconst ImportGiftCard = (props) => {\n  return (\n    <div className=\"import-gift-card d-flex py-2\" onClick={props.onClick}>\n        <i className={[props.iconClass, \"import-gift-card-icon mx-5 align-self-center\"].join(\" \")}/>\n        <div className=\"mr-3\">\n          <h4>{props.title}</h4>\n          <p className=\"text-sm mt-1\">{props.text}</p>\n        </div>\n    </div>\n  )\n}\n\nexport default ImportGiftCard;","import React from \"react\";\nimport \"./CategoryPill.scss\";\n\nconst CategoryPill = (props) => {\n  return (\n    <span className={[\"import-registry-category-pill text-sm p-1\", props.className ? props.className : \"\"].join(\" \")}>\n      {props.name}\n      <i className=\"icon-close remove-category-pill-icon ml-2\" onClick={props.removeCategory}/>\n    </span>\n  );\n}\n\nexport default CategoryPill;\n","import React from \"react\";\nimport \"./ImportRegistry.scss\";\nimport {getAnotherRegistryProducts} from \"../../../../../api/axios\";\nimport {toast} from \"react-toastify\";\nimport SelectCategory from \"../../select-category/SelectCategory\";\nimport CategoryPill from \"./category-pill/CategoryPill\";\nimport {connect} from \"react-redux\";\nimport {setAnotherStoreRegistryItems} from \"../../../../my-registry/MyRegistryActions\";\n\nclass ImportRegistry extends React.Component {\n  state = {\n    registryUrl: \"\",\n    errorMessage: \"\",\n    loading: false,\n    categoryModalShow: false,\n    activeCategoryProductIndex: null,\n    currentRegistryLink: \"\",\n    inputHasFocus: false\n  }\n\n  inputRef = React.createRef()\n\n  setCategoryModalVisible = () => {\n    this.setState({categoryModalShow: false})\n  }\n\n  changeLoadingState = (value) => {\n    this.setState({\n      loading: value\n    })\n  }\n\n  registryUrlChangeHandler = (ev) => {\n    this.setState({\n      registryUrl: ev.target.value,\n      errorMessage: \"\"\n    })\n  }\n\n  checkUrlAndGetRegistryItems = () => {\n    // Checking for valid url\n    try {\n      new URL(this.state.registryUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return;\n    }\n\n    this.getAnotherRegistryProductsInfo();\n  }\n\n  registryUrlKeyUpHandler = (ev) => {\n    ev.persist();\n    ev.preventDefault();\n    if (ev.keyCode === 13) { //Enter keycode is 13\n      this.checkUrlAndGetRegistryItems()\n    }\n  }\n\n  getAnotherRegistryProductsInfo = () => {\n\n    this.setState({\n      currentRegistryLink: this.state.registryUrl\n    })\n    if (this.inputRef.current) {\n      this.inputRef.current.blur();\n    }\n\n    const registryUrl = new URL(this.state.registryUrl);\n    const storeName = registryUrl.hostname.split(\".\")[1]\n\n    const reqData = {\n      store_name: storeName,\n      store_url: this.state.registryUrl\n    }\n\n    this.changeLoadingState(true);\n\n    getAnotherRegistryProducts(reqData).then(res => {\n      try {\n        if (res.data) {\n          const products = res.data.products;\n          const registry = res.data.registry;\n\n          if (products && registry) {\n            let newProducts = products.filter(product => product.title)\n            newProducts = newProducts.map(product => {\n              product.categories = [];\n              return product;\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n            // this.setState({\n            //   products: newProducts\n            // })\n          } else {\n            this.setState({\n              errorMessage: \"No registry found. Please check url or make sure that registry is publicly accessible\"\n            })\n            this.props.dispatch(setAnotherStoreRegistryItems([]))\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        toast.error(\"Some error occurred while reading registry products.\")\n      }\n\n    }).catch(err => {\n      toast.error(\"Some error occurred while fetching registry.\")\n      console.error(err);\n    }).finally(() => {\n      this.changeLoadingState(false)\n    })\n  }\n\n  openSelectCategoryModal = (ev, productIndex) => {\n    ev.preventDefault()\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      this.setState({\n        activeCategoryProductIndex: productIndex,\n        categoryModalShow: true\n      })\n    } else {\n      console.log(\"Invalid Product Index\");\n    }\n  }\n\n  setProductCategories = (categories) => {\n    // Saving categories passed from SelectCategory Modal\n    if (Number.isInteger(this.state.activeCategoryProductIndex) && this.props.stateAnotherStoreRegistry[this.state.activeCategoryProductIndex]) {\n      let newProductState = [...this.props.stateAnotherStoreRegistry];\n      // TODO: Change this to support multiple categories\n      newProductState[this.state.activeCategoryProductIndex].categories.push(categories);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProductState))\n      this.setState({\n        activeCategoryProductIndex: null\n      })\n    }\n  }\n\n  removeSelectedCategory = (productIndex, categoryId) => {\n    if (this.props.stateAnotherStoreRegistry[productIndex]) {\n      let newProducts = [...this.props.stateAnotherStoreRegistry]\n      newProducts[productIndex].categories = newProducts[productIndex].categories.filter(category => category.id !== categoryId);\n      this.props.dispatch(setAnotherStoreRegistryItems(newProducts))\n      // this.setState({\n      //   products: newProducts\n      // })\n    }\n  }\n\n  changeRegistryUrl = (e) => {\n    e.preventDefault();\n    if (this.inputRef.current) {\n      this.inputRef.current.focus()\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"baby-registry-import-registry\">\n          <div className=\"row mt-5\">\n            <div className=\"col d-flex flex-column\">\n              <span className=\"baby-registry-required-field text-sm font-medium\">Registry URL</span>\n              <div className=\"position-relative mt-1\">\n                <input type=\"text\"\n                       className={[\"import-registry-input-field w-100 mw-100 text-body pl-2 py-1 pr-13\", this.state.errorMessage ? \"import-registry-error-field\" : \"\"].join(\" \")}\n                       placeholder=\"Paste your registry URL here to import.  Please ensure it's publicly accessible.\"\n                       value={this.state.registryUrl}\n                       ref={this.inputRef}\n                       onChange={this.registryUrlChangeHandler.bind(this)}\n                       onKeyUp={this.registryUrlKeyUpHandler.bind(this)}\n                       onFocus={() => this.setState({inputHasFocus: true})}\n                       onBlur={() => this.setState({inputHasFocus: false})}\n                />\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink === this.state.registryUrl && !this.state.inputHasFocus ?\n                  <a className=\"import-registry-change-link text-sm font-medium import-registry-category-link\" href=\"#\"\n                     onClick={(e) => this.changeRegistryUrl(e)}>Change</a> : null}\n\n                {this.state.registryUrl.length > 0 && this.state.currentRegistryLink !== this.state.registryUrl ?\n                  <div className=\"import-registry-submit-url-section\">\n                    {/*TODO: Change icons once added to global icons*/}\n                    <button className=\"icon-close mr-3\"\n                            onClick={() => this.setState({registryUrl: this.state.currentRegistryLink})}/>\n                    <button className=\"icon-check\" onClick={this.checkUrlAndGetRegistryItems}/>\n                  </div>\n                  : null}\n              </div>\n              {this.state.errorMessage ?\n                <span className=\"import-registry-input-error-message text-body mt-1\">{this.state.errorMessage}</span>\n                : null}\n            </div>\n          </div>\n\n          <div className=\"row baby-registry-import-section mt-6\">\n            <div className=\"col\">\n              {this.props.stateAnotherStoreRegistry.length <= 0 || this.state.loading ?\n                // When no product exists\n                <div className=\"py-20 text-center import-registry-main-content\">\n                  {this.state.loading ?\n                    <>\n                      <div className=\"spinner-border import-registry-spinner\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                      <h4 className=\"mt-1 mx-auto import-registry-loading-text\">Please wait while we’re importing your\n                        registry</h4>\n                    </>\n                    :\n                    <h4 className=\"mx-auto import-registry-no-content-text\">\n                      Please paste your publicly accessible\n                      registry URL above to import items\n                      to M+A.\n                    </h4>\n                  }\n                </div>\n                :\n                // When products is filled\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"import-registry-main-content d-flex flex-column import-registry-products\">\n                      <div className=\"d-flex import-registry-products-column \">\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Items</p>\n                        </div>\n                        <div className=\"w-50 pt-2 pb-1 px-3\">\n                          <p className=\"text-sm font-medium\">Category: Item</p>\n                        </div>\n                      </div>\n\n\n                      {this.props.stateAnotherStoreRegistry.map((product, index) => (\n                        <div className=\"d-flex import-registry-products-column\" key={\"Product-\" + index}>\n                          <div className=\"w-50 px-3\">\n                            <p className=\"py-3 text-body\">{product.title}</p>\n                          </div>\n                          <div className=\"w-50 px-3\">\n                            {product.categories.length <= 0 ?\n                              <div className=\"py-3\">\n                                <a href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                   onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Select category</a>\n                              </div>\n                              :\n                              <div className=\"pb-2\">\n                                {product.categories.map(category => (\n                                  <CategoryPill\n                                    key={category.id}\n                                    name={category.categoryName}\n                                    removeCategory={() => this.removeSelectedCategory(index, category.id)}\n                                    className=\"mt-2 mr-3\"\n                                  />\n                                ))}\n\n                                <a href=\"#\" className=\"import-registry-category-link font-medium text-sm\"\n                                   onClick={(ev) => this.openSelectCategoryModal(ev, index)}>Add</a>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n        <SelectCategory\n          showModal={this.state.categoryModalShow}\n          closeModal={this.setCategoryModalVisible}\n          changeCurrentCategory={this.setProductCategories}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ImportRegistry);","import React from 'react';\nimport \"./AddGift.scss\";\nimport {connect} from 'react-redux';\nimport Button from '../button-component/ButtonComponent';\nimport Modal from \"../modal-component/ModalComponent\";\nimport BookmarkletSection from \"./bookmarklet-section/BookmarkletSection\";\nimport ImportGiftCard from \"./import-gift-card/ImportGiftCard\";\nimport AddGiftAnotherStore from \"./add-gift-another-store/AddGiftAnotherStore\";\nimport ImportRegistry from \"./import-registry/ImportRegistry\";\nimport {clearAnotherStoreProductInfo, setAnotherStoreRegistryItems} from \"modules/my-registry/MyRegistryActions\";\nimport {ADD_REGISTRY_ITEM, SAVE_REGISTRY_DATA} from \"../../../../api/mutations\";\nimport {graphQLMultipart as graphQL, graphQL as jsonGraphQL} from \"../../../../api/axios\";\nimport {getProducts, getCategories} from \"utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nclass AddGift extends React.Component {\n  // Variable declarations\n  state = {\n    show: false,\n    updateModal: false\n  }\n\n  modalTitle = \"\"\n  modalBody = \"\"\n  modalTitleContent = \"\"\n  modalFooterButtons = \"\"\n\n  //TODO: List to be populated from the API\n  categoryList = [\n    {\n      name: \"Nursery\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Gear + Travel\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/nursery_nav_220x280.jpg?4104111\"\n    },\n    {\n      name: \"Activity Equipment + Toys\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/baby-nav-callout.jpg?v=1594915209\"\n    },\n    {\n      name: \"Health/Safety\",\n      imageUrl: \"https://cdn.shopify.com/s/files/1/2338/2917/files/for_mom_nav_220x280.jpg?4104102\"\n    }\n  ]\n\n  // Helper function\n\n  clearModalData = () => {\n    this.modalTitle = \"\"\n    this.modalBody = \"\"\n    this.modalTitleContent = \"\"\n    this.modalFooterButtons = \"\"\n\n    this.props.dispatch(clearAnotherStoreProductInfo());\n    this.props.dispatch(setAnotherStoreRegistryItems([]));\n  }\n\n  dataURItoBlob = (dataURI, fileType, fileName) => {\n    let byteString = atob(dataURI.split(',')[1]);\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    let blob = new Blob([ab], {type: fileType});\n    return new File([blob], fileName, {\n      type: fileType\n    })\n  }\n\n  checkDataValidity = (storeProduct) => {\n\n    // Valid store URL\n    try {\n      new URL(storeProduct.productUrl);\n    } catch {\n      toast.error(\"Invalid Store Url\")\n      return false;\n    }\n\n    // Valid Product Name\n    if (storeProduct.productName.length <= 0) {\n      toast.error(\"Invalid Product Name\");\n      return false;\n    }\n\n    // Valid Price\n    if (storeProduct.price.length <= 0) {\n      toast.error(\"Invalid Price\");\n      return false;\n    }\n\n    // Valid Quantity\n    if (storeProduct.quantity < 1) {\n      toast.error(\"Invalid Quantity\");\n      return false;\n    }\n\n    // Valid Category\n    if (!storeProduct.category.id) {\n      toast.error(\"Invalid Category\");\n      return false;\n    }\n\n    return true;\n  }\n\n  addItemToRegistry = () => {\n    const storeProduct = this.props.stateAnotherStoreProduct;\n    const isValidData = this.checkDataValidity(storeProduct);\n    if (!isValidData) {\n      return;\n    }\n\n    let storeUrl = new URL(storeProduct.productUrl);\n    storeUrl = storeUrl.hostname.split(\".\")\n    const storeName = storeUrl[storeUrl.length - 2]\n\n    let formData = new FormData()\n\n    let data = {\n      query: ADD_REGISTRY_ITEM,\n      operationName: \"addRegistryItems\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": [{\n          \"storeName\": storeName,\n          \"items\": [{\n            \"title\": storeProduct.productName,\n            \"category\": storeProduct.category.id,\n            \"tags\": [],\n            \"storeItemUrl\": storeProduct.productUrl,\n            \"price\": storeProduct.price,\n            \"quantity\": storeProduct.quantity,\n            \"mostWanted\": storeProduct.mustHave,\n            \"isGroupGift\": storeProduct.groupGift,\n            \"note\": storeProduct.note\n          }]\n        }]\n      }\n    }\n\n    if (storeProduct.productImage.type === \"custom\") {\n      let map = {\n        images: [\"variables.input.0.items.0.images\"]\n      }\n      data.variables.input[0].items[0]['images'] = null;\n      formData.append(\"map\", JSON.stringify(map))\n      formData.append(\"images\", this.dataURItoBlob(storeProduct.productImage.value, storeProduct.productImage.fileType, storeProduct.productImage.fileName))\n    } else {\n      data.variables.input[0].items[0]['imageUrl'] = this.props.stateAnotherStoreProduct.productImage.value;\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n\n    graphQL(formData).then(res => {\n      if (res.status === 200) {\n        // Successfully added product\n        getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n        getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n\n        toast.success((\n          <p><b>{storeProduct.productName}</b> added to your registry!</p>\n        ))\n\n        this.clearModalData();\n        this.modalCloseHandler();\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred.\");\n      console.error(err.message)\n    })\n  }\n\n  // Event Handlers\n\n  modalCloseHandler = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  openAddGiftModal = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift\"\n    this.setState((prevState, props) => ({\n      show: true,\n      updateModal: !prevState.updateModal\n    }))\n\n    this.modalBody = (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold\">M+A Store</h4>\n          <div className=\"card-deck mt-2\">\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">New Arrivals</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Most Popular Gifts</h4></div>\n            <div className=\"card m-a-cards\"><h4 className=\"m-auto\">Cash Funds</h4></div>\n          </div>\n          <div className=\"row\">\n            {this.categoryList.map(category =>\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"category-\" + category.name}>\n                <div className=\"m-a-category-card d-flex\">\n                  <img src={category.imageUrl} alt={category.name}/>\n                  <h4 className=\"my-auto pl-2\">{category.name}</h4>\n                </div>\n              </div>\n            )}\n          </div>\n          <h4 className=\"font-weight-bold mt-8\">Another Store</h4>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <BookmarkletSection/>\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-shopping-cart\"\n                title=\"Add Gift from another store\"\n                text=\"You can add links from other online store and save in your registry.\"\n                onClick={this.importGiftAnotherStoreHandler}\n              />\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <ImportGiftCard\n                iconClass=\"icon-import\"\n                title=\"Import\"\n                text=\"You can import a gift or an entire registry from another store\"\n                onClick={this.importRegistry}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  anotherStoreItemViewDetail = (storeProduct) => {\n    if (storeProduct.productUrl) {\n      window.open(storeProduct.productUrl, '_blank');\n    }\n  }\n\n  validImportRegistryData = (registryItems) => {\n    if (registryItems.length <= 0) {\n      toast.error(\"No Item found\");\n      return false;\n    }\n    for (const item of registryItems) {\n      if (item.categories.length <= 0) {\n        toast.error(\"Please select category for all product\");\n        return false;\n      }\n    }\n    return true;\n  }\n\n  getRefinedPrice = (price) => {\n    let newPrice = \"\";\n    for (let char of price) {\n      if (char !== \".\") {\n        if (Number.isInteger(Number(char))) {\n          newPrice += char\n        }\n      } else {\n        newPrice += char\n      }\n    }\n\n    return newPrice;\n  }\n\n  getCleanedRegistryItems = (registryItems) => {\n    let cleanedRegistryItems = []\n    for (const item of registryItems) {\n      // TODO: Handle multiple store for single product\n      const itemStore = item.stores[0]\n      if (cleanedRegistryItems.find(el => el.storeName ? el.storeName === itemStore.name : false)) {\n        cleanedRegistryItems = cleanedRegistryItems.map(el => {\n          if (el.storeName === itemStore.name) {\n            if (el.items) {\n              el.items.push({\n                title: item.title,\n                // TODO: Change to multiple categories when backend is implemented\n                category: Number(item.categories[0].id),\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              })\n            } else {\n              el['items'] = [{\n                title: item.title,\n                // TODO: Change to multiple categories when backend is implemented\n                category: Number(item.categories[0].id),\n                quantity: 1,\n                tags: [],\n                price: this.getRefinedPrice(itemStore.price)\n              }]\n            }\n            if (item.img) {\n              el.items[el.items.length - 1]['imageUrl'] = item.img\n            }\n          }\n          return el;\n        })\n      } else {\n        let newStore = {\n          storeName: itemStore.name,\n          items: [{\n            title: item.title,\n            // TODO: Change to multiple categories when backend is implemented\n            category: Number(item.categories[0].id),\n            quantity: 1,\n            tags: [],\n            price: this.getRefinedPrice(itemStore.price)\n          }]\n        }\n\n        if (item.img) {\n          newStore.items[newStore.items.length - 1]['imageUrl'] = item.img\n        }\n        cleanedRegistryItems.push(newStore)\n      }\n    }\n\n    return cleanedRegistryItems;\n  }\n\n  importRegistryClickHandler = () => {\n    if (!this.validImportRegistryData(this.props.stateAnotherStoreRegistry)) {\n      return;\n    }\n\n    const registryItems = this.getCleanedRegistryItems(this.props.stateAnotherStoreRegistry)\n    if (registryItems.length > 0) {\n      const reqData = {\n        query: ADD_REGISTRY_ITEM,\n        operationName: \"addRegistryItems\",\n        variables: {\n          \"registryId\": this.props.stateRegistryInfo.id,\n          \"input\": registryItems\n        }\n      }\n      jsonGraphQL(reqData).then(res => {\n        if (res.data.data.addRegistryItems) {\n          getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n          getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n          toast.success(\"Registry items imported successfully\");\n          this.clearModalData();\n          this.modalCloseHandler();\n        }\n      }).catch(err => {\n        console.log(err);\n      })\n    }\n  }\n\n  importGiftAnotherStoreHandler = () => {\n    this.clearModalData()\n    this.modalTitle = \"Add gift from another store\"\n    this.modalTitleContent = (\n      <div className=\"row mt-2 mb-4\">\n        <div className=\"col\">\n          <BookmarkletSection/>\n        </div>\n      </div>\n    )\n    this.modalBody = <AddGiftAnotherStore/>\n\n    this.modalFooterButtons = (\n      <>\n        <Button\n          variant=\"secondary\"\n          className=\"px-3 py-1 font-weight-bold font-medium text-body\"\n          onClick={() => this.anotherStoreItemViewDetail(this.props.stateAnotherStoreProduct)}\n        >View Details</Button>\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.addItemToRegistry}\n        >Save & Close</Button>\n      </>\n    )\n\n    this.setState((prevState, props) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  importRegistry = () => {\n    this.clearModalData()\n    this.modalTitle = \"Import Registry\"\n    this.modalBody = <ImportRegistry/>\n\n    this.modalFooterButtons = (\n      <>\n        {/*TODO: change href of email us link*/}\n        <a href=\"#\" className=\"mr-auto import-registry-email-link text-sm font-medium\">Email Us For Help</a>\n        {/*TODO: Integrate API when multiple category is supported*/}\n        <Button\n          variant=\"primary\"\n          className=\"px-4 py-1 font-weight-bold font-medium text-body\"\n          onClick={this.importRegistryClickHandler}\n        >Import</Button>\n      </>\n    )\n\n    this.setState((prevState, _) => ({\n      updateModal: !prevState.updateModal\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-weight-bold font-medium m-a-popover m-a-popover-top-right\"\n          onClick={this.openAddGiftModal}\n        >\n          Add Gift\n          <div className=\"m-a-popover-content px-3 py-2\">\n            <span className=\"font-medium text-sm\">What is Add Gift?</span>\n            <p className=\"text-sm font-weight-normal m-a-popover-content-desc\">You can add gift from our store and save\n              in your registry.</p>\n          </div>\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          updateModal={this.state.updateModal}\n          title={this.modalTitle}\n          titleContent={this.modalTitleContent}\n          footer={this.modalFooterButtons}\n          closeModal={this.modalCloseHandler}>\n          {this.modalBody}\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateAnotherStoreProduct: state.myRegistry.anotherStoreProduct,\n    stateAnotherStoreRegistry: state.myRegistry.anotherStoreRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddGift);","import React from 'react';\nimport './FilterSection.scss';\nimport Filter from '../filter/Filter';\nimport { connect } from 'react-redux';\nimport FilterItemChip from '../filter/filter-item-chip/FilterItemChip';\nimport { clearFilter, setChildFilter } from \"../../MyRegistryActions\"\nimport AddGift from \"../../../commons/components/add-gift/AddGift\";\n\nclass FilterSection extends React.Component {\n\n  // Filter chips close handler\n  deleteChipHandler = (isParent, childId) => {\n    if (isParent) {\n      this.props.dispatch(clearFilter())\n    } else {\n      const newChildArray = this.props.stateFilterApplied.childFilter.filter(element => {\n        return element !== childId\n      })\n      this.props.dispatch(setChildFilter(newChildArray))\n    }\n  }\n\n  //Clear filter state\n  clearFilterHandler = (ev) => {\n    ev.preventDefault()\n    this.props.dispatch(clearFilter())\n  }\n\n  render() {\n    // Get all the filter chips from the state based on id\n    let filterChips = {}\n    if (this.props.stateFilterApplied) {\n      let allChild = []\n      if (this.props.stateFilterApplied.parentFilter) {\n        filterChips.parentFilter = this.props.stateFilterCategory.find(element => {\n          return element.id === this.props.stateFilterApplied.parentFilter\n        })\n        allChild = filterChips.parentFilter.child\n      }\n      if (this.props.stateFilterApplied.childFilter) {\n        filterChips.childFilter = this.props.stateFilterApplied.childFilter.map(item => {\n          return allChild.find(element => {\n            return element.id === item\n          })\n        })\n      }\n    }\n\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col\">\n          <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.productCount} {this.props.productCount === 1 ? \"item\" : \"items\"}</h4>\n          <div className=\"filtered-items\">\n            {filterChips.parentFilter ?\n              <FilterItemChip text={filterChips.parentFilter.display} className=\"mr-2\"\n                deleteHandler={() => this.deleteChipHandler(true, null)} />\n              : null}\n            {filterChips.childFilter ?\n              filterChips.childFilter.map(item =>\n                <FilterItemChip\n                  text={item.display}\n                  className=\"mr-2\"\n                  key={filterChips.parentFilter.id + \"-\" + item.id}\n                  deleteHandler={() => this.deleteChipHandler(false, item.id)} />)\n              : null}\n            {filterChips.parentFilter ?\n              <a className=\"font-medium text-sm filter-clear-link\" href=\"#\"\n                onClick={(ev) => this.clearFilterHandler(ev)}>Clear\n                all</a>\n              : null}\n          </div>\n        </div>\n        <div className=\"col-4 d-flex justify-content-end text-align-right\">\n          <div className=\" mr-3\">\n            <Filter />\n          </div>\n          <div className=\"position-relative\">\n            <AddGift />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateFilteredProducts: state.myRegistry.filteredProducts,\n    stateFilterCategory: state.myRegistry.filterCategory\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(FilterSection);\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport {\n  toggleMustHaveProduct,\n  addRecommendedProduct,\n  setFilterCategory,\n} from \"../../MyRegistryActions\";\nimport CheckList from \"modules/my-registry/components/checkList/CheckList\";\nimport CheckListItems from \"modules/my-registry/components/checkList/CheckListItems\";\nimport ViewRecommend from 'modules/commons/components/view-recommend/ViewRecommend';\nimport FilterSection from '../../components/filter-section/FilterSection';\nimport { graphQL, getRecommendation } from 'api/axios';\nimport { GET_RECOMMENDATIONS } from 'api/queries';\nimport { TOGGLE_MUST_HAVE } from 'api/mutations';\nimport { getProducts, removeProductFromCartHandler, getCategories } from \"utils/commonFunction\";\n\nclass Everything extends Component {\n\n  componentDidMount() {\n    getCategories(this.props.stateRegistryInfo.id, this.props.dispatch);\n    getProducts(this.props.stateRegistryInfo.id, this.props.dispatch);\n  }\n\n\n  // Updating product count in filter categories\n  updateFilterList = (addedProducts) => {\n    const newFilterList = [\n      {\n        id: \"giftsAdded\",\n        display: \"Gifts added\",\n        count: addedProducts.length,\n        child: [\n          {\n            id: \"mustHave\",\n            display: \"Must have\",\n            count: addedProducts.filter(product => product.mostWanted).length\n          },\n          {\n            id: \"purchased\",\n            display: \"Purchased\",\n            count: addedProducts.filter(product => product.isPurchased).length\n          },\n          {\n            id: \"reserved\",\n            display: \"Reserved\",\n            count: addedProducts.filter(product => product.isReserved).length\n          },\n          {\n            id: \"available\",\n            display: \"Available\",\n            count: 0\n          }\n        ]\n      },\n      {\n        id: \"giftsToAdd\",\n        display: \"Gifts to add\",\n        count: 0\n      }\n    ]\n\n    this.props.dispatch(setFilterCategory(newFilterList))\n  }\n\n  toggleMustHaveProduct = (product) => {\n    let data = {\n      query: TOGGLE_MUST_HAVE,\n      variables: {\n        productId: product.id,\n        mustHaveValue: !product.mostWanted,\n        quantity: product.quantity\n      }\n    }\n    graphQL(data).then(res => {\n      if (res.status === 200) {\n        this.props.dispatch(toggleMustHaveProduct(product.item.id))\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  setAllRecommendation = (categories) => {\n    let recommendedCategory = []\n    for (let parentCat of categories) {\n      for (let category of parentCat.subCategories) {\n        recommendedCategory.push({\n          ...category,\n          parentCategory: parentCat.categoryName,\n        })\n      }\n    }\n    for (let recommendedCat of recommendedCategory) {\n      let data = {\n        query: GET_RECOMMENDATIONS,\n        variables: {\n          productCount: 15,\n          productType: \"product_type:\" + recommendedCat.categoryName\n        }\n      }\n      getRecommendation({ params: data }).then(res => {\n        let rData = res.data.data.products.edges.map(item => {\n          let resData = { ...item.node }\n          resData['quantity'] = 1\n          resData['category'] = recommendedCat\n          return resData\n        })\n        this.props.dispatch(addRecommendedProduct(rData))\n      }).catch(err => {\n        console.error(err.message)\n      })\n    }\n  }\n\n  getSortedProducts = (addedProducts, stateCategories, stateRecommendedProducts, stateFilterApplied) => {\n    let allProducts = []\n    let productCount = 0;\n    let categories = []\n    for (let parentCat of stateCategories) {\n      for (let category of parentCat.subCategories) {\n        categories.push({\n          id: category.id,\n          name: category.categoryName,\n          added: category.addedItemsCount,\n          total: category.totalItemsCount\n        })\n      }\n    }\n\n\n    for (let category of categories) {\n      let products = []\n      let recommendations = []\n\n      // Getting filtered Products and recommendations\n      if (stateFilterApplied.parentFilter) {\n        if (stateFilterApplied.parentFilter === \"giftsAdded\") {\n          if (stateFilterApplied.childFilter.length > 0) {\n            const childFilterArray = stateFilterApplied.childFilter\n\n            for (let product of addedProducts) {\n              if (\n                ((childFilterArray.includes(\"mustHave\") && product.mostWanted) ||\n                  (childFilterArray.includes(\"purchased\") && product.isPurchased) ||\n                  (childFilterArray.includes(\"reserved\") && product.isReserved)) && product.item.category.id === category.id\n              ) {\n                products.push(product)\n                // filteredProductsId.push(product.id)\n              }\n            }\n          } else {\n            products.push(...addedProducts.filter(el => el.item.category.id === category.id))\n          }\n        } else if (stateFilterApplied.parentFilter === \"giftsToAdd\") {\n          let addedRecommendations = []\n          recommendations = stateRecommendedProducts.filter(el => {\n            if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n              addedRecommendations.push(el.id)\n              return true;\n            }\n            return false;\n          })\n        }\n      } else {\n        products.push(...addedProducts.filter(el => el.item.category.id === category.id))\n        let addedRecommendations = []\n        recommendations = stateRecommendedProducts.filter(el => {\n          if (el.category.id === category.id && !addedRecommendations.includes(el.id)) {\n            addedRecommendations.push(el.id)\n            return true;\n          }\n          return false;\n        })\n      }\n\n      productCount += products.length;\n      allProducts.push({\n        category: category,\n        products: products,\n        recommendations: category.added < category.total ? recommendations : []\n      })\n    }\n\n    return { allProducts, productCount };\n  }\n\n  getChecklistPercentage = (checklistItems) => {\n    let totalItems = 0;\n    let addedItems = 0;\n    for (let category of checklistItems) {\n      totalItems += category.totalItemsCount;\n      addedItems += category.addedItemsCount;\n    }\n\n    return (addedItems / totalItems) * 100;\n  }\n\n\n  render() {\n    if (this.props.stateRecommendedProducts.length === 0 && this.props.stateCheckList.length > 0) {\n      this.setAllRecommendation(this.props.stateCheckList);\n    }\n    this.updateFilterList(this.props.stateAddedProducts)\n    let { allProducts, productCount } = this.getSortedProducts(this.props.stateAddedProducts, this.props.stateCheckList, this.props.stateRecommendedProducts, this.props.stateFilterApplied)\n\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-6\">\n          {/* View CheckList */}\n          <div className=\"col-3\">\n            <CheckList percentage={this.getChecklistPercentage(this.props.stateCheckList)} />\n            {this.props.stateCheckList.map(item => <CheckListItems key={item.categoryName} item={item}\n              dispatch={this.props.dispatch} />)}\n          </div>\n          <div className=\"col-9\">\n\n            {/* Top Filter Section */}\n            <FilterSection productCount={productCount} />\n            <div className=\"mt-5\">\n              {allProducts.map((product, i) => (\n                <div id={product.category.name}>\n                  {product.products.map((card, index) => (\n                    <AddedCard\n                      data={card} key={\"addedCard\" + index}\n                      toggleMustHave={() => this.toggleMustHaveProduct(card)}\n                      removeProductFromCartHandler={() => removeProductFromCartHandler(card, this.props.stateRegistryInfo.id, this.props.dispatch)}\n                    />\n                  ))}\n                  {product.recommendations.length > 0 ?\n                    <ViewRecommend\n                      title={product.recommendations[0].category.categoryName}\n                      category={product.recommendations[0].category}\n                      products={product.recommendations} />\n                    : null}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateProducts: state.myRegistry.products,\n    stateAddedProducts: state.myRegistry.addedProducts,\n    stateFilterApplied: state.myRegistry.filterApplied,\n    stateActiveRecommandation: state.myRegistry.activeRecommandation,\n    stateRecommendedProducts: state.myRegistry.recommendedProducts,\n    stateCheckList: state.myRegistry.checkList,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(Everything);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport Everything from \"../Everything/Everything\";\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.MY_REGISTRY.HOME} component={Everything} />\n            </Switch>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\nimport MainContent from './containers/MainContent/MainContent';\n\n\nconst MyRegistry = (props) => {\n    return (\n        <>\n            <MainContent />\n        </>\n    )\n}\n\nexport default MyRegistry;\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nconst CropImage = (props) => {\n\n  // DEFAULT CONSTANTS\n  const ASPECT_RATIO = {\n    width: 16,\n    height: 7\n  }\n  const CROPPED_IMAGE_FORMAT = \"image/jpeg\";\n  const COVER_IMAGE_NAME = \"cover.jpeg\";\n\n  // VARIABLE INITIALIZATION\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    aspect: ASPECT_RATIO.width / ASPECT_RATIO.height\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // SET IMGREF TO LOADED IMAGE\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  // RETURN BLOB OF CROPPED IMAGE\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          blob.name = fileName;\n          resolve(blob);\n        } else {\n          reject(\"Blob is null\");\n        }\n      }, CROPPED_IMAGE_FORMAT, 1);\n    });\n  }\n\n  // SET CROPPED IMAGE TO PARENT STATE\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n    let croppedImage = getCroppedImg(imgRef.current, completedCrop, COVER_IMAGE_NAME)\n    croppedImage.then(blob => {\n      props.setCroppedImage(blob);\n    }).catch(_ => {})\n  }, [completedCrop]);\n\n  return (\n    <>\n      <ReactCrop\n        src={props.src}\n        crop={crop}\n        crossorigin=\"anonymous\"\n        onImageLoaded={onLoad}\n        onChange={newCrop => setCrop(newCrop)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </>\n  );\n}\n\nexport default CropImage;","import React from \"react\";\nimport \"./UploadImageCard.scss\";\n\nconst UploadImageCard = (props) => {\n  return (\n    <div className=\"upload-image-card d-flex align-items-center px-5 py-3\" onClick={props.onClick}>\n      <div className=\"export-image-icon mr-5\"><i className=\"icon-export\" /></div>\n      <div>\n        <h4>Upload Image</h4>\n        <p className=\"text-sm\">Upload your own image, recommended size 1600px x 250px</p>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImageCard;","import React from \"react\";\nimport \"./DefaultImage.scss\";\n\nconst DefaultImage = (props) => {\n  return (\n    <div className=\"default-image-card\" data-selected={props.selected} onClick={props.onClick}>\n      <img src={props.src} alt=\"Default\"/>\n      {props.selected ? <i className=\"icon-check selected-image p-1\"/> : null}\n    </div>\n  )\n}\n\nexport default DefaultImage;","import React, {useEffect, useState, createRef} from \"react\";\nimport \"./CoverImagePicker.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport CropImage from \"./crop-image/CropImage\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport UploadImageCard from \"./upload-image-card/UploadImageCard\";\nimport {graphQL, graphQLMultipart} from \"api/axios\";\nimport {GET_REGISTRY_IMAGES} from \"api/queries\";\nimport {MEDIA_URL_PREFIX} from \"../../../../utils/constants\";\nimport DefaultImage from \"./default-image/DefaultImage\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {toast} from \"react-toastify\";\n\nconst CoverImagePicker = (props) => {\n\n  const MAX_IMAGE_SIZE = 5000000; // 5MB\n  const ACCEPTED_IMAGE_TYPE = [\n    'image/jpg',\n    'image/jpeg',\n    'image/png'\n  ]\n  const dispatch = useDispatch();\n  const registryInfo = useSelector(state => state.registry.info);\n  const fileRef = createRef();\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(false);\n  const [defaultImage, setDefaultImage] = useState([]);\n  const [customImage, setCustomImage] = useState(null);\n  let modalBody = null;\n  let modalTitle = null;\n  let modalTitleContent = null;\n  let modalFooter = null;\n\n  // Fetching default images\n  const getDefaultCoverImages = () => {\n    const data = {\n      query: GET_REGISTRY_IMAGES,\n      variables: {\n        registryId: registryInfo.id\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.registryImages) {\n          // Use below line to get only default images\n          // let defaultImages = res.data.data.registryImages.filter(image => image.isDefault);\n          let defaultImages = res.data.data.registryImages;\n          console.log(defaultImages);\n          setDefaultImage(defaultImages.map(image => {\n            image.image = (MEDIA_URL_PREFIX.LOCAL_MEDIA_URL ? MEDIA_URL_PREFIX.LOCAL_MEDIA_URL : \"\") + image.image\n            return image;\n          }));\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    if (defaultImage.length === 0) {\n      getDefaultCoverImages();\n    }\n  });\n\n  // Setting default images selected by user\n  const selectDefaultImage = (imageId) => {\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          image: imageId\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          toast.error(\"Some error occurred\");\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const openFileSelector = () => {\n    if (fileRef) {\n      fileRef.current.click();\n    }\n  }\n\n  const fileChangeHandler = (e) => {\n    e.persist();\n    if (fileRef.current && fileRef.current.files.length > 0) {\n      const file = fileRef.current.files[0]\n\n      // Verifying file is image\n      if (ACCEPTED_IMAGE_TYPE.includes(file.type)) {\n        if (file.size <= MAX_IMAGE_SIZE) {\n          let reader = new FileReader();\n\n          reader.onload = function (e) {\n            setCustomImage(e.target.result);\n            setUploadImage(true);\n          }\n\n          reader.readAsDataURL(file); // Converting to base64 string\n        } else {\n          toast.error(\"File size exceeds the limit\");\n        }\n      } else {\n        toast.error(\"Please select valid image.\");\n      }\n    }\n  }\n\n  const blobToFile = (blob) => {\n    return new File([blob], blob.name, {\n      type: blob.type\n    })\n  }\n\n  // Setting Custom Image\n  const saveCustomImage = () => {\n    if (!croppedImage) {\n      toast.error(\"Please crop the image\");\n      return;\n    }\n\n    if (!registryInfo.id) {\n      console.log(\"No registry found\");\n      return;\n    }\n\n    let formData = new FormData()\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": registryInfo.id,\n        \"input\": {\n          registryImage: null\n        }\n      }\n    }\n\n    formData.append(\"operations\", JSON.stringify(data))\n    let map = {\n      registryImage: [\"variables.input.registryImage\"]\n    }\n    formData.append(\"map\", JSON.stringify(map))\n    formData.append(\"registryImage\", blobToFile(croppedImage))\n\n    graphQLMultipart(formData).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          toast.success(\"Successfully changed cover image\");\n          updateRegistryDetail(dispatch);\n          props.closeCoverImagePicker();\n        } else {\n          toast.error(\"Some error occurred\");\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n\n  }\n\n  if (uploadImage === false) {\n    modalBody = (\n      <div className=\"row cover-image-picker\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <UploadImageCard onClick={openFileSelector}/>\n              <input\n                type=\"file\"\n                className=\"d-none\"\n                ref={fileRef}\n                accept={ACCEPTED_IMAGE_TYPE.join(\",\")}\n                onChange={(e) => fileChangeHandler(e)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            {defaultImage.map(image => (\n              <div className=\"col-sm-12 col-md-6 mt-5\" key={\"Image-Id-\" + image.id}>\n                <DefaultImage\n                  src={image.image}\n                  selected={image.id === registryInfo.image.id}\n                  onClick={() => selectDefaultImage(image.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n    modalTitle = \"Upload or Select an image\";\n  } else {\n    modalBody = (\n      <CropImage\n        src={customImage}\n        setCroppedImage={setCroppedImage}\n      />\n    )\n    modalTitle = \"Crop Image\";\n    modalTitleContent = (\n      <p className=\"text-sm mt-1\">Drag the box to crop the image</p>\n    )\n    modalFooter = (\n      <>\n        <Button variant='secondary' className=\"px-3 py-1 font-medium\"\n                onClick={props.closeCoverImagePicker}>Cancel</Button>\n        <Button variant='primary' className=\"px-3 py-1 font-medium\" onClick={saveCustomImage}>Save & Close</Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        closeModal={props.closeCoverImagePicker}\n        updateModal={uploadImage}\n        title={modalTitle}\n        titleContent={modalTitleContent}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        {modalBody}\n      </Modal>\n    </>\n  )\n}\n\nexport default CoverImagePicker;","import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport \"./EditViewRegistryDetail.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {UPDATE_REGISTRY} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"utils/commonFunction\";\n\nconst EditViewRegistryDetail = (props) => {\n\n  const MAX_LENGTH_GREETINGS = 280;\n\n  const dispatch = useDispatch();\n  const [registryName, changeRegistryName] = useState(props.info.displayName)\n  const [greeting, changeGreeting] = useState(props.info.greeting)\n\n  const greetingChangeHandler = (ev) => {\n    if (ev.target.value.length <= MAX_LENGTH_GREETINGS) {\n      changeGreeting(ev.target.value);\n    }\n  }\n\n  // SAVE & CLOSE BUTTON CLICK HANDLER\n  const saveRegistryDetail = () => {\n\n    if (registryName.length <= 0) {\n      alert(\"Registry Name cannot be empty\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": Number(props.info.id),\n        \"input\": {\n          displayName: registryName,\n          name: props.info.name,\n          greeting: greeting,\n          dueDate: props.info.dueDate,\n          image: props.info.image ? props.info.image.id : null\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          alert(\"Successfully changed\");\n          updateRegistryDetail(dispatch);\n          props.closeEditRegistryDetail();\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          alert(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n        alert(\"Some error occurred\");\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  let modalTitle = \"Edit Registry Details\";\n  let modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium edit-view-detail-required\">Registry Name</span>\n          <textarea\n            className=\"w-100 mt-1 h1 p-2 resize-none\"\n            value={registryName}\n            onChange={(ev) => changeRegistryName(ev.target.value)}\n            rows=\"2\"/>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col edit-view-detail\">\n          <span className=\"text-sm font-medium\">Add Greeting</span>\n          <span className=\"float-right text-sm edit-view-detail-max-char\">Max. {MAX_LENGTH_GREETINGS} chars</span>\n          <textarea\n            className=\"w-100 mt-1 text-body px-2 py-1\"\n            placeholder=\"Write a greeting for your guests\"\n            maxLength={MAX_LENGTH_GREETINGS}\n            value={greeting}\n            onChange={(ev) => greetingChangeHandler(ev)}\n            rows=\"2\"/>\n        </div>\n      </div>\n    </>\n  );\n  let modalFooter = (\n    <>\n      <Button variant=\"secondary\" className=\"py-1 px-3 mr-3 font-medium\"\n              onClick={props.closeEditRegistryDetail}>Cancel</Button>\n      <Button variant=\"primary\" className=\"py-1 px-3 font-medium\" onClick={saveRegistryDetail}>Save & close</Button>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={props.closeEditRegistryDetail}\n      title={modalTitle}\n      footer={modalFooter}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default EditViewRegistryDetail;","import React, {useState, createRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport \"./ShareRegistry.scss\";\nimport Modal from \"../../../commons/components/modal-component/ModalComponent\";\nimport {UPDATE_REGISTRY, UPDATE_REGISTRY_URL} from \"../../../../api/mutations\";\nimport {graphQL} from \"../../../../api/axios\";\nimport {updateRegistryDetail} from \"../../../../utils/commonFunction\";\nimport {updateRegistryInfo} from \"../../../registry/RegistryActions\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport {toast} from \"react-toastify\";\n\nconst ShareRegistry = (props) => {\n\n  // TODO: Uncomment siteHostName for dynamic hostname\n  // const siteHostName = window.location.host + \"\";\n  const siteHostName = \"monicaandandy.com\";\n  const dispatch = useDispatch()\n  const [registryInfoUrl, setRegistryInfoUrl] = useState(props.registryInfo.urlSlug);\n  const [registryVisibility, setRegistryVisibility] = useState(props.registryInfo.isPublic)\n  const [registryUrl, setRegistryUrl] = useState(registryInfoUrl)\n  const [registryError, setRegistryError] = useState(\"\")\n  const inputContainerRef = createRef();\n\n  const closeModal = () => {\n    setRegistryUrl(props.registryInfo.urlSlug)\n    props.closeShareRegistry();\n  }\n\n  const changeRegistryVisibility = (value) => {\n    if (value === registryVisibility) {\n      return;\n    }\n\n    if (!props.registryInfo.id) {\n      console.log(\"No registry found!\");\n      return;\n    }\n\n    setRegistryVisibility(value);\n\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"input\": {\n          isPublic: value\n        }\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          let newRegistry = props.registryInfo\n          newRegistry.isPublic = value\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          setRegistryVisibility(!value);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        setRegistryVisibility(!value);\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      setRegistryVisibility(!value);\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const registryUrlChangeHandler = (ev) => {\n    if (registryError) {\n      setRegistryError(\"\")\n    }\n    setRegistryUrl(ev.target.value);\n  }\n\n  const checkUrlAvailability = () => {\n    if (registryUrl === props.registryInfo.urlSlug) {\n      return\n    }\n\n    if (registryUrl.length <= 0) {\n      toast.error(\"Registry URL cannot be empty!\");\n      return;\n    }\n\n    let data = {\n      query: UPDATE_REGISTRY_URL,\n      operationName: \"updateRegistryUrl\",\n      variables: {\n        \"registryId\": props.registryInfo.id,\n        \"urlSlug\": registryUrl\n      }\n    }\n\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.checkUpdateRegistryUrlSlug.message) {\n          let newRegistry = props.registryInfo\n          newRegistry.urlSlug = registryUrl\n          setRegistryInfoUrl(registryUrl);\n          setRegistryError(\"\")\n          dispatch(updateRegistryInfo(newRegistry))\n        } else {\n          setRegistryError(`${registryUrl} is not available. Please try something else.`)\n          console.log(res.data.data.checkUpdateRegistryUrlSlug.errors);\n          toast.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        toast.error(\"Some error occurred\");\n        console.error(e);\n      }\n    }).catch(err => {\n      toast.error(\"Some error occurred\");\n      console.error(err.message)\n    })\n  }\n\n  const copyRegistryClickHandler = () => {\n    const el = document.createElement('textarea');\n    el.value = `${siteHostName}/${registryUrl}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toast.success(\"Copied to clipboard\");\n  }\n\n  const modalTitle = \"Share Registry\";\n  const modalBody = (\n    <>\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-body font-medium\">Status</span>\n          <div className=\"visibility-status-btn mt-1\">\n            <button className={[\"text-sm p-2 mr-1\", registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(true)}>Visible\n            </button>\n            <button className={[\"text-sm p-2\", !registryVisibility ? \"active\" : \"\"].join(\" \")}\n                    onClick={() => changeRegistryVisibility(false)}>Secret\n            </button>\n          </div>\n          <p\n            className=\"text-sm mt-1\">{registryVisibility ? \"Guests can access this registry\" : \"Guests can’t access this registry unless you set to visible.\"}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-6 align-items-end\">\n        <div className=\"col d-flex flex-column\">\n          <span className=\"section-title-share-registry text-sm font-medium\">Link</span>\n          <div className=\"mt-1 d-flex align-items-baseline\">\n            <div>\n              <div\n                className={[\"registry-url-section d-flex text-body\", registryError ? \"error-input-container\" : \"\"].join(\" \")}\n                ref={inputContainerRef}>\n                <input\n                  className=\"disabled-input-share-registry py-1 px-2\"\n                  value={siteHostName + \"/\"}\n                  readOnly/>\n                <input\n                  className=\"registry-url-input py-1 px-2\"\n                  value={registryUrl}\n                  onFocus={() => inputContainerRef.current.classList.add('focused-input-container')}\n                  onBlur={() => inputContainerRef.current.classList.remove('focused-input-container')}\n                  onChange={(ev) => registryUrlChangeHandler(ev)}\n                />\n              </div>\n              {registryError ?\n                <span className=\"text-sm input-error-message\">{registryError}</span>\n                : null}\n            </div>\n            {registryUrl !== registryInfoUrl ?\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={checkUrlAvailability}>Check</Button>\n              :\n              <Button variant=\"primary\" className=\"px-2 py-1 text-body font-medium ml-auto\"\n                      onClick={copyRegistryClickHandler}>Copy</Button>\n            }\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-10\">\n        <div className=\"col\">\n          <span className=\"text-sm font-medium section-title-share-registry\">Share on Social Media</span>\n          <div className=\"mt-2\">\n            {registryVisibility ?\n              <>\n                {/*TODO: Add click handler*/}\n                <img className=\"mr-3 social-btn\" src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook.svg\" />\n                <img className=\"mr-3 social-btn\" src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram .svg\" />\n                <img className=\"social-btn\" src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter.svg\"/>\n              </>\n              :\n              <>\n                <img className=\"mr-3 social-btn\" src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/facebook_disabled.svg\" />\n                <img className=\"mr-3 social-btn\" src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/instagram _disabled.svg\" />\n                <img className=\"social-btn\" src=\"https://rawcdn.githack.com/HetPatel-Aubergine/testCDNRepo/6a0d2589fd206a08f206e4470985a18782213334/icons/twitter_disabled.svg\"/>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Modal\n      show={props.show}\n      closeModal={closeModal}\n      title={modalTitle}\n      size=\"md\"\n    >\n      {modalBody}\n    </Modal>\n  )\n}\n\nexport default ShareRegistry;","import React from \"react\";\nimport \"./ViewRegistryHeader.scss\";\nimport Button from \"../../../commons/components/button-component/ButtonComponent\";\nimport MoreOption from \"../../../commons/components/more-option/MoreOption\";\nimport CoverImagePicker from \"../../components/cover-image-picker/CoverImagePicker\";\nimport { connect } from \"react-redux\";\nimport EditViewRegistryDetail from \"../../components/edit-view-registry-detail/EditViewRegistryDetail\";\nimport { setguestViewRegistry } from \"modules/view-registry/ViewRegistryActions\";\nimport ShareRegistry from \"../../components/share-registry/ShareRegistry\";\n\nclass ViewRegistryHeader extends React.Component {\n\n  state = {\n    showCoverImagePicker: false,\n    showEditRegistryDetail: false,\n    showShareRegistry: false\n  }\n\n  closeCoverImagePicker = () => {\n    this.setState({ showCoverImagePicker: false })\n  }\n\n  closeShareRegistry = () => {\n    this.setState({ showShareRegistry: false })\n  }\n\n  closeEditRegistryDetail = () => {\n    this.setState({ showEditRegistryDetail: false })\n  }\n\n  changeRegistryDetail = (ev) => {\n    ev.preventDefault();\n    this.setState({ showEditRegistryDetail: true })\n  }\n\n  handleGuestView = () => {\n    this.props.dispatch(setguestViewRegistry(true))\n  }\n\n  handleDisableViewGuest = () => {\n    this.props.dispatch(setguestViewRegistry(false))\n  }\n\n  COVER_PIC_OPTIONS = [\n    {\n      name: \"Replace Background\",\n      action: () => {\n        this.setState({ showCoverImagePicker: true })\n      }\n    }\n  ]\n  style = {\n    backgroundImage: 'url(' + this.props.stateRegistryInfo.image.image + ')'\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.stateGuestViewRegistry ?\n          <div className=\"view-guest-header text-body py-2\">\n            <div className=\"container d-flex justify-content-between\" onClick={this.handleDisableViewGuest}>\n              <div className=\"d-flex align-items-center view-guest-link\">\n                <i className=\"icon-chevron-left view-guest-text mr-2\" />\n                <a className=\"view-guest-text\">Back To View Registry</a>\n              </div>\n              <div className=\"view-guest-text\">This is how your guests will see your registry</div>\n              <a className=\"view-guest-text view-guest-link\">Share</a>\n            </div>\n          </div> : null\n        }\n        <div className=\"view-registry-header\" style={this.style}>\n\n          {/*TODO: Change icon-preview to icon-camera when updated*/}\n          {!this.props.stateGuestViewRegistry ?\n            < div className=\"cover-pic-update-options\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-end\">\n                    <MoreOption\n                      data={this.COVER_PIC_OPTIONS}\n                      iconClass=\"icon-preview\"\n                      activeOptionClass=\"view-registry-cover-option-active\"\n                      buttonClass=\"update-cover-options p-1\" />\n                  </div>\n                </div>\n              </div>\n            </div> : null\n          }\n\n          <div className=\"header-registry-detail\">\n            <div className=\"container my-4\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{this.props.stateRegistryInfo.displayName ? this.props.stateRegistryInfo.displayName : \"\"}</h2>\n                    {!this.props.stateGuestViewRegistry ?\n                      <i className=\"icon-pencil ml-1 edit-name-icon\" onClick={(ev) => this.changeRegistryDetail(ev)} />\n                      : null\n                    }\n                  </div>\n                  {this.props.stateRegistryInfo.greeting ?\n                    <span className=\"text-sm view-registry-header-greeting\">{this.props.stateRegistryInfo.greeting}</span>\n                    :\n                    !this.props.stateGuestViewRegistry ?\n                      <a className=\"add-greeting-link text-sm font-medium\" href=\"#\"\n                        onClick={(ev) => this.changeRegistryDetail(ev)}>Add a greeting</a> : null\n                  }\n                </div>\n                {!this.props.stateGuestViewRegistry ?\n                  <div className=\"col-12 col-md-3 header-buttons\">\n                    <Button variant=\"secondary\" className=\"font-medium text-body py-1 px-3 mr-3\" onClick={this.handleGuestView}>View as Guest</Button>\n                    <Button variant=\"primary\" className=\"font-medium text-body py-1 px-3\" onClick={() => this.setState({ showShareRegistry: true })}>Share</Button>\n                  </div> : null\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CoverImagePicker\n          show={this.state.showCoverImagePicker}\n          closeCoverImagePicker={this.closeCoverImagePicker}\n        />\n\n        <EditViewRegistryDetail\n          show={this.state.showEditRegistryDetail}\n          closeEditRegistryDetail={this.closeEditRegistryDetail}\n          info={this.props.stateRegistryInfo}\n        />\n\n        <ShareRegistry\n          show={this.state.showShareRegistry}\n          closeShareRegistry={this.closeShareRegistry}\n          registryInfo={this.props.stateRegistryInfo}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n  }\n}\n\n\nexport default connect(\n  mapStateToProps\n)(ViewRegistryHeader);","import React from 'react';\nimport \"./SortFilter.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeSortFilter } from '../../ViewRegistryActions';\n\nconst SortFilter = () => {\n\n  const dispatch = useDispatch()\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const filterContentRef = React.createRef();\n\n  const toggleFilterContent = () => {\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n\n  const handleSortSelection = (sortItem) => {\n    dispatch(activeSortFilter(sortItem))\n    filterContentRef.current.classList.toggle(\"show\");\n  }\n\n  const sortByList = [\n    {\n      sortId: 1,\n      sortTitle: 'Featured'\n    },\n    {\n      sortId: 2,\n      sortTitle: 'Price: Low to High'\n    },\n    {\n      sortId: 3,\n      sortTitle: 'Price: High to Low'\n    }\n  ]\n\n  return (\n    <div className=\"sort-section-filter\">\n      <div className=\"sort-filter-btn px-2 d-flex justify-content-between py-1\" onClick={toggleFilterContent}>\n        <span className=\"font-body selected-sort-text text-body\">{activeSortFilterState.sortTitle}</span>\n        <i className=\"icon-filter-1 pl-1 mr-1 icon-chevron-down\" />\n      </div>\n      <div className=\"filter-content\" ref={filterContentRef}>\n        <div className=\"d-flex flex-column\">\n          {sortByList.map(sortItem => {\n            return (\n              <div className=\"filter-item py-2 px-2\" key={\"sortid-\" + sortItem.sortId} onClick={() => handleSortSelection(sortItem)}>\n                <div className=\"text-sm\">{sortItem.sortTitle}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SortFilter;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddGift from \"modules/commons/components/add-gift/AddGift\";\nimport SortFilter from \"../sort-filter/SortFilter\";\nimport './SortFilterSection.scss';\nimport { isGotIt } from \"modules/view-registry/ViewRegistryActions\";\nimport { UPDATE_REGISTRY } from \"api/mutations\";\nimport { graphQL } from \"api/axios\";\nimport { updateRegistryDetail } from \"utils/commonFunction\";\n\nclass SortFilterSection extends React.Component {\n\n  handleIsGotIt = () => {\n    let data = {\n      query: UPDATE_REGISTRY,\n      operationName: \"updateRegistryDetail\",\n      variables: {\n        \"registryId\": this.props.stateRegistryInfo.id,\n        \"input\": {\n          isFeaturedNoticeRead: true\n        }\n      }\n    }\n    graphQL(data).then(res => {\n      try {\n        if (res.data.data.updateRegistry.registry) {\n          // this.props.dispatch(isGotIt(true))\n          updateRegistryDetail(this.props.dispatch);\n        } else {\n          console.log(res.data.data.updateRegistry.errors);\n          console.error(\"Some error occurred\");\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).catch(err => {\n      console.error(err.message)\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4 className=\"font-weight-bold mr-2 filter-section-total-items\">{this.props.stateViewRegistryProducts.length} {this.props.stateViewRegistryProducts.length === 1 ? \"item\" : \"items\"}</h4>\n          </div>\n          <div className=\"col-5 filter-sort-section\">\n            <div className=\"d-flex justify-content-end\">\n              <div className=\"text-sm sort-by-text mr-2 align-self-center\">Sort by</div>\n              <SortFilter />\n              {this.props.stateGuestViewRegistry ?\n                <></> :\n                <div className=\"ml-4 filter-add-gift-btn\"><AddGift /></div>}\n            </div>\n\n          </div>\n        </div>\n        {this.props.stateRegistryInfo.isFeaturedNoticeRead === false && this.props.stateActiveSortFilter.sortId !== 1 && !this.props.stateGuestViewRegistry?\n          <div className=\"row mt-2 mb-3\">\n            <div className=\"col\">\n              <div className=\"text-sm py-2 d-flex justify-content-center sort-filter-warning\">\n                <div>Enable rearrange gifts by</div>\n                <div className=\"font-weight-bold px-1\">clearing your filters</div>\n                <div>and setting to</div>\n                <div className=\"font-weight-bold px-1\">Sort by: Featured.</div>\n                <div className=\"sort-filter-warning-btn\" onClick={this.handleIsGotIt}>Ok, got it.</div>\n              </div>\n            </div>\n          </div> : <></>\n        }\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    stateViewRegistryProducts: state.viewRegistry.viewRegistryProducts,\n    stateActiveSortFilter: state.viewRegistry.activeSortFilter,\n    stateGuestViewRegistry: state.viewRegistry.guestViewRegistry,\n    stateRegistryInfo: state.registry.info\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SortFilterSection);\n","import React, { useEffect } from \"react\";\nimport ViewRegistryHeader from \"../view-registry-header/ViewRegistryHeader\";\nimport AddedCard from \"modules/commons/components/added-card/AddedCard\";\nimport { toggleMustHaveProduct, removeProductFromCartHandler, getProducts, updateViewRegistryPosition } from \"utils/commonFunction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport SortFilterSection from '../../components/sort-filter-section/SortFilterSection';\nimport { setViewRegistryProducts, setFeaturedSortApplied } from '../../ViewRegistryActions';\nimport {\n  sortableContainer,\n  sortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport './ViewRegistryHome.scss';\n\nconst ViewRegistryHome = () => {\n\n  const dispatch = useDispatch()\n  let stateAddedProducts = useSelector(state => state.myRegistry.addedProducts)\n  let stateViewRegistryProducts = useSelector(state => state.viewRegistry.viewRegistryProducts)\n  const activeSortFilterState = useSelector(state => state.viewRegistry.activeSortFilter)\n  const stateFeaturedSortApplied = useSelector(state => state.viewRegistry.featuredSortApplied)\n  const stateRegistryInfo = useSelector(state => state.registry.info)\n\n  const SortableItem = sortableElement(({ card, index }) => (\n    <li className=\"card-list-item\">\n      <AddedCard\n        data={card} key={\"addedCard\" + index}\n        toggleMustHave={() => toggleMustHaveProduct(card, dispatch)}\n        draggable={true}\n        disabledDrag={card.disabledDrag}\n        removeProductFromCartHandler={() => removeProductFromCartHandler(card, stateRegistryInfo.id, dispatch)}\n      />\n    </li>\n  ));\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    let itemsOldPosition = arrayMove([...stateViewRegistryProducts], oldIndex, oldIndex)\n    let items = arrayMove([...stateViewRegistryProducts], oldIndex, newIndex)\n    dispatch(setViewRegistryProducts(items))\n    updateViewRegistryPosition(stateRegistryInfo.id, items, itemsOldPosition, dispatch)\n    // dispatch(setViewRegistryProducts(items))\n  };\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <ul className=\"p-0\">{children}</ul>;\n  });\n\n  const getSortedFilteredProducts = (addedProducts, activeSortFilterState, viewRegistryProducts) => {\n    let sortedProducts = [];\n    let sortedData = null;\n    // let sortedDataByMustHave = sortByMustHave([...stateAddedProducts])\n\n    if (activeSortFilterState.sortId === 1) {\n      if (stateRegistryInfo.isFeatured) {\n        sortedData = viewRegistryProducts ? [...viewRegistryProducts] : [];\n        // sortedData = sortByFeatured([...addedProducts])\n      }\n      else {\n        sortedData = sortByMustHave([...addedProducts])\n        if (sortedData.length > 0) {\n          let viewRegistryProductsId = sortedData.map((productData, index) => {\n            return { 'id': productData.id }\n          })\n          // dispatch(setViewRegistryProducts(viewRegistryProductsId))\n          // dispatch(setFeaturedSortApplied(true))\n        }\n      }\n    }\n\n    else if (activeSortFilterState.sortId === 2) {\n      sortedData = sortByLowToHigh([...addedProducts])\n    }\n    else if (activeSortFilterState.sortId === 3) {\n      sortedData = sortByHighToLow([...addedProducts])\n    }\n\n    let viewRegistryProductsId = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n\n    for (let product of viewRegistryProductsId) {\n      for (let addProduct of addedProducts) {\n        if (product.id === addProduct.id) {\n          sortedProducts.push(addProduct);\n          break;\n        }\n      }\n    }\n    return sortedProducts;\n  }\n\n  const sortByMustHave = (productList) => {\n    return productList.sort(function (a, b) { return b.mostWanted - a.mostWanted });\n  }\n\n  const sortByFeatured = (productList) => {\n    return productList.sort(function (a, b) { return a.isFeatured - b.isFeatured });\n\n  }\n\n  const sortByLowToHigh = (productList) => {\n    // TODO\n    // let mustHaveProducts = [...productList]\n    // let index = -1;\n    // for (let product of mustHaveProducts) {\n    //   index++;\n    //   if (product.mostWanted === false) {\n    //     break\n    //   }\n    // }\n    // let nonMustHaveProducts = mustHaveProducts.splice(index);\n    // let tempMustHaveList = mustHaveProducts.sort((a, b) => { return a.item.price - b.item.price });\n    // let tempList = nonMustHaveProducts.sort((a, b) => { return a.item.price - b.item.price })\n    // let finalSortedProducts = tempMustHaveList.concat(tempList)\n    return productList.sort((a, b) => { return a.item.price - b.item.price });\n  }\n\n  const sortByHighToLow = (productList) => {\n    // TODO\n    // let mustHaveProducts = [...productList]\n    // let index = -1;\n    // for (let product of mustHaveProducts) {\n    //   index++;\n    //   if (product.mostWanted === false) {\n    //     break\n    //   }\n    // }\n    // let nonMustHaveProducts = mustHaveProducts.splice(index);\n    // let tempMustHaveList = mustHaveProducts.sort((a, b) => { return b.item.price - a.item.price });\n    // let tempList = nonMustHaveProducts.sort((a, b) => { return b.item.price - a.item.price })\n    // let finalSortedProducts = tempMustHaveList.concat(tempList)\n    return productList.sort((a, b) => { return b.item.price - a.item.price });\n  }\n\n  useEffect(() => {\n    if (stateAddedProducts.length === 0) {\n      getProducts(stateRegistryInfo.id, dispatch);\n    }\n    if (stateAddedProducts.length > 0 && stateViewRegistryProducts.length === 0) {\n      let sortedData = sortByFeatured([...stateAddedProducts])\n      let viewRegistryProducts = sortedData.map((productData, index) => {\n        return { 'id': productData.id }\n      })\n      dispatch(setViewRegistryProducts(viewRegistryProducts))\n    }\n  })\n\n  useEffect(() => {\n    let sortedData = sortByFeatured([...stateAddedProducts])\n    let viewRegistryProducts = sortedData.map((productData, index) => {\n      return { 'id': productData.id }\n    })\n    dispatch(setViewRegistryProducts(viewRegistryProducts))\n  }, [stateAddedProducts])\n\n  let filteredSortProducts = getSortedFilteredProducts(stateAddedProducts, activeSortFilterState, stateViewRegistryProducts)\n\n  return (\n    <>\n      <ViewRegistryHeader />\n      <div className=\"container mt-7\">\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n          <div className=\"col-9\">\n            {/* Top Filter Section */}\n            <SortFilterSection />\n\n            {/* Added Products */}\n            <div className=\"mt-5\">\n              <SortableContainer onSortEnd={onSortEnd} helperClass=\"drag-add-card\" axis=\"y\" lockAxis=\"y\" useDragHandle>\n                {filteredSortProducts.map((card, index) =>\n                  <SortableItem key={`item-${index}`} index={index} card={{ ...card, disabledDrag: activeSortFilterState.sortId !== 1 }} disabled={activeSortFilterState.sortId !== 1} />\n                )}\n              </SortableContainer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewRegistryHome;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport ViewRegistryHome from \"./containers/view-registry-home/ViewRegistryHome\";\n\nclass ViewRegistry extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistryHome} />\n            </Switch>\n        )\n    }\n}\n\nexport default ViewRegistry;","import React from 'react';\nimport { NavLink, Switch, Route, Redirect } from 'react-router-dom';\nimport MyRegistry from '../my-registry/MyRegistry';\nimport ViewRegistry from \"../view-registry/ViewRegistry\";\nimport { useTranslation } from \"react-i18next\";\nimport route from \"utils/routes\";\nimport RegistryHeroData from \"data/RegistryHero.json\";\nimport './RegistryHero.scss';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport {ToastContainer, toast} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst RegistryHero = (props) => {\n\n  const stateGuestViewRegistry = useSelector(state => state.viewRegistry.guestViewRegistry)\n\n  // \"props.registryInfo\" will contain all registry information\n\n  const closeToastMessage = (parentId) => {\n    toast.dismiss(parentId);\n  }\n\n  const { t } = useTranslation();\n  const registryData = RegistryHeroData\n  return (\n    <>\n      {!stateGuestViewRegistry ?\n        <div className=\"registry-hero\">\n          <div className=\"container\">\n\n            {/* Registry Navbar */}\n            <div className=\"d-flex pt-6 registry-hero-header\">\n\n              {/* Registry Info */}\n              <div className=\"mr-3 mb-0\"><h1>{props.registryInfo.name}</h1></div>\n              <div className=\"d-flex mt-auto registry-hero-subtitle\">\n                <div>{t(\"registryHeader.subTitle\")} {registryData.babyArrival}</div>\n                {/* <div>| Partner: {registryData.partner}</div> */}\n              </div>\n            </div>\n\n            {/* Adding Navbar */}\n            <div className=\"d-flex m-0\">\n              <Navbar expand=\"lg\" className=\"p-0\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-na\" className=\"pb-2\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                  <Nav className=\"mr-auto\">\n                    <NavLink to={route.MY_REGISTRY.HOME} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.myRegistry\")}</h4></NavLink>\n                    <NavLink to={route.VIEW_REGISTRY.HOME} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.viewRegistry\")}</h4></NavLink>\n                    <NavLink to={route.MY_REGISTRY.TRACK_GIFTS} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.trackGifts\")}</h4></NavLink>\n                    <NavLink to={route.MY_REGISTRY.SHOWER} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.shower\")}</h4></NavLink>\n                    <NavLink to={route.MY_REGISTRY.ANNOUNCEMENTS} className=\"registry-header-link\">\n                      <h4>{t(\"registryHeader.link.announcements\")}</h4></NavLink>\n                  </Nav>\n                </Navbar.Collapse>\n              </Navbar>\n              <NavLink to={route.MY_REGISTRY.TO_DOS} className=\"ml-auto registry-header-link\">\n                <h4>{t(\"registryHeader.link.toDos\")}</h4></NavLink>\n            </div>\n          </div>\n        </div> : null}\n\n      {/* Registry Nav Routes */}\n      <Switch>\n        <Route exact path={route.REGISTRY.HOME}><Redirect to={route.MY_REGISTRY.HOME} /></Route>\n        <Route exact path={route.MY_REGISTRY.HOME} component={MyRegistry} />\n        <Route exact path={route.VIEW_REGISTRY.HOME} component={ViewRegistry} />\n      </Switch>\n\n      <ToastContainer\n          position=\"top-center\"\n          className=\"m-a-toast-container\"\n          toastClassName=\"m-a-toast\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={<i className=\"icon-close m-a-toast-close\" onClick={(event) => closeToastMessage(event.target.parentElement.id)}/>}\n        />\n    </>\n  )\n}\n\nexport default RegistryHero;","import React from \"react\";\nimport \"./Option.scss\";\n\nconst Option = (props) => {\n  return (\n    <div\n      className={[\"px-4 py-3 baby-registry-question-option\", props.className ? props.className : \"\"].join(\" \")}\n      onClick={props.onClick}>{props.children}</div>\n  );\n}\n\nexport default Option;","import React from \"react\";\nimport \"./Onboarding.scss\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport routes from \"utils/routes\";\nimport Option from \"../commons/components/questions/option/Option\";\nimport {addQuestionAnswer, updateQuestionAnswer} from \"./OnboardingAction\";\nimport Button from \"../commons/components/button-component/ButtonComponent\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {REGISTER_USER, SAVE_QUESTION_RESPONSE} from \"../../api/mutations\";\nimport {graphQLNoToken, graphQL, apiURL} from \"../../api/axios\";\nimport {Cookies} from \"react-cookie\";\nimport {setLoggingStatus} from \"../registry/RegistryActions\";\nimport config from \"../../api/config\";\nimport axios from \"axios\";\n\n// TODO: Integrate Response AND Login API\nclass Onboarding extends React.Component {\n\n  // Static titles\n  LOGIN_TITLE = \"Sign in for free gifts, free shipping, and exclusive access to our limited edition prints\"\n  SIGNUP_TITLE = \"Let’s make it official. Time to create your account.\"\n  PARTNER_TITLE = \"Your partner’s details please\"\n\n  // Answer type mapping\n  RADIO = \"Radio\"\n  LOGIN = \"Login\"\n  PARTNER = \"Partner\"\n\n  state = {\n    parentId: null,\n    question: {},\n    login: false,\n    toastMessage: \"\"\n  }\n\n  componentDidMount() {\n    window.onpopstate = () => {\n      if (this.props.location.pathname.search(routes.ONBOARDING.HOME) >= 0) {\n        this.setQuestionBasedOnId(this.props.match.params['questionId'])\n        this.clearToastMessage()\n      }\n    }\n  }\n\n  submitAllAnswers = () => {\n    if (this.props.stateOnboardingAnswers.length > 0) {\n      const response = this.props.stateOnboardingAnswers.map(answer => {\n        return {\n          question: answer.question,\n          option: answer.response.option,\n          optionText: answer.response.optionText\n        }\n      })\n\n      const apiURL = process.env.NODE_ENV === 'production' ? config.PRODUCTION_API_URL : config.LOCAL_API_URL;\n      const cookies = new Cookies();\n      let reqData = {\n        query: SAVE_QUESTION_RESPONSE,\n        operationName: \"addRegistryQuestionOption\",\n        variables: {\n          response: response\n        }\n      }\n\n      axios({\n        method: 'post',\n        url: apiURL + 'graphql',\n        data: reqData,\n        headers: { \"Authorization\": cookies.get(\"access_token\") ? \"Token \"+cookies.get(\"access_token\") : \"\" }\n      }).then(res => {\n        if(res.data.data.addRegistryQuestionOption){\n          console.log(\"Saved\");\n        }\n      }).catch(err => {\n        console.error(err);\n      })\n\n      // graphQL(reqData).then(res => {\n      //   console.log(res.data.data);\n      // }).catch(err => {\n      //   console.error(err);\n      // })\n    }\n  }\n\n  clearToastMessage = () => {\n    this.setState({\n      toastMessage: \"\"\n    })\n  }\n\n  setToastMessage = () => {\n    if (this.state.question.toastMessage) {\n      this.setState({\n        toastMessage: this.state.question.toastMessage\n      })\n    } else {\n      this.clearToastMessage()\n    }\n  }\n\n  gotoNextQuestion = (question, parentId, option = {}) => {\n    let nextQuestionId = null;\n    let returnNext = false;\n    const idToMatch = parentId ? parentId : question.id;\n    // Only works for 1 follow up question\n    if (option.followUpQuestions && option.followUpQuestions.length > 0) {\n      nextQuestionId = option.followUpQuestions[0].question.id;\n    } else {\n      for (let ques of this.props.stateOnboardingQuestions) {\n        if (returnNext) {\n          nextQuestionId = ques.id\n          break\n        }\n        if (ques.id === idToMatch) {\n          returnNext = true;\n        }\n      }\n    }\n\n    if (nextQuestionId === null && returnNext) {\n      //  This is last question\n      console.log(\"Last Question\");\n      if(this.props.stateLoggedIn && this.state.redirectionUrl){\n        window.open(this.state.redirectionUrl,\"_self\")\n      }\n    } else if (nextQuestionId) {\n      this.setState({\n        parentId: null\n      })\n\n      this.setQuestionBasedOnId(nextQuestionId)\n      this.setToastMessage()\n      this.props.history.push(routes.ONBOARDING.HOME + `/${nextQuestionId}`)\n    }\n  }\n\n  setQuestionBasedOnId = (questionId) => {\n    if (questionId) {\n      let finalQuestion = {};\n      let foundQuestion = false;\n      let parentId = null;\n      for (const question of this.props.stateOnboardingQuestions) {\n        if (foundQuestion) {\n          break;\n        }\n        if (question.id === questionId) {\n          finalQuestion = question;\n          foundQuestion = true;\n          break;\n        }\n        for (const option of question.options) {\n          if (option.followUpQuestions.length > 0) {\n            for (const followUpQuestion of option.followUpQuestions) {\n              if (followUpQuestion.question.id === questionId) {\n                finalQuestion = followUpQuestion.question;\n                parentId = followUpQuestion.parentQuestion;\n                foundQuestion = true\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (finalQuestion.id) {\n        this.setState({\n          question: finalQuestion,\n          parentId: parentId\n        })\n      } else {\n        console.log(\"No Question Found\");\n      }\n    }\n  }\n\n  addAnswerToState = (response) => {\n    const alreadyAnswered = this.props.stateOnboardingAnswers.find(el => el.question === this.state.question.id)\n    if (alreadyAnswered) {\n      // This will delete the answers that were given after the matched response\n      let newState = []\n      for (let answer of this.props.stateOnboardingAnswers) {\n        if (answer.question === this.state.question.id) {\n          answer.response = response;\n          newState.push(answer)\n          break;\n        }\n        newState.push(answer)\n      }\n      this.props.dispatch(updateQuestionAnswer(newState))\n    } else {\n      this.props.dispatch(addQuestionAnswer({question: this.state.question.id, response: response}))\n    }\n\n    if (this.props.stateLoggedIn) {\n      this.submitAllAnswers()\n    }\n  }\n\n  answerRadioQuestion = (option) => {\n    this.addAnswerToState({option: option.id, optionText: option.value});\n    this.gotoNextQuestion(this.state.question, this.state.parentId, option);\n  }\n\n  watchNextBtn = (ev) => {\n    this.setState({\n      nextBtnState: ev.target.value.length <= 0\n    })\n  }\n\n  answerDataQuestion = (response) => {\n    this.addAnswerToState({option: 0, optionText: response})\n    this.gotoNextQuestion(this.state.question, this.state.parentId);\n  }\n\n  textInputTypeChangeHandler = (ev, inputRefs) => {\n    let enableBtn = false;\n\n    for (const inputRef of inputRefs) {\n      if (inputRef.current.value.length <= 0) {\n        enableBtn = true\n        break\n      }\n    }\n\n    this.setState({\n      nextBtnState: enableBtn\n    })\n  }\n\n  changeLoginState = (ev, value) => {\n    ev.preventDefault()\n    this.setState({\n      login: value\n    })\n  }\n\n  getSignInContent = () => {\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.gotoNextQuestion(this.state.question, this.state.parentId)}\n        >Sign In</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Don't have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                        onClick={(ev) => this.changeLoginState(false)}>Sign\n          Up</a></h4>\n      </>\n    )\n  }\n\n  signUpClickHandler = (nameRef, emailRef, passwordRef) => {\n    if (nameRef.current.value.length <= 0 || emailRef.current.value.length <= 0 || passwordRef.current.value.length <= 0) {\n      alert(\"Please enter all fields\")\n      return;\n    }\n\n    let reqData = {\n      query: REGISTER_USER,\n      operationName: \"register_user\",\n      variables: {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }\n    }\n\n    graphQLNoToken(reqData).then(res => {\n      if (res.data.data.registerUser) {\n        const cookies = new Cookies();\n        cookies.set(\"access_token\", res.data.data.registerUser.token, {path: \"/\"})\n        this.setState({\n          redirectionUrl: res.data.data.registerUser.redirectionUrl\n        })\n        this.props.dispatch(setLoggingStatus(true))\n        this.submitAllAnswers()\n      }\n    }).catch(err => {\n      console.error(err);\n    })\n  }\n\n  getSignUpContent = () => {\n    const nameRef = React.createRef()\n    const emailRef = React.createRef()\n    const passwordRef = React.createRef()\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={nameRef}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={emailRef}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Password</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.signUpClickHandler(nameRef, emailRef, passwordRef)}\n        >Sign Up</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n        <h4 className=\"mt-11\">Already have an account? <a href=\"#\" className=\"font-medium onboarding-link-text\"\n                                                          onClick={(ev) => this.changeLoginState(ev, true)}>Sign\n          In</a></h4>\n      </>\n    )\n  }\n\n  getPartnerContent = () => {\n    const inputRefs = [React.createRef(), React.createRef()]\n    return (\n      <>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Name</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            ref={inputRefs[0]}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n        </div>\n        <div className=\"d-flex flex-column mb-4\">\n          <span className=\"text-sm font-medium onboarding-required-field\">Email Address</span>\n          <input\n            className=\"onboarding-input py-1 px-2 text-body mt-1\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            ref={inputRefs[1]}\n            onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n          />\n        </div>\n        <Button\n          variant=\"primary\"\n          disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n          className=\"px-3 py-1 font-medium onboarding-next-button\"\n          onClick={() => this.gotoNextQuestion(this.state.question, this.state.parentId)}\n        >Next</Button>\n        {/*TODO : Add Api on Onclick of the button above*/}\n      </>\n    )\n  }\n\n  render() {\n\n    // Redirecting user to registry home if registry found\n    if (this.props.stateRegistryInfo.id) {\n      return <Redirect to={routes.MY_REGISTRY.HOME}/>\n    }\n\n    // Redirecting to first question if not answered any\n    if (this.props.stateOnboardingQuestions.length > 0\n      && this.props.stateOnboardingAnswers.length <= 0\n      && this.props.location.pathname !== routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`) {\n      return <Redirect to={routes.ONBOARDING.HOME + `/${this.props.stateOnboardingQuestions[0].id}`}/>\n    }\n\n    if (!this.state.question.title && this.props.stateOnboardingQuestions.length > 0 && this.props.stateRouter.location.pathname !== routes.ONBOARDING.HOME + `/${this.state.question.id}`) {\n      this.setQuestionBasedOnId(this.props.match.params['questionId'])\n    }\n\n    // Skipping Login Question if user is already logged in\n    if (this.props.stateLoggedIn && this.state.question.answerInputType === this.LOGIN) {\n      this.gotoNextQuestion(this.state.question, null);\n    }\n\n    if (this.state.toastMessage) {\n      toast.dismiss()\n      toast.info(<h4 className=\"font-medium text-center\">{this.state.toastMessage}</h4>)\n    } else {\n      toast.dismiss()\n    }\n\n    // Setting all the options for the questions\n    let options = []\n    let staticQuestionTitle = \"\";\n\n    if (this.state.question.answerInputType === this.RADIO) {\n      options = this.state.question.options.map(option => (\n        <Option className=\"mb-2 mr-4\" onClick={() => this.answerRadioQuestion(option)}>\n          <h4 className=\"d-inline\">{option.value}</h4>{option.helpText ?\n          <span className=\"text-sm ml-1 onboarding-option-help-text\">{option.helpText}</span> : null}</Option>\n      ))\n    } else if (this.state.question.answerInputType === \"Date\") {\n      let inputRef = React.createRef();\n      options.push(\n        <div className=\"d-flex flex-column\">\n          {/*TODO: Get placeholder from backend*/}\n          <input\n            type=\"date\"\n            className=\"onboarding-input py-1 px-2 text-body\"\n            placeholder=\"Date\"\n            ref={inputRef}\n            onChange={(ev) => this.watchNextBtn(ev)}\n          />\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            onClick={() => this.answerDataQuestion(inputRef.current.value)}\n            className=\"px-3 py-1 font-medium mt-4 onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === \"Text\") {\n      let inputRefs = []\n      options.push(\n        // TODO: Update this part if there is a Text type question\n        <div className=\"d-flex flex-column\">\n          {JSON.parse(this.state.question.fields).map(field => {\n            const inputRef = React.createRef()\n            inputRefs.push(inputRef)\n            return (\n              <div className=\"d-flex flex-column mb-4\">\n                <span className=\"text-sm font-medium onboarding-required-field\">{field.title}</span>\n                <input\n                  className=\"onboarding-input py-1 px-2 text-body mt-1\"\n                  type={field.type}\n                  name={field.name}\n                  placeholder={field.title}\n                  ref={inputRef}\n                  onChange={(ev) => this.textInputTypeChangeHandler(ev, inputRefs)}\n                />\n              </div>\n            )\n          })}\n          <Button\n            variant=\"primary\"\n            disabled={this.state.nextBtnState !== undefined ? this.state.nextBtnState : true}\n            className=\"px-3 py-1 font-medium onboarding-next-button\"\n          >Next</Button>\n        </div>\n      )\n    } else if (this.state.question.answerInputType === this.LOGIN) {\n      let content = null;\n      if (this.state.login) {\n        staticQuestionTitle = this.LOGIN_TITLE\n        content = this.getSignInContent()\n      } else {\n        staticQuestionTitle = this.SIGNUP_TITLE\n        content = this.getSignUpContent()\n      }\n\n      options.push(content)\n    } else if (this.state.question.answerInputType === this.PARTNER) {\n      staticQuestionTitle = this.PARTNER_TITLE;\n      options.push(this.getPartnerContent())\n    }\n\n    return (\n      <>\n        <div className=\"baby-registry-onboarding container\">\n          <div className=\"row justify-content-center mt-24\">\n            <div className=\"col-12 col-md-6\">\n            <span\n              className=\"font-body onboading-question\">{[this.LOGIN, this.PARTNER].indexOf(this.state.question.answerInputType) !== -1 ? staticQuestionTitle : this.state.question.title}</span>\n            </div>\n          </div>\n          <div className=\"row justify-content-center mt-6\">\n            <div className=\"col-12 col-md-6\">\n              {options.map(option => option)}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          className=\"onboarding-toast-container\"\n          toastClassName=\"onboarding-toast px-3 py-1\"\n          autoClose={4000}\n          hideProgressBar={true}\n          newestOnTop={true}\n          draggable={false}\n          closeOnClick={false}\n          closeButton={null}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateLoggedIn: state.registry.loggedIn,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateOnboardingAnswers: state.onboarding.answers,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Onboarding);","import axios from 'axios';\nimport { push } from \"connected-react-router\";\nimport { API_END_POINTS, API_URL } from '../../../utils/constants'\n\nexport const VERIFY_TOKEN_ACTION_TYPES = {\n    VERIFY_TOKEN: \"VERIFY_TOKEN\",\n    SET_CUSTOMER: \"SET_CUSTOMER\"\n}\n\nexport const setCustomer = (payload) => {\n    return {\n        type: VERIFY_TOKEN_ACTION_TYPES.SET_CUSTOMER,\n        payload: payload\n    }\n}\n\nexport const verifyTokenRequest = params => {\n    return dispatch => {\n        axios.post(API_URL + API_END_POINTS.VERIFY_TOKEN, {\n            token: params.token\n        }).then(response => {\n            dispatch(setCustomer({\n                customer: response.data.data.customer,\n                token: response.data.data.token\n            }))\n        }).then(() => {\n            dispatch(redirectVerifyToken())\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n}\n\nexport const redirectVerifyToken = () => dispatch => {\n    dispatch(push(\"/another\"));\n};","import { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { verifyTokenRequest } from './VerifyTokenActions'\n\n\nclass VerifyToken extends Component {\n\n    componentDidMount() {\n        this.props.verifyToken({\n            token: this.props.match.params.token\n        })\n    }\n\n    render() {\n        return \"\"\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        verifyToken: (params) => dispatch(verifyTokenRequest(params))\n    };\n};\nexport default connect(null, mapDispatchToProps)(VerifyToken);","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport route from \"utils/routes\";\nimport {connect} from \"react-redux\";\nimport RegistryHero from '../registry-hero/RegistryHero';\nimport Onboarding from \"../onboarding/Onboarding\";\nimport VerifyToken from '../Login/VerifyToken/VerifyToken'\nimport {updateRegistryDetail, getOnboardingQuestions} from \"utils/commonFunction\";\nimport {Cookies} from \"react-cookie\";\nimport {verifyAccessToken} from \"../../api/axios\";\nimport {setLoggingStatus} from \"../registry/RegistryActions\";\n\nclass ViewsContainer extends React.Component {\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    const access_token = cookies.get(\"access_token\")\n    if (access_token) {\n      verifyAccessToken({token:access_token}).then(res => {\n        if (res.data.data.customer){\n          this.props.dispatch(setLoggingStatus(true))\n          if (res.data.data.registries.length > 0) {\n            updateRegistryDetail(this.props.dispatch);\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n        this.props.dispatch(setLoggingStatus(false))\n      })\n\n    }\n  }\n\n  render() {\n\n    // Redirecting user to onboarding is no registry found\n    if (this.props.stateRouter.location.pathname.search(route.ONBOARDING.HOME) && !this.props.stateRegistryInfo.id) {\n      return <Redirect to={route.ONBOARDING.HOME}/>\n    }\n\n    if (this.props.stateOnboardingQuestions.length <= 0) {\n      getOnboardingQuestions(this.props.dispatch)\n    }\n\n    return (\n      <>\n        <Switch>\n          <Route exact path={route.ONBOARDING.HOME + \"/:questionId?\"} component={Onboarding}/>\n          <Route path={route.REGISTRY.HOME} component={this.props.stateRegistryInfo.id ? () => <RegistryHero\n            registryInfo={this.props.stateRegistryInfo}/> : null}/>\n          <Route path={route.LOGIN.VERIFY_TOKEN} component={VerifyToken}/>\n          <Route render={() => <div>DEFAULT</div>}/>\n        </Switch>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stateRegistryInfo: state.registry.info,\n    stateOnboardingQuestions: state.onboarding.questions,\n    stateRouter: state.router\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(ViewsContainer);\n","import {ApolloClient, HttpLink, InMemoryCache} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {ApolloLink} from '@apollo/client/link/core/ApolloLink';\n// import {API_URL} from '../utils/constants';\n\nconst cache = new InMemoryCache();\n\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({message, locations, path}) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        // TODO: Add pop-up alert error message for GraphQL error\n      ),\n    );\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n    // TODO: Add pop-up alert error message for network error\n  }\n});\n\n\nconst httpLink = new HttpLink({\n//  TODO: Add dynamic api url\n//  uri: API_URL,\n    uri: 'http://127.0.0.1:8000/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache,  \n  \n// TODO: Add store to header if any\n//   headers: {\n//     authorization: store.getState()?.auth?.token\n//       ? `Bearer ${store.getState()?.auth?.token}`\n//       : null,\n//     language: AppString.getLanguage() ?? 'en',\n//   },\n});","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/Store\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./utils/i18n\";\nimport ViewsContainer from \"./modules/commons/ViewsContainer\";\nimport client from '../src/api';\n\nimport { ApolloProvider } from '@apollo/client';\n// Bootstrap\nimport \"./assets/scss/main.scss\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <ViewsContainer />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </I18nextProvider>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}